///////////////////////////////////////////////////////////
//  ReportFactory.cs
//  Implementation of the Class ReportFactory
//  Generated by Enterprise Architect
//  Created on:      02-okt-2006 15:55:26
///////////////////////////////////////////////////////////




using GASystem.BusinessLayer.FlagReport;
namespace GASystem.BusinessLayer.FlagReport {
	public class ReportFactory {

		/// 
		/// <param name="TempFolder">Temporary path used as workarea when creating
		/// filebased reports</param>
		/// <param name="ReportDesc">Descrition of ReportType derived from gareports
		/// table</param>
		public static IFlagReport Make(string TempPath, ReportDescripton ReportDesc){
			if (ReportDesc.ReportType == ReportTypeEnum.CrystalReportSingle)
				return new GASystem.BusinessLayer.FlagReport.Impl.CrystalReportSingle(ReportDesc, TempPath);
			if (ReportDesc.ReportType == ReportTypeEnum.CrystalReport)
				return new GASystem.BusinessLayer.FlagReport.Impl.CrystalReport(ReportDesc, TempPath);
			if (ReportDesc.ReportType == ReportTypeEnum.ActiveReportSingle)
				return new GASystem.BusinessLayer.FlagReport.Impl.ActiveReportSingle(ReportDesc, TempPath);
			if (ReportDesc.ReportType == ReportTypeEnum.ActiveReport)
				return new GASystem.BusinessLayer.FlagReport.Impl.ActiveReport(ReportDesc, TempPath);
			return null;
		}

	}//end ReportFactory

}//end namespace FlagReport


