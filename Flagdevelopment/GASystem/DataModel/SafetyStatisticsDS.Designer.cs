//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("SafetyStatisticsDS")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SafetyStatisticsDS : System.Data.DataSet {
        
        private GASafetyStatisticsDataTable tableGASafetyStatistics;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SafetyStatisticsDS() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SafetyStatisticsDS(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["GASafetyStatistics"] != null)) {
                    base.Tables.Add(new GASafetyStatisticsDataTable(ds.Tables["GASafetyStatistics"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GASafetyStatisticsDataTable GASafetyStatistics {
            get {
                return this.tableGASafetyStatistics;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            SafetyStatisticsDS cln = ((SafetyStatisticsDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GASafetyStatistics"] != null)) {
                    base.Tables.Add(new GASafetyStatisticsDataTable(ds.Tables["GASafetyStatistics"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGASafetyStatistics = ((GASafetyStatisticsDataTable)(base.Tables["GASafetyStatistics"]));
            if ((initTable == true)) {
                if ((this.tableGASafetyStatistics != null)) {
                    this.tableGASafetyStatistics.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SafetyStatisticsDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SafetyStatisticsDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGASafetyStatistics = new GASafetyStatisticsDataTable();
            base.Tables.Add(this.tableGASafetyStatistics);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGASafetyStatistics() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            SafetyStatisticsDS ds = new SafetyStatisticsDS();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void GASafetyStatisticsRowChangeEventHandler(object sender, GASafetyStatisticsRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GASafetyStatisticsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnworkarea;
            
            private System.Data.DataColumn columndays;
            
            private System.Data.DataColumn columnExposureSeismic;
            
            private System.Data.DataColumn columnExposureMaritime;
            
            private System.Data.DataColumn columnExposureTP;
            
            private System.Data.DataColumn columnRecordDate;
            
            private System.Data.DataColumn columnnm;
            
            private System.Data.DataColumn columnfac;
            
            private System.Data.DataColumn columnmtc;
            
            private System.Data.DataColumn columnrwc;
            
            private System.Data.DataColumn columnlti;
            
            private System.Data.DataColumn columnppd;
            
            private System.Data.DataColumn columnptd;
            
            private System.Data.DataColumn columnfat;
            
            private System.Data.DataColumn columnlwd;
            
            private System.Data.DataColumn columnrwd;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyStatisticsDataTable() {
                this.TableName = "GASafetyStatistics";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GASafetyStatisticsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GASafetyStatisticsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn workareaColumn {
                get {
                    return this.columnworkarea;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn daysColumn {
                get {
                    return this.columndays;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ExposureSeismicColumn {
                get {
                    return this.columnExposureSeismic;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ExposureMaritimeColumn {
                get {
                    return this.columnExposureMaritime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ExposureTPColumn {
                get {
                    return this.columnExposureTP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RecordDateColumn {
                get {
                    return this.columnRecordDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nmColumn {
                get {
                    return this.columnnm;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn facColumn {
                get {
                    return this.columnfac;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn mtcColumn {
                get {
                    return this.columnmtc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rwcColumn {
                get {
                    return this.columnrwc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ltiColumn {
                get {
                    return this.columnlti;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ppdColumn {
                get {
                    return this.columnppd;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ptdColumn {
                get {
                    return this.columnptd;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn fatColumn {
                get {
                    return this.columnfat;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn lwdColumn {
                get {
                    return this.columnlwd;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rwdColumn {
                get {
                    return this.columnrwd;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyStatisticsRow this[int index] {
                get {
                    return ((GASafetyStatisticsRow)(this.Rows[index]));
                }
            }
            
            public event GASafetyStatisticsRowChangeEventHandler GASafetyStatisticsRowChanging;
            
            public event GASafetyStatisticsRowChangeEventHandler GASafetyStatisticsRowChanged;
            
            public event GASafetyStatisticsRowChangeEventHandler GASafetyStatisticsRowDeleting;
            
            public event GASafetyStatisticsRowChangeEventHandler GASafetyStatisticsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGASafetyStatisticsRow(GASafetyStatisticsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyStatisticsRow AddGASafetyStatisticsRow(
                        string workarea, 
                        int days, 
                        int ExposureSeismic, 
                        int ExposureMaritime, 
                        int ExposureTP, 
                        System.DateTime RecordDate, 
                        string nm, 
                        string fac, 
                        string mtc, 
                        string rwc, 
                        string lti, 
                        string ppd, 
                        string ptd, 
                        string fat, 
                        int lwd, 
                        int rwd) {
                GASafetyStatisticsRow rowGASafetyStatisticsRow = ((GASafetyStatisticsRow)(this.NewRow()));
                rowGASafetyStatisticsRow.ItemArray = new object[] {
                        workarea,
                        days,
                        ExposureSeismic,
                        ExposureMaritime,
                        ExposureTP,
                        RecordDate,
                        nm,
                        fac,
                        mtc,
                        rwc,
                        lti,
                        ppd,
                        ptd,
                        fat,
                        lwd,
                        rwd};
                this.Rows.Add(rowGASafetyStatisticsRow);
                return rowGASafetyStatisticsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                GASafetyStatisticsDataTable cln = ((GASafetyStatisticsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new GASafetyStatisticsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnworkarea = base.Columns["workarea"];
                this.columndays = base.Columns["days"];
                this.columnExposureSeismic = base.Columns["ExposureSeismic"];
                this.columnExposureMaritime = base.Columns["ExposureMaritime"];
                this.columnExposureTP = base.Columns["ExposureTP"];
                this.columnRecordDate = base.Columns["RecordDate"];
                this.columnnm = base.Columns["nm"];
                this.columnfac = base.Columns["fac"];
                this.columnmtc = base.Columns["mtc"];
                this.columnrwc = base.Columns["rwc"];
                this.columnlti = base.Columns["lti"];
                this.columnppd = base.Columns["ppd"];
                this.columnptd = base.Columns["ptd"];
                this.columnfat = base.Columns["fat"];
                this.columnlwd = base.Columns["lwd"];
                this.columnrwd = base.Columns["rwd"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnworkarea = new System.Data.DataColumn("workarea", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnworkarea);
                this.columndays = new System.Data.DataColumn("days", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndays);
                this.columnExposureSeismic = new System.Data.DataColumn("ExposureSeismic", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnExposureSeismic);
                this.columnExposureMaritime = new System.Data.DataColumn("ExposureMaritime", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnExposureMaritime);
                this.columnExposureTP = new System.Data.DataColumn("ExposureTP", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnExposureTP);
                this.columnRecordDate = new System.Data.DataColumn("RecordDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDate);
                this.columnnm = new System.Data.DataColumn("nm", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnm);
                this.columnfac = new System.Data.DataColumn("fac", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfac);
                this.columnmtc = new System.Data.DataColumn("mtc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmtc);
                this.columnrwc = new System.Data.DataColumn("rwc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrwc);
                this.columnlti = new System.Data.DataColumn("lti", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlti);
                this.columnppd = new System.Data.DataColumn("ppd", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnppd);
                this.columnptd = new System.Data.DataColumn("ptd", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnptd);
                this.columnfat = new System.Data.DataColumn("fat", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfat);
                this.columnlwd = new System.Data.DataColumn("lwd", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlwd);
                this.columnrwd = new System.Data.DataColumn("rwd", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrwd);
                this.columndays.ReadOnly = true;
                this.columnExposureSeismic.ReadOnly = true;
                this.columnExposureMaritime.ReadOnly = true;
                this.columnExposureTP.ReadOnly = true;
                this.columnnm.ReadOnly = true;
                this.columnfac.ReadOnly = true;
                this.columnmtc.ReadOnly = true;
                this.columnrwc.ReadOnly = true;
                this.columnlti.ReadOnly = true;
                this.columnppd.ReadOnly = true;
                this.columnptd.ReadOnly = true;
                this.columnfat.ReadOnly = true;
                this.columnlwd.ReadOnly = true;
                this.columnrwd.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyStatisticsRow NewGASafetyStatisticsRow() {
                return ((GASafetyStatisticsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new GASafetyStatisticsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(GASafetyStatisticsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GASafetyStatisticsRowChanged != null)) {
                    this.GASafetyStatisticsRowChanged(this, new GASafetyStatisticsRowChangeEvent(((GASafetyStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GASafetyStatisticsRowChanging != null)) {
                    this.GASafetyStatisticsRowChanging(this, new GASafetyStatisticsRowChangeEvent(((GASafetyStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GASafetyStatisticsRowDeleted != null)) {
                    this.GASafetyStatisticsRowDeleted(this, new GASafetyStatisticsRowChangeEvent(((GASafetyStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GASafetyStatisticsRowDeleting != null)) {
                    this.GASafetyStatisticsRowDeleting(this, new GASafetyStatisticsRowChangeEvent(((GASafetyStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGASafetyStatisticsRow(GASafetyStatisticsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                SafetyStatisticsDS ds = new SafetyStatisticsDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GASafetyStatisticsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GASafetyStatisticsRow : System.Data.DataRow {
            
            private GASafetyStatisticsDataTable tableGASafetyStatistics;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GASafetyStatisticsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGASafetyStatistics = ((GASafetyStatisticsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string workarea {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.workareaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'workarea\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.workareaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int days {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyStatistics.daysColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'days\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.daysColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExposureSeismic {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyStatistics.ExposureSeismicColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ExposureSeismic\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.ExposureSeismicColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExposureMaritime {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyStatistics.ExposureMaritimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ExposureMaritime\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.ExposureMaritimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExposureTP {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyStatistics.ExposureTPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ExposureTP\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.ExposureTPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RecordDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGASafetyStatistics.RecordDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RecordDate\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.RecordDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nm {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.nmColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nm\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.nmColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fac {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.facColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'fac\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.facColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mtc {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.mtcColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'mtc\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.mtcColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rwc {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.rwcColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rwc\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.rwcColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lti {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.ltiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'lti\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.ltiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ppd {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.ppdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ppd\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.ppdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ptd {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.ptdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ptd\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.ptdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fat {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.fatColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'fat\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.fatColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int lwd {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyStatistics.lwdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'lwd\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.lwdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int rwd {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyStatistics.rwdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rwd\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.rwdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsworkareaNull() {
                return this.IsNull(this.tableGASafetyStatistics.workareaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetworkareaNull() {
                this[this.tableGASafetyStatistics.workareaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdaysNull() {
                return this.IsNull(this.tableGASafetyStatistics.daysColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdaysNull() {
                this[this.tableGASafetyStatistics.daysColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExposureSeismicNull() {
                return this.IsNull(this.tableGASafetyStatistics.ExposureSeismicColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExposureSeismicNull() {
                this[this.tableGASafetyStatistics.ExposureSeismicColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExposureMaritimeNull() {
                return this.IsNull(this.tableGASafetyStatistics.ExposureMaritimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExposureMaritimeNull() {
                this[this.tableGASafetyStatistics.ExposureMaritimeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExposureTPNull() {
                return this.IsNull(this.tableGASafetyStatistics.ExposureTPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExposureTPNull() {
                this[this.tableGASafetyStatistics.ExposureTPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDateNull() {
                return this.IsNull(this.tableGASafetyStatistics.RecordDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDateNull() {
                this[this.tableGASafetyStatistics.RecordDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnmNull() {
                return this.IsNull(this.tableGASafetyStatistics.nmColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnmNull() {
                this[this.tableGASafetyStatistics.nmColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfacNull() {
                return this.IsNull(this.tableGASafetyStatistics.facColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfacNull() {
                this[this.tableGASafetyStatistics.facColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmtcNull() {
                return this.IsNull(this.tableGASafetyStatistics.mtcColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmtcNull() {
                this[this.tableGASafetyStatistics.mtcColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrwcNull() {
                return this.IsNull(this.tableGASafetyStatistics.rwcColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrwcNull() {
                this[this.tableGASafetyStatistics.rwcColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsltiNull() {
                return this.IsNull(this.tableGASafetyStatistics.ltiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetltiNull() {
                this[this.tableGASafetyStatistics.ltiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsppdNull() {
                return this.IsNull(this.tableGASafetyStatistics.ppdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetppdNull() {
                this[this.tableGASafetyStatistics.ppdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsptdNull() {
                return this.IsNull(this.tableGASafetyStatistics.ptdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetptdNull() {
                this[this.tableGASafetyStatistics.ptdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfatNull() {
                return this.IsNull(this.tableGASafetyStatistics.fatColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfatNull() {
                this[this.tableGASafetyStatistics.fatColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslwdNull() {
                return this.IsNull(this.tableGASafetyStatistics.lwdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlwdNull() {
                this[this.tableGASafetyStatistics.lwdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrwdNull() {
                return this.IsNull(this.tableGASafetyStatistics.rwdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrwdNull() {
                this[this.tableGASafetyStatistics.rwdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GASafetyStatisticsRowChangeEvent : System.EventArgs {
            
            private GASafetyStatisticsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyStatisticsRowChangeEvent(GASafetyStatisticsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyStatisticsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591