//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("CostDS")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class CostDS : System.Data.DataSet {
        
        private GACostDataTable tableGACost;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CostDS() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected CostDS(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["GACost"] != null)) {
                    base.Tables.Add(new GACostDataTable(ds.Tables["GACost"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GACostDataTable GACost {
            get {
                return this.tableGACost;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            CostDS cln = ((CostDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GACost"] != null)) {
                    base.Tables.Add(new GACostDataTable(ds.Tables["GACost"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGACost = ((GACostDataTable)(base.Tables["GACost"]));
            if ((initTable == true)) {
                if ((this.tableGACost != null)) {
                    this.tableGACost.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "CostDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/CostDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGACost = new GACostDataTable();
            base.Tables.Add(this.tableGACost);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGACost() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            CostDS ds = new CostDS();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void GACostRowChangeEventHandler(object sender, GACostRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GACostDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnCostRowId;
            
            private System.Data.DataColumn columnNumberOfUnits;
            
            private System.Data.DataColumn columnUnitPrice;
            
            private System.Data.DataColumn columnCost;
            
            private System.Data.DataColumn columnComment;
            
            private System.Data.DataColumn columnCurrencyCodeListsRowId;
            
            private System.Data.DataColumn columnTypeOfCostListsRowId;
            
            private System.Data.DataColumn columnrowguid;
            
            private System.Data.DataColumn columnMasterRowId;
            
            private System.Data.DataColumn columnDateCreated;
            
            private System.Data.DataColumn columnCreatedBy;
            
            private System.Data.DataColumn columnDateChanged;
            
            private System.Data.DataColumn columnChangedBy;
            
            private System.Data.DataColumn columnDateDeleted;
            
            private System.Data.DataColumn columnDeletedBy;
            
            private System.Data.DataColumn columnSwitchFree1;
            
            private System.Data.DataColumn columnSwitchFree2;
            
            private System.Data.DataColumn columnSwitchFree3;
            
            private System.Data.DataColumn columnDateTimeFree1;
            
            private System.Data.DataColumn columnDateTimeFree2;
            
            private System.Data.DataColumn columnDateTimeFree3;
            
            private System.Data.DataColumn columnTextFree1;
            
            private System.Data.DataColumn columnTextFree2;
            
            private System.Data.DataColumn columnTextFree3;
            
            private System.Data.DataColumn columnIntFree1;
            
            private System.Data.DataColumn columnIntFree2;
            
            private System.Data.DataColumn columnIntFree3;
            
            private System.Data.DataColumn columnnTextFree1;
            
            private System.Data.DataColumn columnnTextFree2;
            
            private System.Data.DataColumn columnnTextFree3;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GACostDataTable() {
                this.TableName = "GACost";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GACostDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GACostDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CostRowIdColumn {
                get {
                    return this.columnCostRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NumberOfUnitsColumn {
                get {
                    return this.columnNumberOfUnits;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CostColumn {
                get {
                    return this.columnCost;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CurrencyCodeListsRowIdColumn {
                get {
                    return this.columnCurrencyCodeListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TypeOfCostListsRowIdColumn {
                get {
                    return this.columnTypeOfCostListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nTextFree1Column {
                get {
                    return this.columnnTextFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nTextFree2Column {
                get {
                    return this.columnnTextFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nTextFree3Column {
                get {
                    return this.columnnTextFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GACostRow this[int index] {
                get {
                    return ((GACostRow)(this.Rows[index]));
                }
            }
            
            public event GACostRowChangeEventHandler GACostRowChanging;
            
            public event GACostRowChangeEventHandler GACostRowChanged;
            
            public event GACostRowChangeEventHandler GACostRowDeleting;
            
            public event GACostRowChangeEventHandler GACostRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGACostRow(GACostRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GACostRow AddGACostRow(
                        int NumberOfUnits, 
                        int UnitPrice, 
                        int Cost, 
                        string Comment, 
                        int CurrencyCodeListsRowId, 
                        int TypeOfCostListsRowId, 
                        System.Guid rowguid, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3, 
                        string nTextFree1, 
                        string nTextFree2, 
                        string nTextFree3) {
                GACostRow rowGACostRow = ((GACostRow)(this.NewRow()));
                rowGACostRow.ItemArray = new object[] {
                        null,
                        NumberOfUnits,
                        UnitPrice,
                        Cost,
                        Comment,
                        CurrencyCodeListsRowId,
                        TypeOfCostListsRowId,
                        rowguid,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3,
                        nTextFree1,
                        nTextFree2,
                        nTextFree3};
                this.Rows.Add(rowGACostRow);
                return rowGACostRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GACostRow FindByCostRowId(int CostRowId) {
                return ((GACostRow)(this.Rows.Find(new object[] {
                            CostRowId})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                GACostDataTable cln = ((GACostDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new GACostDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCostRowId = base.Columns["CostRowId"];
                this.columnNumberOfUnits = base.Columns["NumberOfUnits"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnCost = base.Columns["Cost"];
                this.columnComment = base.Columns["Comment"];
                this.columnCurrencyCodeListsRowId = base.Columns["CurrencyCodeListsRowId"];
                this.columnTypeOfCostListsRowId = base.Columns["TypeOfCostListsRowId"];
                this.columnrowguid = base.Columns["rowguid"];
                this.columnMasterRowId = base.Columns["MasterRowId"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnDateChanged = base.Columns["DateChanged"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnDateDeleted = base.Columns["DateDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnSwitchFree1 = base.Columns["SwitchFree1"];
                this.columnSwitchFree2 = base.Columns["SwitchFree2"];
                this.columnSwitchFree3 = base.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = base.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = base.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = base.Columns["DateTimeFree3"];
                this.columnTextFree1 = base.Columns["TextFree1"];
                this.columnTextFree2 = base.Columns["TextFree2"];
                this.columnTextFree3 = base.Columns["TextFree3"];
                this.columnIntFree1 = base.Columns["IntFree1"];
                this.columnIntFree2 = base.Columns["IntFree2"];
                this.columnIntFree3 = base.Columns["IntFree3"];
                this.columnnTextFree1 = base.Columns["nTextFree1"];
                this.columnnTextFree2 = base.Columns["nTextFree2"];
                this.columnnTextFree3 = base.Columns["nTextFree3"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCostRowId = new System.Data.DataColumn("CostRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostRowId);
                this.columnNumberOfUnits = new System.Data.DataColumn("NumberOfUnits", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfUnits);
                this.columnUnitPrice = new System.Data.DataColumn("UnitPrice", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnCost = new System.Data.DataColumn("Cost", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost);
                this.columnComment = new System.Data.DataColumn("Comment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnCurrencyCodeListsRowId = new System.Data.DataColumn("CurrencyCodeListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyCodeListsRowId);
                this.columnTypeOfCostListsRowId = new System.Data.DataColumn("TypeOfCostListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfCostListsRowId);
                this.columnrowguid = new System.Data.DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowguid);
                this.columnMasterRowId = new System.Data.DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new System.Data.DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new System.Data.DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new System.Data.DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new System.Data.DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new System.Data.DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new System.Data.DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new System.Data.DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new System.Data.DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new System.Data.DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new System.Data.DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new System.Data.DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new System.Data.DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new System.Data.DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new System.Data.DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new System.Data.DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new System.Data.DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new System.Data.DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new System.Data.DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree3);
                this.columnnTextFree1 = new System.Data.DataColumn("nTextFree1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree1);
                this.columnnTextFree2 = new System.Data.DataColumn("nTextFree2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree2);
                this.columnnTextFree3 = new System.Data.DataColumn("nTextFree3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree3);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnCostRowId}, true));
                this.columnCostRowId.AutoIncrement = true;
                this.columnCostRowId.AllowDBNull = false;
                this.columnCostRowId.ReadOnly = true;
                this.columnCostRowId.Unique = true;
                this.columnComment.MaxLength = 1073741823;
                this.columnTextFree1.MaxLength = 200;
                this.columnTextFree2.MaxLength = 200;
                this.columnTextFree3.MaxLength = 200;
                this.columnnTextFree1.MaxLength = 1073741823;
                this.columnnTextFree2.MaxLength = 1073741823;
                this.columnnTextFree3.MaxLength = 1073741823;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GACostRow NewGACostRow() {
                return ((GACostRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new GACostRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(GACostRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GACostRowChanged != null)) {
                    this.GACostRowChanged(this, new GACostRowChangeEvent(((GACostRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GACostRowChanging != null)) {
                    this.GACostRowChanging(this, new GACostRowChangeEvent(((GACostRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GACostRowDeleted != null)) {
                    this.GACostRowDeleted(this, new GACostRowChangeEvent(((GACostRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GACostRowDeleting != null)) {
                    this.GACostRowDeleting(this, new GACostRowChangeEvent(((GACostRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGACostRow(GACostRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                CostDS ds = new CostDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GACostDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GACostRow : System.Data.DataRow {
            
            private GACostDataTable tableGACost;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GACostRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGACost = ((GACostDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CostRowId {
                get {
                    return ((int)(this[this.tableGACost.CostRowIdColumn]));
                }
                set {
                    this[this.tableGACost.CostRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumberOfUnits {
                get {
                    try {
                        return ((int)(this[this.tableGACost.NumberOfUnitsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NumberOfUnits\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.NumberOfUnitsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnitPrice {
                get {
                    try {
                        return ((int)(this[this.tableGACost.UnitPriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UnitPrice\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.UnitPriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cost {
                get {
                    try {
                        return ((int)(this[this.tableGACost.CostColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cost\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.CostColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGACost.CommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Comment\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.CommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CurrencyCodeListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGACost.CurrencyCodeListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CurrencyCodeListsRowId\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.CurrencyCodeListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TypeOfCostListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGACost.TypeOfCostListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TypeOfCostListsRowId\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.TypeOfCostListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid rowguid {
                get {
                    try {
                        return ((System.Guid)(this[this.tableGACost.rowguidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rowguid\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.rowguidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGACost.MasterRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MasterRowId\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.MasterRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACost.DateCreatedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateCreated\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.DateCreatedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGACost.CreatedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.CreatedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACost.DateChangedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateChanged\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.DateChangedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGACost.ChangedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.ChangedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACost.DateDeletedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateDeleted\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.DateDeletedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGACost.DeletedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.DeletedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGACost.SwitchFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree1\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.SwitchFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGACost.SwitchFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree2\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.SwitchFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGACost.SwitchFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree3\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.SwitchFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACost.DateTimeFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree1\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.DateTimeFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACost.DateTimeFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree2\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.DateTimeFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACost.DateTimeFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree3\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.DateTimeFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGACost.TextFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree1\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.TextFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGACost.TextFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree2\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.TextFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGACost.TextFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree3\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.TextFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGACost.IntFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree1\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.IntFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGACost.IntFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree2\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.IntFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGACost.IntFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree3\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.IntFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGACost.nTextFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nTextFree1\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.nTextFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGACost.nTextFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nTextFree2\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.nTextFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGACost.nTextFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nTextFree3\' in table \'GACost\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACost.nTextFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberOfUnitsNull() {
                return this.IsNull(this.tableGACost.NumberOfUnitsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberOfUnitsNull() {
                this[this.tableGACost.NumberOfUnitsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tableGACost.UnitPriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceNull() {
                this[this.tableGACost.UnitPriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostNull() {
                return this.IsNull(this.tableGACost.CostColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostNull() {
                this[this.tableGACost.CostColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableGACost.CommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableGACost.CommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrencyCodeListsRowIdNull() {
                return this.IsNull(this.tableGACost.CurrencyCodeListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrencyCodeListsRowIdNull() {
                this[this.tableGACost.CurrencyCodeListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeOfCostListsRowIdNull() {
                return this.IsNull(this.tableGACost.TypeOfCostListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeOfCostListsRowIdNull() {
                this[this.tableGACost.TypeOfCostListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGACost.rowguidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrowguidNull() {
                this[this.tableGACost.rowguidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGACost.MasterRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterRowIdNull() {
                this[this.tableGACost.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGACost.DateCreatedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateCreatedNull() {
                this[this.tableGACost.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGACost.CreatedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableGACost.CreatedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGACost.DateChangedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangedNull() {
                this[this.tableGACost.DateChangedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGACost.ChangedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableGACost.ChangedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGACost.DateDeletedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateDeletedNull() {
                this[this.tableGACost.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGACost.DeletedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableGACost.DeletedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGACost.SwitchFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree1Null() {
                this[this.tableGACost.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGACost.SwitchFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree2Null() {
                this[this.tableGACost.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGACost.SwitchFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree3Null() {
                this[this.tableGACost.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGACost.DateTimeFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree1Null() {
                this[this.tableGACost.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGACost.DateTimeFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree2Null() {
                this[this.tableGACost.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGACost.DateTimeFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree3Null() {
                this[this.tableGACost.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGACost.TextFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree1Null() {
                this[this.tableGACost.TextFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGACost.TextFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree2Null() {
                this[this.tableGACost.TextFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGACost.TextFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree3Null() {
                this[this.tableGACost.TextFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGACost.IntFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree1Null() {
                this[this.tableGACost.IntFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGACost.IntFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree2Null() {
                this[this.tableGACost.IntFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGACost.IntFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree3Null() {
                this[this.tableGACost.IntFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree1Null() {
                return this.IsNull(this.tableGACost.nTextFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree1Null() {
                this[this.tableGACost.nTextFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree2Null() {
                return this.IsNull(this.tableGACost.nTextFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree2Null() {
                this[this.tableGACost.nTextFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree3Null() {
                return this.IsNull(this.tableGACost.nTextFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree3Null() {
                this[this.tableGACost.nTextFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GACostRowChangeEvent : System.EventArgs {
            
            private GACostRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GACostRowChangeEvent(GACostRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GACostRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GASystem.DataModel.CostDSTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GACostTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GACostTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GACost";
            tableMapping.ColumnMappings.Add("CostRowId", "CostRowId");
            tableMapping.ColumnMappings.Add("NumberOfUnits", "NumberOfUnits");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("Cost", "Cost");
            tableMapping.ColumnMappings.Add("Comment", "Comment");
            tableMapping.ColumnMappings.Add("CurrencyCodeListsRowId", "CurrencyCodeListsRowId");
            tableMapping.ColumnMappings.Add("TypeOfCostListsRowId", "TypeOfCostListsRowId");
            tableMapping.ColumnMappings.Add("rowguid", "rowguid");
            tableMapping.ColumnMappings.Add("MasterRowId", "MasterRowId");
            tableMapping.ColumnMappings.Add("DateCreated", "DateCreated");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("DateChanged", "DateChanged");
            tableMapping.ColumnMappings.Add("ChangedBy", "ChangedBy");
            tableMapping.ColumnMappings.Add("DateDeleted", "DateDeleted");
            tableMapping.ColumnMappings.Add("DeletedBy", "DeletedBy");
            tableMapping.ColumnMappings.Add("SwitchFree1", "SwitchFree1");
            tableMapping.ColumnMappings.Add("SwitchFree2", "SwitchFree2");
            tableMapping.ColumnMappings.Add("SwitchFree3", "SwitchFree3");
            tableMapping.ColumnMappings.Add("DateTimeFree1", "DateTimeFree1");
            tableMapping.ColumnMappings.Add("DateTimeFree2", "DateTimeFree2");
            tableMapping.ColumnMappings.Add("DateTimeFree3", "DateTimeFree3");
            tableMapping.ColumnMappings.Add("TextFree1", "TextFree1");
            tableMapping.ColumnMappings.Add("TextFree2", "TextFree2");
            tableMapping.ColumnMappings.Add("TextFree3", "TextFree3");
            tableMapping.ColumnMappings.Add("IntFree1", "IntFree1");
            tableMapping.ColumnMappings.Add("IntFree2", "IntFree2");
            tableMapping.ColumnMappings.Add("IntFree3", "IntFree3");
            tableMapping.ColumnMappings.Add("nTextFree1", "nTextFree1");
            tableMapping.ColumnMappings.Add("nTextFree2", "nTextFree2");
            tableMapping.ColumnMappings.Add("nTextFree3", "nTextFree3");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[GACost] WHERE (([CostRowId] = @Original_CostRowId) AND ((@IsNu" +
                "ll_NumberOfUnits = 1 AND [NumberOfUnits] IS NULL) OR ([NumberOfUnits] = @Origina" +
                "l_NumberOfUnits)) AND ((@IsNull_UnitPrice = 1 AND [UnitPrice] IS NULL) OR ([Unit" +
                "Price] = @Original_UnitPrice)) AND ((@IsNull_Cost = 1 AND [Cost] IS NULL) OR ([C" +
                "ost] = @Original_Cost)) AND ((@IsNull_CurrencyCodeListsRowId = 1 AND [CurrencyCo" +
                "deListsRowId] IS NULL) OR ([CurrencyCodeListsRowId] = @Original_CurrencyCodeList" +
                "sRowId)) AND ((@IsNull_TypeOfCostListsRowId = 1 AND [TypeOfCostListsRowId] IS NU" +
                "LL) OR ([TypeOfCostListsRowId] = @Original_TypeOfCostListsRowId)) AND ([rowguid]" +
                " = @Original_rowguid) AND ((@IsNull_MasterRowId = 1 AND [MasterRowId] IS NULL) O" +
                "R ([MasterRowId] = @Original_MasterRowId)) AND ((@IsNull_DateCreated = 1 AND [Da" +
                "teCreated] IS NULL) OR ([DateCreated] = @Original_DateCreated)) AND ((@IsNull_Cr" +
                "eatedBy = 1 AND [CreatedBy] IS NULL) OR ([CreatedBy] = @Original_CreatedBy)) AND" +
                " ((@IsNull_DateChanged = 1 AND [DateChanged] IS NULL) OR ([DateChanged] = @Origi" +
                "nal_DateChanged)) AND ((@IsNull_ChangedBy = 1 AND [ChangedBy] IS NULL) OR ([Chan" +
                "gedBy] = @Original_ChangedBy)) AND ((@IsNull_DateDeleted = 1 AND [DateDeleted] I" +
                "S NULL) OR ([DateDeleted] = @Original_DateDeleted)) AND ((@IsNull_DeletedBy = 1 " +
                "AND [DeletedBy] IS NULL) OR ([DeletedBy] = @Original_DeletedBy)) AND ((@IsNull_S" +
                "witchFree1 = 1 AND [SwitchFree1] IS NULL) OR ([SwitchFree1] = @Original_SwitchFr" +
                "ee1)) AND ((@IsNull_SwitchFree2 = 1 AND [SwitchFree2] IS NULL) OR ([SwitchFree2]" +
                " = @Original_SwitchFree2)) AND ((@IsNull_SwitchFree3 = 1 AND [SwitchFree3] IS NU" +
                "LL) OR ([SwitchFree3] = @Original_SwitchFree3)) AND ((@IsNull_DateTimeFree1 = 1 " +
                "AND [DateTimeFree1] IS NULL) OR ([DateTimeFree1] = @Original_DateTimeFree1)) AND" +
                " ((@IsNull_DateTimeFree2 = 1 AND [DateTimeFree2] IS NULL) OR ([DateTimeFree2] = " +
                "@Original_DateTimeFree2)) AND ((@IsNull_DateTimeFree3 = 1 AND [DateTimeFree3] IS" +
                " NULL) OR ([DateTimeFree3] = @Original_DateTimeFree3)) AND ((@IsNull_TextFree1 =" +
                " 1 AND [TextFree1] IS NULL) OR ([TextFree1] = @Original_TextFree1)) AND ((@IsNul" +
                "l_TextFree2 = 1 AND [TextFree2] IS NULL) OR ([TextFree2] = @Original_TextFree2))" +
                " AND ((@IsNull_TextFree3 = 1 AND [TextFree3] IS NULL) OR ([TextFree3] = @Origina" +
                "l_TextFree3)) AND ((@IsNull_IntFree1 = 1 AND [IntFree1] IS NULL) OR ([IntFree1] " +
                "= @Original_IntFree1)) AND ((@IsNull_IntFree2 = 1 AND [IntFree2] IS NULL) OR ([I" +
                "ntFree2] = @Original_IntFree2)) AND ((@IsNull_IntFree3 = 1 AND [IntFree3] IS NUL" +
                "L) OR ([IntFree3] = @Original_IntFree3)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CostRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CostRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NumberOfUnits", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NumberOfUnits", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NumberOfUnits", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NumberOfUnits", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_UnitPrice", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UnitPrice", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Cost", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Cost", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Cost", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Cost", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CurrencyCodeListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CurrencyCodeListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CurrencyCodeListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CurrencyCodeListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TypeOfCostListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TypeOfCostListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TypeOfCostListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TypeOfCostListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateCreated", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChanged", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateDeleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[GACost] ([NumberOfUnits], [UnitPrice], [Cost], [Comment], [CurrencyCodeListsRowId], [TypeOfCostListsRowId], [rowguid], [MasterRowId], [DateCreated], [CreatedBy], [DateChanged], [ChangedBy], [DateDeleted], [DeletedBy], [SwitchFree1], [SwitchFree2], [SwitchFree3], [DateTimeFree1], [DateTimeFree2], [DateTimeFree3], [TextFree1], [TextFree2], [TextFree3], [IntFree1], [IntFree2], [IntFree3], [nTextFree1], [nTextFree2], [nTextFree3]) VALUES (@NumberOfUnits, @UnitPrice, @Cost, @Comment, @CurrencyCodeListsRowId, @TypeOfCostListsRowId, @rowguid, @MasterRowId, @DateCreated, @CreatedBy, @DateChanged, @ChangedBy, @DateDeleted, @DeletedBy, @SwitchFree1, @SwitchFree2, @SwitchFree3, @DateTimeFree1, @DateTimeFree2, @DateTimeFree3, @TextFree1, @TextFree2, @TextFree3, @IntFree1, @IntFree2, @IntFree3, @nTextFree1, @nTextFree2, @nTextFree3);
SELECT CostRowId, NumberOfUnits, UnitPrice, Cost, Comment, CurrencyCodeListsRowId, TypeOfCostListsRowId, rowguid, MasterRowId, DateCreated, CreatedBy, DateChanged, ChangedBy, DateDeleted, DeletedBy, SwitchFree1, SwitchFree2, SwitchFree3, DateTimeFree1, DateTimeFree2, DateTimeFree3, TextFree1, TextFree2, TextFree3, IntFree1, IntFree2, IntFree3, nTextFree1, nTextFree2, nTextFree3 FROM GACost WHERE (CostRowId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NumberOfUnits", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NumberOfUnits", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UnitPrice", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Cost", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Cost", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Comment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Comment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CurrencyCodeListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CurrencyCodeListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TypeOfCostListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TypeOfCostListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree1", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree2", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree3", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[GACost] SET [NumberOfUnits] = @NumberOfUnits, [UnitPrice] = @UnitPr" +
                "ice, [Cost] = @Cost, [Comment] = @Comment, [CurrencyCodeListsRowId] = @CurrencyC" +
                "odeListsRowId, [TypeOfCostListsRowId] = @TypeOfCostListsRowId, [rowguid] = @rowg" +
                "uid, [MasterRowId] = @MasterRowId, [DateCreated] = @DateCreated, [CreatedBy] = @" +
                "CreatedBy, [DateChanged] = @DateChanged, [ChangedBy] = @ChangedBy, [DateDeleted]" +
                " = @DateDeleted, [DeletedBy] = @DeletedBy, [SwitchFree1] = @SwitchFree1, [Switch" +
                "Free2] = @SwitchFree2, [SwitchFree3] = @SwitchFree3, [DateTimeFree1] = @DateTime" +
                "Free1, [DateTimeFree2] = @DateTimeFree2, [DateTimeFree3] = @DateTimeFree3, [Text" +
                "Free1] = @TextFree1, [TextFree2] = @TextFree2, [TextFree3] = @TextFree3, [IntFre" +
                "e1] = @IntFree1, [IntFree2] = @IntFree2, [IntFree3] = @IntFree3, [nTextFree1] = " +
                "@nTextFree1, [nTextFree2] = @nTextFree2, [nTextFree3] = @nTextFree3 WHERE (([Cos" +
                "tRowId] = @Original_CostRowId) AND ((@IsNull_NumberOfUnits = 1 AND [NumberOfUnit" +
                "s] IS NULL) OR ([NumberOfUnits] = @Original_NumberOfUnits)) AND ((@IsNull_UnitPr" +
                "ice = 1 AND [UnitPrice] IS NULL) OR ([UnitPrice] = @Original_UnitPrice)) AND ((@" +
                "IsNull_Cost = 1 AND [Cost] IS NULL) OR ([Cost] = @Original_Cost)) AND ((@IsNull_" +
                "CurrencyCodeListsRowId = 1 AND [CurrencyCodeListsRowId] IS NULL) OR ([CurrencyCo" +
                "deListsRowId] = @Original_CurrencyCodeListsRowId)) AND ((@IsNull_TypeOfCostLists" +
                "RowId = 1 AND [TypeOfCostListsRowId] IS NULL) OR ([TypeOfCostListsRowId] = @Orig" +
                "inal_TypeOfCostListsRowId)) AND ([rowguid] = @Original_rowguid) AND ((@IsNull_Ma" +
                "sterRowId = 1 AND [MasterRowId] IS NULL) OR ([MasterRowId] = @Original_MasterRow" +
                "Id)) AND ((@IsNull_DateCreated = 1 AND [DateCreated] IS NULL) OR ([DateCreated] " +
                "= @Original_DateCreated)) AND ((@IsNull_CreatedBy = 1 AND [CreatedBy] IS NULL) O" +
                "R ([CreatedBy] = @Original_CreatedBy)) AND ((@IsNull_DateChanged = 1 AND [DateCh" +
                "anged] IS NULL) OR ([DateChanged] = @Original_DateChanged)) AND ((@IsNull_Change" +
                "dBy = 1 AND [ChangedBy] IS NULL) OR ([ChangedBy] = @Original_ChangedBy)) AND ((@" +
                "IsNull_DateDeleted = 1 AND [DateDeleted] IS NULL) OR ([DateDeleted] = @Original_" +
                "DateDeleted)) AND ((@IsNull_DeletedBy = 1 AND [DeletedBy] IS NULL) OR ([DeletedB" +
                "y] = @Original_DeletedBy)) AND ((@IsNull_SwitchFree1 = 1 AND [SwitchFree1] IS NU" +
                "LL) OR ([SwitchFree1] = @Original_SwitchFree1)) AND ((@IsNull_SwitchFree2 = 1 AN" +
                "D [SwitchFree2] IS NULL) OR ([SwitchFree2] = @Original_SwitchFree2)) AND ((@IsNu" +
                "ll_SwitchFree3 = 1 AND [SwitchFree3] IS NULL) OR ([SwitchFree3] = @Original_Swit" +
                "chFree3)) AND ((@IsNull_DateTimeFree1 = 1 AND [DateTimeFree1] IS NULL) OR ([Date" +
                "TimeFree1] = @Original_DateTimeFree1)) AND ((@IsNull_DateTimeFree2 = 1 AND [Date" +
                "TimeFree2] IS NULL) OR ([DateTimeFree2] = @Original_DateTimeFree2)) AND ((@IsNul" +
                "l_DateTimeFree3 = 1 AND [DateTimeFree3] IS NULL) OR ([DateTimeFree3] = @Original" +
                "_DateTimeFree3)) AND ((@IsNull_TextFree1 = 1 AND [TextFree1] IS NULL) OR ([TextF" +
                "ree1] = @Original_TextFree1)) AND ((@IsNull_TextFree2 = 1 AND [TextFree2] IS NUL" +
                "L) OR ([TextFree2] = @Original_TextFree2)) AND ((@IsNull_TextFree3 = 1 AND [Text" +
                "Free3] IS NULL) OR ([TextFree3] = @Original_TextFree3)) AND ((@IsNull_IntFree1 =" +
                " 1 AND [IntFree1] IS NULL) OR ([IntFree1] = @Original_IntFree1)) AND ((@IsNull_I" +
                "ntFree2 = 1 AND [IntFree2] IS NULL) OR ([IntFree2] = @Original_IntFree2)) AND ((" +
                "@IsNull_IntFree3 = 1 AND [IntFree3] IS NULL) OR ([IntFree3] = @Original_IntFree3" +
                ")));\r\nSELECT CostRowId, NumberOfUnits, UnitPrice, Cost, Comment, CurrencyCodeLis" +
                "tsRowId, TypeOfCostListsRowId, rowguid, MasterRowId, DateCreated, CreatedBy, Dat" +
                "eChanged, ChangedBy, DateDeleted, DeletedBy, SwitchFree1, SwitchFree2, SwitchFre" +
                "e3, DateTimeFree1, DateTimeFree2, DateTimeFree3, TextFree1, TextFree2, TextFree3" +
                ", IntFree1, IntFree2, IntFree3, nTextFree1, nTextFree2, nTextFree3 FROM GACost W" +
                "HERE (CostRowId = @CostRowId)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NumberOfUnits", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NumberOfUnits", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UnitPrice", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Cost", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Cost", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Comment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Comment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CurrencyCodeListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CurrencyCodeListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TypeOfCostListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TypeOfCostListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree1", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree2", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree3", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CostRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CostRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NumberOfUnits", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NumberOfUnits", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NumberOfUnits", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NumberOfUnits", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_UnitPrice", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UnitPrice", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Cost", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Cost", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Cost", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Cost", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CurrencyCodeListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CurrencyCodeListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CurrencyCodeListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CurrencyCodeListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TypeOfCostListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TypeOfCostListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TypeOfCostListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TypeOfCostListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateCreated", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChanged", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateDeleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CostRowId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "CostRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GASystem.Properties.Settings.Default.flagdata070807ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT CostRowId, NumberOfUnits, UnitPrice, Cost, Comment, CurrencyCodeListsRowId, TypeOfCostListsRowId, rowguid, MasterRowId, DateCreated, CreatedBy, DateChanged, ChangedBy, DateDeleted, DeletedBy, SwitchFree1, SwitchFree2, SwitchFree3, DateTimeFree1, DateTimeFree2, DateTimeFree3, TextFree1, TextFree2, TextFree3, IntFree1, IntFree2, IntFree3, nTextFree1, nTextFree2, nTextFree3 FROM dbo.GACost";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(CostDS.GACostDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual CostDS.GACostDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            CostDS.GACostDataTable dataTable = new CostDS.GACostDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(CostDS.GACostDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(CostDS dataSet) {
            return this.Adapter.Update(dataSet, "GACost");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_CostRowId, 
                    System.Nullable<int> Original_NumberOfUnits, 
                    System.Nullable<int> Original_UnitPrice, 
                    System.Nullable<int> Original_Cost, 
                    System.Nullable<int> Original_CurrencyCodeListsRowId, 
                    System.Nullable<int> Original_TypeOfCostListsRowId, 
                    System.Nullable<System.Guid> Original_rowguid, 
                    System.Nullable<int> Original_MasterRowId, 
                    System.Nullable<System.DateTime> Original_DateCreated, 
                    System.Nullable<int> Original_CreatedBy, 
                    System.Nullable<System.DateTime> Original_DateChanged, 
                    System.Nullable<int> Original_ChangedBy, 
                    System.Nullable<System.DateTime> Original_DateDeleted, 
                    System.Nullable<int> Original_DeletedBy, 
                    System.Nullable<bool> Original_SwitchFree1, 
                    System.Nullable<bool> Original_SwitchFree2, 
                    System.Nullable<bool> Original_SwitchFree3, 
                    System.Nullable<System.DateTime> Original_DateTimeFree1, 
                    System.Nullable<System.DateTime> Original_DateTimeFree2, 
                    System.Nullable<System.DateTime> Original_DateTimeFree3, 
                    string Original_TextFree1, 
                    string Original_TextFree2, 
                    string Original_TextFree3, 
                    System.Nullable<int> Original_IntFree1, 
                    System.Nullable<int> Original_IntFree2, 
                    System.Nullable<int> Original_IntFree3) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CostRowId));
            if ((Original_NumberOfUnits.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_NumberOfUnits.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_UnitPrice.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_UnitPrice.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_Cost.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_Cost.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_CurrencyCodeListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_CurrencyCodeListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_TypeOfCostListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_TypeOfCostListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_rowguid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((System.Guid)(Original_rowguid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_MasterRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_MasterRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_DateCreated.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_DateCreated.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((Original_CreatedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_CreatedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((Original_DateChanged.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_DateChanged.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((Original_ChangedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_ChangedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = System.DBNull.Value;
            }
            if ((Original_DateDeleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((System.DateTime)(Original_DateDeleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = System.DBNull.Value;
            }
            if ((Original_DeletedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((int)(Original_DeletedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((bool)(Original_SwitchFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((bool)(Original_SwitchFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((bool)(Original_SwitchFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((System.DateTime)(Original_DateTimeFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((System.DateTime)(Original_DateTimeFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((System.DateTime)(Original_DateTimeFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((Original_TextFree1 == null)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_TextFree1));
            }
            if ((Original_TextFree2 == null)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_TextFree2));
            }
            if ((Original_TextFree3 == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_TextFree3));
            }
            if ((Original_IntFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((int)(Original_IntFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = System.DBNull.Value;
            }
            if ((Original_IntFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((int)(Original_IntFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = System.DBNull.Value;
            }
            if ((Original_IntFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((int)(Original_IntFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.Nullable<int> NumberOfUnits, 
                    System.Nullable<int> UnitPrice, 
                    System.Nullable<int> Cost, 
                    string Comment, 
                    System.Nullable<int> CurrencyCodeListsRowId, 
                    System.Nullable<int> TypeOfCostListsRowId, 
                    System.Nullable<System.Guid> rowguid, 
                    System.Nullable<int> MasterRowId, 
                    System.Nullable<System.DateTime> DateCreated, 
                    System.Nullable<int> CreatedBy, 
                    System.Nullable<System.DateTime> DateChanged, 
                    System.Nullable<int> ChangedBy, 
                    System.Nullable<System.DateTime> DateDeleted, 
                    System.Nullable<int> DeletedBy, 
                    System.Nullable<bool> SwitchFree1, 
                    System.Nullable<bool> SwitchFree2, 
                    System.Nullable<bool> SwitchFree3, 
                    System.Nullable<System.DateTime> DateTimeFree1, 
                    System.Nullable<System.DateTime> DateTimeFree2, 
                    System.Nullable<System.DateTime> DateTimeFree3, 
                    string TextFree1, 
                    string TextFree2, 
                    string TextFree3, 
                    System.Nullable<int> IntFree1, 
                    System.Nullable<int> IntFree2, 
                    System.Nullable<int> IntFree3, 
                    string nTextFree1, 
                    string nTextFree2, 
                    string nTextFree3) {
            if ((NumberOfUnits.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(NumberOfUnits.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((UnitPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(UnitPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((Cost.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Cost.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Comment == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Comment));
            }
            if ((CurrencyCodeListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(CurrencyCodeListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((TypeOfCostListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(TypeOfCostListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((rowguid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.Guid)(rowguid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((MasterRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(MasterRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((DateCreated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((CreatedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(CreatedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((DateChanged.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(DateChanged.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((ChangedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(ChangedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((DateDeleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(DateDeleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((DeletedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(DeletedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((SwitchFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(SwitchFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((SwitchFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(SwitchFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((SwitchFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(SwitchFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((DateTimeFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(DateTimeFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((DateTimeFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(DateTimeFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((DateTimeFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(DateTimeFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((TextFree1 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(TextFree1));
            }
            if ((TextFree2 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(TextFree2));
            }
            if ((TextFree3 == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(TextFree3));
            }
            if ((IntFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((int)(IntFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = System.DBNull.Value;
            }
            if ((IntFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(IntFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((IntFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(IntFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((nTextFree1 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(nTextFree1));
            }
            if ((nTextFree2 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(nTextFree2));
            }
            if ((nTextFree3 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(nTextFree3));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Nullable<int> NumberOfUnits, 
                    System.Nullable<int> UnitPrice, 
                    System.Nullable<int> Cost, 
                    string Comment, 
                    System.Nullable<int> CurrencyCodeListsRowId, 
                    System.Nullable<int> TypeOfCostListsRowId, 
                    System.Nullable<System.Guid> rowguid, 
                    System.Nullable<int> MasterRowId, 
                    System.Nullable<System.DateTime> DateCreated, 
                    System.Nullable<int> CreatedBy, 
                    System.Nullable<System.DateTime> DateChanged, 
                    System.Nullable<int> ChangedBy, 
                    System.Nullable<System.DateTime> DateDeleted, 
                    System.Nullable<int> DeletedBy, 
                    System.Nullable<bool> SwitchFree1, 
                    System.Nullable<bool> SwitchFree2, 
                    System.Nullable<bool> SwitchFree3, 
                    System.Nullable<System.DateTime> DateTimeFree1, 
                    System.Nullable<System.DateTime> DateTimeFree2, 
                    System.Nullable<System.DateTime> DateTimeFree3, 
                    string TextFree1, 
                    string TextFree2, 
                    string TextFree3, 
                    System.Nullable<int> IntFree1, 
                    System.Nullable<int> IntFree2, 
                    System.Nullable<int> IntFree3, 
                    string nTextFree1, 
                    string nTextFree2, 
                    string nTextFree3, 
                    int Original_CostRowId, 
                    System.Nullable<int> Original_NumberOfUnits, 
                    System.Nullable<int> Original_UnitPrice, 
                    System.Nullable<int> Original_Cost, 
                    System.Nullable<int> Original_CurrencyCodeListsRowId, 
                    System.Nullable<int> Original_TypeOfCostListsRowId, 
                    System.Nullable<System.Guid> Original_rowguid, 
                    System.Nullable<int> Original_MasterRowId, 
                    System.Nullable<System.DateTime> Original_DateCreated, 
                    System.Nullable<int> Original_CreatedBy, 
                    System.Nullable<System.DateTime> Original_DateChanged, 
                    System.Nullable<int> Original_ChangedBy, 
                    System.Nullable<System.DateTime> Original_DateDeleted, 
                    System.Nullable<int> Original_DeletedBy, 
                    System.Nullable<bool> Original_SwitchFree1, 
                    System.Nullable<bool> Original_SwitchFree2, 
                    System.Nullable<bool> Original_SwitchFree3, 
                    System.Nullable<System.DateTime> Original_DateTimeFree1, 
                    System.Nullable<System.DateTime> Original_DateTimeFree2, 
                    System.Nullable<System.DateTime> Original_DateTimeFree3, 
                    string Original_TextFree1, 
                    string Original_TextFree2, 
                    string Original_TextFree3, 
                    System.Nullable<int> Original_IntFree1, 
                    System.Nullable<int> Original_IntFree2, 
                    System.Nullable<int> Original_IntFree3, 
                    int CostRowId) {
            if ((NumberOfUnits.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(NumberOfUnits.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((UnitPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(UnitPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((Cost.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Cost.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Comment == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Comment));
            }
            if ((CurrencyCodeListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(CurrencyCodeListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((TypeOfCostListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(TypeOfCostListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((rowguid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.Guid)(rowguid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((MasterRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(MasterRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((DateCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((CreatedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(CreatedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((DateChanged.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(DateChanged.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((ChangedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(ChangedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((DateDeleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(DateDeleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((DeletedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(DeletedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((SwitchFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(SwitchFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((SwitchFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(SwitchFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((SwitchFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(SwitchFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((DateTimeFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(DateTimeFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((DateTimeFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(DateTimeFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((DateTimeFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(DateTimeFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((TextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(TextFree1));
            }
            if ((TextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(TextFree2));
            }
            if ((TextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(TextFree3));
            }
            if ((IntFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(IntFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            if ((IntFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(IntFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((IntFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(IntFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((nTextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(nTextFree1));
            }
            if ((nTextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(nTextFree2));
            }
            if ((nTextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(nTextFree3));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_CostRowId));
            if ((Original_NumberOfUnits.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_NumberOfUnits.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            if ((Original_UnitPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Original_UnitPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = System.DBNull.Value;
            }
            if ((Original_Cost.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_Cost.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((Original_CurrencyCodeListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_CurrencyCodeListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((Original_TypeOfCostListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_TypeOfCostListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = System.DBNull.Value;
            }
            if ((Original_rowguid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.Guid)(Original_rowguid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = System.DBNull.Value;
            }
            if ((Original_MasterRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_MasterRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = System.DBNull.Value;
            }
            if ((Original_DateCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(Original_DateCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = System.DBNull.Value;
            }
            if ((Original_CreatedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_CreatedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = System.DBNull.Value;
            }
            if ((Original_DateChanged.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((System.DateTime)(Original_DateChanged.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = System.DBNull.Value;
            }
            if ((Original_ChangedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Original_ChangedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = System.DBNull.Value;
            }
            if ((Original_DateDeleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTime)(Original_DateDeleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = System.DBNull.Value;
            }
            if ((Original_DeletedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(Original_DeletedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(Original_SwitchFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(Original_SwitchFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((bool)(Original_SwitchFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((System.DateTime)(Original_DateTimeFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((System.DateTime)(Original_DateTimeFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((System.DateTime)(Original_DateTimeFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = System.DBNull.Value;
            }
            if ((Original_TextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_TextFree1));
            }
            if ((Original_TextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_TextFree2));
            }
            if ((Original_TextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_TextFree3));
            }
            if ((Original_IntFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((int)(Original_IntFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = System.DBNull.Value;
            }
            if ((Original_IntFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(Original_IntFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = System.DBNull.Value;
            }
            if ((Original_IntFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(Original_IntFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(CostRowId));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591