//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace GASystem.DataModel {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class UserPersonnelViewDS : DataSet {
        
        private GAUserPersonnelViewDataTable tableGAUserPersonnelView;
        
        public UserPersonnelViewDS() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected UserPersonnelViewDS(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["GAUserPersonnelView"] != null)) {
                    this.Tables.Add(new GAUserPersonnelViewDataTable(ds.Tables["GAUserPersonnelView"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAUserPersonnelViewDataTable GAUserPersonnelView {
            get {
                return this.tableGAUserPersonnelView;
            }
        }
        
        public override DataSet Clone() {
            UserPersonnelViewDS cln = ((UserPersonnelViewDS)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["GAUserPersonnelView"] != null)) {
                this.Tables.Add(new GAUserPersonnelViewDataTable(ds.Tables["GAUserPersonnelView"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableGAUserPersonnelView = ((GAUserPersonnelViewDataTable)(this.Tables["GAUserPersonnelView"]));
            if ((this.tableGAUserPersonnelView != null)) {
                this.tableGAUserPersonnelView.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "UserPersonnelViewDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/UserPersonnelViewDS.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableGAUserPersonnelView = new GAUserPersonnelViewDataTable();
            this.Tables.Add(this.tableGAUserPersonnelView);
        }
        
        private bool ShouldSerializeGAUserPersonnelView() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void GAUserPersonnelViewRowChangeEventHandler(object sender, GAUserPersonnelViewRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAUserPersonnelViewDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnUserRowId;
            
            private DataColumn columnPersonnelRowId;
            
            private DataColumn columnDNNUserId;
            
            private DataColumn columnContextClass;
            
            private DataColumn columnContextRowId;
            
            private DataColumn columnTitle;
            
            private DataColumn columnInitials;
            
            private DataColumn columnGivenName;
            
            private DataColumn columnFamilyName;
            
            private DataColumn columnContactDeviceType;
            
            private DataColumn columnContactDeviceAddress;
            
            internal GAUserPersonnelViewDataTable() : 
                    base("GAUserPersonnelView") {
                this.InitClass();
            }
            
            internal GAUserPersonnelViewDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn UserRowIdColumn {
                get {
                    return this.columnUserRowId;
                }
            }
            
            internal DataColumn PersonnelRowIdColumn {
                get {
                    return this.columnPersonnelRowId;
                }
            }
            
            internal DataColumn DNNUserIdColumn {
                get {
                    return this.columnDNNUserId;
                }
            }
            
            internal DataColumn ContextClassColumn {
                get {
                    return this.columnContextClass;
                }
            }
            
            internal DataColumn ContextRowIdColumn {
                get {
                    return this.columnContextRowId;
                }
            }
            
            internal DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            internal DataColumn InitialsColumn {
                get {
                    return this.columnInitials;
                }
            }
            
            internal DataColumn GivenNameColumn {
                get {
                    return this.columnGivenName;
                }
            }
            
            internal DataColumn FamilyNameColumn {
                get {
                    return this.columnFamilyName;
                }
            }
            
            internal DataColumn ContactDeviceTypeColumn {
                get {
                    return this.columnContactDeviceType;
                }
            }
            
            internal DataColumn ContactDeviceAddressColumn {
                get {
                    return this.columnContactDeviceAddress;
                }
            }
            
            public GAUserPersonnelViewRow this[int index] {
                get {
                    return ((GAUserPersonnelViewRow)(this.Rows[index]));
                }
            }
            
            public event GAUserPersonnelViewRowChangeEventHandler GAUserPersonnelViewRowChanged;
            
            public event GAUserPersonnelViewRowChangeEventHandler GAUserPersonnelViewRowChanging;
            
            public event GAUserPersonnelViewRowChangeEventHandler GAUserPersonnelViewRowDeleted;
            
            public event GAUserPersonnelViewRowChangeEventHandler GAUserPersonnelViewRowDeleting;
            
            public void AddGAUserPersonnelViewRow(GAUserPersonnelViewRow row) {
                this.Rows.Add(row);
            }
            
            public GAUserPersonnelViewRow AddGAUserPersonnelViewRow(int UserRowId, int PersonnelRowId, string DNNUserId, string ContextClass, int ContextRowId, string Title, string Initials, string GivenName, string FamilyName, string ContactDeviceType, string ContactDeviceAddress) {
                GAUserPersonnelViewRow rowGAUserPersonnelViewRow = ((GAUserPersonnelViewRow)(this.NewRow()));
                rowGAUserPersonnelViewRow.ItemArray = new object[] {
                        UserRowId,
                        PersonnelRowId,
                        DNNUserId,
                        ContextClass,
                        ContextRowId,
                        Title,
                        Initials,
                        GivenName,
                        FamilyName,
                        ContactDeviceType,
                        ContactDeviceAddress};
                this.Rows.Add(rowGAUserPersonnelViewRow);
                return rowGAUserPersonnelViewRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAUserPersonnelViewDataTable cln = ((GAUserPersonnelViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAUserPersonnelViewDataTable();
            }
            
            internal void InitVars() {
                this.columnUserRowId = this.Columns["UserRowId"];
                this.columnPersonnelRowId = this.Columns["PersonnelRowId"];
                this.columnDNNUserId = this.Columns["DNNUserId"];
                this.columnContextClass = this.Columns["ContextClass"];
                this.columnContextRowId = this.Columns["ContextRowId"];
                this.columnTitle = this.Columns["Title"];
                this.columnInitials = this.Columns["Initials"];
                this.columnGivenName = this.Columns["GivenName"];
                this.columnFamilyName = this.Columns["FamilyName"];
                this.columnContactDeviceType = this.Columns["ContactDeviceType"];
                this.columnContactDeviceAddress = this.Columns["ContactDeviceAddress"];
            }
            
            private void InitClass() {
                this.columnUserRowId = new DataColumn("UserRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserRowId);
                this.columnPersonnelRowId = new DataColumn("PersonnelRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPersonnelRowId);
                this.columnDNNUserId = new DataColumn("DNNUserId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDNNUserId);
                this.columnContextClass = new DataColumn("ContextClass", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContextClass);
                this.columnContextRowId = new DataColumn("ContextRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContextRowId);
                this.columnTitle = new DataColumn("Title", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTitle);
                this.columnInitials = new DataColumn("Initials", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnInitials);
                this.columnGivenName = new DataColumn("GivenName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGivenName);
                this.columnFamilyName = new DataColumn("FamilyName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFamilyName);
                this.columnContactDeviceType = new DataColumn("ContactDeviceType", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContactDeviceType);
                this.columnContactDeviceAddress = new DataColumn("ContactDeviceAddress", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContactDeviceAddress);
            }
            
            public GAUserPersonnelViewRow NewGAUserPersonnelViewRow() {
                return ((GAUserPersonnelViewRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAUserPersonnelViewRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAUserPersonnelViewRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAUserPersonnelViewRowChanged != null)) {
                    this.GAUserPersonnelViewRowChanged(this, new GAUserPersonnelViewRowChangeEvent(((GAUserPersonnelViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAUserPersonnelViewRowChanging != null)) {
                    this.GAUserPersonnelViewRowChanging(this, new GAUserPersonnelViewRowChangeEvent(((GAUserPersonnelViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAUserPersonnelViewRowDeleted != null)) {
                    this.GAUserPersonnelViewRowDeleted(this, new GAUserPersonnelViewRowChangeEvent(((GAUserPersonnelViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAUserPersonnelViewRowDeleting != null)) {
                    this.GAUserPersonnelViewRowDeleting(this, new GAUserPersonnelViewRowChangeEvent(((GAUserPersonnelViewRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAUserPersonnelViewRow(GAUserPersonnelViewRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAUserPersonnelViewRow : DataRow {
            
            private GAUserPersonnelViewDataTable tableGAUserPersonnelView;
            
            internal GAUserPersonnelViewRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAUserPersonnelView = ((GAUserPersonnelViewDataTable)(this.Table));
            }
            
            public int UserRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAUserPersonnelView.UserRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAUserPersonnelView.UserRowIdColumn] = value;
                }
            }
            
            public int PersonnelRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAUserPersonnelView.PersonnelRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAUserPersonnelView.PersonnelRowIdColumn] = value;
                }
            }
            
            public string DNNUserId {
                get {
                    try {
                        return ((string)(this[this.tableGAUserPersonnelView.DNNUserIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAUserPersonnelView.DNNUserIdColumn] = value;
                }
            }
            
            public string ContextClass {
                get {
                    try {
                        return ((string)(this[this.tableGAUserPersonnelView.ContextClassColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAUserPersonnelView.ContextClassColumn] = value;
                }
            }
            
            public int ContextRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAUserPersonnelView.ContextRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAUserPersonnelView.ContextRowIdColumn] = value;
                }
            }
            
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableGAUserPersonnelView.TitleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAUserPersonnelView.TitleColumn] = value;
                }
            }
            
            public string Initials {
                get {
                    try {
                        return ((string)(this[this.tableGAUserPersonnelView.InitialsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAUserPersonnelView.InitialsColumn] = value;
                }
            }
            
            public string GivenName {
                get {
                    try {
                        return ((string)(this[this.tableGAUserPersonnelView.GivenNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAUserPersonnelView.GivenNameColumn] = value;
                }
            }
            
            public string FamilyName {
                get {
                    try {
                        return ((string)(this[this.tableGAUserPersonnelView.FamilyNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAUserPersonnelView.FamilyNameColumn] = value;
                }
            }
            
            public string ContactDeviceType {
                get {
                    try {
                        return ((string)(this[this.tableGAUserPersonnelView.ContactDeviceTypeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAUserPersonnelView.ContactDeviceTypeColumn] = value;
                }
            }
            
            public string ContactDeviceAddress {
                get {
                    try {
                        return ((string)(this[this.tableGAUserPersonnelView.ContactDeviceAddressColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAUserPersonnelView.ContactDeviceAddressColumn] = value;
                }
            }
            
            public bool IsUserRowIdNull() {
                return this.IsNull(this.tableGAUserPersonnelView.UserRowIdColumn);
            }
            
            public void SetUserRowIdNull() {
                this[this.tableGAUserPersonnelView.UserRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsPersonnelRowIdNull() {
                return this.IsNull(this.tableGAUserPersonnelView.PersonnelRowIdColumn);
            }
            
            public void SetPersonnelRowIdNull() {
                this[this.tableGAUserPersonnelView.PersonnelRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDNNUserIdNull() {
                return this.IsNull(this.tableGAUserPersonnelView.DNNUserIdColumn);
            }
            
            public void SetDNNUserIdNull() {
                this[this.tableGAUserPersonnelView.DNNUserIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsContextClassNull() {
                return this.IsNull(this.tableGAUserPersonnelView.ContextClassColumn);
            }
            
            public void SetContextClassNull() {
                this[this.tableGAUserPersonnelView.ContextClassColumn] = System.Convert.DBNull;
            }
            
            public bool IsContextRowIdNull() {
                return this.IsNull(this.tableGAUserPersonnelView.ContextRowIdColumn);
            }
            
            public void SetContextRowIdNull() {
                this[this.tableGAUserPersonnelView.ContextRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTitleNull() {
                return this.IsNull(this.tableGAUserPersonnelView.TitleColumn);
            }
            
            public void SetTitleNull() {
                this[this.tableGAUserPersonnelView.TitleColumn] = System.Convert.DBNull;
            }
            
            public bool IsInitialsNull() {
                return this.IsNull(this.tableGAUserPersonnelView.InitialsColumn);
            }
            
            public void SetInitialsNull() {
                this[this.tableGAUserPersonnelView.InitialsColumn] = System.Convert.DBNull;
            }
            
            public bool IsGivenNameNull() {
                return this.IsNull(this.tableGAUserPersonnelView.GivenNameColumn);
            }
            
            public void SetGivenNameNull() {
                this[this.tableGAUserPersonnelView.GivenNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsFamilyNameNull() {
                return this.IsNull(this.tableGAUserPersonnelView.FamilyNameColumn);
            }
            
            public void SetFamilyNameNull() {
                this[this.tableGAUserPersonnelView.FamilyNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsContactDeviceTypeNull() {
                return this.IsNull(this.tableGAUserPersonnelView.ContactDeviceTypeColumn);
            }
            
            public void SetContactDeviceTypeNull() {
                this[this.tableGAUserPersonnelView.ContactDeviceTypeColumn] = System.Convert.DBNull;
            }
            
            public bool IsContactDeviceAddressNull() {
                return this.IsNull(this.tableGAUserPersonnelView.ContactDeviceAddressColumn);
            }
            
            public void SetContactDeviceAddressNull() {
                this[this.tableGAUserPersonnelView.ContactDeviceAddressColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAUserPersonnelViewRowChangeEvent : EventArgs {
            
            private GAUserPersonnelViewRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAUserPersonnelViewRowChangeEvent(GAUserPersonnelViewRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAUserPersonnelViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
