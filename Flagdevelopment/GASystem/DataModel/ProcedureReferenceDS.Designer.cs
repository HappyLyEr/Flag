//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("ProcedureReferenceDS")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ProcedureReferenceDS : System.Data.DataSet {
        
        private GAProcedureReferenceDataTable tableGAProcedureReference;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcedureReferenceDS() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ProcedureReferenceDS(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["GAProcedureReference"] != null)) {
                    base.Tables.Add(new GAProcedureReferenceDataTable(ds.Tables["GAProcedureReference"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAProcedureReferenceDataTable GAProcedureReference {
            get {
                return this.tableGAProcedureReference;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            ProcedureReferenceDS cln = ((ProcedureReferenceDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GAProcedureReference"] != null)) {
                    base.Tables.Add(new GAProcedureReferenceDataTable(ds.Tables["GAProcedureReference"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGAProcedureReference = ((GAProcedureReferenceDataTable)(base.Tables["GAProcedureReference"]));
            if ((initTable == true)) {
                if ((this.tableGAProcedureReference != null)) {
                    this.tableGAProcedureReference.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ProcedureReferenceDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ProcedureReferenceDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGAProcedureReference = new GAProcedureReferenceDataTable();
            base.Tables.Add(this.tableGAProcedureReference);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGAProcedureReference() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            ProcedureReferenceDS ds = new ProcedureReferenceDS();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void GAProcedureReferenceRowChangeEventHandler(object sender, GAProcedureReferenceRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GAProcedureReferenceDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnProcedureReferenceRowId;
            
            private System.Data.DataColumn columnProcedureReferenceReferenceId;
            
            private System.Data.DataColumn columnDate;
            
            private System.Data.DataColumn columnDateNextAssessment;
            
            private System.Data.DataColumn columnPreMitigationRiskRatingRowId;
            
            private System.Data.DataColumn columnPostMitigationRiskRatingRowId;
            
            private System.Data.DataColumn columnApprovedById;
            
            private System.Data.DataColumn columnDateApproved;
            
            private System.Data.DataColumn columnResponsibleId;
            
            private System.Data.DataColumn columnResponsibleRoleListsRowId;
            
            private System.Data.DataColumn columnAssessedById;
            
            private System.Data.DataColumn columnDateAssessed;
            
            private System.Data.DataColumn columnControl;
            
            private System.Data.DataColumn columnrowguid;
            
            private System.Data.DataColumn columnMasterRowId;
            
            private System.Data.DataColumn columnDateCreated;
            
            private System.Data.DataColumn columnCreatedBy;
            
            private System.Data.DataColumn columnDateChanged;
            
            private System.Data.DataColumn columnChangedBy;
            
            private System.Data.DataColumn columnDateDeleted;
            
            private System.Data.DataColumn columnDeletedBy;
            
            private System.Data.DataColumn columnSwitchFree1;
            
            private System.Data.DataColumn columnSwitchFree2;
            
            private System.Data.DataColumn columnSwitchFree3;
            
            private System.Data.DataColumn columnDateTimeFree1;
            
            private System.Data.DataColumn columnDateTimeFree2;
            
            private System.Data.DataColumn columnDateTimeFree3;
            
            private System.Data.DataColumn columnTextFree1;
            
            private System.Data.DataColumn columnTextFree2;
            
            private System.Data.DataColumn columnTextFree3;
            
            private System.Data.DataColumn columnIntFree1;
            
            private System.Data.DataColumn columnIntFree2;
            
            private System.Data.DataColumn columnIntFree3;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAProcedureReferenceDataTable() {
                this.TableName = "GAProcedureReference";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAProcedureReferenceDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GAProcedureReferenceDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProcedureReferenceRowIdColumn {
                get {
                    return this.columnProcedureReferenceRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProcedureReferenceReferenceIdColumn {
                get {
                    return this.columnProcedureReferenceReferenceId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateNextAssessmentColumn {
                get {
                    return this.columnDateNextAssessment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PreMitigationRiskRatingRowIdColumn {
                get {
                    return this.columnPreMitigationRiskRatingRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PostMitigationRiskRatingRowIdColumn {
                get {
                    return this.columnPostMitigationRiskRatingRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApprovedByIdColumn {
                get {
                    return this.columnApprovedById;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateApprovedColumn {
                get {
                    return this.columnDateApproved;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ResponsibleIdColumn {
                get {
                    return this.columnResponsibleId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ResponsibleRoleListsRowIdColumn {
                get {
                    return this.columnResponsibleRoleListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AssessedByIdColumn {
                get {
                    return this.columnAssessedById;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateAssessedColumn {
                get {
                    return this.columnDateAssessed;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ControlColumn {
                get {
                    return this.columnControl;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAProcedureReferenceRow this[int index] {
                get {
                    return ((GAProcedureReferenceRow)(this.Rows[index]));
                }
            }
            
            public event GAProcedureReferenceRowChangeEventHandler GAProcedureReferenceRowChanging;
            
            public event GAProcedureReferenceRowChangeEventHandler GAProcedureReferenceRowChanged;
            
            public event GAProcedureReferenceRowChangeEventHandler GAProcedureReferenceRowDeleting;
            
            public event GAProcedureReferenceRowChangeEventHandler GAProcedureReferenceRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGAProcedureReferenceRow(GAProcedureReferenceRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAProcedureReferenceRow AddGAProcedureReferenceRow(
                        string ProcedureReferenceReferenceId, 
                        System.DateTime Date, 
                        System.DateTime DateNextAssessment, 
                        int PreMitigationRiskRatingRowId, 
                        int PostMitigationRiskRatingRowId, 
                        int ApprovedById, 
                        System.DateTime DateApproved, 
                        int ResponsibleId, 
                        int ResponsibleRoleListsRowId, 
                        int AssessedById, 
                        System.DateTime DateAssessed, 
                        string Control, 
                        System.Guid rowguid, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAProcedureReferenceRow rowGAProcedureReferenceRow = ((GAProcedureReferenceRow)(this.NewRow()));
                rowGAProcedureReferenceRow.ItemArray = new object[] {
                        null,
                        ProcedureReferenceReferenceId,
                        Date,
                        DateNextAssessment,
                        PreMitigationRiskRatingRowId,
                        PostMitigationRiskRatingRowId,
                        ApprovedById,
                        DateApproved,
                        ResponsibleId,
                        ResponsibleRoleListsRowId,
                        AssessedById,
                        DateAssessed,
                        Control,
                        rowguid,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAProcedureReferenceRow);
                return rowGAProcedureReferenceRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAProcedureReferenceRow FindByProcedureReferenceRowId(int ProcedureReferenceRowId) {
                return ((GAProcedureReferenceRow)(this.Rows.Find(new object[] {
                            ProcedureReferenceRowId})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                GAProcedureReferenceDataTable cln = ((GAProcedureReferenceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new GAProcedureReferenceDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProcedureReferenceRowId = base.Columns["ProcedureReferenceRowId"];
                this.columnProcedureReferenceReferenceId = base.Columns["ProcedureReferenceReferenceId"];
                this.columnDate = base.Columns["Date"];
                this.columnDateNextAssessment = base.Columns["DateNextAssessment"];
                this.columnPreMitigationRiskRatingRowId = base.Columns["PreMitigationRiskRatingRowId"];
                this.columnPostMitigationRiskRatingRowId = base.Columns["PostMitigationRiskRatingRowId"];
                this.columnApprovedById = base.Columns["ApprovedById"];
                this.columnDateApproved = base.Columns["DateApproved"];
                this.columnResponsibleId = base.Columns["ResponsibleId"];
                this.columnResponsibleRoleListsRowId = base.Columns["ResponsibleRoleListsRowId"];
                this.columnAssessedById = base.Columns["AssessedById"];
                this.columnDateAssessed = base.Columns["DateAssessed"];
                this.columnControl = base.Columns["Control"];
                this.columnrowguid = base.Columns["rowguid"];
                this.columnMasterRowId = base.Columns["MasterRowId"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnDateChanged = base.Columns["DateChanged"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnDateDeleted = base.Columns["DateDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnSwitchFree1 = base.Columns["SwitchFree1"];
                this.columnSwitchFree2 = base.Columns["SwitchFree2"];
                this.columnSwitchFree3 = base.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = base.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = base.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = base.Columns["DateTimeFree3"];
                this.columnTextFree1 = base.Columns["TextFree1"];
                this.columnTextFree2 = base.Columns["TextFree2"];
                this.columnTextFree3 = base.Columns["TextFree3"];
                this.columnIntFree1 = base.Columns["IntFree1"];
                this.columnIntFree2 = base.Columns["IntFree2"];
                this.columnIntFree3 = base.Columns["IntFree3"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProcedureReferenceRowId = new System.Data.DataColumn("ProcedureReferenceRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcedureReferenceRowId);
                this.columnProcedureReferenceReferenceId = new System.Data.DataColumn("ProcedureReferenceReferenceId", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcedureReferenceReferenceId);
                this.columnDate = new System.Data.DataColumn("Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnDateNextAssessment = new System.Data.DataColumn("DateNextAssessment", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateNextAssessment);
                this.columnPreMitigationRiskRatingRowId = new System.Data.DataColumn("PreMitigationRiskRatingRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreMitigationRiskRatingRowId);
                this.columnPostMitigationRiskRatingRowId = new System.Data.DataColumn("PostMitigationRiskRatingRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostMitigationRiskRatingRowId);
                this.columnApprovedById = new System.Data.DataColumn("ApprovedById", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedById);
                this.columnDateApproved = new System.Data.DataColumn("DateApproved", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateApproved);
                this.columnResponsibleId = new System.Data.DataColumn("ResponsibleId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponsibleId);
                this.columnResponsibleRoleListsRowId = new System.Data.DataColumn("ResponsibleRoleListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponsibleRoleListsRowId);
                this.columnAssessedById = new System.Data.DataColumn("AssessedById", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessedById);
                this.columnDateAssessed = new System.Data.DataColumn("DateAssessed", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateAssessed);
                this.columnControl = new System.Data.DataColumn("Control", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnControl);
                this.columnrowguid = new System.Data.DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowguid);
                this.columnMasterRowId = new System.Data.DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new System.Data.DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new System.Data.DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new System.Data.DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new System.Data.DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new System.Data.DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new System.Data.DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new System.Data.DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new System.Data.DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new System.Data.DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new System.Data.DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new System.Data.DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new System.Data.DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new System.Data.DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new System.Data.DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new System.Data.DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new System.Data.DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new System.Data.DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new System.Data.DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnProcedureReferenceRowId}, true));
                this.columnProcedureReferenceRowId.AutoIncrement = true;
                this.columnProcedureReferenceRowId.AllowDBNull = false;
                this.columnProcedureReferenceRowId.ReadOnly = true;
                this.columnProcedureReferenceRowId.Unique = true;
                this.columnProcedureReferenceReferenceId.MaxLength = 50;
                this.columnControl.MaxLength = 400;
                this.columnTextFree1.MaxLength = 200;
                this.columnTextFree2.MaxLength = 200;
                this.columnTextFree3.MaxLength = 200;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAProcedureReferenceRow NewGAProcedureReferenceRow() {
                return ((GAProcedureReferenceRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new GAProcedureReferenceRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(GAProcedureReferenceRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAProcedureReferenceRowChanged != null)) {
                    this.GAProcedureReferenceRowChanged(this, new GAProcedureReferenceRowChangeEvent(((GAProcedureReferenceRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAProcedureReferenceRowChanging != null)) {
                    this.GAProcedureReferenceRowChanging(this, new GAProcedureReferenceRowChangeEvent(((GAProcedureReferenceRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAProcedureReferenceRowDeleted != null)) {
                    this.GAProcedureReferenceRowDeleted(this, new GAProcedureReferenceRowChangeEvent(((GAProcedureReferenceRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAProcedureReferenceRowDeleting != null)) {
                    this.GAProcedureReferenceRowDeleting(this, new GAProcedureReferenceRowChangeEvent(((GAProcedureReferenceRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGAProcedureReferenceRow(GAProcedureReferenceRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ProcedureReferenceDS ds = new ProcedureReferenceDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GAProcedureReferenceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GAProcedureReferenceRow : System.Data.DataRow {
            
            private GAProcedureReferenceDataTable tableGAProcedureReference;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAProcedureReferenceRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAProcedureReference = ((GAProcedureReferenceDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProcedureReferenceRowId {
                get {
                    return ((int)(this[this.tableGAProcedureReference.ProcedureReferenceRowIdColumn]));
                }
                set {
                    this[this.tableGAProcedureReference.ProcedureReferenceRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProcedureReferenceReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGAProcedureReference.ProcedureReferenceReferenceIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ProcedureReferenceReferenceId\' in table \'GAProcedureReferen" +
                                "ce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.ProcedureReferenceReferenceIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Date\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateNextAssessment {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateNextAssessmentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateNextAssessment\' in table \'GAProcedureReference\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateNextAssessmentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PreMitigationRiskRatingRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.PreMitigationRiskRatingRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PreMitigationRiskRatingRowId\' in table \'GAProcedureReferenc" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.PreMitigationRiskRatingRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PostMitigationRiskRatingRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.PostMitigationRiskRatingRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PostMitigationRiskRatingRowId\' in table \'GAProcedureReferen" +
                                "ce\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.PostMitigationRiskRatingRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApprovedById {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.ApprovedByIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ApprovedById\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.ApprovedByIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateApproved {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateApprovedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateApproved\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateApprovedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ResponsibleId {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.ResponsibleIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ResponsibleId\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.ResponsibleIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ResponsibleRoleListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.ResponsibleRoleListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ResponsibleRoleListsRowId\' in table \'GAProcedureReference\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.ResponsibleRoleListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssessedById {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.AssessedByIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AssessedById\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.AssessedByIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateAssessed {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateAssessedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateAssessed\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateAssessedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Control {
                get {
                    try {
                        return ((string)(this[this.tableGAProcedureReference.ControlColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Control\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.ControlColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid rowguid {
                get {
                    try {
                        return ((System.Guid)(this[this.tableGAProcedureReference.rowguidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rowguid\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.rowguidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.MasterRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MasterRowId\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.MasterRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateCreatedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateCreated\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateCreatedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.CreatedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.CreatedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateChangedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateChanged\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateChangedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.ChangedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.ChangedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateDeletedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateDeleted\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateDeletedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.DeletedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DeletedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAProcedureReference.SwitchFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree1\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.SwitchFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAProcedureReference.SwitchFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree2\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.SwitchFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAProcedureReference.SwitchFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree3\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.SwitchFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateTimeFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree1\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateTimeFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateTimeFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree2\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateTimeFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateTimeFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree3\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateTimeFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAProcedureReference.TextFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree1\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.TextFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAProcedureReference.TextFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree2\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.TextFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAProcedureReference.TextFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree3\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.TextFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.IntFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree1\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.IntFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.IntFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree2\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.IntFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.IntFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree3\' in table \'GAProcedureReference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.IntFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProcedureReferenceReferenceIdNull() {
                return this.IsNull(this.tableGAProcedureReference.ProcedureReferenceReferenceIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProcedureReferenceReferenceIdNull() {
                this[this.tableGAProcedureReference.ProcedureReferenceReferenceIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableGAProcedureReference.DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableGAProcedureReference.DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNextAssessmentNull() {
                return this.IsNull(this.tableGAProcedureReference.DateNextAssessmentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNextAssessmentNull() {
                this[this.tableGAProcedureReference.DateNextAssessmentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreMitigationRiskRatingRowIdNull() {
                return this.IsNull(this.tableGAProcedureReference.PreMitigationRiskRatingRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreMitigationRiskRatingRowIdNull() {
                this[this.tableGAProcedureReference.PreMitigationRiskRatingRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostMitigationRiskRatingRowIdNull() {
                return this.IsNull(this.tableGAProcedureReference.PostMitigationRiskRatingRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostMitigationRiskRatingRowIdNull() {
                this[this.tableGAProcedureReference.PostMitigationRiskRatingRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovedByIdNull() {
                return this.IsNull(this.tableGAProcedureReference.ApprovedByIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovedByIdNull() {
                this[this.tableGAProcedureReference.ApprovedByIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateApprovedNull() {
                return this.IsNull(this.tableGAProcedureReference.DateApprovedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateApprovedNull() {
                this[this.tableGAProcedureReference.DateApprovedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResponsibleIdNull() {
                return this.IsNull(this.tableGAProcedureReference.ResponsibleIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResponsibleIdNull() {
                this[this.tableGAProcedureReference.ResponsibleIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResponsibleRoleListsRowIdNull() {
                return this.IsNull(this.tableGAProcedureReference.ResponsibleRoleListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResponsibleRoleListsRowIdNull() {
                this[this.tableGAProcedureReference.ResponsibleRoleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessedByIdNull() {
                return this.IsNull(this.tableGAProcedureReference.AssessedByIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessedByIdNull() {
                this[this.tableGAProcedureReference.AssessedByIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateAssessedNull() {
                return this.IsNull(this.tableGAProcedureReference.DateAssessedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateAssessedNull() {
                this[this.tableGAProcedureReference.DateAssessedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsControlNull() {
                return this.IsNull(this.tableGAProcedureReference.ControlColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetControlNull() {
                this[this.tableGAProcedureReference.ControlColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGAProcedureReference.rowguidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrowguidNull() {
                this[this.tableGAProcedureReference.rowguidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAProcedureReference.MasterRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterRowIdNull() {
                this[this.tableGAProcedureReference.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAProcedureReference.DateCreatedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateCreatedNull() {
                this[this.tableGAProcedureReference.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAProcedureReference.CreatedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableGAProcedureReference.CreatedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAProcedureReference.DateChangedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangedNull() {
                this[this.tableGAProcedureReference.DateChangedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAProcedureReference.ChangedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableGAProcedureReference.ChangedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAProcedureReference.DateDeletedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateDeletedNull() {
                this[this.tableGAProcedureReference.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAProcedureReference.DeletedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableGAProcedureReference.DeletedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAProcedureReference.SwitchFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree1Null() {
                this[this.tableGAProcedureReference.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAProcedureReference.SwitchFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree2Null() {
                this[this.tableGAProcedureReference.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAProcedureReference.SwitchFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree3Null() {
                this[this.tableGAProcedureReference.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAProcedureReference.DateTimeFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree1Null() {
                this[this.tableGAProcedureReference.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAProcedureReference.DateTimeFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree2Null() {
                this[this.tableGAProcedureReference.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAProcedureReference.DateTimeFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree3Null() {
                this[this.tableGAProcedureReference.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAProcedureReference.TextFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree1Null() {
                this[this.tableGAProcedureReference.TextFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAProcedureReference.TextFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree2Null() {
                this[this.tableGAProcedureReference.TextFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAProcedureReference.TextFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree3Null() {
                this[this.tableGAProcedureReference.TextFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAProcedureReference.IntFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree1Null() {
                this[this.tableGAProcedureReference.IntFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAProcedureReference.IntFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree2Null() {
                this[this.tableGAProcedureReference.IntFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAProcedureReference.IntFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree3Null() {
                this[this.tableGAProcedureReference.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GAProcedureReferenceRowChangeEvent : System.EventArgs {
            
            private GAProcedureReferenceRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAProcedureReferenceRowChangeEvent(GAProcedureReferenceRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAProcedureReferenceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GASystem.DataModel.ProcedureReferenceDSTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GAProcedureReferenceTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GAProcedureReferenceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GAProcedureReference";
            tableMapping.ColumnMappings.Add("ProcedureReferenceRowId", "ProcedureReferenceRowId");
            tableMapping.ColumnMappings.Add("ProcedureReferenceReferenceId", "ProcedureReferenceReferenceId");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("DateNextAssessment", "DateNextAssessment");
            tableMapping.ColumnMappings.Add("PreMitigationRiskRatingRowId", "PreMitigationRiskRatingRowId");
            tableMapping.ColumnMappings.Add("PostMitigationRiskRatingRowId", "PostMitigationRiskRatingRowId");
            tableMapping.ColumnMappings.Add("ApprovedById", "ApprovedById");
            tableMapping.ColumnMappings.Add("DateApproved", "DateApproved");
            tableMapping.ColumnMappings.Add("ResponsibleId", "ResponsibleId");
            tableMapping.ColumnMappings.Add("ResponsibleRoleListsRowId", "ResponsibleRoleListsRowId");
            tableMapping.ColumnMappings.Add("AssessedById", "AssessedById");
            tableMapping.ColumnMappings.Add("DateAssessed", "DateAssessed");
            tableMapping.ColumnMappings.Add("Control", "Control");
            tableMapping.ColumnMappings.Add("rowguid", "rowguid");
            tableMapping.ColumnMappings.Add("MasterRowId", "MasterRowId");
            tableMapping.ColumnMappings.Add("DateCreated", "DateCreated");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("DateChanged", "DateChanged");
            tableMapping.ColumnMappings.Add("ChangedBy", "ChangedBy");
            tableMapping.ColumnMappings.Add("DateDeleted", "DateDeleted");
            tableMapping.ColumnMappings.Add("DeletedBy", "DeletedBy");
            tableMapping.ColumnMappings.Add("SwitchFree1", "SwitchFree1");
            tableMapping.ColumnMappings.Add("SwitchFree2", "SwitchFree2");
            tableMapping.ColumnMappings.Add("SwitchFree3", "SwitchFree3");
            tableMapping.ColumnMappings.Add("DateTimeFree1", "DateTimeFree1");
            tableMapping.ColumnMappings.Add("DateTimeFree2", "DateTimeFree2");
            tableMapping.ColumnMappings.Add("DateTimeFree3", "DateTimeFree3");
            tableMapping.ColumnMappings.Add("TextFree1", "TextFree1");
            tableMapping.ColumnMappings.Add("TextFree2", "TextFree2");
            tableMapping.ColumnMappings.Add("TextFree3", "TextFree3");
            tableMapping.ColumnMappings.Add("IntFree1", "IntFree1");
            tableMapping.ColumnMappings.Add("IntFree2", "IntFree2");
            tableMapping.ColumnMappings.Add("IntFree3", "IntFree3");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[GAProcedureReference] WHERE (([ProcedureReferenceRowId] = @Ori" +
                "ginal_ProcedureReferenceRowId) AND ((@IsNull_ProcedureReferenceReferenceId = 1 A" +
                "ND [ProcedureReferenceReferenceId] IS NULL) OR ([ProcedureReferenceReferenceId] " +
                "= @Original_ProcedureReferenceReferenceId)) AND ((@IsNull_Date = 1 AND [Date] IS" +
                " NULL) OR ([Date] = @Original_Date)) AND ((@IsNull_DateNextAssessment = 1 AND [D" +
                "ateNextAssessment] IS NULL) OR ([DateNextAssessment] = @Original_DateNextAssessm" +
                "ent)) AND ((@IsNull_PreMitigationRiskRatingRowId = 1 AND [PreMitigationRiskRatin" +
                "gRowId] IS NULL) OR ([PreMitigationRiskRatingRowId] = @Original_PreMitigationRis" +
                "kRatingRowId)) AND ((@IsNull_PostMitigationRiskRatingRowId = 1 AND [PostMitigati" +
                "onRiskRatingRowId] IS NULL) OR ([PostMitigationRiskRatingRowId] = @Original_Post" +
                "MitigationRiskRatingRowId)) AND ((@IsNull_ApprovedById = 1 AND [ApprovedById] IS" +
                " NULL) OR ([ApprovedById] = @Original_ApprovedById)) AND ((@IsNull_DateApproved " +
                "= 1 AND [DateApproved] IS NULL) OR ([DateApproved] = @Original_DateApproved)) AN" +
                "D ((@IsNull_ResponsibleId = 1 AND [ResponsibleId] IS NULL) OR ([ResponsibleId] =" +
                " @Original_ResponsibleId)) AND ((@IsNull_ResponsibleRoleListsRowId = 1 AND [Resp" +
                "onsibleRoleListsRowId] IS NULL) OR ([ResponsibleRoleListsRowId] = @Original_Resp" +
                "onsibleRoleListsRowId)) AND ((@IsNull_AssessedById = 1 AND [AssessedById] IS NUL" +
                "L) OR ([AssessedById] = @Original_AssessedById)) AND ((@IsNull_DateAssessed = 1 " +
                "AND [DateAssessed] IS NULL) OR ([DateAssessed] = @Original_DateAssessed)) AND ((" +
                "@IsNull_Control = 1 AND [Control] IS NULL) OR ([Control] = @Original_Control)) A" +
                "ND ([rowguid] = @Original_rowguid) AND ((@IsNull_MasterRowId = 1 AND [MasterRowI" +
                "d] IS NULL) OR ([MasterRowId] = @Original_MasterRowId)) AND ((@IsNull_DateCreate" +
                "d = 1 AND [DateCreated] IS NULL) OR ([DateCreated] = @Original_DateCreated)) AND" +
                " ((@IsNull_CreatedBy = 1 AND [CreatedBy] IS NULL) OR ([CreatedBy] = @Original_Cr" +
                "eatedBy)) AND ((@IsNull_DateChanged = 1 AND [DateChanged] IS NULL) OR ([DateChan" +
                "ged] = @Original_DateChanged)) AND ((@IsNull_ChangedBy = 1 AND [ChangedBy] IS NU" +
                "LL) OR ([ChangedBy] = @Original_ChangedBy)) AND ((@IsNull_DateDeleted = 1 AND [D" +
                "ateDeleted] IS NULL) OR ([DateDeleted] = @Original_DateDeleted)) AND ((@IsNull_D" +
                "eletedBy = 1 AND [DeletedBy] IS NULL) OR ([DeletedBy] = @Original_DeletedBy)) AN" +
                "D ((@IsNull_SwitchFree1 = 1 AND [SwitchFree1] IS NULL) OR ([SwitchFree1] = @Orig" +
                "inal_SwitchFree1)) AND ((@IsNull_SwitchFree2 = 1 AND [SwitchFree2] IS NULL) OR (" +
                "[SwitchFree2] = @Original_SwitchFree2)) AND ((@IsNull_SwitchFree3 = 1 AND [Switc" +
                "hFree3] IS NULL) OR ([SwitchFree3] = @Original_SwitchFree3)) AND ((@IsNull_DateT" +
                "imeFree1 = 1 AND [DateTimeFree1] IS NULL) OR ([DateTimeFree1] = @Original_DateTi" +
                "meFree1)) AND ((@IsNull_DateTimeFree2 = 1 AND [DateTimeFree2] IS NULL) OR ([Date" +
                "TimeFree2] = @Original_DateTimeFree2)) AND ((@IsNull_DateTimeFree3 = 1 AND [Date" +
                "TimeFree3] IS NULL) OR ([DateTimeFree3] = @Original_DateTimeFree3)) AND ((@IsNul" +
                "l_TextFree1 = 1 AND [TextFree1] IS NULL) OR ([TextFree1] = @Original_TextFree1))" +
                " AND ((@IsNull_TextFree2 = 1 AND [TextFree2] IS NULL) OR ([TextFree2] = @Origina" +
                "l_TextFree2)) AND ((@IsNull_TextFree3 = 1 AND [TextFree3] IS NULL) OR ([TextFree" +
                "3] = @Original_TextFree3)) AND ((@IsNull_IntFree1 = 1 AND [IntFree1] IS NULL) OR" +
                " ([IntFree1] = @Original_IntFree1)) AND ((@IsNull_IntFree2 = 1 AND [IntFree2] IS" +
                " NULL) OR ([IntFree2] = @Original_IntFree2)) AND ((@IsNull_IntFree3 = 1 AND [Int" +
                "Free3] IS NULL) OR ([IntFree3] = @Original_IntFree3)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ProcedureReferenceRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProcedureReferenceRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ProcedureReferenceReferenceId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProcedureReferenceReferenceId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ProcedureReferenceReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ProcedureReferenceReferenceId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateNextAssessment", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateNextAssessment", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateNextAssessment", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateNextAssessment", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PreMitigationRiskRatingRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PreMitigationRiskRatingRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PreMitigationRiskRatingRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PreMitigationRiskRatingRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PostMitigationRiskRatingRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PostMitigationRiskRatingRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PostMitigationRiskRatingRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PostMitigationRiskRatingRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateApproved", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateApproved", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateApproved", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateApproved", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ResponsibleId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ResponsibleId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_AssessedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "AssessedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AssessedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "AssessedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateAssessed", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateAssessed", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateAssessed", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateAssessed", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Control", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Control", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Control", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Control", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateCreated", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChanged", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateDeleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[GAProcedureReference] ([ProcedureReferenceReferenceId], [Date]" +
                ", [DateNextAssessment], [PreMitigationRiskRatingRowId], [PostMitigationRiskRatin" +
                "gRowId], [ApprovedById], [DateApproved], [ResponsibleId], [ResponsibleRoleListsR" +
                "owId], [AssessedById], [DateAssessed], [Control], [rowguid], [MasterRowId], [Dat" +
                "eCreated], [CreatedBy], [DateChanged], [ChangedBy], [DateDeleted], [DeletedBy], " +
                "[SwitchFree1], [SwitchFree2], [SwitchFree3], [DateTimeFree1], [DateTimeFree2], [" +
                "DateTimeFree3], [TextFree1], [TextFree2], [TextFree3], [IntFree1], [IntFree2], [" +
                "IntFree3]) VALUES (@ProcedureReferenceReferenceId, @Date, @DateNextAssessment, @" +
                "PreMitigationRiskRatingRowId, @PostMitigationRiskRatingRowId, @ApprovedById, @Da" +
                "teApproved, @ResponsibleId, @ResponsibleRoleListsRowId, @AssessedById, @DateAsse" +
                "ssed, @Control, @rowguid, @MasterRowId, @DateCreated, @CreatedBy, @DateChanged, " +
                "@ChangedBy, @DateDeleted, @DeletedBy, @SwitchFree1, @SwitchFree2, @SwitchFree3, " +
                "@DateTimeFree1, @DateTimeFree2, @DateTimeFree3, @TextFree1, @TextFree2, @TextFre" +
                "e3, @IntFree1, @IntFree2, @IntFree3);\r\nSELECT ProcedureReferenceRowId, Procedure" +
                "ReferenceReferenceId, Date, DateNextAssessment, PreMitigationRiskRatingRowId, Po" +
                "stMitigationRiskRatingRowId, ApprovedById, DateApproved, ResponsibleId, Responsi" +
                "bleRoleListsRowId, AssessedById, DateAssessed, Control, rowguid, MasterRowId, Da" +
                "teCreated, CreatedBy, DateChanged, ChangedBy, DateDeleted, DeletedBy, SwitchFree" +
                "1, SwitchFree2, SwitchFree3, DateTimeFree1, DateTimeFree2, DateTimeFree3, TextFr" +
                "ee1, TextFree2, TextFree3, IntFree1, IntFree2, IntFree3 FROM GAProcedureReferenc" +
                "e WHERE (ProcedureReferenceRowId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ProcedureReferenceReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ProcedureReferenceReferenceId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateNextAssessment", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateNextAssessment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PreMitigationRiskRatingRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PreMitigationRiskRatingRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PostMitigationRiskRatingRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PostMitigationRiskRatingRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateApproved", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateApproved", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ResponsibleId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AssessedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "AssessedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateAssessed", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateAssessed", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Control", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Control", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[GAProcedureReference] SET [ProcedureReferenceReferenceId] = @Proced" +
                "ureReferenceReferenceId, [Date] = @Date, [DateNextAssessment] = @DateNextAssessm" +
                "ent, [PreMitigationRiskRatingRowId] = @PreMitigationRiskRatingRowId, [PostMitiga" +
                "tionRiskRatingRowId] = @PostMitigationRiskRatingRowId, [ApprovedById] = @Approve" +
                "dById, [DateApproved] = @DateApproved, [ResponsibleId] = @ResponsibleId, [Respon" +
                "sibleRoleListsRowId] = @ResponsibleRoleListsRowId, [AssessedById] = @AssessedByI" +
                "d, [DateAssessed] = @DateAssessed, [Control] = @Control, [rowguid] = @rowguid, [" +
                "MasterRowId] = @MasterRowId, [DateCreated] = @DateCreated, [CreatedBy] = @Create" +
                "dBy, [DateChanged] = @DateChanged, [ChangedBy] = @ChangedBy, [DateDeleted] = @Da" +
                "teDeleted, [DeletedBy] = @DeletedBy, [SwitchFree1] = @SwitchFree1, [SwitchFree2]" +
                " = @SwitchFree2, [SwitchFree3] = @SwitchFree3, [DateTimeFree1] = @DateTimeFree1," +
                " [DateTimeFree2] = @DateTimeFree2, [DateTimeFree3] = @DateTimeFree3, [TextFree1]" +
                " = @TextFree1, [TextFree2] = @TextFree2, [TextFree3] = @TextFree3, [IntFree1] = " +
                "@IntFree1, [IntFree2] = @IntFree2, [IntFree3] = @IntFree3 WHERE (([ProcedureRefe" +
                "renceRowId] = @Original_ProcedureReferenceRowId) AND ((@IsNull_ProcedureReferenc" +
                "eReferenceId = 1 AND [ProcedureReferenceReferenceId] IS NULL) OR ([ProcedureRefe" +
                "renceReferenceId] = @Original_ProcedureReferenceReferenceId)) AND ((@IsNull_Date" +
                " = 1 AND [Date] IS NULL) OR ([Date] = @Original_Date)) AND ((@IsNull_DateNextAss" +
                "essment = 1 AND [DateNextAssessment] IS NULL) OR ([DateNextAssessment] = @Origin" +
                "al_DateNextAssessment)) AND ((@IsNull_PreMitigationRiskRatingRowId = 1 AND [PreM" +
                "itigationRiskRatingRowId] IS NULL) OR ([PreMitigationRiskRatingRowId] = @Origina" +
                "l_PreMitigationRiskRatingRowId)) AND ((@IsNull_PostMitigationRiskRatingRowId = 1" +
                " AND [PostMitigationRiskRatingRowId] IS NULL) OR ([PostMitigationRiskRatingRowId" +
                "] = @Original_PostMitigationRiskRatingRowId)) AND ((@IsNull_ApprovedById = 1 AND" +
                " [ApprovedById] IS NULL) OR ([ApprovedById] = @Original_ApprovedById)) AND ((@Is" +
                "Null_DateApproved = 1 AND [DateApproved] IS NULL) OR ([DateApproved] = @Original" +
                "_DateApproved)) AND ((@IsNull_ResponsibleId = 1 AND [ResponsibleId] IS NULL) OR " +
                "([ResponsibleId] = @Original_ResponsibleId)) AND ((@IsNull_ResponsibleRoleListsR" +
                "owId = 1 AND [ResponsibleRoleListsRowId] IS NULL) OR ([ResponsibleRoleListsRowId" +
                "] = @Original_ResponsibleRoleListsRowId)) AND ((@IsNull_AssessedById = 1 AND [As" +
                "sessedById] IS NULL) OR ([AssessedById] = @Original_AssessedById)) AND ((@IsNull" +
                "_DateAssessed = 1 AND [DateAssessed] IS NULL) OR ([DateAssessed] = @Original_Dat" +
                "eAssessed)) AND ((@IsNull_Control = 1 AND [Control] IS NULL) OR ([Control] = @Or" +
                "iginal_Control)) AND ([rowguid] = @Original_rowguid) AND ((@IsNull_MasterRowId =" +
                " 1 AND [MasterRowId] IS NULL) OR ([MasterRowId] = @Original_MasterRowId)) AND ((" +
                "@IsNull_DateCreated = 1 AND [DateCreated] IS NULL) OR ([DateCreated] = @Original" +
                "_DateCreated)) AND ((@IsNull_CreatedBy = 1 AND [CreatedBy] IS NULL) OR ([Created" +
                "By] = @Original_CreatedBy)) AND ((@IsNull_DateChanged = 1 AND [DateChanged] IS N" +
                "ULL) OR ([DateChanged] = @Original_DateChanged)) AND ((@IsNull_ChangedBy = 1 AND" +
                " [ChangedBy] IS NULL) OR ([ChangedBy] = @Original_ChangedBy)) AND ((@IsNull_Date" +
                "Deleted = 1 AND [DateDeleted] IS NULL) OR ([DateDeleted] = @Original_DateDeleted" +
                ")) AND ((@IsNull_DeletedBy = 1 AND [DeletedBy] IS NULL) OR ([DeletedBy] = @Origi" +
                "nal_DeletedBy)) AND ((@IsNull_SwitchFree1 = 1 AND [SwitchFree1] IS NULL) OR ([Sw" +
                "itchFree1] = @Original_SwitchFree1)) AND ((@IsNull_SwitchFree2 = 1 AND [SwitchFr" +
                "ee2] IS NULL) OR ([SwitchFree2] = @Original_SwitchFree2)) AND ((@IsNull_SwitchFr" +
                "ee3 = 1 AND [SwitchFree3] IS NULL) OR ([SwitchFree3] = @Original_SwitchFree3)) A" +
                "ND ((@IsNull_DateTimeFree1 = 1 AND [DateTimeFree1] IS NULL) OR ([DateTimeFree1] " +
                "= @Original_DateTimeFree1)) AND ((@IsNull_DateTimeFree2 = 1 AND [DateTimeFree2] " +
                "IS NULL) OR ([DateTimeFree2] = @Original_DateTimeFree2)) AND ((@IsNull_DateTimeF" +
                "ree3 = 1 AND [DateTimeFree3] IS NULL) OR ([DateTimeFree3] = @Original_DateTimeFr" +
                "ee3)) AND ((@IsNull_TextFree1 = 1 AND [TextFree1] IS NULL) OR ([TextFree1] = @Or" +
                "iginal_TextFree1)) AND ((@IsNull_TextFree2 = 1 AND [TextFree2] IS NULL) OR ([Tex" +
                "tFree2] = @Original_TextFree2)) AND ((@IsNull_TextFree3 = 1 AND [TextFree3] IS N" +
                "ULL) OR ([TextFree3] = @Original_TextFree3)) AND ((@IsNull_IntFree1 = 1 AND [Int" +
                "Free1] IS NULL) OR ([IntFree1] = @Original_IntFree1)) AND ((@IsNull_IntFree2 = 1" +
                " AND [IntFree2] IS NULL) OR ([IntFree2] = @Original_IntFree2)) AND ((@IsNull_Int" +
                "Free3 = 1 AND [IntFree3] IS NULL) OR ([IntFree3] = @Original_IntFree3)));\r\nSELEC" +
                "T ProcedureReferenceRowId, ProcedureReferenceReferenceId, Date, DateNextAssessme" +
                "nt, PreMitigationRiskRatingRowId, PostMitigationRiskRatingRowId, ApprovedById, D" +
                "ateApproved, ResponsibleId, ResponsibleRoleListsRowId, AssessedById, DateAssesse" +
                "d, Control, rowguid, MasterRowId, DateCreated, CreatedBy, DateChanged, ChangedBy" +
                ", DateDeleted, DeletedBy, SwitchFree1, SwitchFree2, SwitchFree3, DateTimeFree1, " +
                "DateTimeFree2, DateTimeFree3, TextFree1, TextFree2, TextFree3, IntFree1, IntFree" +
                "2, IntFree3 FROM GAProcedureReference WHERE (ProcedureReferenceRowId = @Procedur" +
                "eReferenceRowId)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ProcedureReferenceReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ProcedureReferenceReferenceId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateNextAssessment", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateNextAssessment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PreMitigationRiskRatingRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PreMitigationRiskRatingRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PostMitigationRiskRatingRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PostMitigationRiskRatingRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateApproved", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateApproved", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ResponsibleId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AssessedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "AssessedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateAssessed", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateAssessed", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Control", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Control", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ProcedureReferenceRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProcedureReferenceRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ProcedureReferenceReferenceId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProcedureReferenceReferenceId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ProcedureReferenceReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ProcedureReferenceReferenceId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateNextAssessment", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateNextAssessment", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateNextAssessment", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateNextAssessment", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PreMitigationRiskRatingRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PreMitigationRiskRatingRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PreMitigationRiskRatingRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PreMitigationRiskRatingRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PostMitigationRiskRatingRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PostMitigationRiskRatingRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PostMitigationRiskRatingRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PostMitigationRiskRatingRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateApproved", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateApproved", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateApproved", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateApproved", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ResponsibleId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ResponsibleId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_AssessedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "AssessedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AssessedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "AssessedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateAssessed", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateAssessed", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateAssessed", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateAssessed", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Control", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Control", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Control", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Control", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateCreated", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChanged", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateDeleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ProcedureReferenceRowId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ProcedureReferenceRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GASystem.Properties.Settings.Default.flagdata070807ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ProcedureReferenceRowId, ProcedureReferenceReferenceId, Date, DateNextAssessment, PreMitigationRiskRatingRowId, PostMitigationRiskRatingRowId, ApprovedById, DateApproved, ResponsibleId, ResponsibleRoleListsRowId, AssessedById, DateAssessed, Control, rowguid, MasterRowId, DateCreated, CreatedBy, DateChanged, ChangedBy, DateDeleted, DeletedBy, SwitchFree1, SwitchFree2, SwitchFree3, DateTimeFree1, DateTimeFree2, DateTimeFree3, TextFree1, TextFree2, TextFree3, IntFree1, IntFree2, IntFree3 FROM dbo.GAProcedureReference";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ProcedureReferenceDS.GAProcedureReferenceDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ProcedureReferenceDS.GAProcedureReferenceDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ProcedureReferenceDS.GAProcedureReferenceDataTable dataTable = new ProcedureReferenceDS.GAProcedureReferenceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ProcedureReferenceDS.GAProcedureReferenceDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ProcedureReferenceDS dataSet) {
            return this.Adapter.Update(dataSet, "GAProcedureReference");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ProcedureReferenceRowId, 
                    string Original_ProcedureReferenceReferenceId, 
                    System.Nullable<System.DateTime> Original_Date, 
                    System.Nullable<System.DateTime> Original_DateNextAssessment, 
                    System.Nullable<int> Original_PreMitigationRiskRatingRowId, 
                    System.Nullable<int> Original_PostMitigationRiskRatingRowId, 
                    System.Nullable<int> Original_ApprovedById, 
                    System.Nullable<System.DateTime> Original_DateApproved, 
                    System.Nullable<int> Original_ResponsibleId, 
                    System.Nullable<int> Original_ResponsibleRoleListsRowId, 
                    System.Nullable<int> Original_AssessedById, 
                    System.Nullable<System.DateTime> Original_DateAssessed, 
                    string Original_Control, 
                    System.Nullable<System.Guid> Original_rowguid, 
                    System.Nullable<int> Original_MasterRowId, 
                    System.Nullable<System.DateTime> Original_DateCreated, 
                    System.Nullable<int> Original_CreatedBy, 
                    System.Nullable<System.DateTime> Original_DateChanged, 
                    System.Nullable<int> Original_ChangedBy, 
                    System.Nullable<System.DateTime> Original_DateDeleted, 
                    System.Nullable<int> Original_DeletedBy, 
                    System.Nullable<bool> Original_SwitchFree1, 
                    System.Nullable<bool> Original_SwitchFree2, 
                    System.Nullable<bool> Original_SwitchFree3, 
                    System.Nullable<System.DateTime> Original_DateTimeFree1, 
                    System.Nullable<System.DateTime> Original_DateTimeFree2, 
                    System.Nullable<System.DateTime> Original_DateTimeFree3, 
                    string Original_TextFree1, 
                    string Original_TextFree2, 
                    string Original_TextFree3, 
                    System.Nullable<int> Original_IntFree1, 
                    System.Nullable<int> Original_IntFree2, 
                    System.Nullable<int> Original_IntFree3) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ProcedureReferenceRowId));
            if ((Original_ProcedureReferenceReferenceId == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ProcedureReferenceReferenceId));
            }
            if ((Original_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_DateNextAssessment.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_DateNextAssessment.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_PreMitigationRiskRatingRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_PreMitigationRiskRatingRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_PostMitigationRiskRatingRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_PostMitigationRiskRatingRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_ApprovedById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_ApprovedById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_DateApproved.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_DateApproved.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_ResponsibleId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_ResponsibleId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_ResponsibleRoleListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_ResponsibleRoleListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_AssessedById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_AssessedById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_DateAssessed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_DateAssessed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_Control == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_Control));
            }
            if ((Original_rowguid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((System.Guid)(Original_rowguid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((Original_MasterRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((int)(Original_MasterRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = System.DBNull.Value;
            }
            if ((Original_DateCreated.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_DateCreated.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = System.DBNull.Value;
            }
            if ((Original_CreatedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((int)(Original_CreatedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = System.DBNull.Value;
            }
            if ((Original_DateChanged.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((System.DateTime)(Original_DateChanged.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = System.DBNull.Value;
            }
            if ((Original_ChangedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((int)(Original_ChangedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((Original_DateDeleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((System.DateTime)(Original_DateDeleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((Original_DeletedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((int)(Original_DeletedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((bool)(Original_SwitchFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((bool)(Original_SwitchFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((bool)(Original_SwitchFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((System.DateTime)(Original_DateTimeFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((System.DateTime)(Original_DateTimeFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((System.DateTime)(Original_DateTimeFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = System.DBNull.Value;
            }
            if ((Original_TextFree1 == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_TextFree1));
            }
            if ((Original_TextFree2 == null)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((string)(Original_TextFree2));
            }
            if ((Original_TextFree3 == null)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((string)(Original_TextFree3));
            }
            if ((Original_IntFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((int)(Original_IntFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = System.DBNull.Value;
            }
            if ((Original_IntFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((int)(Original_IntFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = System.DBNull.Value;
            }
            if ((Original_IntFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((int)(Original_IntFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string ProcedureReferenceReferenceId, 
                    System.Nullable<System.DateTime> Date, 
                    System.Nullable<System.DateTime> DateNextAssessment, 
                    System.Nullable<int> PreMitigationRiskRatingRowId, 
                    System.Nullable<int> PostMitigationRiskRatingRowId, 
                    System.Nullable<int> ApprovedById, 
                    System.Nullable<System.DateTime> DateApproved, 
                    System.Nullable<int> ResponsibleId, 
                    System.Nullable<int> ResponsibleRoleListsRowId, 
                    System.Nullable<int> AssessedById, 
                    System.Nullable<System.DateTime> DateAssessed, 
                    string Control, 
                    System.Nullable<System.Guid> rowguid, 
                    System.Nullable<int> MasterRowId, 
                    System.Nullable<System.DateTime> DateCreated, 
                    System.Nullable<int> CreatedBy, 
                    System.Nullable<System.DateTime> DateChanged, 
                    System.Nullable<int> ChangedBy, 
                    System.Nullable<System.DateTime> DateDeleted, 
                    System.Nullable<int> DeletedBy, 
                    System.Nullable<bool> SwitchFree1, 
                    System.Nullable<bool> SwitchFree2, 
                    System.Nullable<bool> SwitchFree3, 
                    System.Nullable<System.DateTime> DateTimeFree1, 
                    System.Nullable<System.DateTime> DateTimeFree2, 
                    System.Nullable<System.DateTime> DateTimeFree3, 
                    string TextFree1, 
                    string TextFree2, 
                    string TextFree3, 
                    System.Nullable<int> IntFree1, 
                    System.Nullable<int> IntFree2, 
                    System.Nullable<int> IntFree3) {
            if ((ProcedureReferenceReferenceId == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ProcedureReferenceReferenceId));
            }
            if ((Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((DateNextAssessment.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(DateNextAssessment.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((PreMitigationRiskRatingRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(PreMitigationRiskRatingRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((PostMitigationRiskRatingRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(PostMitigationRiskRatingRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((ApprovedById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(ApprovedById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((DateApproved.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(DateApproved.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((ResponsibleId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(ResponsibleId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((ResponsibleRoleListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(ResponsibleRoleListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((AssessedById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(AssessedById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((DateAssessed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(DateAssessed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Control == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Control));
            }
            if ((rowguid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.Guid)(rowguid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((MasterRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(MasterRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((DateCreated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((CreatedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(CreatedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((DateChanged.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(DateChanged.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((ChangedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(ChangedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((DateDeleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(DateDeleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((DeletedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(DeletedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((SwitchFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(SwitchFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((SwitchFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(SwitchFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = System.DBNull.Value;
            }
            if ((SwitchFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(SwitchFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((DateTimeFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(DateTimeFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = System.DBNull.Value;
            }
            if ((DateTimeFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((System.DateTime)(DateTimeFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((DateTimeFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(DateTimeFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((TextFree1 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(TextFree1));
            }
            if ((TextFree2 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(TextFree2));
            }
            if ((TextFree3 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(TextFree3));
            }
            if ((IntFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((int)(IntFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = System.DBNull.Value;
            }
            if ((IntFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((int)(IntFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((IntFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((int)(IntFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ProcedureReferenceReferenceId, 
                    System.Nullable<System.DateTime> Date, 
                    System.Nullable<System.DateTime> DateNextAssessment, 
                    System.Nullable<int> PreMitigationRiskRatingRowId, 
                    System.Nullable<int> PostMitigationRiskRatingRowId, 
                    System.Nullable<int> ApprovedById, 
                    System.Nullable<System.DateTime> DateApproved, 
                    System.Nullable<int> ResponsibleId, 
                    System.Nullable<int> ResponsibleRoleListsRowId, 
                    System.Nullable<int> AssessedById, 
                    System.Nullable<System.DateTime> DateAssessed, 
                    string Control, 
                    System.Nullable<System.Guid> rowguid, 
                    System.Nullable<int> MasterRowId, 
                    System.Nullable<System.DateTime> DateCreated, 
                    System.Nullable<int> CreatedBy, 
                    System.Nullable<System.DateTime> DateChanged, 
                    System.Nullable<int> ChangedBy, 
                    System.Nullable<System.DateTime> DateDeleted, 
                    System.Nullable<int> DeletedBy, 
                    System.Nullable<bool> SwitchFree1, 
                    System.Nullable<bool> SwitchFree2, 
                    System.Nullable<bool> SwitchFree3, 
                    System.Nullable<System.DateTime> DateTimeFree1, 
                    System.Nullable<System.DateTime> DateTimeFree2, 
                    System.Nullable<System.DateTime> DateTimeFree3, 
                    string TextFree1, 
                    string TextFree2, 
                    string TextFree3, 
                    System.Nullable<int> IntFree1, 
                    System.Nullable<int> IntFree2, 
                    System.Nullable<int> IntFree3, 
                    int Original_ProcedureReferenceRowId, 
                    string Original_ProcedureReferenceReferenceId, 
                    System.Nullable<System.DateTime> Original_Date, 
                    System.Nullable<System.DateTime> Original_DateNextAssessment, 
                    System.Nullable<int> Original_PreMitigationRiskRatingRowId, 
                    System.Nullable<int> Original_PostMitigationRiskRatingRowId, 
                    System.Nullable<int> Original_ApprovedById, 
                    System.Nullable<System.DateTime> Original_DateApproved, 
                    System.Nullable<int> Original_ResponsibleId, 
                    System.Nullable<int> Original_ResponsibleRoleListsRowId, 
                    System.Nullable<int> Original_AssessedById, 
                    System.Nullable<System.DateTime> Original_DateAssessed, 
                    string Original_Control, 
                    System.Nullable<System.Guid> Original_rowguid, 
                    System.Nullable<int> Original_MasterRowId, 
                    System.Nullable<System.DateTime> Original_DateCreated, 
                    System.Nullable<int> Original_CreatedBy, 
                    System.Nullable<System.DateTime> Original_DateChanged, 
                    System.Nullable<int> Original_ChangedBy, 
                    System.Nullable<System.DateTime> Original_DateDeleted, 
                    System.Nullable<int> Original_DeletedBy, 
                    System.Nullable<bool> Original_SwitchFree1, 
                    System.Nullable<bool> Original_SwitchFree2, 
                    System.Nullable<bool> Original_SwitchFree3, 
                    System.Nullable<System.DateTime> Original_DateTimeFree1, 
                    System.Nullable<System.DateTime> Original_DateTimeFree2, 
                    System.Nullable<System.DateTime> Original_DateTimeFree3, 
                    string Original_TextFree1, 
                    string Original_TextFree2, 
                    string Original_TextFree3, 
                    System.Nullable<int> Original_IntFree1, 
                    System.Nullable<int> Original_IntFree2, 
                    System.Nullable<int> Original_IntFree3, 
                    int ProcedureReferenceRowId) {
            if ((ProcedureReferenceReferenceId == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ProcedureReferenceReferenceId));
            }
            if ((Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((DateNextAssessment.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(DateNextAssessment.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((PreMitigationRiskRatingRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(PreMitigationRiskRatingRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((PostMitigationRiskRatingRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(PostMitigationRiskRatingRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((ApprovedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ApprovedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((DateApproved.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(DateApproved.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((ResponsibleId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ResponsibleId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((ResponsibleRoleListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(ResponsibleRoleListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((AssessedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(AssessedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((DateAssessed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(DateAssessed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Control == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Control));
            }
            if ((rowguid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.Guid)(rowguid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((MasterRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(MasterRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((DateCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((CreatedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(CreatedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((DateChanged.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(DateChanged.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((ChangedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(ChangedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((DateDeleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(DateDeleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((DeletedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(DeletedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((SwitchFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(SwitchFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((SwitchFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(SwitchFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            if ((SwitchFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(SwitchFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((DateTimeFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(DateTimeFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            if ((DateTimeFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(DateTimeFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((DateTimeFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(DateTimeFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((TextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(TextFree1));
            }
            if ((TextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(TextFree2));
            }
            if ((TextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(TextFree3));
            }
            if ((IntFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(IntFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = System.DBNull.Value;
            }
            if ((IntFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(IntFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((IntFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(IntFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_ProcedureReferenceRowId));
            if ((Original_ProcedureReferenceReferenceId == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_ProcedureReferenceReferenceId));
            }
            if ((Original_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((Original_DateNextAssessment.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTime)(Original_DateNextAssessment.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = System.DBNull.Value;
            }
            if ((Original_PreMitigationRiskRatingRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_PreMitigationRiskRatingRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = System.DBNull.Value;
            }
            if ((Original_PostMitigationRiskRatingRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_PostMitigationRiskRatingRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = System.DBNull.Value;
            }
            if ((Original_ApprovedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_ApprovedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = System.DBNull.Value;
            }
            if ((Original_DateApproved.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((System.DateTime)(Original_DateApproved.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = System.DBNull.Value;
            }
            if ((Original_ResponsibleId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(Original_ResponsibleId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = System.DBNull.Value;
            }
            if ((Original_ResponsibleRoleListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Original_ResponsibleRoleListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = System.DBNull.Value;
            }
            if ((Original_AssessedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(Original_AssessedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = System.DBNull.Value;
            }
            if ((Original_DateAssessed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((System.DateTime)(Original_DateAssessed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = System.DBNull.Value;
            }
            if ((Original_Control == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_Control));
            }
            if ((Original_rowguid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((System.Guid)(Original_rowguid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = System.DBNull.Value;
            }
            if ((Original_MasterRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(Original_MasterRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = System.DBNull.Value;
            }
            if ((Original_DateCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(Original_DateCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = System.DBNull.Value;
            }
            if ((Original_CreatedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(Original_CreatedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = System.DBNull.Value;
            }
            if ((Original_DateChanged.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((System.DateTime)(Original_DateChanged.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = System.DBNull.Value;
            }
            if ((Original_ChangedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(Original_ChangedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = System.DBNull.Value;
            }
            if ((Original_DateDeleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((System.DateTime)(Original_DateDeleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = System.DBNull.Value;
            }
            if ((Original_DeletedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(Original_DeletedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((bool)(Original_SwitchFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((bool)(Original_SwitchFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((bool)(Original_SwitchFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((System.DateTime)(Original_DateTimeFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((System.DateTime)(Original_DateTimeFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((System.DateTime)(Original_DateTimeFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = System.DBNull.Value;
            }
            if ((Original_TextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_TextFree1));
            }
            if ((Original_TextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(Original_TextFree2));
            }
            if ((Original_TextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_TextFree3));
            }
            if ((Original_IntFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(Original_IntFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = System.DBNull.Value;
            }
            if ((Original_IntFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((int)(Original_IntFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = System.DBNull.Value;
            }
            if ((Original_IntFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((int)(Original_IntFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[96].Value = ((int)(ProcedureReferenceRowId));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591