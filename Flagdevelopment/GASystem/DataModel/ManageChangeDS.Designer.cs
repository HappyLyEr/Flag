//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("ManageChangeDS")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ManageChangeDS : System.Data.DataSet {
        
        private GAManageChangeDataTable tableGAManageChange;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ManageChangeDS() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ManageChangeDS(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["GAManageChange"] != null)) {
                    base.Tables.Add(new GAManageChangeDataTable(ds.Tables["GAManageChange"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAManageChangeDataTable GAManageChange {
            get {
                return this.tableGAManageChange;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            ManageChangeDS cln = ((ManageChangeDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GAManageChange"] != null)) {
                    base.Tables.Add(new GAManageChangeDataTable(ds.Tables["GAManageChange"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGAManageChange = ((GAManageChangeDataTable)(base.Tables["GAManageChange"]));
            if ((initTable == true)) {
                if ((this.tableGAManageChange != null)) {
                    this.tableGAManageChange.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ManageChangeDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ManageChangeDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGAManageChange = new GAManageChangeDataTable();
            base.Tables.Add(this.tableGAManageChange);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGAManageChange() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            ManageChangeDS ds = new ManageChangeDS();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void GAManageChangeRowChangeEventHandler(object sender, GAManageChangeRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GAManageChangeDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnManageChangeRowId;
            
            private System.Data.DataColumn columnProjectRowId;
            
            private System.Data.DataColumn columnLocationRowId;
            
            private System.Data.DataColumn columnManageChangeReferenceId;
            
            private System.Data.DataColumn columnDateOfRequest;
            
            private System.Data.DataColumn columnDateEffective;
            
            private System.Data.DataColumn columnIsContractual;
            
            private System.Data.DataColumn columnTypeOfChangeRowId;
            
            private System.Data.DataColumn columnDateOfRemoval;
            
            private System.Data.DataColumn columnNatureOfChange;
            
            private System.Data.DataColumn columnNatureOfChangeRowId;
            
            private System.Data.DataColumn columnDescriptionCurrent;
            
            private System.Data.DataColumn columnDescription;
            
            private System.Data.DataColumn columnResponsibleRoleListsRowId;
            
            private System.Data.DataColumn columnRequestorId;
            
            private System.Data.DataColumn columnEndorserId;
            
            private System.Data.DataColumn columnDateOfEndorsement;
            
            private System.Data.DataColumn columnJustification;
            
            private System.Data.DataColumn columnOnSiteRiskAssessmentCompleted;
            
            private System.Data.DataColumn columnOnshoreRiskAssessmentCompleted;
            
            private System.Data.DataColumn columnOnSiteJobSafetyAnalysisCompleted;
            
            private System.Data.DataColumn columnApprovedByOnshoreManagement;
            
            private System.Data.DataColumn columnOnSiteWorkInstructionCompleted;
            
            private System.Data.DataColumn columnPotentialConsequence;
            
            private System.Data.DataColumn columnMigration;
            
            private System.Data.DataColumn columnTrainingRequired;
            
            private System.Data.DataColumn columnTraining;
            
            private System.Data.DataColumn columnCostOfChange;
            
            private System.Data.DataColumn columnIncreasedRisk;
            
            private System.Data.DataColumn columnComments;
            
            private System.Data.DataColumn columnProposedById;
            
            private System.Data.DataColumn columnDateOfProposal;
            
            private System.Data.DataColumn columnReviewedById;
            
            private System.Data.DataColumn columnDateOfReview;
            
            private System.Data.DataColumn columnApprovalReviewedById1;
            
            private System.Data.DataColumn columnApprovalRevieweDate1;
            
            private System.Data.DataColumn columnApprovalReviewedById2;
            
            private System.Data.DataColumn columnApprovalRevieweDate2;
            
            private System.Data.DataColumn columnApprovalEndorsedById;
            
            private System.Data.DataColumn columnApprovalEndorsedDate;
            
            private System.Data.DataColumn columnApprovedById;
            
            private System.Data.DataColumn columnApprovedDate;
            
            private System.Data.DataColumn columnLessonsLearned;
            
            private System.Data.DataColumn columnChangeCommunicatedById;
            
            private System.Data.DataColumn columnDateChangeCommunicated;
            
            private System.Data.DataColumn columnMethodOfCommunication;
            
            private System.Data.DataColumn columnDocumentationChangesById;
            
            private System.Data.DataColumn columnDateDocumentationChanges;
            
            private System.Data.DataColumn columnDocumentsChanged;
            
            private System.Data.DataColumn columnTrainingRequriementsCompletedById;
            
            private System.Data.DataColumn columnDateTrainingRequriementsCompleted;
            
            private System.Data.DataColumn columnTrainingConducted;
            
            private System.Data.DataColumn columnRegulatoryPermitRequirementsCompletedById;
            
            private System.Data.DataColumn columnDateRegulatoryPermitRequirementsCompleted;
            
            private System.Data.DataColumn columnRegulatoryPermitRequirementsCompleted;
            
            private System.Data.DataColumn columnChangeRequirementsCompletedById;
            
            private System.Data.DataColumn columnDateChangeRequirementsCompleted;
            
            private System.Data.DataColumn columnChangeRequirementsCompletedComments;
            
            private System.Data.DataColumn columnLessonsLearnedCommunicatedById;
            
            private System.Data.DataColumn columnDateLessonsLearnedCommunicated;
            
            private System.Data.DataColumn columnChangeReportCloseOutDocumentationById;
            
            private System.Data.DataColumn columnDateChangeReportCloseOutDocumentation;
            
            private System.Data.DataColumn columnApprovalForChangeReportCloseOutById;
            
            private System.Data.DataColumn columnDateApprovalForChangeReportCloseOut;
            
            private System.Data.DataColumn columnrowguid;
            
            private System.Data.DataColumn columnManageChangeStatusListsRowId;
            
            private System.Data.DataColumn columnInitiationCompletedSwitch;
            
            private System.Data.DataColumn columnEvaluationCompletedSwitch;
            
            private System.Data.DataColumn columnApprovalsCompletedSwitch;
            
            private System.Data.DataColumn columnImplementationCompletedSwitch;
            
            private System.Data.DataColumn columnCloseOutCompletedSwitch;
            
            private System.Data.DataColumn columnRejectedSwitch;
            
            private System.Data.DataColumn columnSwitchFreeSwitch;
            
            private System.Data.DataColumn columnAcceptedByMaster;
            
            private System.Data.DataColumn columnComputedExposure;
            
            private System.Data.DataColumn columnMasterRowId;
            
            private System.Data.DataColumn columnDateCreated;
            
            private System.Data.DataColumn columnCreatedBy;
            
            private System.Data.DataColumn columnDateChanged;
            
            private System.Data.DataColumn columnChangedBy;
            
            private System.Data.DataColumn columnDateDeleted;
            
            private System.Data.DataColumn columnDeletedBy;
            
            private System.Data.DataColumn columnSwitchFree1;
            
            private System.Data.DataColumn columnSwitchFree2;
            
            private System.Data.DataColumn columnSwitchFree3;
            
            private System.Data.DataColumn columnDateTimeFree1;
            
            private System.Data.DataColumn columnDateTimeFree2;
            
            private System.Data.DataColumn columnDateTimeFree3;
            
            private System.Data.DataColumn columnTextFree1;
            
            private System.Data.DataColumn columnTextFree2;
            
            private System.Data.DataColumn columnTextFree3;
            
            private System.Data.DataColumn columnIntFree1;
            
            private System.Data.DataColumn columnIntFree2;
            
            private System.Data.DataColumn columnIntFree3;
            
            private System.Data.DataColumn columnnTextFree1;
            
            private System.Data.DataColumn columnnTextFree2;
            
            private System.Data.DataColumn columnnTextFree3;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAManageChangeDataTable() {
                this.TableName = "GAManageChange";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAManageChangeDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GAManageChangeDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ManageChangeRowIdColumn {
                get {
                    return this.columnManageChangeRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProjectRowIdColumn {
                get {
                    return this.columnProjectRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LocationRowIdColumn {
                get {
                    return this.columnLocationRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ManageChangeReferenceIdColumn {
                get {
                    return this.columnManageChangeReferenceId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateOfRequestColumn {
                get {
                    return this.columnDateOfRequest;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateEffectiveColumn {
                get {
                    return this.columnDateEffective;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IsContractualColumn {
                get {
                    return this.columnIsContractual;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TypeOfChangeRowIdColumn {
                get {
                    return this.columnTypeOfChangeRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateOfRemovalColumn {
                get {
                    return this.columnDateOfRemoval;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NatureOfChangeColumn {
                get {
                    return this.columnNatureOfChange;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NatureOfChangeRowIdColumn {
                get {
                    return this.columnNatureOfChangeRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DescriptionCurrentColumn {
                get {
                    return this.columnDescriptionCurrent;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ResponsibleRoleListsRowIdColumn {
                get {
                    return this.columnResponsibleRoleListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RequestorIdColumn {
                get {
                    return this.columnRequestorId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EndorserIdColumn {
                get {
                    return this.columnEndorserId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateOfEndorsementColumn {
                get {
                    return this.columnDateOfEndorsement;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JustificationColumn {
                get {
                    return this.columnJustification;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OnSiteRiskAssessmentCompletedColumn {
                get {
                    return this.columnOnSiteRiskAssessmentCompleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OnshoreRiskAssessmentCompletedColumn {
                get {
                    return this.columnOnshoreRiskAssessmentCompleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OnSiteJobSafetyAnalysisCompletedColumn {
                get {
                    return this.columnOnSiteJobSafetyAnalysisCompleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApprovedByOnshoreManagementColumn {
                get {
                    return this.columnApprovedByOnshoreManagement;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OnSiteWorkInstructionCompletedColumn {
                get {
                    return this.columnOnSiteWorkInstructionCompleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PotentialConsequenceColumn {
                get {
                    return this.columnPotentialConsequence;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MigrationColumn {
                get {
                    return this.columnMigration;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TrainingRequiredColumn {
                get {
                    return this.columnTrainingRequired;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TrainingColumn {
                get {
                    return this.columnTraining;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CostOfChangeColumn {
                get {
                    return this.columnCostOfChange;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IncreasedRiskColumn {
                get {
                    return this.columnIncreasedRisk;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProposedByIdColumn {
                get {
                    return this.columnProposedById;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateOfProposalColumn {
                get {
                    return this.columnDateOfProposal;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ReviewedByIdColumn {
                get {
                    return this.columnReviewedById;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateOfReviewColumn {
                get {
                    return this.columnDateOfReview;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApprovalReviewedById1Column {
                get {
                    return this.columnApprovalReviewedById1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApprovalRevieweDate1Column {
                get {
                    return this.columnApprovalRevieweDate1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApprovalReviewedById2Column {
                get {
                    return this.columnApprovalReviewedById2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApprovalRevieweDate2Column {
                get {
                    return this.columnApprovalRevieweDate2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApprovalEndorsedByIdColumn {
                get {
                    return this.columnApprovalEndorsedById;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApprovalEndorsedDateColumn {
                get {
                    return this.columnApprovalEndorsedDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApprovedByIdColumn {
                get {
                    return this.columnApprovedById;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApprovedDateColumn {
                get {
                    return this.columnApprovedDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LessonsLearnedColumn {
                get {
                    return this.columnLessonsLearned;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChangeCommunicatedByIdColumn {
                get {
                    return this.columnChangeCommunicatedById;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateChangeCommunicatedColumn {
                get {
                    return this.columnDateChangeCommunicated;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MethodOfCommunicationColumn {
                get {
                    return this.columnMethodOfCommunication;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DocumentationChangesByIdColumn {
                get {
                    return this.columnDocumentationChangesById;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateDocumentationChangesColumn {
                get {
                    return this.columnDateDocumentationChanges;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DocumentsChangedColumn {
                get {
                    return this.columnDocumentsChanged;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TrainingRequriementsCompletedByIdColumn {
                get {
                    return this.columnTrainingRequriementsCompletedById;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTrainingRequriementsCompletedColumn {
                get {
                    return this.columnDateTrainingRequriementsCompleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TrainingConductedColumn {
                get {
                    return this.columnTrainingConducted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RegulatoryPermitRequirementsCompletedByIdColumn {
                get {
                    return this.columnRegulatoryPermitRequirementsCompletedById;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateRegulatoryPermitRequirementsCompletedColumn {
                get {
                    return this.columnDateRegulatoryPermitRequirementsCompleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RegulatoryPermitRequirementsCompletedColumn {
                get {
                    return this.columnRegulatoryPermitRequirementsCompleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChangeRequirementsCompletedByIdColumn {
                get {
                    return this.columnChangeRequirementsCompletedById;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateChangeRequirementsCompletedColumn {
                get {
                    return this.columnDateChangeRequirementsCompleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChangeRequirementsCompletedCommentsColumn {
                get {
                    return this.columnChangeRequirementsCompletedComments;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LessonsLearnedCommunicatedByIdColumn {
                get {
                    return this.columnLessonsLearnedCommunicatedById;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateLessonsLearnedCommunicatedColumn {
                get {
                    return this.columnDateLessonsLearnedCommunicated;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChangeReportCloseOutDocumentationByIdColumn {
                get {
                    return this.columnChangeReportCloseOutDocumentationById;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateChangeReportCloseOutDocumentationColumn {
                get {
                    return this.columnDateChangeReportCloseOutDocumentation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApprovalForChangeReportCloseOutByIdColumn {
                get {
                    return this.columnApprovalForChangeReportCloseOutById;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateApprovalForChangeReportCloseOutColumn {
                get {
                    return this.columnDateApprovalForChangeReportCloseOut;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ManageChangeStatusListsRowIdColumn {
                get {
                    return this.columnManageChangeStatusListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InitiationCompletedSwitchColumn {
                get {
                    return this.columnInitiationCompletedSwitch;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EvaluationCompletedSwitchColumn {
                get {
                    return this.columnEvaluationCompletedSwitch;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApprovalsCompletedSwitchColumn {
                get {
                    return this.columnApprovalsCompletedSwitch;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ImplementationCompletedSwitchColumn {
                get {
                    return this.columnImplementationCompletedSwitch;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CloseOutCompletedSwitchColumn {
                get {
                    return this.columnCloseOutCompletedSwitch;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RejectedSwitchColumn {
                get {
                    return this.columnRejectedSwitch;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFreeSwitchColumn {
                get {
                    return this.columnSwitchFreeSwitch;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AcceptedByMasterColumn {
                get {
                    return this.columnAcceptedByMaster;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ComputedExposureColumn {
                get {
                    return this.columnComputedExposure;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nTextFree1Column {
                get {
                    return this.columnnTextFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nTextFree2Column {
                get {
                    return this.columnnTextFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nTextFree3Column {
                get {
                    return this.columnnTextFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAManageChangeRow this[int index] {
                get {
                    return ((GAManageChangeRow)(this.Rows[index]));
                }
            }
            
            public event GAManageChangeRowChangeEventHandler GAManageChangeRowChanging;
            
            public event GAManageChangeRowChangeEventHandler GAManageChangeRowChanged;
            
            public event GAManageChangeRowChangeEventHandler GAManageChangeRowDeleting;
            
            public event GAManageChangeRowChangeEventHandler GAManageChangeRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGAManageChangeRow(GAManageChangeRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAManageChangeRow AddGAManageChangeRow(
                        int ProjectRowId, 
                        int LocationRowId, 
                        string ManageChangeReferenceId, 
                        System.DateTime DateOfRequest, 
                        System.DateTime DateEffective, 
                        bool IsContractual, 
                        int TypeOfChangeRowId, 
                        System.DateTime DateOfRemoval, 
                        string NatureOfChange, 
                        int NatureOfChangeRowId, 
                        string DescriptionCurrent, 
                        string Description, 
                        int ResponsibleRoleListsRowId, 
                        int RequestorId, 
                        int EndorserId, 
                        System.DateTime DateOfEndorsement, 
                        string Justification, 
                        bool OnSiteRiskAssessmentCompleted, 
                        bool OnshoreRiskAssessmentCompleted, 
                        bool OnSiteJobSafetyAnalysisCompleted, 
                        bool ApprovedByOnshoreManagement, 
                        bool OnSiteWorkInstructionCompleted, 
                        string PotentialConsequence, 
                        string Migration, 
                        bool TrainingRequired, 
                        string Training, 
                        string CostOfChange, 
                        bool IncreasedRisk, 
                        string Comments, 
                        int ProposedById, 
                        System.DateTime DateOfProposal, 
                        int ReviewedById, 
                        System.DateTime DateOfReview, 
                        int ApprovalReviewedById1, 
                        System.DateTime ApprovalRevieweDate1, 
                        int ApprovalReviewedById2, 
                        System.DateTime ApprovalRevieweDate2, 
                        int ApprovalEndorsedById, 
                        System.DateTime ApprovalEndorsedDate, 
                        int ApprovedById, 
                        System.DateTime ApprovedDate, 
                        string LessonsLearned, 
                        int ChangeCommunicatedById, 
                        System.DateTime DateChangeCommunicated, 
                        string MethodOfCommunication, 
                        int DocumentationChangesById, 
                        System.DateTime DateDocumentationChanges, 
                        string DocumentsChanged, 
                        int TrainingRequriementsCompletedById, 
                        System.DateTime DateTrainingRequriementsCompleted, 
                        string TrainingConducted, 
                        int RegulatoryPermitRequirementsCompletedById, 
                        System.DateTime DateRegulatoryPermitRequirementsCompleted, 
                        string RegulatoryPermitRequirementsCompleted, 
                        int ChangeRequirementsCompletedById, 
                        System.DateTime DateChangeRequirementsCompleted, 
                        string ChangeRequirementsCompletedComments, 
                        int LessonsLearnedCommunicatedById, 
                        System.DateTime DateLessonsLearnedCommunicated, 
                        int ChangeReportCloseOutDocumentationById, 
                        System.DateTime DateChangeReportCloseOutDocumentation, 
                        int ApprovalForChangeReportCloseOutById, 
                        System.DateTime DateApprovalForChangeReportCloseOut, 
                        System.Guid rowguid, 
                        int ManageChangeStatusListsRowId, 
                        bool InitiationCompletedSwitch, 
                        bool EvaluationCompletedSwitch, 
                        bool ApprovalsCompletedSwitch, 
                        bool ImplementationCompletedSwitch, 
                        bool CloseOutCompletedSwitch, 
                        bool RejectedSwitch, 
                        bool SwitchFreeSwitch, 
                        bool AcceptedByMaster, 
                        int ComputedExposure, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3, 
                        string nTextFree1, 
                        string nTextFree2, 
                        string nTextFree3) {
                GAManageChangeRow rowGAManageChangeRow = ((GAManageChangeRow)(this.NewRow()));
                rowGAManageChangeRow.ItemArray = new object[] {
                        null,
                        ProjectRowId,
                        LocationRowId,
                        ManageChangeReferenceId,
                        DateOfRequest,
                        DateEffective,
                        IsContractual,
                        TypeOfChangeRowId,
                        DateOfRemoval,
                        NatureOfChange,
                        NatureOfChangeRowId,
                        DescriptionCurrent,
                        Description,
                        ResponsibleRoleListsRowId,
                        RequestorId,
                        EndorserId,
                        DateOfEndorsement,
                        Justification,
                        OnSiteRiskAssessmentCompleted,
                        OnshoreRiskAssessmentCompleted,
                        OnSiteJobSafetyAnalysisCompleted,
                        ApprovedByOnshoreManagement,
                        OnSiteWorkInstructionCompleted,
                        PotentialConsequence,
                        Migration,
                        TrainingRequired,
                        Training,
                        CostOfChange,
                        IncreasedRisk,
                        Comments,
                        ProposedById,
                        DateOfProposal,
                        ReviewedById,
                        DateOfReview,
                        ApprovalReviewedById1,
                        ApprovalRevieweDate1,
                        ApprovalReviewedById2,
                        ApprovalRevieweDate2,
                        ApprovalEndorsedById,
                        ApprovalEndorsedDate,
                        ApprovedById,
                        ApprovedDate,
                        LessonsLearned,
                        ChangeCommunicatedById,
                        DateChangeCommunicated,
                        MethodOfCommunication,
                        DocumentationChangesById,
                        DateDocumentationChanges,
                        DocumentsChanged,
                        TrainingRequriementsCompletedById,
                        DateTrainingRequriementsCompleted,
                        TrainingConducted,
                        RegulatoryPermitRequirementsCompletedById,
                        DateRegulatoryPermitRequirementsCompleted,
                        RegulatoryPermitRequirementsCompleted,
                        ChangeRequirementsCompletedById,
                        DateChangeRequirementsCompleted,
                        ChangeRequirementsCompletedComments,
                        LessonsLearnedCommunicatedById,
                        DateLessonsLearnedCommunicated,
                        ChangeReportCloseOutDocumentationById,
                        DateChangeReportCloseOutDocumentation,
                        ApprovalForChangeReportCloseOutById,
                        DateApprovalForChangeReportCloseOut,
                        rowguid,
                        ManageChangeStatusListsRowId,
                        InitiationCompletedSwitch,
                        EvaluationCompletedSwitch,
                        ApprovalsCompletedSwitch,
                        ImplementationCompletedSwitch,
                        CloseOutCompletedSwitch,
                        RejectedSwitch,
                        SwitchFreeSwitch,
                        AcceptedByMaster,
                        ComputedExposure,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3,
                        nTextFree1,
                        nTextFree2,
                        nTextFree3};
                this.Rows.Add(rowGAManageChangeRow);
                return rowGAManageChangeRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAManageChangeRow FindByManageChangeRowId(int ManageChangeRowId) {
                return ((GAManageChangeRow)(this.Rows.Find(new object[] {
                            ManageChangeRowId})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                GAManageChangeDataTable cln = ((GAManageChangeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new GAManageChangeDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnManageChangeRowId = base.Columns["ManageChangeRowId"];
                this.columnProjectRowId = base.Columns["ProjectRowId"];
                this.columnLocationRowId = base.Columns["LocationRowId"];
                this.columnManageChangeReferenceId = base.Columns["ManageChangeReferenceId"];
                this.columnDateOfRequest = base.Columns["DateOfRequest"];
                this.columnDateEffective = base.Columns["DateEffective"];
                this.columnIsContractual = base.Columns["IsContractual"];
                this.columnTypeOfChangeRowId = base.Columns["TypeOfChangeRowId"];
                this.columnDateOfRemoval = base.Columns["DateOfRemoval"];
                this.columnNatureOfChange = base.Columns["NatureOfChange"];
                this.columnNatureOfChangeRowId = base.Columns["NatureOfChangeRowId"];
                this.columnDescriptionCurrent = base.Columns["DescriptionCurrent"];
                this.columnDescription = base.Columns["Description"];
                this.columnResponsibleRoleListsRowId = base.Columns["ResponsibleRoleListsRowId"];
                this.columnRequestorId = base.Columns["RequestorId"];
                this.columnEndorserId = base.Columns["EndorserId"];
                this.columnDateOfEndorsement = base.Columns["DateOfEndorsement"];
                this.columnJustification = base.Columns["Justification"];
                this.columnOnSiteRiskAssessmentCompleted = base.Columns["OnSiteRiskAssessmentCompleted"];
                this.columnOnshoreRiskAssessmentCompleted = base.Columns["OnshoreRiskAssessmentCompleted"];
                this.columnOnSiteJobSafetyAnalysisCompleted = base.Columns["OnSiteJobSafetyAnalysisCompleted"];
                this.columnApprovedByOnshoreManagement = base.Columns["ApprovedByOnshoreManagement"];
                this.columnOnSiteWorkInstructionCompleted = base.Columns["OnSiteWorkInstructionCompleted"];
                this.columnPotentialConsequence = base.Columns["PotentialConsequence"];
                this.columnMigration = base.Columns["Migration"];
                this.columnTrainingRequired = base.Columns["TrainingRequired"];
                this.columnTraining = base.Columns["Training"];
                this.columnCostOfChange = base.Columns["CostOfChange"];
                this.columnIncreasedRisk = base.Columns["IncreasedRisk"];
                this.columnComments = base.Columns["Comments"];
                this.columnProposedById = base.Columns["ProposedById"];
                this.columnDateOfProposal = base.Columns["DateOfProposal"];
                this.columnReviewedById = base.Columns["ReviewedById"];
                this.columnDateOfReview = base.Columns["DateOfReview"];
                this.columnApprovalReviewedById1 = base.Columns["ApprovalReviewedById1"];
                this.columnApprovalRevieweDate1 = base.Columns["ApprovalRevieweDate1"];
                this.columnApprovalReviewedById2 = base.Columns["ApprovalReviewedById2"];
                this.columnApprovalRevieweDate2 = base.Columns["ApprovalRevieweDate2"];
                this.columnApprovalEndorsedById = base.Columns["ApprovalEndorsedById"];
                this.columnApprovalEndorsedDate = base.Columns["ApprovalEndorsedDate"];
                this.columnApprovedById = base.Columns["ApprovedById"];
                this.columnApprovedDate = base.Columns["ApprovedDate"];
                this.columnLessonsLearned = base.Columns["LessonsLearned"];
                this.columnChangeCommunicatedById = base.Columns["ChangeCommunicatedById"];
                this.columnDateChangeCommunicated = base.Columns["DateChangeCommunicated"];
                this.columnMethodOfCommunication = base.Columns["MethodOfCommunication"];
                this.columnDocumentationChangesById = base.Columns["DocumentationChangesById"];
                this.columnDateDocumentationChanges = base.Columns["DateDocumentationChanges"];
                this.columnDocumentsChanged = base.Columns["DocumentsChanged"];
                this.columnTrainingRequriementsCompletedById = base.Columns["TrainingRequriementsCompletedById"];
                this.columnDateTrainingRequriementsCompleted = base.Columns["DateTrainingRequriementsCompleted"];
                this.columnTrainingConducted = base.Columns["TrainingConducted"];
                this.columnRegulatoryPermitRequirementsCompletedById = base.Columns["RegulatoryPermitRequirementsCompletedById"];
                this.columnDateRegulatoryPermitRequirementsCompleted = base.Columns["DateRegulatoryPermitRequirementsCompleted"];
                this.columnRegulatoryPermitRequirementsCompleted = base.Columns["RegulatoryPermitRequirementsCompleted"];
                this.columnChangeRequirementsCompletedById = base.Columns["ChangeRequirementsCompletedById"];
                this.columnDateChangeRequirementsCompleted = base.Columns["DateChangeRequirementsCompleted"];
                this.columnChangeRequirementsCompletedComments = base.Columns["ChangeRequirementsCompletedComments"];
                this.columnLessonsLearnedCommunicatedById = base.Columns["LessonsLearnedCommunicatedById"];
                this.columnDateLessonsLearnedCommunicated = base.Columns["DateLessonsLearnedCommunicated"];
                this.columnChangeReportCloseOutDocumentationById = base.Columns["ChangeReportCloseOutDocumentationById"];
                this.columnDateChangeReportCloseOutDocumentation = base.Columns["DateChangeReportCloseOutDocumentation"];
                this.columnApprovalForChangeReportCloseOutById = base.Columns["ApprovalForChangeReportCloseOutById"];
                this.columnDateApprovalForChangeReportCloseOut = base.Columns["DateApprovalForChangeReportCloseOut"];
                this.columnrowguid = base.Columns["rowguid"];
                this.columnManageChangeStatusListsRowId = base.Columns["ManageChangeStatusListsRowId"];
                this.columnInitiationCompletedSwitch = base.Columns["InitiationCompletedSwitch"];
                this.columnEvaluationCompletedSwitch = base.Columns["EvaluationCompletedSwitch"];
                this.columnApprovalsCompletedSwitch = base.Columns["ApprovalsCompletedSwitch"];
                this.columnImplementationCompletedSwitch = base.Columns["ImplementationCompletedSwitch"];
                this.columnCloseOutCompletedSwitch = base.Columns["CloseOutCompletedSwitch"];
                this.columnRejectedSwitch = base.Columns["RejectedSwitch"];
                this.columnSwitchFreeSwitch = base.Columns["SwitchFreeSwitch"];
                this.columnAcceptedByMaster = base.Columns["AcceptedByMaster"];
                this.columnComputedExposure = base.Columns["ComputedExposure"];
                this.columnMasterRowId = base.Columns["MasterRowId"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnDateChanged = base.Columns["DateChanged"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnDateDeleted = base.Columns["DateDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnSwitchFree1 = base.Columns["SwitchFree1"];
                this.columnSwitchFree2 = base.Columns["SwitchFree2"];
                this.columnSwitchFree3 = base.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = base.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = base.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = base.Columns["DateTimeFree3"];
                this.columnTextFree1 = base.Columns["TextFree1"];
                this.columnTextFree2 = base.Columns["TextFree2"];
                this.columnTextFree3 = base.Columns["TextFree3"];
                this.columnIntFree1 = base.Columns["IntFree1"];
                this.columnIntFree2 = base.Columns["IntFree2"];
                this.columnIntFree3 = base.Columns["IntFree3"];
                this.columnnTextFree1 = base.Columns["nTextFree1"];
                this.columnnTextFree2 = base.Columns["nTextFree2"];
                this.columnnTextFree3 = base.Columns["nTextFree3"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnManageChangeRowId = new System.Data.DataColumn("ManageChangeRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManageChangeRowId);
                this.columnProjectRowId = new System.Data.DataColumn("ProjectRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectRowId);
                this.columnLocationRowId = new System.Data.DataColumn("LocationRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationRowId);
                this.columnManageChangeReferenceId = new System.Data.DataColumn("ManageChangeReferenceId", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManageChangeReferenceId);
                this.columnDateOfRequest = new System.Data.DataColumn("DateOfRequest", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfRequest);
                this.columnDateEffective = new System.Data.DataColumn("DateEffective", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateEffective);
                this.columnIsContractual = new System.Data.DataColumn("IsContractual", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsContractual);
                this.columnTypeOfChangeRowId = new System.Data.DataColumn("TypeOfChangeRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfChangeRowId);
                this.columnDateOfRemoval = new System.Data.DataColumn("DateOfRemoval", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfRemoval);
                this.columnNatureOfChange = new System.Data.DataColumn("NatureOfChange", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNatureOfChange);
                this.columnNatureOfChangeRowId = new System.Data.DataColumn("NatureOfChangeRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNatureOfChangeRowId);
                this.columnDescriptionCurrent = new System.Data.DataColumn("DescriptionCurrent", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescriptionCurrent);
                this.columnDescription = new System.Data.DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnResponsibleRoleListsRowId = new System.Data.DataColumn("ResponsibleRoleListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponsibleRoleListsRowId);
                this.columnRequestorId = new System.Data.DataColumn("RequestorId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestorId);
                this.columnEndorserId = new System.Data.DataColumn("EndorserId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndorserId);
                this.columnDateOfEndorsement = new System.Data.DataColumn("DateOfEndorsement", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfEndorsement);
                this.columnJustification = new System.Data.DataColumn("Justification", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJustification);
                this.columnOnSiteRiskAssessmentCompleted = new System.Data.DataColumn("OnSiteRiskAssessmentCompleted", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnSiteRiskAssessmentCompleted);
                this.columnOnshoreRiskAssessmentCompleted = new System.Data.DataColumn("OnshoreRiskAssessmentCompleted", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnshoreRiskAssessmentCompleted);
                this.columnOnSiteJobSafetyAnalysisCompleted = new System.Data.DataColumn("OnSiteJobSafetyAnalysisCompleted", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnSiteJobSafetyAnalysisCompleted);
                this.columnApprovedByOnshoreManagement = new System.Data.DataColumn("ApprovedByOnshoreManagement", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedByOnshoreManagement);
                this.columnOnSiteWorkInstructionCompleted = new System.Data.DataColumn("OnSiteWorkInstructionCompleted", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnSiteWorkInstructionCompleted);
                this.columnPotentialConsequence = new System.Data.DataColumn("PotentialConsequence", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPotentialConsequence);
                this.columnMigration = new System.Data.DataColumn("Migration", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMigration);
                this.columnTrainingRequired = new System.Data.DataColumn("TrainingRequired", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrainingRequired);
                this.columnTraining = new System.Data.DataColumn("Training", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTraining);
                this.columnCostOfChange = new System.Data.DataColumn("CostOfChange", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostOfChange);
                this.columnIncreasedRisk = new System.Data.DataColumn("IncreasedRisk", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncreasedRisk);
                this.columnComments = new System.Data.DataColumn("Comments", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnProposedById = new System.Data.DataColumn("ProposedById", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProposedById);
                this.columnDateOfProposal = new System.Data.DataColumn("DateOfProposal", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfProposal);
                this.columnReviewedById = new System.Data.DataColumn("ReviewedById", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewedById);
                this.columnDateOfReview = new System.Data.DataColumn("DateOfReview", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfReview);
                this.columnApprovalReviewedById1 = new System.Data.DataColumn("ApprovalReviewedById1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalReviewedById1);
                this.columnApprovalRevieweDate1 = new System.Data.DataColumn("ApprovalRevieweDate1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalRevieweDate1);
                this.columnApprovalReviewedById2 = new System.Data.DataColumn("ApprovalReviewedById2", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalReviewedById2);
                this.columnApprovalRevieweDate2 = new System.Data.DataColumn("ApprovalRevieweDate2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalRevieweDate2);
                this.columnApprovalEndorsedById = new System.Data.DataColumn("ApprovalEndorsedById", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalEndorsedById);
                this.columnApprovalEndorsedDate = new System.Data.DataColumn("ApprovalEndorsedDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalEndorsedDate);
                this.columnApprovedById = new System.Data.DataColumn("ApprovedById", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedById);
                this.columnApprovedDate = new System.Data.DataColumn("ApprovedDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedDate);
                this.columnLessonsLearned = new System.Data.DataColumn("LessonsLearned", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessonsLearned);
                this.columnChangeCommunicatedById = new System.Data.DataColumn("ChangeCommunicatedById", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangeCommunicatedById);
                this.columnDateChangeCommunicated = new System.Data.DataColumn("DateChangeCommunicated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChangeCommunicated);
                this.columnMethodOfCommunication = new System.Data.DataColumn("MethodOfCommunication", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethodOfCommunication);
                this.columnDocumentationChangesById = new System.Data.DataColumn("DocumentationChangesById", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentationChangesById);
                this.columnDateDocumentationChanges = new System.Data.DataColumn("DateDocumentationChanges", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDocumentationChanges);
                this.columnDocumentsChanged = new System.Data.DataColumn("DocumentsChanged", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentsChanged);
                this.columnTrainingRequriementsCompletedById = new System.Data.DataColumn("TrainingRequriementsCompletedById", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrainingRequriementsCompletedById);
                this.columnDateTrainingRequriementsCompleted = new System.Data.DataColumn("DateTrainingRequriementsCompleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTrainingRequriementsCompleted);
                this.columnTrainingConducted = new System.Data.DataColumn("TrainingConducted", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrainingConducted);
                this.columnRegulatoryPermitRequirementsCompletedById = new System.Data.DataColumn("RegulatoryPermitRequirementsCompletedById", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegulatoryPermitRequirementsCompletedById);
                this.columnDateRegulatoryPermitRequirementsCompleted = new System.Data.DataColumn("DateRegulatoryPermitRequirementsCompleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateRegulatoryPermitRequirementsCompleted);
                this.columnRegulatoryPermitRequirementsCompleted = new System.Data.DataColumn("RegulatoryPermitRequirementsCompleted", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegulatoryPermitRequirementsCompleted);
                this.columnChangeRequirementsCompletedById = new System.Data.DataColumn("ChangeRequirementsCompletedById", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangeRequirementsCompletedById);
                this.columnDateChangeRequirementsCompleted = new System.Data.DataColumn("DateChangeRequirementsCompleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChangeRequirementsCompleted);
                this.columnChangeRequirementsCompletedComments = new System.Data.DataColumn("ChangeRequirementsCompletedComments", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangeRequirementsCompletedComments);
                this.columnLessonsLearnedCommunicatedById = new System.Data.DataColumn("LessonsLearnedCommunicatedById", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessonsLearnedCommunicatedById);
                this.columnDateLessonsLearnedCommunicated = new System.Data.DataColumn("DateLessonsLearnedCommunicated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateLessonsLearnedCommunicated);
                this.columnChangeReportCloseOutDocumentationById = new System.Data.DataColumn("ChangeReportCloseOutDocumentationById", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangeReportCloseOutDocumentationById);
                this.columnDateChangeReportCloseOutDocumentation = new System.Data.DataColumn("DateChangeReportCloseOutDocumentation", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChangeReportCloseOutDocumentation);
                this.columnApprovalForChangeReportCloseOutById = new System.Data.DataColumn("ApprovalForChangeReportCloseOutById", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalForChangeReportCloseOutById);
                this.columnDateApprovalForChangeReportCloseOut = new System.Data.DataColumn("DateApprovalForChangeReportCloseOut", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateApprovalForChangeReportCloseOut);
                this.columnrowguid = new System.Data.DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowguid);
                this.columnManageChangeStatusListsRowId = new System.Data.DataColumn("ManageChangeStatusListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManageChangeStatusListsRowId);
                this.columnInitiationCompletedSwitch = new System.Data.DataColumn("InitiationCompletedSwitch", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitiationCompletedSwitch);
                this.columnEvaluationCompletedSwitch = new System.Data.DataColumn("EvaluationCompletedSwitch", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvaluationCompletedSwitch);
                this.columnApprovalsCompletedSwitch = new System.Data.DataColumn("ApprovalsCompletedSwitch", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalsCompletedSwitch);
                this.columnImplementationCompletedSwitch = new System.Data.DataColumn("ImplementationCompletedSwitch", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnImplementationCompletedSwitch);
                this.columnCloseOutCompletedSwitch = new System.Data.DataColumn("CloseOutCompletedSwitch", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCloseOutCompletedSwitch);
                this.columnRejectedSwitch = new System.Data.DataColumn("RejectedSwitch", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRejectedSwitch);
                this.columnSwitchFreeSwitch = new System.Data.DataColumn("SwitchFreeSwitch", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFreeSwitch);
                this.columnAcceptedByMaster = new System.Data.DataColumn("AcceptedByMaster", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptedByMaster);
                this.columnComputedExposure = new System.Data.DataColumn("ComputedExposure", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnComputedExposure);
                this.columnMasterRowId = new System.Data.DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new System.Data.DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new System.Data.DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new System.Data.DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new System.Data.DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new System.Data.DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new System.Data.DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new System.Data.DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new System.Data.DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new System.Data.DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new System.Data.DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new System.Data.DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new System.Data.DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new System.Data.DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new System.Data.DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new System.Data.DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new System.Data.DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new System.Data.DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new System.Data.DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree3);
                this.columnnTextFree1 = new System.Data.DataColumn("nTextFree1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree1);
                this.columnnTextFree2 = new System.Data.DataColumn("nTextFree2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree2);
                this.columnnTextFree3 = new System.Data.DataColumn("nTextFree3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree3);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnManageChangeRowId}, true));
                this.columnManageChangeRowId.AutoIncrement = true;
                this.columnManageChangeRowId.AllowDBNull = false;
                this.columnManageChangeRowId.ReadOnly = true;
                this.columnManageChangeRowId.Unique = true;
                this.columnManageChangeReferenceId.MaxLength = 50;
                this.columnNatureOfChange.MaxLength = 1073741823;
                this.columnDescriptionCurrent.MaxLength = 1073741823;
                this.columnDescription.MaxLength = 1073741823;
                this.columnJustification.MaxLength = 1073741823;
                this.columnPotentialConsequence.MaxLength = 1073741823;
                this.columnMigration.MaxLength = 1073741823;
                this.columnTraining.MaxLength = 1073741823;
                this.columnCostOfChange.MaxLength = 1073741823;
                this.columnComments.MaxLength = 1073741823;
                this.columnLessonsLearned.MaxLength = 1073741823;
                this.columnMethodOfCommunication.MaxLength = 1073741823;
                this.columnDocumentsChanged.MaxLength = 1073741823;
                this.columnTrainingConducted.MaxLength = 1073741823;
                this.columnRegulatoryPermitRequirementsCompleted.MaxLength = 1073741823;
                this.columnChangeRequirementsCompletedComments.MaxLength = 1073741823;
                this.columnTextFree1.MaxLength = 200;
                this.columnTextFree2.MaxLength = 200;
                this.columnTextFree3.MaxLength = 200;
                this.columnnTextFree1.MaxLength = 1073741823;
                this.columnnTextFree2.MaxLength = 1073741823;
                this.columnnTextFree3.MaxLength = 1073741823;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAManageChangeRow NewGAManageChangeRow() {
                return ((GAManageChangeRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new GAManageChangeRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(GAManageChangeRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAManageChangeRowChanged != null)) {
                    this.GAManageChangeRowChanged(this, new GAManageChangeRowChangeEvent(((GAManageChangeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAManageChangeRowChanging != null)) {
                    this.GAManageChangeRowChanging(this, new GAManageChangeRowChangeEvent(((GAManageChangeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAManageChangeRowDeleted != null)) {
                    this.GAManageChangeRowDeleted(this, new GAManageChangeRowChangeEvent(((GAManageChangeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAManageChangeRowDeleting != null)) {
                    this.GAManageChangeRowDeleting(this, new GAManageChangeRowChangeEvent(((GAManageChangeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGAManageChangeRow(GAManageChangeRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ManageChangeDS ds = new ManageChangeDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GAManageChangeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GAManageChangeRow : System.Data.DataRow {
            
            private GAManageChangeDataTable tableGAManageChange;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAManageChangeRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAManageChange = ((GAManageChangeDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ManageChangeRowId {
                get {
                    return ((int)(this[this.tableGAManageChange.ManageChangeRowIdColumn]));
                }
                set {
                    this[this.tableGAManageChange.ManageChangeRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ProjectRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ProjectRowId\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ProjectRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LocationRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.LocationRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LocationRowId\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.LocationRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ManageChangeReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ManageChangeReferenceIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ManageChangeReferenceId\' in table \'GAManageChange\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ManageChangeReferenceIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfRequest {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateOfRequestColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateOfRequest\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateOfRequestColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateEffective {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateEffectiveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateEffective\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateEffectiveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContractual {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.IsContractualColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IsContractual\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.IsContractualColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TypeOfChangeRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.TypeOfChangeRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TypeOfChangeRowId\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.TypeOfChangeRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfRemoval {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateOfRemovalColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateOfRemoval\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateOfRemovalColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NatureOfChange {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.NatureOfChangeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NatureOfChange\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.NatureOfChangeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NatureOfChangeRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.NatureOfChangeRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NatureOfChangeRowId\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.NatureOfChangeRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DescriptionCurrent {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.DescriptionCurrentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DescriptionCurrent\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DescriptionCurrentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.DescriptionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Description\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ResponsibleRoleListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ResponsibleRoleListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ResponsibleRoleListsRowId\' in table \'GAManageChange\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ResponsibleRoleListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RequestorId {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.RequestorIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RequestorId\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.RequestorIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EndorserId {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.EndorserIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EndorserId\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.EndorserIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfEndorsement {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateOfEndorsementColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateOfEndorsement\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateOfEndorsementColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Justification {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.JustificationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Justification\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.JustificationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool OnSiteRiskAssessmentCompleted {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.OnSiteRiskAssessmentCompletedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OnSiteRiskAssessmentCompleted\' in table \'GAManageChange\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.OnSiteRiskAssessmentCompletedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool OnshoreRiskAssessmentCompleted {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.OnshoreRiskAssessmentCompletedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OnshoreRiskAssessmentCompleted\' in table \'GAManageChange\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.OnshoreRiskAssessmentCompletedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool OnSiteJobSafetyAnalysisCompleted {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.OnSiteJobSafetyAnalysisCompletedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OnSiteJobSafetyAnalysisCompleted\' in table \'GAManageChange\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.OnSiteJobSafetyAnalysisCompletedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ApprovedByOnshoreManagement {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.ApprovedByOnshoreManagementColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ApprovedByOnshoreManagement\' in table \'GAManageChange\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovedByOnshoreManagementColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool OnSiteWorkInstructionCompleted {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.OnSiteWorkInstructionCompletedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OnSiteWorkInstructionCompleted\' in table \'GAManageChange\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.OnSiteWorkInstructionCompletedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PotentialConsequence {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.PotentialConsequenceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PotentialConsequence\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.PotentialConsequenceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Migration {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.MigrationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Migration\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.MigrationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TrainingRequired {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.TrainingRequiredColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TrainingRequired\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.TrainingRequiredColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Training {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.TrainingColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Training\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.TrainingColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CostOfChange {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.CostOfChangeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CostOfChange\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.CostOfChangeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IncreasedRisk {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.IncreasedRiskColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IncreasedRisk\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.IncreasedRiskColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.CommentsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Comments\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.CommentsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProposedById {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ProposedByIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ProposedById\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ProposedByIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfProposal {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateOfProposalColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateOfProposal\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateOfProposalColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReviewedById {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ReviewedByIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ReviewedById\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ReviewedByIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfReview {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateOfReviewColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateOfReview\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateOfReviewColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApprovalReviewedById1 {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ApprovalReviewedById1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ApprovalReviewedById1\' in table \'GAManageChange\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovalReviewedById1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ApprovalRevieweDate1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.ApprovalRevieweDate1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ApprovalRevieweDate1\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovalRevieweDate1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApprovalReviewedById2 {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ApprovalReviewedById2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ApprovalReviewedById2\' in table \'GAManageChange\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovalReviewedById2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ApprovalRevieweDate2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.ApprovalRevieweDate2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ApprovalRevieweDate2\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovalRevieweDate2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApprovalEndorsedById {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ApprovalEndorsedByIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ApprovalEndorsedById\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovalEndorsedByIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ApprovalEndorsedDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.ApprovalEndorsedDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ApprovalEndorsedDate\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovalEndorsedDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApprovedById {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ApprovedByIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ApprovedById\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovedByIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ApprovedDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.ApprovedDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ApprovedDate\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovedDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LessonsLearned {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.LessonsLearnedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LessonsLearned\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.LessonsLearnedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangeCommunicatedById {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ChangeCommunicatedByIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ChangeCommunicatedById\' in table \'GAManageChange\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ChangeCommunicatedByIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChangeCommunicated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateChangeCommunicatedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateChangeCommunicated\' in table \'GAManageChange\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateChangeCommunicatedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MethodOfCommunication {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.MethodOfCommunicationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MethodOfCommunication\' in table \'GAManageChange\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.MethodOfCommunicationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentationChangesById {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.DocumentationChangesByIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DocumentationChangesById\' in table \'GAManageChange\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DocumentationChangesByIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateDocumentationChanges {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateDocumentationChangesColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateDocumentationChanges\' in table \'GAManageChange\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateDocumentationChangesColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DocumentsChanged {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.DocumentsChangedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DocumentsChanged\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DocumentsChangedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TrainingRequriementsCompletedById {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.TrainingRequriementsCompletedByIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TrainingRequriementsCompletedById\' in table \'GAManageChange" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.TrainingRequriementsCompletedByIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTrainingRequriementsCompleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateTrainingRequriementsCompletedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTrainingRequriementsCompleted\' in table \'GAManageChange" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateTrainingRequriementsCompletedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrainingConducted {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.TrainingConductedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TrainingConducted\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.TrainingConductedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RegulatoryPermitRequirementsCompletedById {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.RegulatoryPermitRequirementsCompletedByIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RegulatoryPermitRequirementsCompletedById\' in table \'GAMana" +
                                "geChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.RegulatoryPermitRequirementsCompletedByIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateRegulatoryPermitRequirementsCompleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateRegulatoryPermitRequirementsCompletedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateRegulatoryPermitRequirementsCompleted\' in table \'GAMana" +
                                "geChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateRegulatoryPermitRequirementsCompletedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegulatoryPermitRequirementsCompleted {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.RegulatoryPermitRequirementsCompletedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RegulatoryPermitRequirementsCompleted\' in table \'GAManageCh" +
                                "ange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.RegulatoryPermitRequirementsCompletedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangeRequirementsCompletedById {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ChangeRequirementsCompletedByIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ChangeRequirementsCompletedById\' in table \'GAManageChange\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ChangeRequirementsCompletedByIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChangeRequirementsCompleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateChangeRequirementsCompletedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateChangeRequirementsCompleted\' in table \'GAManageChange\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateChangeRequirementsCompletedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChangeRequirementsCompletedComments {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ChangeRequirementsCompletedCommentsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ChangeRequirementsCompletedComments\' in table \'GAManageChan" +
                                "ge\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ChangeRequirementsCompletedCommentsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LessonsLearnedCommunicatedById {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.LessonsLearnedCommunicatedByIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LessonsLearnedCommunicatedById\' in table \'GAManageChange\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.LessonsLearnedCommunicatedByIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateLessonsLearnedCommunicated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateLessonsLearnedCommunicatedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateLessonsLearnedCommunicated\' in table \'GAManageChange\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateLessonsLearnedCommunicatedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangeReportCloseOutDocumentationById {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ChangeReportCloseOutDocumentationByIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ChangeReportCloseOutDocumentationById\' in table \'GAManageCh" +
                                "ange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ChangeReportCloseOutDocumentationByIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChangeReportCloseOutDocumentation {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateChangeReportCloseOutDocumentationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateChangeReportCloseOutDocumentation\' in table \'GAManageCh" +
                                "ange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateChangeReportCloseOutDocumentationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApprovalForChangeReportCloseOutById {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ApprovalForChangeReportCloseOutByIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ApprovalForChangeReportCloseOutById\' in table \'GAManageChan" +
                                "ge\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovalForChangeReportCloseOutByIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateApprovalForChangeReportCloseOut {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateApprovalForChangeReportCloseOutColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateApprovalForChangeReportCloseOut\' in table \'GAManageChan" +
                                "ge\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateApprovalForChangeReportCloseOutColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid rowguid {
                get {
                    try {
                        return ((System.Guid)(this[this.tableGAManageChange.rowguidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rowguid\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.rowguidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ManageChangeStatusListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ManageChangeStatusListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ManageChangeStatusListsRowId\' in table \'GAManageChange\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ManageChangeStatusListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InitiationCompletedSwitch {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.InitiationCompletedSwitchColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'InitiationCompletedSwitch\' in table \'GAManageChange\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.InitiationCompletedSwitchColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EvaluationCompletedSwitch {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.EvaluationCompletedSwitchColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EvaluationCompletedSwitch\' in table \'GAManageChange\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.EvaluationCompletedSwitchColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ApprovalsCompletedSwitch {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.ApprovalsCompletedSwitchColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ApprovalsCompletedSwitch\' in table \'GAManageChange\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovalsCompletedSwitchColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ImplementationCompletedSwitch {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.ImplementationCompletedSwitchColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ImplementationCompletedSwitch\' in table \'GAManageChange\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ImplementationCompletedSwitchColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CloseOutCompletedSwitch {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.CloseOutCompletedSwitchColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CloseOutCompletedSwitch\' in table \'GAManageChange\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.CloseOutCompletedSwitchColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RejectedSwitch {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.RejectedSwitchColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RejectedSwitch\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.RejectedSwitchColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFreeSwitch {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.SwitchFreeSwitchColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFreeSwitch\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.SwitchFreeSwitchColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AcceptedByMaster {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.AcceptedByMasterColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AcceptedByMaster\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.AcceptedByMasterColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ComputedExposure {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ComputedExposureColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ComputedExposure\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ComputedExposureColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.MasterRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MasterRowId\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.MasterRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateCreatedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateCreated\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateCreatedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.CreatedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.CreatedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateChangedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateChanged\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateChangedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ChangedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ChangedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateDeletedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateDeleted\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateDeletedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.DeletedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DeletedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.SwitchFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree1\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.SwitchFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.SwitchFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree2\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.SwitchFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.SwitchFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree3\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.SwitchFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateTimeFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree1\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateTimeFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateTimeFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree2\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateTimeFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateTimeFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree3\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateTimeFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.TextFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree1\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.TextFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.TextFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree2\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.TextFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.TextFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree3\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.TextFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.IntFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree1\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.IntFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.IntFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree2\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.IntFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.IntFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree3\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.IntFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.nTextFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nTextFree1\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.nTextFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.nTextFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nTextFree2\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.nTextFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.nTextFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nTextFree3\' in table \'GAManageChange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.nTextFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectRowIdNull() {
                return this.IsNull(this.tableGAManageChange.ProjectRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectRowIdNull() {
                this[this.tableGAManageChange.ProjectRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationRowIdNull() {
                return this.IsNull(this.tableGAManageChange.LocationRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationRowIdNull() {
                this[this.tableGAManageChange.LocationRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManageChangeReferenceIdNull() {
                return this.IsNull(this.tableGAManageChange.ManageChangeReferenceIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManageChangeReferenceIdNull() {
                this[this.tableGAManageChange.ManageChangeReferenceIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfRequestNull() {
                return this.IsNull(this.tableGAManageChange.DateOfRequestColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfRequestNull() {
                this[this.tableGAManageChange.DateOfRequestColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateEffectiveNull() {
                return this.IsNull(this.tableGAManageChange.DateEffectiveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateEffectiveNull() {
                this[this.tableGAManageChange.DateEffectiveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsContractualNull() {
                return this.IsNull(this.tableGAManageChange.IsContractualColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsContractualNull() {
                this[this.tableGAManageChange.IsContractualColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeOfChangeRowIdNull() {
                return this.IsNull(this.tableGAManageChange.TypeOfChangeRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeOfChangeRowIdNull() {
                this[this.tableGAManageChange.TypeOfChangeRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfRemovalNull() {
                return this.IsNull(this.tableGAManageChange.DateOfRemovalColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfRemovalNull() {
                this[this.tableGAManageChange.DateOfRemovalColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNatureOfChangeNull() {
                return this.IsNull(this.tableGAManageChange.NatureOfChangeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNatureOfChangeNull() {
                this[this.tableGAManageChange.NatureOfChangeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNatureOfChangeRowIdNull() {
                return this.IsNull(this.tableGAManageChange.NatureOfChangeRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNatureOfChangeRowIdNull() {
                this[this.tableGAManageChange.NatureOfChangeRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionCurrentNull() {
                return this.IsNull(this.tableGAManageChange.DescriptionCurrentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionCurrentNull() {
                this[this.tableGAManageChange.DescriptionCurrentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGAManageChange.DescriptionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableGAManageChange.DescriptionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResponsibleRoleListsRowIdNull() {
                return this.IsNull(this.tableGAManageChange.ResponsibleRoleListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResponsibleRoleListsRowIdNull() {
                this[this.tableGAManageChange.ResponsibleRoleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequestorIdNull() {
                return this.IsNull(this.tableGAManageChange.RequestorIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequestorIdNull() {
                this[this.tableGAManageChange.RequestorIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndorserIdNull() {
                return this.IsNull(this.tableGAManageChange.EndorserIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndorserIdNull() {
                this[this.tableGAManageChange.EndorserIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfEndorsementNull() {
                return this.IsNull(this.tableGAManageChange.DateOfEndorsementColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfEndorsementNull() {
                this[this.tableGAManageChange.DateOfEndorsementColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJustificationNull() {
                return this.IsNull(this.tableGAManageChange.JustificationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJustificationNull() {
                this[this.tableGAManageChange.JustificationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOnSiteRiskAssessmentCompletedNull() {
                return this.IsNull(this.tableGAManageChange.OnSiteRiskAssessmentCompletedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOnSiteRiskAssessmentCompletedNull() {
                this[this.tableGAManageChange.OnSiteRiskAssessmentCompletedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOnshoreRiskAssessmentCompletedNull() {
                return this.IsNull(this.tableGAManageChange.OnshoreRiskAssessmentCompletedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOnshoreRiskAssessmentCompletedNull() {
                this[this.tableGAManageChange.OnshoreRiskAssessmentCompletedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOnSiteJobSafetyAnalysisCompletedNull() {
                return this.IsNull(this.tableGAManageChange.OnSiteJobSafetyAnalysisCompletedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOnSiteJobSafetyAnalysisCompletedNull() {
                this[this.tableGAManageChange.OnSiteJobSafetyAnalysisCompletedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovedByOnshoreManagementNull() {
                return this.IsNull(this.tableGAManageChange.ApprovedByOnshoreManagementColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovedByOnshoreManagementNull() {
                this[this.tableGAManageChange.ApprovedByOnshoreManagementColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOnSiteWorkInstructionCompletedNull() {
                return this.IsNull(this.tableGAManageChange.OnSiteWorkInstructionCompletedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOnSiteWorkInstructionCompletedNull() {
                this[this.tableGAManageChange.OnSiteWorkInstructionCompletedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPotentialConsequenceNull() {
                return this.IsNull(this.tableGAManageChange.PotentialConsequenceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPotentialConsequenceNull() {
                this[this.tableGAManageChange.PotentialConsequenceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMigrationNull() {
                return this.IsNull(this.tableGAManageChange.MigrationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMigrationNull() {
                this[this.tableGAManageChange.MigrationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrainingRequiredNull() {
                return this.IsNull(this.tableGAManageChange.TrainingRequiredColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrainingRequiredNull() {
                this[this.tableGAManageChange.TrainingRequiredColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrainingNull() {
                return this.IsNull(this.tableGAManageChange.TrainingColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrainingNull() {
                this[this.tableGAManageChange.TrainingColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostOfChangeNull() {
                return this.IsNull(this.tableGAManageChange.CostOfChangeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostOfChangeNull() {
                this[this.tableGAManageChange.CostOfChangeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncreasedRiskNull() {
                return this.IsNull(this.tableGAManageChange.IncreasedRiskColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncreasedRiskNull() {
                this[this.tableGAManageChange.IncreasedRiskColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableGAManageChange.CommentsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableGAManageChange.CommentsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProposedByIdNull() {
                return this.IsNull(this.tableGAManageChange.ProposedByIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProposedByIdNull() {
                this[this.tableGAManageChange.ProposedByIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfProposalNull() {
                return this.IsNull(this.tableGAManageChange.DateOfProposalColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfProposalNull() {
                this[this.tableGAManageChange.DateOfProposalColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewedByIdNull() {
                return this.IsNull(this.tableGAManageChange.ReviewedByIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewedByIdNull() {
                this[this.tableGAManageChange.ReviewedByIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfReviewNull() {
                return this.IsNull(this.tableGAManageChange.DateOfReviewColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfReviewNull() {
                this[this.tableGAManageChange.DateOfReviewColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovalReviewedById1Null() {
                return this.IsNull(this.tableGAManageChange.ApprovalReviewedById1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovalReviewedById1Null() {
                this[this.tableGAManageChange.ApprovalReviewedById1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovalRevieweDate1Null() {
                return this.IsNull(this.tableGAManageChange.ApprovalRevieweDate1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovalRevieweDate1Null() {
                this[this.tableGAManageChange.ApprovalRevieweDate1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovalReviewedById2Null() {
                return this.IsNull(this.tableGAManageChange.ApprovalReviewedById2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovalReviewedById2Null() {
                this[this.tableGAManageChange.ApprovalReviewedById2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovalRevieweDate2Null() {
                return this.IsNull(this.tableGAManageChange.ApprovalRevieweDate2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovalRevieweDate2Null() {
                this[this.tableGAManageChange.ApprovalRevieweDate2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovalEndorsedByIdNull() {
                return this.IsNull(this.tableGAManageChange.ApprovalEndorsedByIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovalEndorsedByIdNull() {
                this[this.tableGAManageChange.ApprovalEndorsedByIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovalEndorsedDateNull() {
                return this.IsNull(this.tableGAManageChange.ApprovalEndorsedDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovalEndorsedDateNull() {
                this[this.tableGAManageChange.ApprovalEndorsedDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovedByIdNull() {
                return this.IsNull(this.tableGAManageChange.ApprovedByIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovedByIdNull() {
                this[this.tableGAManageChange.ApprovedByIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovedDateNull() {
                return this.IsNull(this.tableGAManageChange.ApprovedDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovedDateNull() {
                this[this.tableGAManageChange.ApprovedDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessonsLearnedNull() {
                return this.IsNull(this.tableGAManageChange.LessonsLearnedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessonsLearnedNull() {
                this[this.tableGAManageChange.LessonsLearnedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangeCommunicatedByIdNull() {
                return this.IsNull(this.tableGAManageChange.ChangeCommunicatedByIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangeCommunicatedByIdNull() {
                this[this.tableGAManageChange.ChangeCommunicatedByIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangeCommunicatedNull() {
                return this.IsNull(this.tableGAManageChange.DateChangeCommunicatedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangeCommunicatedNull() {
                this[this.tableGAManageChange.DateChangeCommunicatedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMethodOfCommunicationNull() {
                return this.IsNull(this.tableGAManageChange.MethodOfCommunicationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMethodOfCommunicationNull() {
                this[this.tableGAManageChange.MethodOfCommunicationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentationChangesByIdNull() {
                return this.IsNull(this.tableGAManageChange.DocumentationChangesByIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentationChangesByIdNull() {
                this[this.tableGAManageChange.DocumentationChangesByIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateDocumentationChangesNull() {
                return this.IsNull(this.tableGAManageChange.DateDocumentationChangesColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateDocumentationChangesNull() {
                this[this.tableGAManageChange.DateDocumentationChangesColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentsChangedNull() {
                return this.IsNull(this.tableGAManageChange.DocumentsChangedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentsChangedNull() {
                this[this.tableGAManageChange.DocumentsChangedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrainingRequriementsCompletedByIdNull() {
                return this.IsNull(this.tableGAManageChange.TrainingRequriementsCompletedByIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrainingRequriementsCompletedByIdNull() {
                this[this.tableGAManageChange.TrainingRequriementsCompletedByIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTrainingRequriementsCompletedNull() {
                return this.IsNull(this.tableGAManageChange.DateTrainingRequriementsCompletedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTrainingRequriementsCompletedNull() {
                this[this.tableGAManageChange.DateTrainingRequriementsCompletedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrainingConductedNull() {
                return this.IsNull(this.tableGAManageChange.TrainingConductedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrainingConductedNull() {
                this[this.tableGAManageChange.TrainingConductedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegulatoryPermitRequirementsCompletedByIdNull() {
                return this.IsNull(this.tableGAManageChange.RegulatoryPermitRequirementsCompletedByIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegulatoryPermitRequirementsCompletedByIdNull() {
                this[this.tableGAManageChange.RegulatoryPermitRequirementsCompletedByIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateRegulatoryPermitRequirementsCompletedNull() {
                return this.IsNull(this.tableGAManageChange.DateRegulatoryPermitRequirementsCompletedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateRegulatoryPermitRequirementsCompletedNull() {
                this[this.tableGAManageChange.DateRegulatoryPermitRequirementsCompletedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegulatoryPermitRequirementsCompletedNull() {
                return this.IsNull(this.tableGAManageChange.RegulatoryPermitRequirementsCompletedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegulatoryPermitRequirementsCompletedNull() {
                this[this.tableGAManageChange.RegulatoryPermitRequirementsCompletedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangeRequirementsCompletedByIdNull() {
                return this.IsNull(this.tableGAManageChange.ChangeRequirementsCompletedByIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangeRequirementsCompletedByIdNull() {
                this[this.tableGAManageChange.ChangeRequirementsCompletedByIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangeRequirementsCompletedNull() {
                return this.IsNull(this.tableGAManageChange.DateChangeRequirementsCompletedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangeRequirementsCompletedNull() {
                this[this.tableGAManageChange.DateChangeRequirementsCompletedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangeRequirementsCompletedCommentsNull() {
                return this.IsNull(this.tableGAManageChange.ChangeRequirementsCompletedCommentsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangeRequirementsCompletedCommentsNull() {
                this[this.tableGAManageChange.ChangeRequirementsCompletedCommentsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessonsLearnedCommunicatedByIdNull() {
                return this.IsNull(this.tableGAManageChange.LessonsLearnedCommunicatedByIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessonsLearnedCommunicatedByIdNull() {
                this[this.tableGAManageChange.LessonsLearnedCommunicatedByIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateLessonsLearnedCommunicatedNull() {
                return this.IsNull(this.tableGAManageChange.DateLessonsLearnedCommunicatedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateLessonsLearnedCommunicatedNull() {
                this[this.tableGAManageChange.DateLessonsLearnedCommunicatedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangeReportCloseOutDocumentationByIdNull() {
                return this.IsNull(this.tableGAManageChange.ChangeReportCloseOutDocumentationByIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangeReportCloseOutDocumentationByIdNull() {
                this[this.tableGAManageChange.ChangeReportCloseOutDocumentationByIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangeReportCloseOutDocumentationNull() {
                return this.IsNull(this.tableGAManageChange.DateChangeReportCloseOutDocumentationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangeReportCloseOutDocumentationNull() {
                this[this.tableGAManageChange.DateChangeReportCloseOutDocumentationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovalForChangeReportCloseOutByIdNull() {
                return this.IsNull(this.tableGAManageChange.ApprovalForChangeReportCloseOutByIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovalForChangeReportCloseOutByIdNull() {
                this[this.tableGAManageChange.ApprovalForChangeReportCloseOutByIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateApprovalForChangeReportCloseOutNull() {
                return this.IsNull(this.tableGAManageChange.DateApprovalForChangeReportCloseOutColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateApprovalForChangeReportCloseOutNull() {
                this[this.tableGAManageChange.DateApprovalForChangeReportCloseOutColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGAManageChange.rowguidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrowguidNull() {
                this[this.tableGAManageChange.rowguidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManageChangeStatusListsRowIdNull() {
                return this.IsNull(this.tableGAManageChange.ManageChangeStatusListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManageChangeStatusListsRowIdNull() {
                this[this.tableGAManageChange.ManageChangeStatusListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInitiationCompletedSwitchNull() {
                return this.IsNull(this.tableGAManageChange.InitiationCompletedSwitchColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInitiationCompletedSwitchNull() {
                this[this.tableGAManageChange.InitiationCompletedSwitchColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEvaluationCompletedSwitchNull() {
                return this.IsNull(this.tableGAManageChange.EvaluationCompletedSwitchColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEvaluationCompletedSwitchNull() {
                this[this.tableGAManageChange.EvaluationCompletedSwitchColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovalsCompletedSwitchNull() {
                return this.IsNull(this.tableGAManageChange.ApprovalsCompletedSwitchColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovalsCompletedSwitchNull() {
                this[this.tableGAManageChange.ApprovalsCompletedSwitchColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImplementationCompletedSwitchNull() {
                return this.IsNull(this.tableGAManageChange.ImplementationCompletedSwitchColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImplementationCompletedSwitchNull() {
                this[this.tableGAManageChange.ImplementationCompletedSwitchColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCloseOutCompletedSwitchNull() {
                return this.IsNull(this.tableGAManageChange.CloseOutCompletedSwitchColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCloseOutCompletedSwitchNull() {
                this[this.tableGAManageChange.CloseOutCompletedSwitchColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRejectedSwitchNull() {
                return this.IsNull(this.tableGAManageChange.RejectedSwitchColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRejectedSwitchNull() {
                this[this.tableGAManageChange.RejectedSwitchColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFreeSwitchNull() {
                return this.IsNull(this.tableGAManageChange.SwitchFreeSwitchColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFreeSwitchNull() {
                this[this.tableGAManageChange.SwitchFreeSwitchColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcceptedByMasterNull() {
                return this.IsNull(this.tableGAManageChange.AcceptedByMasterColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcceptedByMasterNull() {
                this[this.tableGAManageChange.AcceptedByMasterColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComputedExposureNull() {
                return this.IsNull(this.tableGAManageChange.ComputedExposureColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComputedExposureNull() {
                this[this.tableGAManageChange.ComputedExposureColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAManageChange.MasterRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterRowIdNull() {
                this[this.tableGAManageChange.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAManageChange.DateCreatedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateCreatedNull() {
                this[this.tableGAManageChange.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAManageChange.CreatedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableGAManageChange.CreatedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAManageChange.DateChangedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangedNull() {
                this[this.tableGAManageChange.DateChangedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAManageChange.ChangedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableGAManageChange.ChangedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAManageChange.DateDeletedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateDeletedNull() {
                this[this.tableGAManageChange.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAManageChange.DeletedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableGAManageChange.DeletedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAManageChange.SwitchFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree1Null() {
                this[this.tableGAManageChange.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAManageChange.SwitchFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree2Null() {
                this[this.tableGAManageChange.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAManageChange.SwitchFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree3Null() {
                this[this.tableGAManageChange.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAManageChange.DateTimeFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree1Null() {
                this[this.tableGAManageChange.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAManageChange.DateTimeFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree2Null() {
                this[this.tableGAManageChange.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAManageChange.DateTimeFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree3Null() {
                this[this.tableGAManageChange.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAManageChange.TextFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree1Null() {
                this[this.tableGAManageChange.TextFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAManageChange.TextFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree2Null() {
                this[this.tableGAManageChange.TextFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAManageChange.TextFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree3Null() {
                this[this.tableGAManageChange.TextFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAManageChange.IntFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree1Null() {
                this[this.tableGAManageChange.IntFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAManageChange.IntFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree2Null() {
                this[this.tableGAManageChange.IntFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAManageChange.IntFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree3Null() {
                this[this.tableGAManageChange.IntFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree1Null() {
                return this.IsNull(this.tableGAManageChange.nTextFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree1Null() {
                this[this.tableGAManageChange.nTextFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree2Null() {
                return this.IsNull(this.tableGAManageChange.nTextFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree2Null() {
                this[this.tableGAManageChange.nTextFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree3Null() {
                return this.IsNull(this.tableGAManageChange.nTextFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree3Null() {
                this[this.tableGAManageChange.nTextFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GAManageChangeRowChangeEvent : System.EventArgs {
            
            private GAManageChangeRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAManageChangeRowChangeEvent(GAManageChangeRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAManageChangeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GASystem.DataModel.ManageChangeDSTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GAManageChangeTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GAManageChangeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GAManageChange";
            tableMapping.ColumnMappings.Add("ManageChangeRowId", "ManageChangeRowId");
            tableMapping.ColumnMappings.Add("ProjectRowId", "ProjectRowId");
            tableMapping.ColumnMappings.Add("LocationRowId", "LocationRowId");
            tableMapping.ColumnMappings.Add("ManageChangeReferenceId", "ManageChangeReferenceId");
            tableMapping.ColumnMappings.Add("DateOfRequest", "DateOfRequest");
            tableMapping.ColumnMappings.Add("DateEffective", "DateEffective");
            tableMapping.ColumnMappings.Add("IsContractual", "IsContractual");
            tableMapping.ColumnMappings.Add("TypeOfChangeRowId", "TypeOfChangeRowId");
            tableMapping.ColumnMappings.Add("DateOfRemoval", "DateOfRemoval");
            tableMapping.ColumnMappings.Add("NatureOfChange", "NatureOfChange");
            tableMapping.ColumnMappings.Add("NatureOfChangeRowId", "NatureOfChangeRowId");
            tableMapping.ColumnMappings.Add("DescriptionCurrent", "DescriptionCurrent");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("ResponsibleRoleListsRowId", "ResponsibleRoleListsRowId");
            tableMapping.ColumnMappings.Add("RequestorId", "RequestorId");
            tableMapping.ColumnMappings.Add("EndorserId", "EndorserId");
            tableMapping.ColumnMappings.Add("DateOfEndorsement", "DateOfEndorsement");
            tableMapping.ColumnMappings.Add("Justification", "Justification");
            tableMapping.ColumnMappings.Add("OnSiteRiskAssessmentCompleted", "OnSiteRiskAssessmentCompleted");
            tableMapping.ColumnMappings.Add("OnshoreRiskAssessmentCompleted", "OnshoreRiskAssessmentCompleted");
            tableMapping.ColumnMappings.Add("OnSiteJobSafetyAnalysisCompleted", "OnSiteJobSafetyAnalysisCompleted");
            tableMapping.ColumnMappings.Add("ApprovedByOnshoreManagement", "ApprovedByOnshoreManagement");
            tableMapping.ColumnMappings.Add("OnSiteWorkInstructionCompleted", "OnSiteWorkInstructionCompleted");
            tableMapping.ColumnMappings.Add("PotentialConsequence", "PotentialConsequence");
            tableMapping.ColumnMappings.Add("Migration", "Migration");
            tableMapping.ColumnMappings.Add("TrainingRequired", "TrainingRequired");
            tableMapping.ColumnMappings.Add("Training", "Training");
            tableMapping.ColumnMappings.Add("CostOfChange", "CostOfChange");
            tableMapping.ColumnMappings.Add("IncreasedRisk", "IncreasedRisk");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("ProposedById", "ProposedById");
            tableMapping.ColumnMappings.Add("DateOfProposal", "DateOfProposal");
            tableMapping.ColumnMappings.Add("ReviewedById", "ReviewedById");
            tableMapping.ColumnMappings.Add("DateOfReview", "DateOfReview");
            tableMapping.ColumnMappings.Add("ApprovalReviewedById1", "ApprovalReviewedById1");
            tableMapping.ColumnMappings.Add("ApprovalRevieweDate1", "ApprovalRevieweDate1");
            tableMapping.ColumnMappings.Add("ApprovalReviewedById2", "ApprovalReviewedById2");
            tableMapping.ColumnMappings.Add("ApprovalRevieweDate2", "ApprovalRevieweDate2");
            tableMapping.ColumnMappings.Add("ApprovalEndorsedById", "ApprovalEndorsedById");
            tableMapping.ColumnMappings.Add("ApprovalEndorsedDate", "ApprovalEndorsedDate");
            tableMapping.ColumnMappings.Add("ApprovedById", "ApprovedById");
            tableMapping.ColumnMappings.Add("ApprovedDate", "ApprovedDate");
            tableMapping.ColumnMappings.Add("LessonsLearned", "LessonsLearned");
            tableMapping.ColumnMappings.Add("ChangeCommunicatedById", "ChangeCommunicatedById");
            tableMapping.ColumnMappings.Add("DateChangeCommunicated", "DateChangeCommunicated");
            tableMapping.ColumnMappings.Add("MethodOfCommunication", "MethodOfCommunication");
            tableMapping.ColumnMappings.Add("DocumentationChangesById", "DocumentationChangesById");
            tableMapping.ColumnMappings.Add("DateDocumentationChanges", "DateDocumentationChanges");
            tableMapping.ColumnMappings.Add("DocumentsChanged", "DocumentsChanged");
            tableMapping.ColumnMappings.Add("TrainingRequriementsCompletedById", "TrainingRequriementsCompletedById");
            tableMapping.ColumnMappings.Add("DateTrainingRequriementsCompleted", "DateTrainingRequriementsCompleted");
            tableMapping.ColumnMappings.Add("TrainingConducted", "TrainingConducted");
            tableMapping.ColumnMappings.Add("RegulatoryPermitRequirementsCompletedById", "RegulatoryPermitRequirementsCompletedById");
            tableMapping.ColumnMappings.Add("DateRegulatoryPermitRequirementsCompleted", "DateRegulatoryPermitRequirementsCompleted");
            tableMapping.ColumnMappings.Add("RegulatoryPermitRequirementsCompleted", "RegulatoryPermitRequirementsCompleted");
            tableMapping.ColumnMappings.Add("ChangeRequirementsCompletedById", "ChangeRequirementsCompletedById");
            tableMapping.ColumnMappings.Add("DateChangeRequirementsCompleted", "DateChangeRequirementsCompleted");
            tableMapping.ColumnMappings.Add("ChangeRequirementsCompletedComments", "ChangeRequirementsCompletedComments");
            tableMapping.ColumnMappings.Add("LessonsLearnedCommunicatedById", "LessonsLearnedCommunicatedById");
            tableMapping.ColumnMappings.Add("DateLessonsLearnedCommunicated", "DateLessonsLearnedCommunicated");
            tableMapping.ColumnMappings.Add("ChangeReportCloseOutDocumentationById", "ChangeReportCloseOutDocumentationById");
            tableMapping.ColumnMappings.Add("DateChangeReportCloseOutDocumentation", "DateChangeReportCloseOutDocumentation");
            tableMapping.ColumnMappings.Add("ApprovalForChangeReportCloseOutById", "ApprovalForChangeReportCloseOutById");
            tableMapping.ColumnMappings.Add("DateApprovalForChangeReportCloseOut", "DateApprovalForChangeReportCloseOut");
            tableMapping.ColumnMappings.Add("rowguid", "rowguid");
            tableMapping.ColumnMappings.Add("ManageChangeStatusListsRowId", "ManageChangeStatusListsRowId");
            tableMapping.ColumnMappings.Add("InitiationCompletedSwitch", "InitiationCompletedSwitch");
            tableMapping.ColumnMappings.Add("EvaluationCompletedSwitch", "EvaluationCompletedSwitch");
            tableMapping.ColumnMappings.Add("ApprovalsCompletedSwitch", "ApprovalsCompletedSwitch");
            tableMapping.ColumnMappings.Add("ImplementationCompletedSwitch", "ImplementationCompletedSwitch");
            tableMapping.ColumnMappings.Add("CloseOutCompletedSwitch", "CloseOutCompletedSwitch");
            tableMapping.ColumnMappings.Add("RejectedSwitch", "RejectedSwitch");
            tableMapping.ColumnMappings.Add("SwitchFreeSwitch", "SwitchFreeSwitch");
            tableMapping.ColumnMappings.Add("AcceptedByMaster", "AcceptedByMaster");
            tableMapping.ColumnMappings.Add("ComputedExposure", "ComputedExposure");
            tableMapping.ColumnMappings.Add("MasterRowId", "MasterRowId");
            tableMapping.ColumnMappings.Add("DateCreated", "DateCreated");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("DateChanged", "DateChanged");
            tableMapping.ColumnMappings.Add("ChangedBy", "ChangedBy");
            tableMapping.ColumnMappings.Add("DateDeleted", "DateDeleted");
            tableMapping.ColumnMappings.Add("DeletedBy", "DeletedBy");
            tableMapping.ColumnMappings.Add("SwitchFree1", "SwitchFree1");
            tableMapping.ColumnMappings.Add("SwitchFree2", "SwitchFree2");
            tableMapping.ColumnMappings.Add("SwitchFree3", "SwitchFree3");
            tableMapping.ColumnMappings.Add("DateTimeFree1", "DateTimeFree1");
            tableMapping.ColumnMappings.Add("DateTimeFree2", "DateTimeFree2");
            tableMapping.ColumnMappings.Add("DateTimeFree3", "DateTimeFree3");
            tableMapping.ColumnMappings.Add("TextFree1", "TextFree1");
            tableMapping.ColumnMappings.Add("TextFree2", "TextFree2");
            tableMapping.ColumnMappings.Add("TextFree3", "TextFree3");
            tableMapping.ColumnMappings.Add("IntFree1", "IntFree1");
            tableMapping.ColumnMappings.Add("IntFree2", "IntFree2");
            tableMapping.ColumnMappings.Add("IntFree3", "IntFree3");
            tableMapping.ColumnMappings.Add("nTextFree1", "nTextFree1");
            tableMapping.ColumnMappings.Add("nTextFree2", "nTextFree2");
            tableMapping.ColumnMappings.Add("nTextFree3", "nTextFree3");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[GAManageChange] WHERE (([ManageChangeRowId] = @Original_Manage" +
                "ChangeRowId) AND ((@IsNull_ProjectRowId = 1 AND [ProjectRowId] IS NULL) OR ([Pro" +
                "jectRowId] = @Original_ProjectRowId)) AND ((@IsNull_LocationRowId = 1 AND [Locat" +
                "ionRowId] IS NULL) OR ([LocationRowId] = @Original_LocationRowId)) AND ((@IsNull" +
                "_ManageChangeReferenceId = 1 AND [ManageChangeReferenceId] IS NULL) OR ([ManageC" +
                "hangeReferenceId] = @Original_ManageChangeReferenceId)) AND ((@IsNull_DateOfRequ" +
                "est = 1 AND [DateOfRequest] IS NULL) OR ([DateOfRequest] = @Original_DateOfReque" +
                "st)) AND ((@IsNull_DateEffective = 1 AND [DateEffective] IS NULL) OR ([DateEffec" +
                "tive] = @Original_DateEffective)) AND ((@IsNull_IsContractual = 1 AND [IsContrac" +
                "tual] IS NULL) OR ([IsContractual] = @Original_IsContractual)) AND ((@IsNull_Typ" +
                "eOfChangeRowId = 1 AND [TypeOfChangeRowId] IS NULL) OR ([TypeOfChangeRowId] = @O" +
                "riginal_TypeOfChangeRowId)) AND ((@IsNull_DateOfRemoval = 1 AND [DateOfRemoval] " +
                "IS NULL) OR ([DateOfRemoval] = @Original_DateOfRemoval)) AND ((@IsNull_NatureOfC" +
                "hangeRowId = 1 AND [NatureOfChangeRowId] IS NULL) OR ([NatureOfChangeRowId] = @O" +
                "riginal_NatureOfChangeRowId)) AND ((@IsNull_ResponsibleRoleListsRowId = 1 AND [R" +
                "esponsibleRoleListsRowId] IS NULL) OR ([ResponsibleRoleListsRowId] = @Original_R" +
                "esponsibleRoleListsRowId)) AND ((@IsNull_RequestorId = 1 AND [RequestorId] IS NU" +
                "LL) OR ([RequestorId] = @Original_RequestorId)) AND ((@IsNull_EndorserId = 1 AND" +
                " [EndorserId] IS NULL) OR ([EndorserId] = @Original_EndorserId)) AND ((@IsNull_D" +
                "ateOfEndorsement = 1 AND [DateOfEndorsement] IS NULL) OR ([DateOfEndorsement] = " +
                "@Original_DateOfEndorsement)) AND ((@IsNull_OnSiteRiskAssessmentCompleted = 1 AN" +
                "D [OnSiteRiskAssessmentCompleted] IS NULL) OR ([OnSiteRiskAssessmentCompleted] =" +
                " @Original_OnSiteRiskAssessmentCompleted)) AND ((@IsNull_OnshoreRiskAssessmentCo" +
                "mpleted = 1 AND [OnshoreRiskAssessmentCompleted] IS NULL) OR ([OnshoreRiskAssess" +
                "mentCompleted] = @Original_OnshoreRiskAssessmentCompleted)) AND ((@IsNull_OnSite" +
                "JobSafetyAnalysisCompleted = 1 AND [OnSiteJobSafetyAnalysisCompleted] IS NULL) O" +
                "R ([OnSiteJobSafetyAnalysisCompleted] = @Original_OnSiteJobSafetyAnalysisComplet" +
                "ed)) AND ((@IsNull_ApprovedByOnshoreManagement = 1 AND [ApprovedByOnshoreManagem" +
                "ent] IS NULL) OR ([ApprovedByOnshoreManagement] = @Original_ApprovedByOnshoreMan" +
                "agement)) AND ((@IsNull_OnSiteWorkInstructionCompleted = 1 AND [OnSiteWorkInstru" +
                "ctionCompleted] IS NULL) OR ([OnSiteWorkInstructionCompleted] = @Original_OnSite" +
                "WorkInstructionCompleted)) AND ((@IsNull_TrainingRequired = 1 AND [TrainingRequi" +
                "red] IS NULL) OR ([TrainingRequired] = @Original_TrainingRequired)) AND ((@IsNul" +
                "l_IncreasedRisk = 1 AND [IncreasedRisk] IS NULL) OR ([IncreasedRisk] = @Original" +
                "_IncreasedRisk)) AND ((@IsNull_ProposedById = 1 AND [ProposedById] IS NULL) OR (" +
                "[ProposedById] = @Original_ProposedById)) AND ((@IsNull_DateOfProposal = 1 AND [" +
                "DateOfProposal] IS NULL) OR ([DateOfProposal] = @Original_DateOfProposal)) AND (" +
                "(@IsNull_ReviewedById = 1 AND [ReviewedById] IS NULL) OR ([ReviewedById] = @Orig" +
                "inal_ReviewedById)) AND ((@IsNull_DateOfReview = 1 AND [DateOfReview] IS NULL) O" +
                "R ([DateOfReview] = @Original_DateOfReview)) AND ((@IsNull_ApprovalReviewedById1" +
                " = 1 AND [ApprovalReviewedById1] IS NULL) OR ([ApprovalReviewedById1] = @Origina" +
                "l_ApprovalReviewedById1)) AND ((@IsNull_ApprovalRevieweDate1 = 1 AND [ApprovalRe" +
                "vieweDate1] IS NULL) OR ([ApprovalRevieweDate1] = @Original_ApprovalRevieweDate1" +
                ")) AND ((@IsNull_ApprovalReviewedById2 = 1 AND [ApprovalReviewedById2] IS NULL) " +
                "OR ([ApprovalReviewedById2] = @Original_ApprovalReviewedById2)) AND ((@IsNull_Ap" +
                "provalRevieweDate2 = 1 AND [ApprovalRevieweDate2] IS NULL) OR ([ApprovalRevieweD" +
                "ate2] = @Original_ApprovalRevieweDate2)) AND ((@IsNull_ApprovalEndorsedById = 1 " +
                "AND [ApprovalEndorsedById] IS NULL) OR ([ApprovalEndorsedById] = @Original_Appro" +
                "valEndorsedById)) AND ((@IsNull_ApprovalEndorsedDate = 1 AND [ApprovalEndorsedDa" +
                "te] IS NULL) OR ([ApprovalEndorsedDate] = @Original_ApprovalEndorsedDate)) AND (" +
                "(@IsNull_ApprovedById = 1 AND [ApprovedById] IS NULL) OR ([ApprovedById] = @Orig" +
                "inal_ApprovedById)) AND ((@IsNull_ApprovedDate = 1 AND [ApprovedDate] IS NULL) O" +
                "R ([ApprovedDate] = @Original_ApprovedDate)) AND ((@IsNull_ChangeCommunicatedByI" +
                "d = 1 AND [ChangeCommunicatedById] IS NULL) OR ([ChangeCommunicatedById] = @Orig" +
                "inal_ChangeCommunicatedById)) AND ((@IsNull_DateChangeCommunicated = 1 AND [Date" +
                "ChangeCommunicated] IS NULL) OR ([DateChangeCommunicated] = @Original_DateChange" +
                "Communicated)) AND ((@IsNull_DocumentationChangesById = 1 AND [DocumentationChan" +
                "gesById] IS NULL) OR ([DocumentationChangesById] = @Original_DocumentationChange" +
                "sById)) AND ((@IsNull_DateDocumentationChanges = 1 AND [DateDocumentationChanges" +
                "] IS NULL) OR ([DateDocumentationChanges] = @Original_DateDocumentationChanges))" +
                " AND ((@IsNull_TrainingRequriementsCompletedById = 1 AND [TrainingRequriementsCo" +
                "mpletedById] IS NULL) OR ([TrainingRequriementsCompletedById] = @Original_Traini" +
                "ngRequriementsCompletedById)) AND ((@IsNull_DateTrainingRequriementsCompleted = " +
                "1 AND [DateTrainingRequriementsCompleted] IS NULL) OR ([DateTrainingRequriements" +
                "Completed] = @Original_DateTrainingRequriementsCompleted)) AND ((@IsNull_Regulat" +
                "oryPermitRequirementsCompletedById = 1 AND [RegulatoryPermitRequirementsComplete" +
                "dById] IS NULL) OR ([RegulatoryPermitRequirementsCompletedById] = @Original_Regu" +
                "latoryPermitRequirementsCompletedById)) AND ((@IsNull_DateRegulatoryPermitRequir" +
                "ementsCompleted = 1 AND [DateRegulatoryPermitRequirementsCompleted] IS NULL) OR " +
                "([DateRegulatoryPermitRequirementsCompleted] = @Original_DateRegulatoryPermitReq" +
                "uirementsCompleted)) AND ((@IsNull_ChangeRequirementsCompletedById = 1 AND [Chan" +
                "geRequirementsCompletedById] IS NULL) OR ([ChangeRequirementsCompletedById] = @O" +
                "riginal_ChangeRequirementsCompletedById)) AND ((@IsNull_DateChangeRequirementsCo" +
                "mpleted = 1 AND [DateChangeRequirementsCompleted] IS NULL) OR ([DateChangeRequir" +
                "ementsCompleted] = @Original_DateChangeRequirementsCompleted)) AND ((@IsNull_Les" +
                "sonsLearnedCommunicatedById = 1 AND [LessonsLearnedCommunicatedById] IS NULL) OR" +
                " ([LessonsLearnedCommunicatedById] = @Original_LessonsLearnedCommunicatedById)) " +
                "AND ((@IsNull_DateLessonsLearnedCommunicated = 1 AND [DateLessonsLearnedCommunic" +
                "ated] IS NULL) OR ([DateLessonsLearnedCommunicated] = @Original_DateLessonsLearn" +
                "edCommunicated)) AND ((@IsNull_ChangeReportCloseOutDocumentationById = 1 AND [Ch" +
                "angeReportCloseOutDocumentationById] IS NULL) OR ([ChangeReportCloseOutDocumenta" +
                "tionById] = @Original_ChangeReportCloseOutDocumentationById)) AND ((@IsNull_Date" +
                "ChangeReportCloseOutDocumentation = 1 AND [DateChangeReportCloseOutDocumentation" +
                "] IS NULL) OR ([DateChangeReportCloseOutDocumentation] = @Original_DateChangeRep" +
                "ortCloseOutDocumentation)) AND ((@IsNull_ApprovalForChangeReportCloseOutById = 1" +
                " AND [ApprovalForChangeReportCloseOutById] IS NULL) OR ([ApprovalForChangeReport" +
                "CloseOutById] = @Original_ApprovalForChangeReportCloseOutById)) AND ((@IsNull_Da" +
                "teApprovalForChangeReportCloseOut = 1 AND [DateApprovalForChangeReportCloseOut] " +
                "IS NULL) OR ([DateApprovalForChangeReportCloseOut] = @Original_DateApprovalForCh" +
                "angeReportCloseOut)) AND ([rowguid] = @Original_rowguid) AND ((@IsNull_ManageCha" +
                "ngeStatusListsRowId = 1 AND [ManageChangeStatusListsRowId] IS NULL) OR ([ManageC" +
                "hangeStatusListsRowId] = @Original_ManageChangeStatusListsRowId)) AND ((@IsNull_" +
                "InitiationCompletedSwitch = 1 AND [InitiationCompletedSwitch] IS NULL) OR ([Init" +
                "iationCompletedSwitch] = @Original_InitiationCompletedSwitch)) AND ((@IsNull_Eva" +
                "luationCompletedSwitch = 1 AND [EvaluationCompletedSwitch] IS NULL) OR ([Evaluat" +
                "ionCompletedSwitch] = @Original_EvaluationCompletedSwitch)) AND ((@IsNull_Approv" +
                "alsCompletedSwitch = 1 AND [ApprovalsCompletedSwitch] IS NULL) OR ([ApprovalsCom" +
                "pletedSwitch] = @Original_ApprovalsCompletedSwitch)) AND ((@IsNull_Implementatio" +
                "nCompletedSwitch = 1 AND [ImplementationCompletedSwitch] IS NULL) OR ([Implement" +
                "ationCompletedSwitch] = @Original_ImplementationCompletedSwitch)) AND ((@IsNull_" +
                "CloseOutCompletedSwitch = 1 AND [CloseOutCompletedSwitch] IS NULL) OR ([CloseOut" +
                "CompletedSwitch] = @Original_CloseOutCompletedSwitch)) AND ((@IsNull_RejectedSwi" +
                "tch = 1 AND [RejectedSwitch] IS NULL) OR ([RejectedSwitch] = @Original_RejectedS" +
                "witch)) AND ((@IsNull_SwitchFreeSwitch = 1 AND [SwitchFreeSwitch] IS NULL) OR ([" +
                "SwitchFreeSwitch] = @Original_SwitchFreeSwitch)) AND ((@IsNull_AcceptedByMaster " +
                "= 1 AND [AcceptedByMaster] IS NULL) OR ([AcceptedByMaster] = @Original_AcceptedB" +
                "yMaster)) AND ((@IsNull_ComputedExposure = 1 AND [ComputedExposure] IS NULL) OR " +
                "([ComputedExposure] = @Original_ComputedExposure)) AND ((@IsNull_MasterRowId = 1" +
                " AND [MasterRowId] IS NULL) OR ([MasterRowId] = @Original_MasterRowId)) AND ((@I" +
                "sNull_DateCreated = 1 AND [DateCreated] IS NULL) OR ([DateCreated] = @Original_D" +
                "ateCreated)) AND ((@IsNull_CreatedBy = 1 AND [CreatedBy] IS NULL) OR ([CreatedBy" +
                "] = @Original_CreatedBy)) AND ((@IsNull_DateChanged = 1 AND [DateChanged] IS NUL" +
                "L) OR ([DateChanged] = @Original_DateChanged)) AND ((@IsNull_ChangedBy = 1 AND [" +
                "ChangedBy] IS NULL) OR ([ChangedBy] = @Original_ChangedBy)) AND ((@IsNull_DateDe" +
                "leted = 1 AND [DateDeleted] IS NULL) OR ([DateDeleted] = @Original_DateDeleted))" +
                " AND ((@IsNull_DeletedBy = 1 AND [DeletedBy] IS NULL) OR ([DeletedBy] = @Origina" +
                "l_DeletedBy)) AND ((@IsNull_SwitchFree1 = 1 AND [SwitchFree1] IS NULL) OR ([Swit" +
                "chFree1] = @Original_SwitchFree1)) AND ((@IsNull_SwitchFree2 = 1 AND [SwitchFree" +
                "2] IS NULL) OR ([SwitchFree2] = @Original_SwitchFree2)) AND ((@IsNull_SwitchFree" +
                "3 = 1 AND [SwitchFree3] IS NULL) OR ([SwitchFree3] = @Original_SwitchFree3)) AND" +
                " ((@IsNull_DateTimeFree1 = 1 AND [DateTimeFree1] IS NULL) OR ([DateTimeFree1] = " +
                "@Original_DateTimeFree1)) AND ((@IsNull_DateTimeFree2 = 1 AND [DateTimeFree2] IS" +
                " NULL) OR ([DateTimeFree2] = @Original_DateTimeFree2)) AND ((@IsNull_DateTimeFre" +
                "e3 = 1 AND [DateTimeFree3] IS NULL) OR ([DateTimeFree3] = @Original_DateTimeFree" +
                "3)) AND ((@IsNull_TextFree1 = 1 AND [TextFree1] IS NULL) OR ([TextFree1] = @Orig" +
                "inal_TextFree1)) AND ((@IsNull_TextFree2 = 1 AND [TextFree2] IS NULL) OR ([TextF" +
                "ree2] = @Original_TextFree2)) AND ((@IsNull_TextFree3 = 1 AND [TextFree3] IS NUL" +
                "L) OR ([TextFree3] = @Original_TextFree3)) AND ((@IsNull_IntFree1 = 1 AND [IntFr" +
                "ee1] IS NULL) OR ([IntFree1] = @Original_IntFree1)) AND ((@IsNull_IntFree2 = 1 A" +
                "ND [IntFree2] IS NULL) OR ([IntFree2] = @Original_IntFree2)) AND ((@IsNull_IntFr" +
                "ee3 = 1 AND [IntFree3] IS NULL) OR ([IntFree3] = @Original_IntFree3)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ManageChangeRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManageChangeRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ProjectRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ProjectRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LocationRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LocationRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LocationRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LocationRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ManageChangeReferenceId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManageChangeReferenceId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ManageChangeReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ManageChangeReferenceId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateOfRequest", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfRequest", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateOfRequest", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfRequest", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateEffective", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateEffective", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateEffective", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateEffective", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IsContractual", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IsContractual", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IsContractual", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "IsContractual", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TypeOfChangeRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TypeOfChangeRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TypeOfChangeRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TypeOfChangeRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateOfRemoval", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfRemoval", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateOfRemoval", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfRemoval", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NatureOfChangeRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NatureOfChangeRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NatureOfChangeRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NatureOfChangeRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_RequestorId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "RequestorId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_RequestorId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "RequestorId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EndorserId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EndorserId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EndorserId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EndorserId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateOfEndorsement", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfEndorsement", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateOfEndorsement", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfEndorsement", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OnSiteRiskAssessmentCompleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteRiskAssessmentCompleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OnSiteRiskAssessmentCompleted", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteRiskAssessmentCompleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OnshoreRiskAssessmentCompleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OnshoreRiskAssessmentCompleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OnshoreRiskAssessmentCompleted", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "OnshoreRiskAssessmentCompleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OnSiteJobSafetyAnalysisCompleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteJobSafetyAnalysisCompleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OnSiteJobSafetyAnalysisCompleted", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteJobSafetyAnalysisCompleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovedByOnshoreManagement", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedByOnshoreManagement", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovedByOnshoreManagement", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedByOnshoreManagement", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OnSiteWorkInstructionCompleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteWorkInstructionCompleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OnSiteWorkInstructionCompleted", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteWorkInstructionCompleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TrainingRequired", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TrainingRequired", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TrainingRequired", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "TrainingRequired", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IncreasedRisk", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IncreasedRisk", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IncreasedRisk", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "IncreasedRisk", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ProposedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProposedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ProposedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProposedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateOfProposal", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfProposal", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateOfProposal", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfProposal", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ReviewedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ReviewedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ReviewedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ReviewedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateOfReview", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfReview", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateOfReview", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfReview", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovalReviewedById1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalReviewedById1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovalReviewedById1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalReviewedById1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovalRevieweDate1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalRevieweDate1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovalRevieweDate1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalRevieweDate1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovalReviewedById2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalReviewedById2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovalReviewedById2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalReviewedById2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovalRevieweDate2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalRevieweDate2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovalRevieweDate2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalRevieweDate2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovalEndorsedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalEndorsedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovalEndorsedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalEndorsedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovalEndorsedDate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalEndorsedDate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovalEndorsedDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalEndorsedDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovedDate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedDate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovedDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangeCommunicatedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeCommunicatedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangeCommunicatedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeCommunicatedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChangeCommunicated", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeCommunicated", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChangeCommunicated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeCommunicated", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DocumentationChangesById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DocumentationChangesById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DocumentationChangesById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DocumentationChangesById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateDocumentationChanges", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDocumentationChanges", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateDocumentationChanges", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDocumentationChanges", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TrainingRequriementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TrainingRequriementsCompletedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TrainingRequriementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TrainingRequriementsCompletedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTrainingRequriementsCompleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTrainingRequriementsCompleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTrainingRequriementsCompleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTrainingRequriementsCompleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_RegulatoryPermitRequirementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "RegulatoryPermitRequirementsCompletedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_RegulatoryPermitRequirementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "RegulatoryPermitRequirementsCompletedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateRegulatoryPermitRequirementsCompleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateRegulatoryPermitRequirementsCompleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateRegulatoryPermitRequirementsCompleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateRegulatoryPermitRequirementsCompleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangeRequirementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeRequirementsCompletedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangeRequirementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeRequirementsCompletedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChangeRequirementsCompleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeRequirementsCompleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChangeRequirementsCompleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeRequirementsCompleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LessonsLearnedCommunicatedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LessonsLearnedCommunicatedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LessonsLearnedCommunicatedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LessonsLearnedCommunicatedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateLessonsLearnedCommunicated", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateLessonsLearnedCommunicated", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateLessonsLearnedCommunicated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateLessonsLearnedCommunicated", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangeReportCloseOutDocumentationById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeReportCloseOutDocumentationById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangeReportCloseOutDocumentationById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeReportCloseOutDocumentationById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChangeReportCloseOutDocumentation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeReportCloseOutDocumentation", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChangeReportCloseOutDocumentation", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeReportCloseOutDocumentation", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovalForChangeReportCloseOutById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalForChangeReportCloseOutById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovalForChangeReportCloseOutById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalForChangeReportCloseOutById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateApprovalForChangeReportCloseOut", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateApprovalForChangeReportCloseOut", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateApprovalForChangeReportCloseOut", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateApprovalForChangeReportCloseOut", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ManageChangeStatusListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManageChangeStatusListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ManageChangeStatusListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManageChangeStatusListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_InitiationCompletedSwitch", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "InitiationCompletedSwitch", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_InitiationCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "InitiationCompletedSwitch", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EvaluationCompletedSwitch", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EvaluationCompletedSwitch", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EvaluationCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "EvaluationCompletedSwitch", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovalsCompletedSwitch", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalsCompletedSwitch", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovalsCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalsCompletedSwitch", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ImplementationCompletedSwitch", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ImplementationCompletedSwitch", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ImplementationCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ImplementationCompletedSwitch", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CloseOutCompletedSwitch", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CloseOutCompletedSwitch", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CloseOutCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "CloseOutCompletedSwitch", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_RejectedSwitch", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "RejectedSwitch", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_RejectedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "RejectedSwitch", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFreeSwitch", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFreeSwitch", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFreeSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFreeSwitch", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_AcceptedByMaster", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "AcceptedByMaster", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AcceptedByMaster", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AcceptedByMaster", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ComputedExposure", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ComputedExposure", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ComputedExposure", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ComputedExposure", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateCreated", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChanged", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateDeleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[GAManageChange] ([ProjectRowId], [LocationRowId], [ManageChang" +
                "eReferenceId], [DateOfRequest], [DateEffective], [IsContractual], [TypeOfChangeR" +
                "owId], [DateOfRemoval], [NatureOfChange], [NatureOfChangeRowId], [DescriptionCur" +
                "rent], [Description], [ResponsibleRoleListsRowId], [RequestorId], [EndorserId], " +
                "[DateOfEndorsement], [Justification], [OnSiteRiskAssessmentCompleted], [OnshoreR" +
                "iskAssessmentCompleted], [OnSiteJobSafetyAnalysisCompleted], [ApprovedByOnshoreM" +
                "anagement], [OnSiteWorkInstructionCompleted], [PotentialConsequence], [Migration" +
                "], [TrainingRequired], [Training], [CostOfChange], [IncreasedRisk], [Comments], " +
                "[ProposedById], [DateOfProposal], [ReviewedById], [DateOfReview], [ApprovalRevie" +
                "wedById1], [ApprovalRevieweDate1], [ApprovalReviewedById2], [ApprovalRevieweDate" +
                "2], [ApprovalEndorsedById], [ApprovalEndorsedDate], [ApprovedById], [ApprovedDat" +
                "e], [LessonsLearned], [ChangeCommunicatedById], [DateChangeCommunicated], [Metho" +
                "dOfCommunication], [DocumentationChangesById], [DateDocumentationChanges], [Docu" +
                "mentsChanged], [TrainingRequriementsCompletedById], [DateTrainingRequriementsCom" +
                "pleted], [TrainingConducted], [RegulatoryPermitRequirementsCompletedById], [Date" +
                "RegulatoryPermitRequirementsCompleted], [RegulatoryPermitRequirementsCompleted]," +
                " [ChangeRequirementsCompletedById], [DateChangeRequirementsCompleted], [ChangeRe" +
                "quirementsCompletedComments], [LessonsLearnedCommunicatedById], [DateLessonsLear" +
                "nedCommunicated], [ChangeReportCloseOutDocumentationById], [DateChangeReportClos" +
                "eOutDocumentation], [ApprovalForChangeReportCloseOutById], [DateApprovalForChang" +
                "eReportCloseOut], [rowguid], [ManageChangeStatusListsRowId], [InitiationComplete" +
                "dSwitch], [EvaluationCompletedSwitch], [ApprovalsCompletedSwitch], [Implementati" +
                "onCompletedSwitch], [CloseOutCompletedSwitch], [RejectedSwitch], [SwitchFreeSwit" +
                "ch], [AcceptedByMaster], [ComputedExposure], [MasterRowId], [DateCreated], [Crea" +
                "tedBy], [DateChanged], [ChangedBy], [DateDeleted], [DeletedBy], [SwitchFree1], [" +
                "SwitchFree2], [SwitchFree3], [DateTimeFree1], [DateTimeFree2], [DateTimeFree3], " +
                "[TextFree1], [TextFree2], [TextFree3], [IntFree1], [IntFree2], [IntFree3], [nTex" +
                "tFree1], [nTextFree2], [nTextFree3]) VALUES (@ProjectRowId, @LocationRowId, @Man" +
                "ageChangeReferenceId, @DateOfRequest, @DateEffective, @IsContractual, @TypeOfCha" +
                "ngeRowId, @DateOfRemoval, @NatureOfChange, @NatureOfChangeRowId, @DescriptionCur" +
                "rent, @Description, @ResponsibleRoleListsRowId, @RequestorId, @EndorserId, @Date" +
                "OfEndorsement, @Justification, @OnSiteRiskAssessmentCompleted, @OnshoreRiskAsses" +
                "smentCompleted, @OnSiteJobSafetyAnalysisCompleted, @ApprovedByOnshoreManagement," +
                " @OnSiteWorkInstructionCompleted, @PotentialConsequence, @Migration, @TrainingRe" +
                "quired, @Training, @CostOfChange, @IncreasedRisk, @Comments, @ProposedById, @Dat" +
                "eOfProposal, @ReviewedById, @DateOfReview, @ApprovalReviewedById1, @ApprovalRevi" +
                "eweDate1, @ApprovalReviewedById2, @ApprovalRevieweDate2, @ApprovalEndorsedById, " +
                "@ApprovalEndorsedDate, @ApprovedById, @ApprovedDate, @LessonsLearned, @ChangeCom" +
                "municatedById, @DateChangeCommunicated, @MethodOfCommunication, @DocumentationCh" +
                "angesById, @DateDocumentationChanges, @DocumentsChanged, @TrainingRequriementsCo" +
                "mpletedById, @DateTrainingRequriementsCompleted, @TrainingConducted, @Regulatory" +
                "PermitRequirementsCompletedById, @DateRegulatoryPermitRequirementsCompleted, @Re" +
                "gulatoryPermitRequirementsCompleted, @ChangeRequirementsCompletedById, @DateChan" +
                "geRequirementsCompleted, @ChangeRequirementsCompletedComments, @LessonsLearnedCo" +
                "mmunicatedById, @DateLessonsLearnedCommunicated, @ChangeReportCloseOutDocumentat" +
                "ionById, @DateChangeReportCloseOutDocumentation, @ApprovalForChangeReportCloseOu" +
                "tById, @DateApprovalForChangeReportCloseOut, @rowguid, @ManageChangeStatusListsR" +
                "owId, @InitiationCompletedSwitch, @EvaluationCompletedSwitch, @ApprovalsComplete" +
                "dSwitch, @ImplementationCompletedSwitch, @CloseOutCompletedSwitch, @RejectedSwit" +
                "ch, @SwitchFreeSwitch, @AcceptedByMaster, @ComputedExposure, @MasterRowId, @Date" +
                "Created, @CreatedBy, @DateChanged, @ChangedBy, @DateDeleted, @DeletedBy, @Switch" +
                "Free1, @SwitchFree2, @SwitchFree3, @DateTimeFree1, @DateTimeFree2, @DateTimeFree" +
                "3, @TextFree1, @TextFree2, @TextFree3, @IntFree1, @IntFree2, @IntFree3, @nTextFr" +
                "ee1, @nTextFree2, @nTextFree3);\r\nSELECT ManageChangeRowId, ProjectRowId, Locatio" +
                "nRowId, ManageChangeReferenceId, DateOfRequest, DateEffective, IsContractual, Ty" +
                "peOfChangeRowId, DateOfRemoval, NatureOfChange, NatureOfChangeRowId, Description" +
                "Current, Description, ResponsibleRoleListsRowId, RequestorId, EndorserId, DateOf" +
                "Endorsement, Justification, OnSiteRiskAssessmentCompleted, OnshoreRiskAssessment" +
                "Completed, OnSiteJobSafetyAnalysisCompleted, ApprovedByOnshoreManagement, OnSite" +
                "WorkInstructionCompleted, PotentialConsequence, Migration, TrainingRequired, Tra" +
                "ining, CostOfChange, IncreasedRisk, Comments, ProposedById, DateOfProposal, Revi" +
                "ewedById, DateOfReview, ApprovalReviewedById1, ApprovalRevieweDate1, ApprovalRev" +
                "iewedById2, ApprovalRevieweDate2, ApprovalEndorsedById, ApprovalEndorsedDate, Ap" +
                "provedById, ApprovedDate, LessonsLearned, ChangeCommunicatedById, DateChangeComm" +
                "unicated, MethodOfCommunication, DocumentationChangesById, DateDocumentationChan" +
                "ges, DocumentsChanged, TrainingRequriementsCompletedById, DateTrainingRequriemen" +
                "tsCompleted, TrainingConducted, RegulatoryPermitRequirementsCompletedById, DateR" +
                "egulatoryPermitRequirementsCompleted, RegulatoryPermitRequirementsCompleted, Cha" +
                "ngeRequirementsCompletedById, DateChangeRequirementsCompleted, ChangeRequirement" +
                "sCompletedComments, LessonsLearnedCommunicatedById, DateLessonsLearnedCommunicat" +
                "ed, ChangeReportCloseOutDocumentationById, DateChangeReportCloseOutDocumentation" +
                ", ApprovalForChangeReportCloseOutById, DateApprovalForChangeReportCloseOut, rowg" +
                "uid, ManageChangeStatusListsRowId, InitiationCompletedSwitch, EvaluationComplete" +
                "dSwitch, ApprovalsCompletedSwitch, ImplementationCompletedSwitch, CloseOutComple" +
                "tedSwitch, RejectedSwitch, SwitchFreeSwitch, AcceptedByMaster, ComputedExposure," +
                " MasterRowId, DateCreated, CreatedBy, DateChanged, ChangedBy, DateDeleted, Delet" +
                "edBy, SwitchFree1, SwitchFree2, SwitchFree3, DateTimeFree1, DateTimeFree2, DateT" +
                "imeFree3, TextFree1, TextFree2, TextFree3, IntFree1, IntFree2, IntFree3, nTextFr" +
                "ee1, nTextFree2, nTextFree3 FROM GAManageChange WHERE (ManageChangeRowId = SCOPE" +
                "_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ProjectRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LocationRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LocationRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ManageChangeReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ManageChangeReferenceId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateOfRequest", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfRequest", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateEffective", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateEffective", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsContractual", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "IsContractual", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TypeOfChangeRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TypeOfChangeRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateOfRemoval", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfRemoval", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NatureOfChange", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "NatureOfChange", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NatureOfChangeRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NatureOfChangeRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DescriptionCurrent", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "DescriptionCurrent", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Description", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RequestorId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "RequestorId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EndorserId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EndorserId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateOfEndorsement", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfEndorsement", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Justification", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Justification", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OnSiteRiskAssessmentCompleted", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteRiskAssessmentCompleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OnshoreRiskAssessmentCompleted", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "OnshoreRiskAssessmentCompleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OnSiteJobSafetyAnalysisCompleted", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteJobSafetyAnalysisCompleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovedByOnshoreManagement", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedByOnshoreManagement", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OnSiteWorkInstructionCompleted", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteWorkInstructionCompleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PotentialConsequence", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "PotentialConsequence", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Migration", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Migration", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TrainingRequired", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "TrainingRequired", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Training", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Training", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CostOfChange", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "CostOfChange", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IncreasedRisk", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "IncreasedRisk", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Comments", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Comments", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ProposedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProposedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateOfProposal", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfProposal", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ReviewedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ReviewedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateOfReview", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfReview", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovalReviewedById1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalReviewedById1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovalRevieweDate1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalRevieweDate1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovalReviewedById2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalReviewedById2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovalRevieweDate2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalRevieweDate2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovalEndorsedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalEndorsedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovalEndorsedDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalEndorsedDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovedDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LessonsLearned", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "LessonsLearned", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangeCommunicatedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeCommunicatedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChangeCommunicated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeCommunicated", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MethodOfCommunication", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "MethodOfCommunication", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DocumentationChangesById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DocumentationChangesById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateDocumentationChanges", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDocumentationChanges", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DocumentsChanged", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "DocumentsChanged", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TrainingRequriementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TrainingRequriementsCompletedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTrainingRequriementsCompleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTrainingRequriementsCompleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TrainingConducted", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "TrainingConducted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RegulatoryPermitRequirementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "RegulatoryPermitRequirementsCompletedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateRegulatoryPermitRequirementsCompleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateRegulatoryPermitRequirementsCompleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RegulatoryPermitRequirementsCompleted", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "RegulatoryPermitRequirementsCompleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangeRequirementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeRequirementsCompletedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChangeRequirementsCompleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeRequirementsCompleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangeRequirementsCompletedComments", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeRequirementsCompletedComments", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LessonsLearnedCommunicatedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LessonsLearnedCommunicatedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateLessonsLearnedCommunicated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateLessonsLearnedCommunicated", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangeReportCloseOutDocumentationById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeReportCloseOutDocumentationById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChangeReportCloseOutDocumentation", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeReportCloseOutDocumentation", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovalForChangeReportCloseOutById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalForChangeReportCloseOutById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateApprovalForChangeReportCloseOut", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateApprovalForChangeReportCloseOut", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ManageChangeStatusListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManageChangeStatusListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@InitiationCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "InitiationCompletedSwitch", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EvaluationCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "EvaluationCompletedSwitch", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovalsCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalsCompletedSwitch", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ImplementationCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ImplementationCompletedSwitch", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CloseOutCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "CloseOutCompletedSwitch", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RejectedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "RejectedSwitch", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFreeSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFreeSwitch", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AcceptedByMaster", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AcceptedByMaster", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ComputedExposure", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ComputedExposure", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree1", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree2", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree3", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[GAManageChange] SET [ProjectRowId] = @ProjectRowId, [LocationRowId]" +
                " = @LocationRowId, [ManageChangeReferenceId] = @ManageChangeReferenceId, [DateOf" +
                "Request] = @DateOfRequest, [DateEffective] = @DateEffective, [IsContractual] = @" +
                "IsContractual, [TypeOfChangeRowId] = @TypeOfChangeRowId, [DateOfRemoval] = @Date" +
                "OfRemoval, [NatureOfChange] = @NatureOfChange, [NatureOfChangeRowId] = @NatureOf" +
                "ChangeRowId, [DescriptionCurrent] = @DescriptionCurrent, [Description] = @Descri" +
                "ption, [ResponsibleRoleListsRowId] = @ResponsibleRoleListsRowId, [RequestorId] =" +
                " @RequestorId, [EndorserId] = @EndorserId, [DateOfEndorsement] = @DateOfEndorsem" +
                "ent, [Justification] = @Justification, [OnSiteRiskAssessmentCompleted] = @OnSite" +
                "RiskAssessmentCompleted, [OnshoreRiskAssessmentCompleted] = @OnshoreRiskAssessme" +
                "ntCompleted, [OnSiteJobSafetyAnalysisCompleted] = @OnSiteJobSafetyAnalysisComple" +
                "ted, [ApprovedByOnshoreManagement] = @ApprovedByOnshoreManagement, [OnSiteWorkIn" +
                "structionCompleted] = @OnSiteWorkInstructionCompleted, [PotentialConsequence] = " +
                "@PotentialConsequence, [Migration] = @Migration, [TrainingRequired] = @TrainingR" +
                "equired, [Training] = @Training, [CostOfChange] = @CostOfChange, [IncreasedRisk]" +
                " = @IncreasedRisk, [Comments] = @Comments, [ProposedById] = @ProposedById, [Date" +
                "OfProposal] = @DateOfProposal, [ReviewedById] = @ReviewedById, [DateOfReview] = " +
                "@DateOfReview, [ApprovalReviewedById1] = @ApprovalReviewedById1, [ApprovalReview" +
                "eDate1] = @ApprovalRevieweDate1, [ApprovalReviewedById2] = @ApprovalReviewedById" +
                "2, [ApprovalRevieweDate2] = @ApprovalRevieweDate2, [ApprovalEndorsedById] = @App" +
                "rovalEndorsedById, [ApprovalEndorsedDate] = @ApprovalEndorsedDate, [ApprovedById" +
                "] = @ApprovedById, [ApprovedDate] = @ApprovedDate, [LessonsLearned] = @LessonsLe" +
                "arned, [ChangeCommunicatedById] = @ChangeCommunicatedById, [DateChangeCommunicat" +
                "ed] = @DateChangeCommunicated, [MethodOfCommunication] = @MethodOfCommunication," +
                " [DocumentationChangesById] = @DocumentationChangesById, [DateDocumentationChang" +
                "es] = @DateDocumentationChanges, [DocumentsChanged] = @DocumentsChanged, [Traini" +
                "ngRequriementsCompletedById] = @TrainingRequriementsCompletedById, [DateTraining" +
                "RequriementsCompleted] = @DateTrainingRequriementsCompleted, [TrainingConducted]" +
                " = @TrainingConducted, [RegulatoryPermitRequirementsCompletedById] = @Regulatory" +
                "PermitRequirementsCompletedById, [DateRegulatoryPermitRequirementsCompleted] = @" +
                "DateRegulatoryPermitRequirementsCompleted, [RegulatoryPermitRequirementsComplete" +
                "d] = @RegulatoryPermitRequirementsCompleted, [ChangeRequirementsCompletedById] =" +
                " @ChangeRequirementsCompletedById, [DateChangeRequirementsCompleted] = @DateChan" +
                "geRequirementsCompleted, [ChangeRequirementsCompletedComments] = @ChangeRequirem" +
                "entsCompletedComments, [LessonsLearnedCommunicatedById] = @LessonsLearnedCommuni" +
                "catedById, [DateLessonsLearnedCommunicated] = @DateLessonsLearnedCommunicated, [" +
                "ChangeReportCloseOutDocumentationById] = @ChangeReportCloseOutDocumentationById," +
                " [DateChangeReportCloseOutDocumentation] = @DateChangeReportCloseOutDocumentatio" +
                "n, [ApprovalForChangeReportCloseOutById] = @ApprovalForChangeReportCloseOutById," +
                " [DateApprovalForChangeReportCloseOut] = @DateApprovalForChangeReportCloseOut, [" +
                "rowguid] = @rowguid, [ManageChangeStatusListsRowId] = @ManageChangeStatusListsRo" +
                "wId, [InitiationCompletedSwitch] = @InitiationCompletedSwitch, [EvaluationComple" +
                "tedSwitch] = @EvaluationCompletedSwitch, [ApprovalsCompletedSwitch] = @Approvals" +
                "CompletedSwitch, [ImplementationCompletedSwitch] = @ImplementationCompletedSwitc" +
                "h, [CloseOutCompletedSwitch] = @CloseOutCompletedSwitch, [RejectedSwitch] = @Rej" +
                "ectedSwitch, [SwitchFreeSwitch] = @SwitchFreeSwitch, [AcceptedByMaster] = @Accep" +
                "tedByMaster, [ComputedExposure] = @ComputedExposure, [MasterRowId] = @MasterRowI" +
                "d, [DateCreated] = @DateCreated, [CreatedBy] = @CreatedBy, [DateChanged] = @Date" +
                "Changed, [ChangedBy] = @ChangedBy, [DateDeleted] = @DateDeleted, [DeletedBy] = @" +
                "DeletedBy, [SwitchFree1] = @SwitchFree1, [SwitchFree2] = @SwitchFree2, [SwitchFr" +
                "ee3] = @SwitchFree3, [DateTimeFree1] = @DateTimeFree1, [DateTimeFree2] = @DateTi" +
                "meFree2, [DateTimeFree3] = @DateTimeFree3, [TextFree1] = @TextFree1, [TextFree2]" +
                " = @TextFree2, [TextFree3] = @TextFree3, [IntFree1] = @IntFree1, [IntFree2] = @I" +
                "ntFree2, [IntFree3] = @IntFree3, [nTextFree1] = @nTextFree1, [nTextFree2] = @nTe" +
                "xtFree2, [nTextFree3] = @nTextFree3 WHERE (([ManageChangeRowId] = @Original_Mana" +
                "geChangeRowId) AND ((@IsNull_ProjectRowId = 1 AND [ProjectRowId] IS NULL) OR ([P" +
                "rojectRowId] = @Original_ProjectRowId)) AND ((@IsNull_LocationRowId = 1 AND [Loc" +
                "ationRowId] IS NULL) OR ([LocationRowId] = @Original_LocationRowId)) AND ((@IsNu" +
                "ll_ManageChangeReferenceId = 1 AND [ManageChangeReferenceId] IS NULL) OR ([Manag" +
                "eChangeReferenceId] = @Original_ManageChangeReferenceId)) AND ((@IsNull_DateOfRe" +
                "quest = 1 AND [DateOfRequest] IS NULL) OR ([DateOfRequest] = @Original_DateOfReq" +
                "uest)) AND ((@IsNull_DateEffective = 1 AND [DateEffective] IS NULL) OR ([DateEff" +
                "ective] = @Original_DateEffective)) AND ((@IsNull_IsContractual = 1 AND [IsContr" +
                "actual] IS NULL) OR ([IsContractual] = @Original_IsContractual)) AND ((@IsNull_T" +
                "ypeOfChangeRowId = 1 AND [TypeOfChangeRowId] IS NULL) OR ([TypeOfChangeRowId] = " +
                "@Original_TypeOfChangeRowId)) AND ((@IsNull_DateOfRemoval = 1 AND [DateOfRemoval" +
                "] IS NULL) OR ([DateOfRemoval] = @Original_DateOfRemoval)) AND ((@IsNull_NatureO" +
                "fChangeRowId = 1 AND [NatureOfChangeRowId] IS NULL) OR ([NatureOfChangeRowId] = " +
                "@Original_NatureOfChangeRowId)) AND ((@IsNull_ResponsibleRoleListsRowId = 1 AND " +
                "[ResponsibleRoleListsRowId] IS NULL) OR ([ResponsibleRoleListsRowId] = @Original" +
                "_ResponsibleRoleListsRowId)) AND ((@IsNull_RequestorId = 1 AND [RequestorId] IS " +
                "NULL) OR ([RequestorId] = @Original_RequestorId)) AND ((@IsNull_EndorserId = 1 A" +
                "ND [EndorserId] IS NULL) OR ([EndorserId] = @Original_EndorserId)) AND ((@IsNull" +
                "_DateOfEndorsement = 1 AND [DateOfEndorsement] IS NULL) OR ([DateOfEndorsement] " +
                "= @Original_DateOfEndorsement)) AND ((@IsNull_OnSiteRiskAssessmentCompleted = 1 " +
                "AND [OnSiteRiskAssessmentCompleted] IS NULL) OR ([OnSiteRiskAssessmentCompleted]" +
                " = @Original_OnSiteRiskAssessmentCompleted)) AND ((@IsNull_OnshoreRiskAssessment" +
                "Completed = 1 AND [OnshoreRiskAssessmentCompleted] IS NULL) OR ([OnshoreRiskAsse" +
                "ssmentCompleted] = @Original_OnshoreRiskAssessmentCompleted)) AND ((@IsNull_OnSi" +
                "teJobSafetyAnalysisCompleted = 1 AND [OnSiteJobSafetyAnalysisCompleted] IS NULL)" +
                " OR ([OnSiteJobSafetyAnalysisCompleted] = @Original_OnSiteJobSafetyAnalysisCompl" +
                "eted)) AND ((@IsNull_ApprovedByOnshoreManagement = 1 AND [ApprovedByOnshoreManag" +
                "ement] IS NULL) OR ([ApprovedByOnshoreManagement] = @Original_ApprovedByOnshoreM" +
                "anagement)) AND ((@IsNull_OnSiteWorkInstructionCompleted = 1 AND [OnSiteWorkInst" +
                "ructionCompleted] IS NULL) OR ([OnSiteWorkInstructionCompleted] = @Original_OnSi" +
                "teWorkInstructionCompleted)) AND ((@IsNull_TrainingRequired = 1 AND [TrainingReq" +
                "uired] IS NULL) OR ([TrainingRequired] = @Original_TrainingRequired)) AND ((@IsN" +
                "ull_IncreasedRisk = 1 AND [IncreasedRisk] IS NULL) OR ([IncreasedRisk] = @Origin" +
                "al_IncreasedRisk)) AND ((@IsNull_ProposedById = 1 AND [ProposedById] IS NULL) OR" +
                " ([ProposedById] = @Original_ProposedById)) AND ((@IsNull_DateOfProposal = 1 AND" +
                " [DateOfProposal] IS NULL) OR ([DateOfProposal] = @Original_DateOfProposal)) AND" +
                " ((@IsNull_ReviewedById = 1 AND [ReviewedById] IS NULL) OR ([ReviewedById] = @Or" +
                "iginal_ReviewedById)) AND ((@IsNull_DateOfReview = 1 AND [DateOfReview] IS NULL)" +
                " OR ([DateOfReview] = @Original_DateOfReview)) AND ((@IsNull_ApprovalReviewedByI" +
                "d1 = 1 AND [ApprovalReviewedById1] IS NULL) OR ([ApprovalReviewedById1] = @Origi" +
                "nal_ApprovalReviewedById1)) AND ((@IsNull_ApprovalRevieweDate1 = 1 AND [Approval" +
                "RevieweDate1] IS NULL) OR ([ApprovalRevieweDate1] = @Original_ApprovalRevieweDat" +
                "e1)) AND ((@IsNull_ApprovalReviewedById2 = 1 AND [ApprovalReviewedById2] IS NULL" +
                ") OR ([ApprovalReviewedById2] = @Original_ApprovalReviewedById2)) AND ((@IsNull_" +
                "ApprovalRevieweDate2 = 1 AND [ApprovalRevieweDate2] IS NULL) OR ([ApprovalReview" +
                "eDate2] = @Original_ApprovalRevieweDate2)) AND ((@IsNull_ApprovalEndorsedById = " +
                "1 AND [ApprovalEndorsedById] IS NULL) OR ([ApprovalEndorsedById] = @Original_App" +
                "rovalEndorsedById)) AND ((@IsNull_ApprovalEndorsedDate = 1 AND [ApprovalEndorsed" +
                "Date] IS NULL) OR ([ApprovalEndorsedDate] = @Original_ApprovalEndorsedDate)) AND" +
                " ((@IsNull_ApprovedById = 1 AND [ApprovedById] IS NULL) OR ([ApprovedById] = @Or" +
                "iginal_ApprovedById)) AND ((@IsNull_ApprovedDate = 1 AND [ApprovedDate] IS NULL)" +
                " OR ([ApprovedDate] = @Original_ApprovedDate)) AND ((@IsNull_ChangeCommunicatedB" +
                "yId = 1 AND [ChangeCommunicatedById] IS NULL) OR ([ChangeCommunicatedById] = @Or" +
                "iginal_ChangeCommunicatedById)) AND ((@IsNull_DateChangeCommunicated = 1 AND [Da" +
                "teChangeCommunicated] IS NULL) OR ([DateChangeCommunicated] = @Original_DateChan" +
                "geCommunicated)) AND ((@IsNull_DocumentationChangesById = 1 AND [DocumentationCh" +
                "angesById] IS NULL) OR ([DocumentationChangesById] = @Original_DocumentationChan" +
                "gesById)) AND ((@IsNull_DateDocumentationChanges = 1 AND [DateDocumentationChang" +
                "es] IS NULL) OR ([DateDocumentationChanges] = @Original_DateDocumentationChanges" +
                ")) AND ((@IsNull_TrainingRequriementsCompletedById = 1 AND [TrainingRequriements" +
                "CompletedById] IS NULL) OR ([TrainingRequriementsCompletedById] = @Original_Trai" +
                "ningRequriementsCompletedById)) AND ((@IsNull_DateTrainingRequriementsCompleted " +
                "= 1 AND [DateTrainingRequriementsCompleted] IS NULL) OR ([DateTrainingRequriemen" +
                "tsCompleted] = @Original_DateTrainingRequriementsCompleted)) AND ((@IsNull_Regul" +
                "atoryPermitRequirementsCompletedById = 1 AND [RegulatoryPermitRequirementsComple" +
                "tedById] IS NULL) OR ([RegulatoryPermitRequirementsCompletedById] = @Original_Re" +
                "gulatoryPermitRequirementsCompletedById)) AND ((@IsNull_DateRegulatoryPermitRequ" +
                "irementsCompleted = 1 AND [DateRegulatoryPermitRequirementsCompleted] IS NULL) O" +
                "R ([DateRegulatoryPermitRequirementsCompleted] = @Original_DateRegulatoryPermitR" +
                "equirementsCompleted)) AND ((@IsNull_ChangeRequirementsCompletedById = 1 AND [Ch" +
                "angeRequirementsCompletedById] IS NULL) OR ([ChangeRequirementsCompletedById] = " +
                "@Original_ChangeRequirementsCompletedById)) AND ((@IsNull_DateChangeRequirements" +
                "Completed = 1 AND [DateChangeRequirementsCompleted] IS NULL) OR ([DateChangeRequ" +
                "irementsCompleted] = @Original_DateChangeRequirementsCompleted)) AND ((@IsNull_L" +
                "essonsLearnedCommunicatedById = 1 AND [LessonsLearnedCommunicatedById] IS NULL) " +
                "OR ([LessonsLearnedCommunicatedById] = @Original_LessonsLearnedCommunicatedById)" +
                ") AND ((@IsNull_DateLessonsLearnedCommunicated = 1 AND [DateLessonsLearnedCommun" +
                "icated] IS NULL) OR ([DateLessonsLearnedCommunicated] = @Original_DateLessonsLea" +
                "rnedCommunicated)) AND ((@IsNull_ChangeReportCloseOutDocumentationById = 1 AND [" +
                "ChangeReportCloseOutDocumentationById] IS NULL) OR ([ChangeReportCloseOutDocumen" +
                "tationById] = @Original_ChangeReportCloseOutDocumentationById)) AND ((@IsNull_Da" +
                "teChangeReportCloseOutDocumentation = 1 AND [DateChangeReportCloseOutDocumentati" +
                "on] IS NULL) OR ([DateChangeReportCloseOutDocumentation] = @Original_DateChangeR" +
                "eportCloseOutDocumentation)) AND ((@IsNull_ApprovalForChangeReportCloseOutById =" +
                " 1 AND [ApprovalForChangeReportCloseOutById] IS NULL) OR ([ApprovalForChangeRepo" +
                "rtCloseOutById] = @Original_ApprovalForChangeReportCloseOutById)) AND ((@IsNull_" +
                "DateApprovalForChangeReportCloseOut = 1 AND [DateApprovalForChangeReportCloseOut" +
                "] IS NULL) OR ([DateApprovalForChangeReportCloseOut] = @Original_DateApprovalFor" +
                "ChangeReportCloseOut)) AND ([rowguid] = @Original_rowguid) AND ((@IsNull_ManageC" +
                "hangeStatusListsRowId = 1 AND [ManageChangeStatusListsRowId] IS NULL) OR ([Manag" +
                "eChangeStatusListsRowId] = @Original_ManageChangeStatusListsRowId)) AND ((@IsNul" +
                "l_InitiationCompletedSwitch = 1 AND [InitiationCompletedSwitch] IS NULL) OR ([In" +
                "itiationCompletedSwitch] = @Original_InitiationCompletedSwitch)) AND ((@IsNull_E" +
                "valuationCompletedSwitch = 1 AND [EvaluationCompletedSwitch] IS NULL) OR ([Evalu" +
                "ationCompletedSwitch] = @Original_EvaluationCompletedSwitch)) AND ((@IsNull_Appr" +
                "ovalsCompletedSwitch = 1 AND [ApprovalsCompletedSwitch] IS NULL) OR ([ApprovalsC" +
                "ompletedSwitch] = @Original_ApprovalsCompletedSwitch)) AND ((@IsNull_Implementat" +
                "ionCompletedSwitch = 1 AND [ImplementationCompletedSwitch] IS NULL) OR ([Impleme" +
                "ntationCompletedSwitch] = @Original_ImplementationCompletedSwitch)) AND ((@IsNul" +
                "l_CloseOutCompletedSwitch = 1 AND [CloseOutCompletedSwitch] IS NULL) OR ([CloseO" +
                "utCompletedSwitch] = @Original_CloseOutCompletedSwitch)) AND ((@IsNull_RejectedS" +
                "witch = 1 AND [RejectedSwitch] IS NULL) OR ([RejectedSwitch] = @Original_Rejecte" +
                "dSwitch)) AND ((@IsNull_SwitchFreeSwitch = 1 AND [SwitchFreeSwitch] IS NULL) OR " +
                "([SwitchFreeSwitch] = @Original_SwitchFreeSwitch)) AND ((@IsNull_AcceptedByMaste" +
                "r = 1 AND [AcceptedByMaster] IS NULL) OR ([AcceptedByMaster] = @Original_Accepte" +
                "dByMaster)) AND ((@IsNull_ComputedExposure = 1 AND [ComputedExposure] IS NULL) O" +
                "R ([ComputedExposure] = @Original_ComputedExposure)) AND ((@IsNull_MasterRowId =" +
                " 1 AND [MasterRowId] IS NULL) OR ([MasterRowId] = @Original_MasterRowId)) AND ((" +
                "@IsNull_DateCreated = 1 AND [DateCreated] IS NULL) OR ([DateCreated] = @Original" +
                "_DateCreated)) AND ((@IsNull_CreatedBy = 1 AND [CreatedBy] IS NULL) OR ([Created" +
                "By] = @Original_CreatedBy)) AND ((@IsNull_DateChanged = 1 AND [DateChanged] IS N" +
                "ULL) OR ([DateChanged] = @Original_DateChanged)) AND ((@IsNull_ChangedBy = 1 AND" +
                " [ChangedBy] IS NULL) OR ([ChangedBy] = @Original_ChangedBy)) AND ((@IsNull_Date" +
                "Deleted = 1 AND [DateDeleted] IS NULL) OR ([DateDeleted] = @Original_DateDeleted" +
                ")) AND ((@IsNull_DeletedBy = 1 AND [DeletedBy] IS NULL) OR ([DeletedBy] = @Origi" +
                "nal_DeletedBy)) AND ((@IsNull_SwitchFree1 = 1 AND [SwitchFree1] IS NULL) OR ([Sw" +
                "itchFree1] = @Original_SwitchFree1)) AND ((@IsNull_SwitchFree2 = 1 AND [SwitchFr" +
                "ee2] IS NULL) OR ([SwitchFree2] = @Original_SwitchFree2)) AND ((@IsNull_SwitchFr" +
                "ee3 = 1 AND [SwitchFree3] IS NULL) OR ([SwitchFree3] = @Original_SwitchFree3)) A" +
                "ND ((@IsNull_DateTimeFree1 = 1 AND [DateTimeFree1] IS NULL) OR ([DateTimeFree1] " +
                "= @Original_DateTimeFree1)) AND ((@IsNull_DateTimeFree2 = 1 AND [DateTimeFree2] " +
                "IS NULL) OR ([DateTimeFree2] = @Original_DateTimeFree2)) AND ((@IsNull_DateTimeF" +
                "ree3 = 1 AND [DateTimeFree3] IS NULL) OR ([DateTimeFree3] = @Original_DateTimeFr" +
                "ee3)) AND ((@IsNull_TextFree1 = 1 AND [TextFree1] IS NULL) OR ([TextFree1] = @Or" +
                "iginal_TextFree1)) AND ((@IsNull_TextFree2 = 1 AND [TextFree2] IS NULL) OR ([Tex" +
                "tFree2] = @Original_TextFree2)) AND ((@IsNull_TextFree3 = 1 AND [TextFree3] IS N" +
                "ULL) OR ([TextFree3] = @Original_TextFree3)) AND ((@IsNull_IntFree1 = 1 AND [Int" +
                "Free1] IS NULL) OR ([IntFree1] = @Original_IntFree1)) AND ((@IsNull_IntFree2 = 1" +
                " AND [IntFree2] IS NULL) OR ([IntFree2] = @Original_IntFree2)) AND ((@IsNull_Int" +
                "Free3 = 1 AND [IntFree3] IS NULL) OR ([IntFree3] = @Original_IntFree3)));\r\nSELEC" +
                "T ManageChangeRowId, ProjectRowId, LocationRowId, ManageChangeReferenceId, DateO" +
                "fRequest, DateEffective, IsContractual, TypeOfChangeRowId, DateOfRemoval, Nature" +
                "OfChange, NatureOfChangeRowId, DescriptionCurrent, Description, ResponsibleRoleL" +
                "istsRowId, RequestorId, EndorserId, DateOfEndorsement, Justification, OnSiteRisk" +
                "AssessmentCompleted, OnshoreRiskAssessmentCompleted, OnSiteJobSafetyAnalysisComp" +
                "leted, ApprovedByOnshoreManagement, OnSiteWorkInstructionCompleted, PotentialCon" +
                "sequence, Migration, TrainingRequired, Training, CostOfChange, IncreasedRisk, Co" +
                "mments, ProposedById, DateOfProposal, ReviewedById, DateOfReview, ApprovalReview" +
                "edById1, ApprovalRevieweDate1, ApprovalReviewedById2, ApprovalRevieweDate2, Appr" +
                "ovalEndorsedById, ApprovalEndorsedDate, ApprovedById, ApprovedDate, LessonsLearn" +
                "ed, ChangeCommunicatedById, DateChangeCommunicated, MethodOfCommunication, Docum" +
                "entationChangesById, DateDocumentationChanges, DocumentsChanged, TrainingRequrie" +
                "mentsCompletedById, DateTrainingRequriementsCompleted, TrainingConducted, Regula" +
                "toryPermitRequirementsCompletedById, DateRegulatoryPermitRequirementsCompleted, " +
                "RegulatoryPermitRequirementsCompleted, ChangeRequirementsCompletedById, DateChan" +
                "geRequirementsCompleted, ChangeRequirementsCompletedComments, LessonsLearnedComm" +
                "unicatedById, DateLessonsLearnedCommunicated, ChangeReportCloseOutDocumentationB" +
                "yId, DateChangeReportCloseOutDocumentation, ApprovalForChangeReportCloseOutById," +
                " DateApprovalForChangeReportCloseOut, rowguid, ManageChangeStatusListsRowId, Ini" +
                "tiationCompletedSwitch, EvaluationCompletedSwitch, ApprovalsCompletedSwitch, Imp" +
                "lementationCompletedSwitch, CloseOutCompletedSwitch, RejectedSwitch, SwitchFreeS" +
                "witch, AcceptedByMaster, ComputedExposure, MasterRowId, DateCreated, CreatedBy, " +
                "DateChanged, ChangedBy, DateDeleted, DeletedBy, SwitchFree1, SwitchFree2, Switch" +
                "Free3, DateTimeFree1, DateTimeFree2, DateTimeFree3, TextFree1, TextFree2, TextFr" +
                "ee3, IntFree1, IntFree2, IntFree3, nTextFree1, nTextFree2, nTextFree3 FROM GAMan" +
                "ageChange WHERE (ManageChangeRowId = @ManageChangeRowId)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ProjectRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LocationRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LocationRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ManageChangeReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ManageChangeReferenceId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateOfRequest", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfRequest", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateEffective", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateEffective", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsContractual", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "IsContractual", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TypeOfChangeRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TypeOfChangeRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateOfRemoval", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfRemoval", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NatureOfChange", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "NatureOfChange", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NatureOfChangeRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NatureOfChangeRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DescriptionCurrent", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "DescriptionCurrent", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Description", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RequestorId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "RequestorId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EndorserId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EndorserId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateOfEndorsement", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfEndorsement", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Justification", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Justification", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OnSiteRiskAssessmentCompleted", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteRiskAssessmentCompleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OnshoreRiskAssessmentCompleted", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "OnshoreRiskAssessmentCompleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OnSiteJobSafetyAnalysisCompleted", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteJobSafetyAnalysisCompleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovedByOnshoreManagement", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedByOnshoreManagement", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OnSiteWorkInstructionCompleted", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteWorkInstructionCompleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PotentialConsequence", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "PotentialConsequence", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Migration", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Migration", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TrainingRequired", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "TrainingRequired", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Training", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Training", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CostOfChange", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "CostOfChange", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IncreasedRisk", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "IncreasedRisk", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Comments", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Comments", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ProposedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProposedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateOfProposal", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfProposal", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ReviewedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ReviewedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateOfReview", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfReview", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovalReviewedById1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalReviewedById1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovalRevieweDate1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalRevieweDate1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovalReviewedById2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalReviewedById2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovalRevieweDate2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalRevieweDate2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovalEndorsedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalEndorsedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovalEndorsedDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalEndorsedDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovedDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LessonsLearned", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "LessonsLearned", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangeCommunicatedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeCommunicatedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChangeCommunicated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeCommunicated", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MethodOfCommunication", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "MethodOfCommunication", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DocumentationChangesById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DocumentationChangesById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateDocumentationChanges", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDocumentationChanges", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DocumentsChanged", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "DocumentsChanged", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TrainingRequriementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TrainingRequriementsCompletedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTrainingRequriementsCompleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTrainingRequriementsCompleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TrainingConducted", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "TrainingConducted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RegulatoryPermitRequirementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "RegulatoryPermitRequirementsCompletedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateRegulatoryPermitRequirementsCompleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateRegulatoryPermitRequirementsCompleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RegulatoryPermitRequirementsCompleted", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "RegulatoryPermitRequirementsCompleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangeRequirementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeRequirementsCompletedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChangeRequirementsCompleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeRequirementsCompleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangeRequirementsCompletedComments", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeRequirementsCompletedComments", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LessonsLearnedCommunicatedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LessonsLearnedCommunicatedById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateLessonsLearnedCommunicated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateLessonsLearnedCommunicated", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangeReportCloseOutDocumentationById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeReportCloseOutDocumentationById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChangeReportCloseOutDocumentation", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeReportCloseOutDocumentation", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovalForChangeReportCloseOutById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalForChangeReportCloseOutById", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateApprovalForChangeReportCloseOut", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateApprovalForChangeReportCloseOut", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ManageChangeStatusListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManageChangeStatusListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@InitiationCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "InitiationCompletedSwitch", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EvaluationCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "EvaluationCompletedSwitch", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ApprovalsCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalsCompletedSwitch", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ImplementationCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ImplementationCompletedSwitch", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CloseOutCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "CloseOutCompletedSwitch", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RejectedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "RejectedSwitch", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFreeSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFreeSwitch", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AcceptedByMaster", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AcceptedByMaster", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ComputedExposure", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ComputedExposure", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree1", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree2", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree3", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ManageChangeRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManageChangeRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ProjectRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ProjectRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LocationRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LocationRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LocationRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LocationRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ManageChangeReferenceId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManageChangeReferenceId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ManageChangeReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ManageChangeReferenceId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateOfRequest", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfRequest", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateOfRequest", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfRequest", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateEffective", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateEffective", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateEffective", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateEffective", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IsContractual", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IsContractual", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IsContractual", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "IsContractual", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TypeOfChangeRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TypeOfChangeRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TypeOfChangeRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TypeOfChangeRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateOfRemoval", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfRemoval", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateOfRemoval", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfRemoval", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NatureOfChangeRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NatureOfChangeRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NatureOfChangeRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NatureOfChangeRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_RequestorId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "RequestorId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_RequestorId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "RequestorId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EndorserId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EndorserId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EndorserId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EndorserId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateOfEndorsement", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfEndorsement", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateOfEndorsement", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfEndorsement", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OnSiteRiskAssessmentCompleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteRiskAssessmentCompleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OnSiteRiskAssessmentCompleted", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteRiskAssessmentCompleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OnshoreRiskAssessmentCompleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OnshoreRiskAssessmentCompleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OnshoreRiskAssessmentCompleted", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "OnshoreRiskAssessmentCompleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OnSiteJobSafetyAnalysisCompleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteJobSafetyAnalysisCompleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OnSiteJobSafetyAnalysisCompleted", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteJobSafetyAnalysisCompleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovedByOnshoreManagement", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedByOnshoreManagement", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovedByOnshoreManagement", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedByOnshoreManagement", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OnSiteWorkInstructionCompleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteWorkInstructionCompleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OnSiteWorkInstructionCompleted", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "OnSiteWorkInstructionCompleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TrainingRequired", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TrainingRequired", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TrainingRequired", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "TrainingRequired", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IncreasedRisk", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IncreasedRisk", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IncreasedRisk", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "IncreasedRisk", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ProposedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProposedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ProposedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProposedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateOfProposal", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfProposal", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateOfProposal", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfProposal", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ReviewedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ReviewedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ReviewedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ReviewedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateOfReview", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfReview", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateOfReview", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfReview", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovalReviewedById1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalReviewedById1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovalReviewedById1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalReviewedById1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovalRevieweDate1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalRevieweDate1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovalRevieweDate1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalRevieweDate1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovalReviewedById2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalReviewedById2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovalReviewedById2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalReviewedById2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovalRevieweDate2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalRevieweDate2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovalRevieweDate2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalRevieweDate2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovalEndorsedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalEndorsedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovalEndorsedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalEndorsedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovalEndorsedDate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalEndorsedDate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovalEndorsedDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalEndorsedDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovedDate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedDate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovedDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovedDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangeCommunicatedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeCommunicatedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangeCommunicatedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeCommunicatedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChangeCommunicated", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeCommunicated", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChangeCommunicated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeCommunicated", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DocumentationChangesById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DocumentationChangesById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DocumentationChangesById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DocumentationChangesById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateDocumentationChanges", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDocumentationChanges", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateDocumentationChanges", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDocumentationChanges", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TrainingRequriementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TrainingRequriementsCompletedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TrainingRequriementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TrainingRequriementsCompletedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTrainingRequriementsCompleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTrainingRequriementsCompleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTrainingRequriementsCompleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTrainingRequriementsCompleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_RegulatoryPermitRequirementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "RegulatoryPermitRequirementsCompletedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_RegulatoryPermitRequirementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "RegulatoryPermitRequirementsCompletedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateRegulatoryPermitRequirementsCompleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateRegulatoryPermitRequirementsCompleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateRegulatoryPermitRequirementsCompleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateRegulatoryPermitRequirementsCompleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangeRequirementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeRequirementsCompletedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangeRequirementsCompletedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeRequirementsCompletedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChangeRequirementsCompleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeRequirementsCompleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChangeRequirementsCompleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeRequirementsCompleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LessonsLearnedCommunicatedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LessonsLearnedCommunicatedById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LessonsLearnedCommunicatedById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LessonsLearnedCommunicatedById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateLessonsLearnedCommunicated", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateLessonsLearnedCommunicated", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateLessonsLearnedCommunicated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateLessonsLearnedCommunicated", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangeReportCloseOutDocumentationById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeReportCloseOutDocumentationById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangeReportCloseOutDocumentationById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangeReportCloseOutDocumentationById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChangeReportCloseOutDocumentation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeReportCloseOutDocumentation", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChangeReportCloseOutDocumentation", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChangeReportCloseOutDocumentation", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovalForChangeReportCloseOutById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalForChangeReportCloseOutById", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovalForChangeReportCloseOutById", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalForChangeReportCloseOutById", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateApprovalForChangeReportCloseOut", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateApprovalForChangeReportCloseOut", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateApprovalForChangeReportCloseOut", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateApprovalForChangeReportCloseOut", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ManageChangeStatusListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManageChangeStatusListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ManageChangeStatusListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManageChangeStatusListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_InitiationCompletedSwitch", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "InitiationCompletedSwitch", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_InitiationCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "InitiationCompletedSwitch", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EvaluationCompletedSwitch", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EvaluationCompletedSwitch", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EvaluationCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "EvaluationCompletedSwitch", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ApprovalsCompletedSwitch", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalsCompletedSwitch", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ApprovalsCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ApprovalsCompletedSwitch", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ImplementationCompletedSwitch", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ImplementationCompletedSwitch", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ImplementationCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ImplementationCompletedSwitch", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CloseOutCompletedSwitch", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CloseOutCompletedSwitch", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CloseOutCompletedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "CloseOutCompletedSwitch", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_RejectedSwitch", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "RejectedSwitch", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_RejectedSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "RejectedSwitch", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFreeSwitch", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFreeSwitch", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFreeSwitch", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFreeSwitch", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_AcceptedByMaster", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "AcceptedByMaster", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AcceptedByMaster", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AcceptedByMaster", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ComputedExposure", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ComputedExposure", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ComputedExposure", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ComputedExposure", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateCreated", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChanged", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateDeleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ManageChangeRowId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ManageChangeRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GASystem.Properties.Settings.Default.flagdata070807ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ManageChangeRowId, ProjectRowId, LocationRowId, ManageChangeReferenceId, D" +
                "ateOfRequest, DateEffective, IsContractual, TypeOfChangeRowId, DateOfRemoval, Na" +
                "tureOfChange, NatureOfChangeRowId, DescriptionCurrent, Description, ResponsibleR" +
                "oleListsRowId, RequestorId, EndorserId, DateOfEndorsement, Justification, OnSite" +
                "RiskAssessmentCompleted, OnshoreRiskAssessmentCompleted, OnSiteJobSafetyAnalysis" +
                "Completed, ApprovedByOnshoreManagement, OnSiteWorkInstructionCompleted, Potentia" +
                "lConsequence, Migration, TrainingRequired, Training, CostOfChange, IncreasedRisk" +
                ", Comments, ProposedById, DateOfProposal, ReviewedById, DateOfReview, ApprovalRe" +
                "viewedById1, ApprovalRevieweDate1, ApprovalReviewedById2, ApprovalRevieweDate2, " +
                "ApprovalEndorsedById, ApprovalEndorsedDate, ApprovedById, ApprovedDate, LessonsL" +
                "earned, ChangeCommunicatedById, DateChangeCommunicated, MethodOfCommunication, D" +
                "ocumentationChangesById, DateDocumentationChanges, DocumentsChanged, TrainingReq" +
                "uriementsCompletedById, DateTrainingRequriementsCompleted, TrainingConducted, Re" +
                "gulatoryPermitRequirementsCompletedById, DateRegulatoryPermitRequirementsComplet" +
                "ed, RegulatoryPermitRequirementsCompleted, ChangeRequirementsCompletedById, Date" +
                "ChangeRequirementsCompleted, ChangeRequirementsCompletedComments, LessonsLearned" +
                "CommunicatedById, DateLessonsLearnedCommunicated, ChangeReportCloseOutDocumentat" +
                "ionById, DateChangeReportCloseOutDocumentation, ApprovalForChangeReportCloseOutB" +
                "yId, DateApprovalForChangeReportCloseOut, rowguid, ManageChangeStatusListsRowId," +
                " InitiationCompletedSwitch, EvaluationCompletedSwitch, ApprovalsCompletedSwitch," +
                " ImplementationCompletedSwitch, CloseOutCompletedSwitch, RejectedSwitch, SwitchF" +
                "reeSwitch, AcceptedByMaster, ComputedExposure, MasterRowId, DateCreated, Created" +
                "By, DateChanged, ChangedBy, DateDeleted, DeletedBy, SwitchFree1, SwitchFree2, Sw" +
                "itchFree3, DateTimeFree1, DateTimeFree2, DateTimeFree3, TextFree1, TextFree2, Te" +
                "xtFree3, IntFree1, IntFree2, IntFree3, nTextFree1, nTextFree2, nTextFree3 FROM d" +
                "bo.GAManageChange";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ManageChangeDS.GAManageChangeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ManageChangeDS.GAManageChangeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ManageChangeDS.GAManageChangeDataTable dataTable = new ManageChangeDS.GAManageChangeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ManageChangeDS.GAManageChangeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ManageChangeDS dataSet) {
            return this.Adapter.Update(dataSet, "GAManageChange");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ManageChangeRowId, 
                    System.Nullable<int> Original_ProjectRowId, 
                    System.Nullable<int> Original_LocationRowId, 
                    string Original_ManageChangeReferenceId, 
                    System.Nullable<System.DateTime> Original_DateOfRequest, 
                    System.Nullable<System.DateTime> Original_DateEffective, 
                    System.Nullable<bool> Original_IsContractual, 
                    System.Nullable<int> Original_TypeOfChangeRowId, 
                    System.Nullable<System.DateTime> Original_DateOfRemoval, 
                    System.Nullable<int> Original_NatureOfChangeRowId, 
                    System.Nullable<int> Original_ResponsibleRoleListsRowId, 
                    System.Nullable<int> Original_RequestorId, 
                    System.Nullable<int> Original_EndorserId, 
                    System.Nullable<System.DateTime> Original_DateOfEndorsement, 
                    System.Nullable<bool> Original_OnSiteRiskAssessmentCompleted, 
                    System.Nullable<bool> Original_OnshoreRiskAssessmentCompleted, 
                    System.Nullable<bool> Original_OnSiteJobSafetyAnalysisCompleted, 
                    System.Nullable<bool> Original_ApprovedByOnshoreManagement, 
                    System.Nullable<bool> Original_OnSiteWorkInstructionCompleted, 
                    System.Nullable<bool> Original_TrainingRequired, 
                    System.Nullable<bool> Original_IncreasedRisk, 
                    System.Nullable<int> Original_ProposedById, 
                    System.Nullable<System.DateTime> Original_DateOfProposal, 
                    System.Nullable<int> Original_ReviewedById, 
                    System.Nullable<System.DateTime> Original_DateOfReview, 
                    System.Nullable<int> Original_ApprovalReviewedById1, 
                    System.Nullable<System.DateTime> Original_ApprovalRevieweDate1, 
                    System.Nullable<int> Original_ApprovalReviewedById2, 
                    System.Nullable<System.DateTime> Original_ApprovalRevieweDate2, 
                    System.Nullable<int> Original_ApprovalEndorsedById, 
                    System.Nullable<System.DateTime> Original_ApprovalEndorsedDate, 
                    System.Nullable<int> Original_ApprovedById, 
                    System.Nullable<System.DateTime> Original_ApprovedDate, 
                    System.Nullable<int> Original_ChangeCommunicatedById, 
                    System.Nullable<System.DateTime> Original_DateChangeCommunicated, 
                    System.Nullable<int> Original_DocumentationChangesById, 
                    System.Nullable<System.DateTime> Original_DateDocumentationChanges, 
                    System.Nullable<int> Original_TrainingRequriementsCompletedById, 
                    System.Nullable<System.DateTime> Original_DateTrainingRequriementsCompleted, 
                    System.Nullable<int> Original_RegulatoryPermitRequirementsCompletedById, 
                    System.Nullable<System.DateTime> Original_DateRegulatoryPermitRequirementsCompleted, 
                    System.Nullable<int> Original_ChangeRequirementsCompletedById, 
                    System.Nullable<System.DateTime> Original_DateChangeRequirementsCompleted, 
                    System.Nullable<int> Original_LessonsLearnedCommunicatedById, 
                    System.Nullable<System.DateTime> Original_DateLessonsLearnedCommunicated, 
                    System.Nullable<int> Original_ChangeReportCloseOutDocumentationById, 
                    System.Nullable<System.DateTime> Original_DateChangeReportCloseOutDocumentation, 
                    System.Nullable<int> Original_ApprovalForChangeReportCloseOutById, 
                    System.Nullable<System.DateTime> Original_DateApprovalForChangeReportCloseOut, 
                    System.Nullable<System.Guid> Original_rowguid, 
                    System.Nullable<int> Original_ManageChangeStatusListsRowId, 
                    System.Nullable<bool> Original_InitiationCompletedSwitch, 
                    System.Nullable<bool> Original_EvaluationCompletedSwitch, 
                    System.Nullable<bool> Original_ApprovalsCompletedSwitch, 
                    System.Nullable<bool> Original_ImplementationCompletedSwitch, 
                    System.Nullable<bool> Original_CloseOutCompletedSwitch, 
                    System.Nullable<bool> Original_RejectedSwitch, 
                    System.Nullable<bool> Original_SwitchFreeSwitch, 
                    System.Nullable<bool> Original_AcceptedByMaster, 
                    System.Nullable<int> Original_ComputedExposure, 
                    System.Nullable<int> Original_MasterRowId, 
                    System.Nullable<System.DateTime> Original_DateCreated, 
                    System.Nullable<int> Original_CreatedBy, 
                    System.Nullable<System.DateTime> Original_DateChanged, 
                    System.Nullable<int> Original_ChangedBy, 
                    System.Nullable<System.DateTime> Original_DateDeleted, 
                    System.Nullable<int> Original_DeletedBy, 
                    System.Nullable<bool> Original_SwitchFree1, 
                    System.Nullable<bool> Original_SwitchFree2, 
                    System.Nullable<bool> Original_SwitchFree3, 
                    System.Nullable<System.DateTime> Original_DateTimeFree1, 
                    System.Nullable<System.DateTime> Original_DateTimeFree2, 
                    System.Nullable<System.DateTime> Original_DateTimeFree3, 
                    string Original_TextFree1, 
                    string Original_TextFree2, 
                    string Original_TextFree3, 
                    System.Nullable<int> Original_IntFree1, 
                    System.Nullable<int> Original_IntFree2, 
                    System.Nullable<int> Original_IntFree3) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ManageChangeRowId));
            if ((Original_ProjectRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ProjectRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_LocationRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_LocationRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_ManageChangeReferenceId == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ManageChangeReferenceId));
            }
            if ((Original_DateOfRequest.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_DateOfRequest.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_DateEffective.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_DateEffective.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_IsContractual.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_IsContractual.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_TypeOfChangeRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_TypeOfChangeRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_DateOfRemoval.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_DateOfRemoval.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_NatureOfChangeRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_NatureOfChangeRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_ResponsibleRoleListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_ResponsibleRoleListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_RequestorId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_RequestorId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_EndorserId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_EndorserId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_DateOfEndorsement.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((System.DateTime)(Original_DateOfEndorsement.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((Original_OnSiteRiskAssessmentCompleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_OnSiteRiskAssessmentCompleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((Original_OnshoreRiskAssessmentCompleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((bool)(Original_OnshoreRiskAssessmentCompleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((Original_OnSiteJobSafetyAnalysisCompleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((bool)(Original_OnSiteJobSafetyAnalysisCompleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((Original_ApprovedByOnshoreManagement.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((bool)(Original_ApprovedByOnshoreManagement.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((Original_OnSiteWorkInstructionCompleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((bool)(Original_OnSiteWorkInstructionCompleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((Original_TrainingRequired.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((bool)(Original_TrainingRequired.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = System.DBNull.Value;
            }
            if ((Original_IncreasedRisk.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((bool)(Original_IncreasedRisk.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = System.DBNull.Value;
            }
            if ((Original_ProposedById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((int)(Original_ProposedById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = System.DBNull.Value;
            }
            if ((Original_DateOfProposal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((System.DateTime)(Original_DateOfProposal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = System.DBNull.Value;
            }
            if ((Original_ReviewedById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((int)(Original_ReviewedById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = System.DBNull.Value;
            }
            if ((Original_DateOfReview.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((System.DateTime)(Original_DateOfReview.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = System.DBNull.Value;
            }
            if ((Original_ApprovalReviewedById1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((int)(Original_ApprovalReviewedById1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = System.DBNull.Value;
            }
            if ((Original_ApprovalRevieweDate1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((System.DateTime)(Original_ApprovalRevieweDate1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = System.DBNull.Value;
            }
            if ((Original_ApprovalReviewedById2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((int)(Original_ApprovalReviewedById2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = System.DBNull.Value;
            }
            if ((Original_ApprovalRevieweDate2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((System.DateTime)(Original_ApprovalRevieweDate2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = System.DBNull.Value;
            }
            if ((Original_ApprovalEndorsedById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((int)(Original_ApprovalEndorsedById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = System.DBNull.Value;
            }
            if ((Original_ApprovalEndorsedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((System.DateTime)(Original_ApprovalEndorsedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = System.DBNull.Value;
            }
            if ((Original_ApprovedById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((int)(Original_ApprovedById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = System.DBNull.Value;
            }
            if ((Original_ApprovedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((System.DateTime)(Original_ApprovedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = System.DBNull.Value;
            }
            if ((Original_ChangeCommunicatedById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((int)(Original_ChangeCommunicatedById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = System.DBNull.Value;
            }
            if ((Original_DateChangeCommunicated.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((System.DateTime)(Original_DateChangeCommunicated.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = System.DBNull.Value;
            }
            if ((Original_DocumentationChangesById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((int)(Original_DocumentationChangesById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = System.DBNull.Value;
            }
            if ((Original_DateDocumentationChanges.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((System.DateTime)(Original_DateDocumentationChanges.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = System.DBNull.Value;
            }
            if ((Original_TrainingRequriementsCompletedById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((int)(Original_TrainingRequriementsCompletedById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = System.DBNull.Value;
            }
            if ((Original_DateTrainingRequriementsCompleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((System.DateTime)(Original_DateTrainingRequriementsCompleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = System.DBNull.Value;
            }
            if ((Original_RegulatoryPermitRequirementsCompletedById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((int)(Original_RegulatoryPermitRequirementsCompletedById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = System.DBNull.Value;
            }
            if ((Original_DateRegulatoryPermitRequirementsCompleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((System.DateTime)(Original_DateRegulatoryPermitRequirementsCompleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = System.DBNull.Value;
            }
            if ((Original_ChangeRequirementsCompletedById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((int)(Original_ChangeRequirementsCompletedById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = System.DBNull.Value;
            }
            if ((Original_DateChangeRequirementsCompleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((System.DateTime)(Original_DateChangeRequirementsCompleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = System.DBNull.Value;
            }
            if ((Original_LessonsLearnedCommunicatedById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((int)(Original_LessonsLearnedCommunicatedById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = System.DBNull.Value;
            }
            if ((Original_DateLessonsLearnedCommunicated.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((System.DateTime)(Original_DateLessonsLearnedCommunicated.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = System.DBNull.Value;
            }
            if ((Original_ChangeReportCloseOutDocumentationById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((int)(Original_ChangeReportCloseOutDocumentationById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = System.DBNull.Value;
            }
            if ((Original_DateChangeReportCloseOutDocumentation.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((System.DateTime)(Original_DateChangeReportCloseOutDocumentation.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = System.DBNull.Value;
            }
            if ((Original_ApprovalForChangeReportCloseOutById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((int)(Original_ApprovalForChangeReportCloseOutById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = System.DBNull.Value;
            }
            if ((Original_DateApprovalForChangeReportCloseOut.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((System.DateTime)(Original_DateApprovalForChangeReportCloseOut.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = System.DBNull.Value;
            }
            if ((Original_rowguid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((System.Guid)(Original_rowguid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = System.DBNull.Value;
            }
            if ((Original_ManageChangeStatusListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[99].Value = ((int)(Original_ManageChangeStatusListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[99].Value = System.DBNull.Value;
            }
            if ((Original_InitiationCompletedSwitch.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[101].Value = ((bool)(Original_InitiationCompletedSwitch.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[101].Value = System.DBNull.Value;
            }
            if ((Original_EvaluationCompletedSwitch.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[103].Value = ((bool)(Original_EvaluationCompletedSwitch.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[103].Value = System.DBNull.Value;
            }
            if ((Original_ApprovalsCompletedSwitch.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[105].Value = ((bool)(Original_ApprovalsCompletedSwitch.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[105].Value = System.DBNull.Value;
            }
            if ((Original_ImplementationCompletedSwitch.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[107].Value = ((bool)(Original_ImplementationCompletedSwitch.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[107].Value = System.DBNull.Value;
            }
            if ((Original_CloseOutCompletedSwitch.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[109].Value = ((bool)(Original_CloseOutCompletedSwitch.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[109].Value = System.DBNull.Value;
            }
            if ((Original_RejectedSwitch.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[111].Value = ((bool)(Original_RejectedSwitch.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[111].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFreeSwitch.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[113].Value = ((bool)(Original_SwitchFreeSwitch.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[113].Value = System.DBNull.Value;
            }
            if ((Original_AcceptedByMaster.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[115].Value = ((bool)(Original_AcceptedByMaster.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[115].Value = System.DBNull.Value;
            }
            if ((Original_ComputedExposure.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[117].Value = ((int)(Original_ComputedExposure.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[117].Value = System.DBNull.Value;
            }
            if ((Original_MasterRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[119].Value = ((int)(Original_MasterRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[119].Value = System.DBNull.Value;
            }
            if ((Original_DateCreated.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[121].Value = ((System.DateTime)(Original_DateCreated.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[121].Value = System.DBNull.Value;
            }
            if ((Original_CreatedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[123].Value = ((int)(Original_CreatedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[123].Value = System.DBNull.Value;
            }
            if ((Original_DateChanged.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[125].Value = ((System.DateTime)(Original_DateChanged.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[125].Value = System.DBNull.Value;
            }
            if ((Original_ChangedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[127].Value = ((int)(Original_ChangedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[127].Value = System.DBNull.Value;
            }
            if ((Original_DateDeleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[129].Value = ((System.DateTime)(Original_DateDeleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[129].Value = System.DBNull.Value;
            }
            if ((Original_DeletedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[131].Value = ((int)(Original_DeletedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[131].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[133].Value = ((bool)(Original_SwitchFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[133].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[135].Value = ((bool)(Original_SwitchFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[135].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[137].Value = ((bool)(Original_SwitchFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[137].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[139].Value = ((System.DateTime)(Original_DateTimeFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[139].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[141].Value = ((System.DateTime)(Original_DateTimeFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[141].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[143].Value = ((System.DateTime)(Original_DateTimeFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[143].Value = System.DBNull.Value;
            }
            if ((Original_TextFree1 == null)) {
                this.Adapter.DeleteCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[145].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[145].Value = ((string)(Original_TextFree1));
            }
            if ((Original_TextFree2 == null)) {
                this.Adapter.DeleteCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[147].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[147].Value = ((string)(Original_TextFree2));
            }
            if ((Original_TextFree3 == null)) {
                this.Adapter.DeleteCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[149].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[149].Value = ((string)(Original_TextFree3));
            }
            if ((Original_IntFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[151].Value = ((int)(Original_IntFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[151].Value = System.DBNull.Value;
            }
            if ((Original_IntFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[153].Value = ((int)(Original_IntFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[153].Value = System.DBNull.Value;
            }
            if ((Original_IntFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[155].Value = ((int)(Original_IntFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[155].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.Nullable<int> ProjectRowId, 
                    System.Nullable<int> LocationRowId, 
                    string ManageChangeReferenceId, 
                    System.Nullable<System.DateTime> DateOfRequest, 
                    System.Nullable<System.DateTime> DateEffective, 
                    System.Nullable<bool> IsContractual, 
                    System.Nullable<int> TypeOfChangeRowId, 
                    System.Nullable<System.DateTime> DateOfRemoval, 
                    string NatureOfChange, 
                    System.Nullable<int> NatureOfChangeRowId, 
                    string DescriptionCurrent, 
                    string Description, 
                    System.Nullable<int> ResponsibleRoleListsRowId, 
                    System.Nullable<int> RequestorId, 
                    System.Nullable<int> EndorserId, 
                    System.Nullable<System.DateTime> DateOfEndorsement, 
                    string Justification, 
                    System.Nullable<bool> OnSiteRiskAssessmentCompleted, 
                    System.Nullable<bool> OnshoreRiskAssessmentCompleted, 
                    System.Nullable<bool> OnSiteJobSafetyAnalysisCompleted, 
                    System.Nullable<bool> ApprovedByOnshoreManagement, 
                    System.Nullable<bool> OnSiteWorkInstructionCompleted, 
                    string PotentialConsequence, 
                    string Migration, 
                    System.Nullable<bool> TrainingRequired, 
                    string Training, 
                    string CostOfChange, 
                    System.Nullable<bool> IncreasedRisk, 
                    string Comments, 
                    System.Nullable<int> ProposedById, 
                    System.Nullable<System.DateTime> DateOfProposal, 
                    System.Nullable<int> ReviewedById, 
                    System.Nullable<System.DateTime> DateOfReview, 
                    System.Nullable<int> ApprovalReviewedById1, 
                    System.Nullable<System.DateTime> ApprovalRevieweDate1, 
                    System.Nullable<int> ApprovalReviewedById2, 
                    System.Nullable<System.DateTime> ApprovalRevieweDate2, 
                    System.Nullable<int> ApprovalEndorsedById, 
                    System.Nullable<System.DateTime> ApprovalEndorsedDate, 
                    System.Nullable<int> ApprovedById, 
                    System.Nullable<System.DateTime> ApprovedDate, 
                    string LessonsLearned, 
                    System.Nullable<int> ChangeCommunicatedById, 
                    System.Nullable<System.DateTime> DateChangeCommunicated, 
                    string MethodOfCommunication, 
                    System.Nullable<int> DocumentationChangesById, 
                    System.Nullable<System.DateTime> DateDocumentationChanges, 
                    string DocumentsChanged, 
                    System.Nullable<int> TrainingRequriementsCompletedById, 
                    System.Nullable<System.DateTime> DateTrainingRequriementsCompleted, 
                    string TrainingConducted, 
                    System.Nullable<int> RegulatoryPermitRequirementsCompletedById, 
                    System.Nullable<System.DateTime> DateRegulatoryPermitRequirementsCompleted, 
                    string RegulatoryPermitRequirementsCompleted, 
                    System.Nullable<int> ChangeRequirementsCompletedById, 
                    System.Nullable<System.DateTime> DateChangeRequirementsCompleted, 
                    string ChangeRequirementsCompletedComments, 
                    System.Nullable<int> LessonsLearnedCommunicatedById, 
                    System.Nullable<System.DateTime> DateLessonsLearnedCommunicated, 
                    System.Nullable<int> ChangeReportCloseOutDocumentationById, 
                    System.Nullable<System.DateTime> DateChangeReportCloseOutDocumentation, 
                    System.Nullable<int> ApprovalForChangeReportCloseOutById, 
                    System.Nullable<System.DateTime> DateApprovalForChangeReportCloseOut, 
                    System.Nullable<System.Guid> rowguid, 
                    System.Nullable<int> ManageChangeStatusListsRowId, 
                    System.Nullable<bool> InitiationCompletedSwitch, 
                    System.Nullable<bool> EvaluationCompletedSwitch, 
                    System.Nullable<bool> ApprovalsCompletedSwitch, 
                    System.Nullable<bool> ImplementationCompletedSwitch, 
                    System.Nullable<bool> CloseOutCompletedSwitch, 
                    System.Nullable<bool> RejectedSwitch, 
                    System.Nullable<bool> SwitchFreeSwitch, 
                    System.Nullable<bool> AcceptedByMaster, 
                    System.Nullable<int> ComputedExposure, 
                    System.Nullable<int> MasterRowId, 
                    System.Nullable<System.DateTime> DateCreated, 
                    System.Nullable<int> CreatedBy, 
                    System.Nullable<System.DateTime> DateChanged, 
                    System.Nullable<int> ChangedBy, 
                    System.Nullable<System.DateTime> DateDeleted, 
                    System.Nullable<int> DeletedBy, 
                    System.Nullable<bool> SwitchFree1, 
                    System.Nullable<bool> SwitchFree2, 
                    System.Nullable<bool> SwitchFree3, 
                    System.Nullable<System.DateTime> DateTimeFree1, 
                    System.Nullable<System.DateTime> DateTimeFree2, 
                    System.Nullable<System.DateTime> DateTimeFree3, 
                    string TextFree1, 
                    string TextFree2, 
                    string TextFree3, 
                    System.Nullable<int> IntFree1, 
                    System.Nullable<int> IntFree2, 
                    System.Nullable<int> IntFree3, 
                    string nTextFree1, 
                    string nTextFree2, 
                    string nTextFree3) {
            if ((ProjectRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ProjectRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((LocationRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(LocationRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((ManageChangeReferenceId == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ManageChangeReferenceId));
            }
            if ((DateOfRequest.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DateOfRequest.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((DateEffective.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(DateEffective.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((IsContractual.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(IsContractual.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((TypeOfChangeRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(TypeOfChangeRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((DateOfRemoval.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(DateOfRemoval.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((NatureOfChange == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(NatureOfChange));
            }
            if ((NatureOfChangeRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(NatureOfChangeRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((DescriptionCurrent == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(DescriptionCurrent));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Description));
            }
            if ((ResponsibleRoleListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(ResponsibleRoleListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((RequestorId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(RequestorId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((EndorserId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(EndorserId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((DateOfEndorsement.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(DateOfEndorsement.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((Justification == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Justification));
            }
            if ((OnSiteRiskAssessmentCompleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(OnSiteRiskAssessmentCompleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((OnshoreRiskAssessmentCompleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(OnshoreRiskAssessmentCompleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((OnSiteJobSafetyAnalysisCompleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(OnSiteJobSafetyAnalysisCompleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((ApprovedByOnshoreManagement.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(ApprovedByOnshoreManagement.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((OnSiteWorkInstructionCompleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(OnSiteWorkInstructionCompleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = System.DBNull.Value;
            }
            if ((PotentialConsequence == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(PotentialConsequence));
            }
            if ((Migration == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Migration));
            }
            if ((TrainingRequired.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(TrainingRequired.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Training == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(Training));
            }
            if ((CostOfChange == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(CostOfChange));
            }
            if ((IncreasedRisk.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((bool)(IncreasedRisk.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = System.DBNull.Value;
            }
            if ((Comments == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(Comments));
            }
            if ((ProposedById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((int)(ProposedById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = System.DBNull.Value;
            }
            if ((DateOfProposal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((System.DateTime)(DateOfProposal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((ReviewedById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((int)(ReviewedById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = System.DBNull.Value;
            }
            if ((DateOfReview.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((System.DateTime)(DateOfReview.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((ApprovalReviewedById1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((int)(ApprovalReviewedById1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = System.DBNull.Value;
            }
            if ((ApprovalRevieweDate1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((System.DateTime)(ApprovalRevieweDate1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((ApprovalReviewedById2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(ApprovalReviewedById2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((ApprovalRevieweDate2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((System.DateTime)(ApprovalRevieweDate2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((ApprovalEndorsedById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((int)(ApprovalEndorsedById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((ApprovalEndorsedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((System.DateTime)(ApprovalEndorsedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = System.DBNull.Value;
            }
            if ((ApprovedById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((int)(ApprovedById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = System.DBNull.Value;
            }
            if ((ApprovedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((System.DateTime)(ApprovedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = System.DBNull.Value;
            }
            if ((LessonsLearned == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(LessonsLearned));
            }
            if ((ChangeCommunicatedById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((int)(ChangeCommunicatedById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = System.DBNull.Value;
            }
            if ((DateChangeCommunicated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((System.DateTime)(DateChangeCommunicated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = System.DBNull.Value;
            }
            if ((MethodOfCommunication == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(MethodOfCommunication));
            }
            if ((DocumentationChangesById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((int)(DocumentationChangesById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = System.DBNull.Value;
            }
            if ((DateDocumentationChanges.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((System.DateTime)(DateDocumentationChanges.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = System.DBNull.Value;
            }
            if ((DocumentsChanged == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(DocumentsChanged));
            }
            if ((TrainingRequriementsCompletedById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((int)(TrainingRequriementsCompletedById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = System.DBNull.Value;
            }
            if ((DateTrainingRequriementsCompleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((System.DateTime)(DateTrainingRequriementsCompleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = System.DBNull.Value;
            }
            if ((TrainingConducted == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(TrainingConducted));
            }
            if ((RegulatoryPermitRequirementsCompletedById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((int)(RegulatoryPermitRequirementsCompletedById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = System.DBNull.Value;
            }
            if ((DateRegulatoryPermitRequirementsCompleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((System.DateTime)(DateRegulatoryPermitRequirementsCompleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = System.DBNull.Value;
            }
            if ((RegulatoryPermitRequirementsCompleted == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(RegulatoryPermitRequirementsCompleted));
            }
            if ((ChangeRequirementsCompletedById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((int)(ChangeRequirementsCompletedById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = System.DBNull.Value;
            }
            if ((DateChangeRequirementsCompleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((System.DateTime)(DateChangeRequirementsCompleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = System.DBNull.Value;
            }
            if ((ChangeRequirementsCompletedComments == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(ChangeRequirementsCompletedComments));
            }
            if ((LessonsLearnedCommunicatedById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((int)(LessonsLearnedCommunicatedById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = System.DBNull.Value;
            }
            if ((DateLessonsLearnedCommunicated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((System.DateTime)(DateLessonsLearnedCommunicated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = System.DBNull.Value;
            }
            if ((ChangeReportCloseOutDocumentationById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((int)(ChangeReportCloseOutDocumentationById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = System.DBNull.Value;
            }
            if ((DateChangeReportCloseOutDocumentation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((System.DateTime)(DateChangeReportCloseOutDocumentation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = System.DBNull.Value;
            }
            if ((ApprovalForChangeReportCloseOutById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((int)(ApprovalForChangeReportCloseOutById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = System.DBNull.Value;
            }
            if ((DateApprovalForChangeReportCloseOut.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((System.DateTime)(DateApprovalForChangeReportCloseOut.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = System.DBNull.Value;
            }
            if ((rowguid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((System.Guid)(rowguid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = System.DBNull.Value;
            }
            if ((ManageChangeStatusListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((int)(ManageChangeStatusListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = System.DBNull.Value;
            }
            if ((InitiationCompletedSwitch.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((bool)(InitiationCompletedSwitch.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = System.DBNull.Value;
            }
            if ((EvaluationCompletedSwitch.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((bool)(EvaluationCompletedSwitch.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = System.DBNull.Value;
            }
            if ((ApprovalsCompletedSwitch.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((bool)(ApprovalsCompletedSwitch.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = System.DBNull.Value;
            }
            if ((ImplementationCompletedSwitch.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((bool)(ImplementationCompletedSwitch.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = System.DBNull.Value;
            }
            if ((CloseOutCompletedSwitch.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((bool)(CloseOutCompletedSwitch.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = System.DBNull.Value;
            }
            if ((RejectedSwitch.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((bool)(RejectedSwitch.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = System.DBNull.Value;
            }
            if ((SwitchFreeSwitch.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((bool)(SwitchFreeSwitch.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = System.DBNull.Value;
            }
            if ((AcceptedByMaster.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((bool)(AcceptedByMaster.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = System.DBNull.Value;
            }
            if ((ComputedExposure.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((int)(ComputedExposure.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = System.DBNull.Value;
            }
            if ((MasterRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((int)(MasterRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = System.DBNull.Value;
            }
            if ((DateCreated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[75].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = System.DBNull.Value;
            }
            if ((CreatedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[76].Value = ((int)(CreatedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = System.DBNull.Value;
            }
            if ((DateChanged.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((System.DateTime)(DateChanged.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = System.DBNull.Value;
            }
            if ((ChangedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((int)(ChangedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = System.DBNull.Value;
            }
            if ((DateDeleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((System.DateTime)(DateDeleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = System.DBNull.Value;
            }
            if ((DeletedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[80].Value = ((int)(DeletedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = System.DBNull.Value;
            }
            if ((SwitchFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[81].Value = ((bool)(SwitchFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = System.DBNull.Value;
            }
            if ((SwitchFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[82].Value = ((bool)(SwitchFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = System.DBNull.Value;
            }
            if ((SwitchFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[83].Value = ((bool)(SwitchFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = System.DBNull.Value;
            }
            if ((DateTimeFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[84].Value = ((System.DateTime)(DateTimeFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = System.DBNull.Value;
            }
            if ((DateTimeFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[85].Value = ((System.DateTime)(DateTimeFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = System.DBNull.Value;
            }
            if ((DateTimeFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[86].Value = ((System.DateTime)(DateTimeFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = System.DBNull.Value;
            }
            if ((TextFree1 == null)) {
                this.Adapter.InsertCommand.Parameters[87].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = ((string)(TextFree1));
            }
            if ((TextFree2 == null)) {
                this.Adapter.InsertCommand.Parameters[88].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = ((string)(TextFree2));
            }
            if ((TextFree3 == null)) {
                this.Adapter.InsertCommand.Parameters[89].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = ((string)(TextFree3));
            }
            if ((IntFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[90].Value = ((int)(IntFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = System.DBNull.Value;
            }
            if ((IntFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[91].Value = ((int)(IntFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[91].Value = System.DBNull.Value;
            }
            if ((IntFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[92].Value = ((int)(IntFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[92].Value = System.DBNull.Value;
            }
            if ((nTextFree1 == null)) {
                this.Adapter.InsertCommand.Parameters[93].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[93].Value = ((string)(nTextFree1));
            }
            if ((nTextFree2 == null)) {
                this.Adapter.InsertCommand.Parameters[94].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[94].Value = ((string)(nTextFree2));
            }
            if ((nTextFree3 == null)) {
                this.Adapter.InsertCommand.Parameters[95].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[95].Value = ((string)(nTextFree3));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Nullable<int> ProjectRowId, 
                    System.Nullable<int> LocationRowId, 
                    string ManageChangeReferenceId, 
                    System.Nullable<System.DateTime> DateOfRequest, 
                    System.Nullable<System.DateTime> DateEffective, 
                    System.Nullable<bool> IsContractual, 
                    System.Nullable<int> TypeOfChangeRowId, 
                    System.Nullable<System.DateTime> DateOfRemoval, 
                    string NatureOfChange, 
                    System.Nullable<int> NatureOfChangeRowId, 
                    string DescriptionCurrent, 
                    string Description, 
                    System.Nullable<int> ResponsibleRoleListsRowId, 
                    System.Nullable<int> RequestorId, 
                    System.Nullable<int> EndorserId, 
                    System.Nullable<System.DateTime> DateOfEndorsement, 
                    string Justification, 
                    System.Nullable<bool> OnSiteRiskAssessmentCompleted, 
                    System.Nullable<bool> OnshoreRiskAssessmentCompleted, 
                    System.Nullable<bool> OnSiteJobSafetyAnalysisCompleted, 
                    System.Nullable<bool> ApprovedByOnshoreManagement, 
                    System.Nullable<bool> OnSiteWorkInstructionCompleted, 
                    string PotentialConsequence, 
                    string Migration, 
                    System.Nullable<bool> TrainingRequired, 
                    string Training, 
                    string CostOfChange, 
                    System.Nullable<bool> IncreasedRisk, 
                    string Comments, 
                    System.Nullable<int> ProposedById, 
                    System.Nullable<System.DateTime> DateOfProposal, 
                    System.Nullable<int> ReviewedById, 
                    System.Nullable<System.DateTime> DateOfReview, 
                    System.Nullable<int> ApprovalReviewedById1, 
                    System.Nullable<System.DateTime> ApprovalRevieweDate1, 
                    System.Nullable<int> ApprovalReviewedById2, 
                    System.Nullable<System.DateTime> ApprovalRevieweDate2, 
                    System.Nullable<int> ApprovalEndorsedById, 
                    System.Nullable<System.DateTime> ApprovalEndorsedDate, 
                    System.Nullable<int> ApprovedById, 
                    System.Nullable<System.DateTime> ApprovedDate, 
                    string LessonsLearned, 
                    System.Nullable<int> ChangeCommunicatedById, 
                    System.Nullable<System.DateTime> DateChangeCommunicated, 
                    string MethodOfCommunication, 
                    System.Nullable<int> DocumentationChangesById, 
                    System.Nullable<System.DateTime> DateDocumentationChanges, 
                    string DocumentsChanged, 
                    System.Nullable<int> TrainingRequriementsCompletedById, 
                    System.Nullable<System.DateTime> DateTrainingRequriementsCompleted, 
                    string TrainingConducted, 
                    System.Nullable<int> RegulatoryPermitRequirementsCompletedById, 
                    System.Nullable<System.DateTime> DateRegulatoryPermitRequirementsCompleted, 
                    string RegulatoryPermitRequirementsCompleted, 
                    System.Nullable<int> ChangeRequirementsCompletedById, 
                    System.Nullable<System.DateTime> DateChangeRequirementsCompleted, 
                    string ChangeRequirementsCompletedComments, 
                    System.Nullable<int> LessonsLearnedCommunicatedById, 
                    System.Nullable<System.DateTime> DateLessonsLearnedCommunicated, 
                    System.Nullable<int> ChangeReportCloseOutDocumentationById, 
                    System.Nullable<System.DateTime> DateChangeReportCloseOutDocumentation, 
                    System.Nullable<int> ApprovalForChangeReportCloseOutById, 
                    System.Nullable<System.DateTime> DateApprovalForChangeReportCloseOut, 
                    System.Nullable<System.Guid> rowguid, 
                    System.Nullable<int> ManageChangeStatusListsRowId, 
                    System.Nullable<bool> InitiationCompletedSwitch, 
                    System.Nullable<bool> EvaluationCompletedSwitch, 
                    System.Nullable<bool> ApprovalsCompletedSwitch, 
                    System.Nullable<bool> ImplementationCompletedSwitch, 
                    System.Nullable<bool> CloseOutCompletedSwitch, 
                    System.Nullable<bool> RejectedSwitch, 
                    System.Nullable<bool> SwitchFreeSwitch, 
                    System.Nullable<bool> AcceptedByMaster, 
                    System.Nullable<int> ComputedExposure, 
                    System.Nullable<int> MasterRowId, 
                    System.Nullable<System.DateTime> DateCreated, 
                    System.Nullable<int> CreatedBy, 
                    System.Nullable<System.DateTime> DateChanged, 
                    System.Nullable<int> ChangedBy, 
                    System.Nullable<System.DateTime> DateDeleted, 
                    System.Nullable<int> DeletedBy, 
                    System.Nullable<bool> SwitchFree1, 
                    System.Nullable<bool> SwitchFree2, 
                    System.Nullable<bool> SwitchFree3, 
                    System.Nullable<System.DateTime> DateTimeFree1, 
                    System.Nullable<System.DateTime> DateTimeFree2, 
                    System.Nullable<System.DateTime> DateTimeFree3, 
                    string TextFree1, 
                    string TextFree2, 
                    string TextFree3, 
                    System.Nullable<int> IntFree1, 
                    System.Nullable<int> IntFree2, 
                    System.Nullable<int> IntFree3, 
                    string nTextFree1, 
                    string nTextFree2, 
                    string nTextFree3, 
                    int Original_ManageChangeRowId, 
                    System.Nullable<int> Original_ProjectRowId, 
                    System.Nullable<int> Original_LocationRowId, 
                    string Original_ManageChangeReferenceId, 
                    System.Nullable<System.DateTime> Original_DateOfRequest, 
                    System.Nullable<System.DateTime> Original_DateEffective, 
                    System.Nullable<bool> Original_IsContractual, 
                    System.Nullable<int> Original_TypeOfChangeRowId, 
                    System.Nullable<System.DateTime> Original_DateOfRemoval, 
                    System.Nullable<int> Original_NatureOfChangeRowId, 
                    System.Nullable<int> Original_ResponsibleRoleListsRowId, 
                    System.Nullable<int> Original_RequestorId, 
                    System.Nullable<int> Original_EndorserId, 
                    System.Nullable<System.DateTime> Original_DateOfEndorsement, 
                    System.Nullable<bool> Original_OnSiteRiskAssessmentCompleted, 
                    System.Nullable<bool> Original_OnshoreRiskAssessmentCompleted, 
                    System.Nullable<bool> Original_OnSiteJobSafetyAnalysisCompleted, 
                    System.Nullable<bool> Original_ApprovedByOnshoreManagement, 
                    System.Nullable<bool> Original_OnSiteWorkInstructionCompleted, 
                    System.Nullable<bool> Original_TrainingRequired, 
                    System.Nullable<bool> Original_IncreasedRisk, 
                    System.Nullable<int> Original_ProposedById, 
                    System.Nullable<System.DateTime> Original_DateOfProposal, 
                    System.Nullable<int> Original_ReviewedById, 
                    System.Nullable<System.DateTime> Original_DateOfReview, 
                    System.Nullable<int> Original_ApprovalReviewedById1, 
                    System.Nullable<System.DateTime> Original_ApprovalRevieweDate1, 
                    System.Nullable<int> Original_ApprovalReviewedById2, 
                    System.Nullable<System.DateTime> Original_ApprovalRevieweDate2, 
                    System.Nullable<int> Original_ApprovalEndorsedById, 
                    System.Nullable<System.DateTime> Original_ApprovalEndorsedDate, 
                    System.Nullable<int> Original_ApprovedById, 
                    System.Nullable<System.DateTime> Original_ApprovedDate, 
                    System.Nullable<int> Original_ChangeCommunicatedById, 
                    System.Nullable<System.DateTime> Original_DateChangeCommunicated, 
                    System.Nullable<int> Original_DocumentationChangesById, 
                    System.Nullable<System.DateTime> Original_DateDocumentationChanges, 
                    System.Nullable<int> Original_TrainingRequriementsCompletedById, 
                    System.Nullable<System.DateTime> Original_DateTrainingRequriementsCompleted, 
                    System.Nullable<int> Original_RegulatoryPermitRequirementsCompletedById, 
                    System.Nullable<System.DateTime> Original_DateRegulatoryPermitRequirementsCompleted, 
                    System.Nullable<int> Original_ChangeRequirementsCompletedById, 
                    System.Nullable<System.DateTime> Original_DateChangeRequirementsCompleted, 
                    System.Nullable<int> Original_LessonsLearnedCommunicatedById, 
                    System.Nullable<System.DateTime> Original_DateLessonsLearnedCommunicated, 
                    System.Nullable<int> Original_ChangeReportCloseOutDocumentationById, 
                    System.Nullable<System.DateTime> Original_DateChangeReportCloseOutDocumentation, 
                    System.Nullable<int> Original_ApprovalForChangeReportCloseOutById, 
                    System.Nullable<System.DateTime> Original_DateApprovalForChangeReportCloseOut, 
                    System.Nullable<System.Guid> Original_rowguid, 
                    System.Nullable<int> Original_ManageChangeStatusListsRowId, 
                    System.Nullable<bool> Original_InitiationCompletedSwitch, 
                    System.Nullable<bool> Original_EvaluationCompletedSwitch, 
                    System.Nullable<bool> Original_ApprovalsCompletedSwitch, 
                    System.Nullable<bool> Original_ImplementationCompletedSwitch, 
                    System.Nullable<bool> Original_CloseOutCompletedSwitch, 
                    System.Nullable<bool> Original_RejectedSwitch, 
                    System.Nullable<bool> Original_SwitchFreeSwitch, 
                    System.Nullable<bool> Original_AcceptedByMaster, 
                    System.Nullable<int> Original_ComputedExposure, 
                    System.Nullable<int> Original_MasterRowId, 
                    System.Nullable<System.DateTime> Original_DateCreated, 
                    System.Nullable<int> Original_CreatedBy, 
                    System.Nullable<System.DateTime> Original_DateChanged, 
                    System.Nullable<int> Original_ChangedBy, 
                    System.Nullable<System.DateTime> Original_DateDeleted, 
                    System.Nullable<int> Original_DeletedBy, 
                    System.Nullable<bool> Original_SwitchFree1, 
                    System.Nullable<bool> Original_SwitchFree2, 
                    System.Nullable<bool> Original_SwitchFree3, 
                    System.Nullable<System.DateTime> Original_DateTimeFree1, 
                    System.Nullable<System.DateTime> Original_DateTimeFree2, 
                    System.Nullable<System.DateTime> Original_DateTimeFree3, 
                    string Original_TextFree1, 
                    string Original_TextFree2, 
                    string Original_TextFree3, 
                    System.Nullable<int> Original_IntFree1, 
                    System.Nullable<int> Original_IntFree2, 
                    System.Nullable<int> Original_IntFree3, 
                    int ManageChangeRowId) {
            if ((ProjectRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ProjectRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((LocationRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(LocationRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((ManageChangeReferenceId == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ManageChangeReferenceId));
            }
            if ((DateOfRequest.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DateOfRequest.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((DateEffective.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(DateEffective.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((IsContractual.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(IsContractual.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((TypeOfChangeRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(TypeOfChangeRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((DateOfRemoval.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(DateOfRemoval.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((NatureOfChange == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(NatureOfChange));
            }
            if ((NatureOfChangeRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(NatureOfChangeRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((DescriptionCurrent == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(DescriptionCurrent));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Description));
            }
            if ((ResponsibleRoleListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(ResponsibleRoleListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((RequestorId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(RequestorId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((EndorserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(EndorserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((DateOfEndorsement.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(DateOfEndorsement.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((Justification == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Justification));
            }
            if ((OnSiteRiskAssessmentCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(OnSiteRiskAssessmentCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((OnshoreRiskAssessmentCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(OnshoreRiskAssessmentCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((OnSiteJobSafetyAnalysisCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(OnSiteJobSafetyAnalysisCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((ApprovedByOnshoreManagement.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(ApprovedByOnshoreManagement.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((OnSiteWorkInstructionCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(OnSiteWorkInstructionCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            if ((PotentialConsequence == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(PotentialConsequence));
            }
            if ((Migration == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Migration));
            }
            if ((TrainingRequired.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(TrainingRequired.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Training == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Training));
            }
            if ((CostOfChange == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(CostOfChange));
            }
            if ((IncreasedRisk.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(IncreasedRisk.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            if ((Comments == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Comments));
            }
            if ((ProposedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(ProposedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = System.DBNull.Value;
            }
            if ((DateOfProposal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(DateOfProposal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((ReviewedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(ReviewedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            if ((DateOfReview.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(DateOfReview.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((ApprovalReviewedById1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(ApprovalReviewedById1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = System.DBNull.Value;
            }
            if ((ApprovalRevieweDate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(ApprovalRevieweDate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((ApprovalReviewedById2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(ApprovalReviewedById2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((ApprovalRevieweDate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(ApprovalRevieweDate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((ApprovalEndorsedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(ApprovalEndorsedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((ApprovalEndorsedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTime)(ApprovalEndorsedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = System.DBNull.Value;
            }
            if ((ApprovedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(ApprovedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = System.DBNull.Value;
            }
            if ((ApprovedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(ApprovedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = System.DBNull.Value;
            }
            if ((LessonsLearned == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(LessonsLearned));
            }
            if ((ChangeCommunicatedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(ChangeCommunicatedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = System.DBNull.Value;
            }
            if ((DateChangeCommunicated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(DateChangeCommunicated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = System.DBNull.Value;
            }
            if ((MethodOfCommunication == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(MethodOfCommunication));
            }
            if ((DocumentationChangesById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(DocumentationChangesById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = System.DBNull.Value;
            }
            if ((DateDocumentationChanges.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((System.DateTime)(DateDocumentationChanges.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = System.DBNull.Value;
            }
            if ((DocumentsChanged == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(DocumentsChanged));
            }
            if ((TrainingRequriementsCompletedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(TrainingRequriementsCompletedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = System.DBNull.Value;
            }
            if ((DateTrainingRequriementsCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(DateTrainingRequriementsCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = System.DBNull.Value;
            }
            if ((TrainingConducted == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(TrainingConducted));
            }
            if ((RegulatoryPermitRequirementsCompletedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(RegulatoryPermitRequirementsCompletedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = System.DBNull.Value;
            }
            if ((DateRegulatoryPermitRequirementsCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTime)(DateRegulatoryPermitRequirementsCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = System.DBNull.Value;
            }
            if ((RegulatoryPermitRequirementsCompleted == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(RegulatoryPermitRequirementsCompleted));
            }
            if ((ChangeRequirementsCompletedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(ChangeRequirementsCompletedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = System.DBNull.Value;
            }
            if ((DateChangeRequirementsCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(DateChangeRequirementsCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = System.DBNull.Value;
            }
            if ((ChangeRequirementsCompletedComments == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(ChangeRequirementsCompletedComments));
            }
            if ((LessonsLearnedCommunicatedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(LessonsLearnedCommunicatedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = System.DBNull.Value;
            }
            if ((DateLessonsLearnedCommunicated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((System.DateTime)(DateLessonsLearnedCommunicated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = System.DBNull.Value;
            }
            if ((ChangeReportCloseOutDocumentationById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(ChangeReportCloseOutDocumentationById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = System.DBNull.Value;
            }
            if ((DateChangeReportCloseOutDocumentation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((System.DateTime)(DateChangeReportCloseOutDocumentation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = System.DBNull.Value;
            }
            if ((ApprovalForChangeReportCloseOutById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(ApprovalForChangeReportCloseOutById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = System.DBNull.Value;
            }
            if ((DateApprovalForChangeReportCloseOut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((System.DateTime)(DateApprovalForChangeReportCloseOut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = System.DBNull.Value;
            }
            if ((rowguid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((System.Guid)(rowguid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = System.DBNull.Value;
            }
            if ((ManageChangeStatusListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(ManageChangeStatusListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = System.DBNull.Value;
            }
            if ((InitiationCompletedSwitch.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((bool)(InitiationCompletedSwitch.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = System.DBNull.Value;
            }
            if ((EvaluationCompletedSwitch.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((bool)(EvaluationCompletedSwitch.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = System.DBNull.Value;
            }
            if ((ApprovalsCompletedSwitch.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((bool)(ApprovalsCompletedSwitch.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = System.DBNull.Value;
            }
            if ((ImplementationCompletedSwitch.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((bool)(ImplementationCompletedSwitch.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = System.DBNull.Value;
            }
            if ((CloseOutCompletedSwitch.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((bool)(CloseOutCompletedSwitch.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = System.DBNull.Value;
            }
            if ((RejectedSwitch.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((bool)(RejectedSwitch.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = System.DBNull.Value;
            }
            if ((SwitchFreeSwitch.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((bool)(SwitchFreeSwitch.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = System.DBNull.Value;
            }
            if ((AcceptedByMaster.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((bool)(AcceptedByMaster.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = System.DBNull.Value;
            }
            if ((ComputedExposure.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((int)(ComputedExposure.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = System.DBNull.Value;
            }
            if ((MasterRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((int)(MasterRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = System.DBNull.Value;
            }
            if ((DateCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = System.DBNull.Value;
            }
            if ((CreatedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(CreatedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = System.DBNull.Value;
            }
            if ((DateChanged.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((System.DateTime)(DateChanged.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = System.DBNull.Value;
            }
            if ((ChangedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(ChangedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = System.DBNull.Value;
            }
            if ((DateDeleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((System.DateTime)(DateDeleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = System.DBNull.Value;
            }
            if ((DeletedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((int)(DeletedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = System.DBNull.Value;
            }
            if ((SwitchFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((bool)(SwitchFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = System.DBNull.Value;
            }
            if ((SwitchFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((bool)(SwitchFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = System.DBNull.Value;
            }
            if ((SwitchFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((bool)(SwitchFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = System.DBNull.Value;
            }
            if ((DateTimeFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((System.DateTime)(DateTimeFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = System.DBNull.Value;
            }
            if ((DateTimeFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((System.DateTime)(DateTimeFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = System.DBNull.Value;
            }
            if ((DateTimeFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((System.DateTime)(DateTimeFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = System.DBNull.Value;
            }
            if ((TextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(TextFree1));
            }
            if ((TextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(TextFree2));
            }
            if ((TextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(TextFree3));
            }
            if ((IntFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((int)(IntFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = System.DBNull.Value;
            }
            if ((IntFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(IntFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = System.DBNull.Value;
            }
            if ((IntFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((int)(IntFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = System.DBNull.Value;
            }
            if ((nTextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(nTextFree1));
            }
            if ((nTextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(nTextFree2));
            }
            if ((nTextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(nTextFree3));
            }
            this.Adapter.UpdateCommand.Parameters[96].Value = ((int)(Original_ManageChangeRowId));
            if ((Original_ProjectRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((int)(Original_ProjectRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = System.DBNull.Value;
            }
            if ((Original_LocationRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((int)(Original_LocationRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = System.DBNull.Value;
            }
            if ((Original_ManageChangeReferenceId == null)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(Original_ManageChangeReferenceId));
            }
            if ((Original_DateOfRequest.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((System.DateTime)(Original_DateOfRequest.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = System.DBNull.Value;
            }
            if ((Original_DateEffective.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((System.DateTime)(Original_DateEffective.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = System.DBNull.Value;
            }
            if ((Original_IsContractual.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((bool)(Original_IsContractual.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = System.DBNull.Value;
            }
            if ((Original_TypeOfChangeRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((int)(Original_TypeOfChangeRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = System.DBNull.Value;
            }
            if ((Original_DateOfRemoval.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((System.DateTime)(Original_DateOfRemoval.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = System.DBNull.Value;
            }
            if ((Original_NatureOfChangeRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((int)(Original_NatureOfChangeRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = System.DBNull.Value;
            }
            if ((Original_ResponsibleRoleListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((int)(Original_ResponsibleRoleListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = System.DBNull.Value;
            }
            if ((Original_RequestorId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((int)(Original_RequestorId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = System.DBNull.Value;
            }
            if ((Original_EndorserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((int)(Original_EndorserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = System.DBNull.Value;
            }
            if ((Original_DateOfEndorsement.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((System.DateTime)(Original_DateOfEndorsement.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = System.DBNull.Value;
            }
            if ((Original_OnSiteRiskAssessmentCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((bool)(Original_OnSiteRiskAssessmentCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = System.DBNull.Value;
            }
            if ((Original_OnshoreRiskAssessmentCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((bool)(Original_OnshoreRiskAssessmentCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = System.DBNull.Value;
            }
            if ((Original_OnSiteJobSafetyAnalysisCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((bool)(Original_OnSiteJobSafetyAnalysisCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = System.DBNull.Value;
            }
            if ((Original_ApprovedByOnshoreManagement.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((bool)(Original_ApprovedByOnshoreManagement.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = System.DBNull.Value;
            }
            if ((Original_OnSiteWorkInstructionCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((bool)(Original_OnSiteWorkInstructionCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = System.DBNull.Value;
            }
            if ((Original_TrainingRequired.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((bool)(Original_TrainingRequired.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = System.DBNull.Value;
            }
            if ((Original_IncreasedRisk.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[136].Value = ((bool)(Original_IncreasedRisk.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[136].Value = System.DBNull.Value;
            }
            if ((Original_ProposedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((int)(Original_ProposedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = System.DBNull.Value;
            }
            if ((Original_DateOfProposal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[140].Value = ((System.DateTime)(Original_DateOfProposal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[140].Value = System.DBNull.Value;
            }
            if ((Original_ReviewedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[142].Value = ((int)(Original_ReviewedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[142].Value = System.DBNull.Value;
            }
            if ((Original_DateOfReview.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((System.DateTime)(Original_DateOfReview.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = System.DBNull.Value;
            }
            if ((Original_ApprovalReviewedById1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[146].Value = ((int)(Original_ApprovalReviewedById1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[146].Value = System.DBNull.Value;
            }
            if ((Original_ApprovalRevieweDate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[148].Value = ((System.DateTime)(Original_ApprovalRevieweDate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[148].Value = System.DBNull.Value;
            }
            if ((Original_ApprovalReviewedById2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[150].Value = ((int)(Original_ApprovalReviewedById2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[150].Value = System.DBNull.Value;
            }
            if ((Original_ApprovalRevieweDate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[152].Value = ((System.DateTime)(Original_ApprovalRevieweDate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[152].Value = System.DBNull.Value;
            }
            if ((Original_ApprovalEndorsedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[154].Value = ((int)(Original_ApprovalEndorsedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[154].Value = System.DBNull.Value;
            }
            if ((Original_ApprovalEndorsedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[156].Value = ((System.DateTime)(Original_ApprovalEndorsedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[156].Value = System.DBNull.Value;
            }
            if ((Original_ApprovedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((int)(Original_ApprovedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = System.DBNull.Value;
            }
            if ((Original_ApprovedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[160].Value = ((System.DateTime)(Original_ApprovedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[160].Value = System.DBNull.Value;
            }
            if ((Original_ChangeCommunicatedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[162].Value = ((int)(Original_ChangeCommunicatedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[162].Value = System.DBNull.Value;
            }
            if ((Original_DateChangeCommunicated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[164].Value = ((System.DateTime)(Original_DateChangeCommunicated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[164].Value = System.DBNull.Value;
            }
            if ((Original_DocumentationChangesById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[166].Value = ((int)(Original_DocumentationChangesById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[166].Value = System.DBNull.Value;
            }
            if ((Original_DateDocumentationChanges.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[168].Value = ((System.DateTime)(Original_DateDocumentationChanges.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[168].Value = System.DBNull.Value;
            }
            if ((Original_TrainingRequriementsCompletedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[170].Value = ((int)(Original_TrainingRequriementsCompletedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[170].Value = System.DBNull.Value;
            }
            if ((Original_DateTrainingRequriementsCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[172].Value = ((System.DateTime)(Original_DateTrainingRequriementsCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[172].Value = System.DBNull.Value;
            }
            if ((Original_RegulatoryPermitRequirementsCompletedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[174].Value = ((int)(Original_RegulatoryPermitRequirementsCompletedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[174].Value = System.DBNull.Value;
            }
            if ((Original_DateRegulatoryPermitRequirementsCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[176].Value = ((System.DateTime)(Original_DateRegulatoryPermitRequirementsCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[176].Value = System.DBNull.Value;
            }
            if ((Original_ChangeRequirementsCompletedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[178].Value = ((int)(Original_ChangeRequirementsCompletedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[178].Value = System.DBNull.Value;
            }
            if ((Original_DateChangeRequirementsCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[180].Value = ((System.DateTime)(Original_DateChangeRequirementsCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[180].Value = System.DBNull.Value;
            }
            if ((Original_LessonsLearnedCommunicatedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[182].Value = ((int)(Original_LessonsLearnedCommunicatedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[182].Value = System.DBNull.Value;
            }
            if ((Original_DateLessonsLearnedCommunicated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[184].Value = ((System.DateTime)(Original_DateLessonsLearnedCommunicated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[184].Value = System.DBNull.Value;
            }
            if ((Original_ChangeReportCloseOutDocumentationById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[186].Value = ((int)(Original_ChangeReportCloseOutDocumentationById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[186].Value = System.DBNull.Value;
            }
            if ((Original_DateChangeReportCloseOutDocumentation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[188].Value = ((System.DateTime)(Original_DateChangeReportCloseOutDocumentation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[188].Value = System.DBNull.Value;
            }
            if ((Original_ApprovalForChangeReportCloseOutById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[190].Value = ((int)(Original_ApprovalForChangeReportCloseOutById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[190].Value = System.DBNull.Value;
            }
            if ((Original_DateApprovalForChangeReportCloseOut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[192].Value = ((System.DateTime)(Original_DateApprovalForChangeReportCloseOut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[192].Value = System.DBNull.Value;
            }
            if ((Original_rowguid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((System.Guid)(Original_rowguid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[193].Value = System.DBNull.Value;
            }
            if ((Original_ManageChangeStatusListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((int)(Original_ManageChangeStatusListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = System.DBNull.Value;
            }
            if ((Original_InitiationCompletedSwitch.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[197].Value = ((bool)(Original_InitiationCompletedSwitch.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[197].Value = System.DBNull.Value;
            }
            if ((Original_EvaluationCompletedSwitch.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[199].Value = ((bool)(Original_EvaluationCompletedSwitch.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[199].Value = System.DBNull.Value;
            }
            if ((Original_ApprovalsCompletedSwitch.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[201].Value = ((bool)(Original_ApprovalsCompletedSwitch.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[201].Value = System.DBNull.Value;
            }
            if ((Original_ImplementationCompletedSwitch.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[203].Value = ((bool)(Original_ImplementationCompletedSwitch.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[203].Value = System.DBNull.Value;
            }
            if ((Original_CloseOutCompletedSwitch.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[205].Value = ((bool)(Original_CloseOutCompletedSwitch.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[205].Value = System.DBNull.Value;
            }
            if ((Original_RejectedSwitch.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[207].Value = ((bool)(Original_RejectedSwitch.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[207].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFreeSwitch.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[209].Value = ((bool)(Original_SwitchFreeSwitch.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[209].Value = System.DBNull.Value;
            }
            if ((Original_AcceptedByMaster.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[211].Value = ((bool)(Original_AcceptedByMaster.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[211].Value = System.DBNull.Value;
            }
            if ((Original_ComputedExposure.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[213].Value = ((int)(Original_ComputedExposure.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[213].Value = System.DBNull.Value;
            }
            if ((Original_MasterRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[215].Value = ((int)(Original_MasterRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[215].Value = System.DBNull.Value;
            }
            if ((Original_DateCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[217].Value = ((System.DateTime)(Original_DateCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[217].Value = System.DBNull.Value;
            }
            if ((Original_CreatedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[219].Value = ((int)(Original_CreatedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[219].Value = System.DBNull.Value;
            }
            if ((Original_DateChanged.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[221].Value = ((System.DateTime)(Original_DateChanged.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[221].Value = System.DBNull.Value;
            }
            if ((Original_ChangedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[223].Value = ((int)(Original_ChangedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[223].Value = System.DBNull.Value;
            }
            if ((Original_DateDeleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[225].Value = ((System.DateTime)(Original_DateDeleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[225].Value = System.DBNull.Value;
            }
            if ((Original_DeletedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[227].Value = ((int)(Original_DeletedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[227].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[229].Value = ((bool)(Original_SwitchFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[229].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[231].Value = ((bool)(Original_SwitchFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[231].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[233].Value = ((bool)(Original_SwitchFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[233].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[235].Value = ((System.DateTime)(Original_DateTimeFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[235].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[237].Value = ((System.DateTime)(Original_DateTimeFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[237].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[239].Value = ((System.DateTime)(Original_DateTimeFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[239].Value = System.DBNull.Value;
            }
            if ((Original_TextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[241].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[241].Value = ((string)(Original_TextFree1));
            }
            if ((Original_TextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[243].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[243].Value = ((string)(Original_TextFree2));
            }
            if ((Original_TextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[245].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[245].Value = ((string)(Original_TextFree3));
            }
            if ((Original_IntFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[247].Value = ((int)(Original_IntFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[247].Value = System.DBNull.Value;
            }
            if ((Original_IntFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[249].Value = ((int)(Original_IntFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[249].Value = System.DBNull.Value;
            }
            if ((Original_IntFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[251].Value = ((int)(Original_IntFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[251].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[252].Value = ((int)(ManageChangeRowId));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591