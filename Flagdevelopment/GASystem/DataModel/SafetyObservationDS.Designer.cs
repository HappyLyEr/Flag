//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("SafetyObservationDS")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SafetyObservationDS : System.Data.DataSet {
        
        private GASafetyObservationDataTable tableGASafetyObservation;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SafetyObservationDS() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SafetyObservationDS(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["GASafetyObservation"] != null)) {
                    base.Tables.Add(new GASafetyObservationDataTable(ds.Tables["GASafetyObservation"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GASafetyObservationDataTable GASafetyObservation {
            get {
                return this.tableGASafetyObservation;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            SafetyObservationDS cln = ((SafetyObservationDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GASafetyObservation"] != null)) {
                    base.Tables.Add(new GASafetyObservationDataTable(ds.Tables["GASafetyObservation"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGASafetyObservation = ((GASafetyObservationDataTable)(base.Tables["GASafetyObservation"]));
            if ((initTable == true)) {
                if ((this.tableGASafetyObservation != null)) {
                    this.tableGASafetyObservation.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SafetyObservationDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SafetyObservationDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGASafetyObservation = new GASafetyObservationDataTable();
            base.Tables.Add(this.tableGASafetyObservation);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGASafetyObservation() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            SafetyObservationDS ds = new SafetyObservationDS();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void GASafetyObservationRowChangeEventHandler(object sender, GASafetyObservationRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GASafetyObservationDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSafetyObservationRowId;
            
            private System.Data.DataColumn columnDateOfInspection;
            
            private System.Data.DataColumn columnSafetyObservationReferenceId;
            
            private System.Data.DataColumn columnObserver;
            
            private System.Data.DataColumn columnActivityObserved;
            
            private System.Data.DataColumn columnSOPProcedure;
            
            private System.Data.DataColumn columnProcedureNotAvailable;
            
            private System.Data.DataColumn columnNotGoodComments;
            
            private System.Data.DataColumn columnSuggestionForImprovement;
            
            private System.Data.DataColumn columnComment;
            
            private System.Data.DataColumn columnSOPHumanFactorListsRowId;
            
            private System.Data.DataColumn columnSOPLockOutListsRowId;
            
            private System.Data.DataColumn columnSOPPermitToWorkListsRowId;
            
            private System.Data.DataColumn columnSOPPersonalProtectiveEquipmentListsRowId;
            
            private System.Data.DataColumn columnSOPProceduresAndInstructionListsRowId;
            
            private System.Data.DataColumn columnSOPToolsAndEquipmentListsRowId;
            
            private System.Data.DataColumn columnSOPTypeOfObservationListsRowId;
            
            private System.Data.DataColumn columnWorkAreaListsRowId;
            
            private System.Data.DataColumn columnrowguid;
            
            private System.Data.DataColumn columnMasterRowId;
            
            private System.Data.DataColumn columnDateCreated;
            
            private System.Data.DataColumn columnCreatedBy;
            
            private System.Data.DataColumn columnDateChanged;
            
            private System.Data.DataColumn columnChangedBy;
            
            private System.Data.DataColumn columnDateDeleted;
            
            private System.Data.DataColumn columnDeletedBy;
            
            private System.Data.DataColumn columnSwitchFree1;
            
            private System.Data.DataColumn columnSwitchFree2;
            
            private System.Data.DataColumn columnSwitchFree3;
            
            private System.Data.DataColumn columnDateTimeFree1;
            
            private System.Data.DataColumn columnDateTimeFree2;
            
            private System.Data.DataColumn columnDateTimeFree3;
            
            private System.Data.DataColumn columnTextFree1;
            
            private System.Data.DataColumn columnTextFree2;
            
            private System.Data.DataColumn columnTextFree3;
            
            private System.Data.DataColumn columnIntFree1;
            
            private System.Data.DataColumn columnIntFree2;
            
            private System.Data.DataColumn columnIntFree3;
            
            private System.Data.DataColumn columnResponsible;
            
            private System.Data.DataColumn columnResponsibleRoleListsRowId;
            
            private System.Data.DataColumn columnStatusListsRowId;
            
            private System.Data.DataColumn columnSOPResponse;
            
            private System.Data.DataColumn columnnTextFree1;
            
            private System.Data.DataColumn columnnTextFree2;
            
            private System.Data.DataColumn columnnTextFree3;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyObservationDataTable() {
                this.TableName = "GASafetyObservation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GASafetyObservationDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GASafetyObservationDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SafetyObservationRowIdColumn {
                get {
                    return this.columnSafetyObservationRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateOfInspectionColumn {
                get {
                    return this.columnDateOfInspection;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SafetyObservationReferenceIdColumn {
                get {
                    return this.columnSafetyObservationReferenceId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ObserverColumn {
                get {
                    return this.columnObserver;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ActivityObservedColumn {
                get {
                    return this.columnActivityObserved;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPProcedureColumn {
                get {
                    return this.columnSOPProcedure;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProcedureNotAvailableColumn {
                get {
                    return this.columnProcedureNotAvailable;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NotGoodCommentsColumn {
                get {
                    return this.columnNotGoodComments;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SuggestionForImprovementColumn {
                get {
                    return this.columnSuggestionForImprovement;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPHumanFactorListsRowIdColumn {
                get {
                    return this.columnSOPHumanFactorListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPLockOutListsRowIdColumn {
                get {
                    return this.columnSOPLockOutListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPPermitToWorkListsRowIdColumn {
                get {
                    return this.columnSOPPermitToWorkListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPPersonalProtectiveEquipmentListsRowIdColumn {
                get {
                    return this.columnSOPPersonalProtectiveEquipmentListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPProceduresAndInstructionListsRowIdColumn {
                get {
                    return this.columnSOPProceduresAndInstructionListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPToolsAndEquipmentListsRowIdColumn {
                get {
                    return this.columnSOPToolsAndEquipmentListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPTypeOfObservationListsRowIdColumn {
                get {
                    return this.columnSOPTypeOfObservationListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WorkAreaListsRowIdColumn {
                get {
                    return this.columnWorkAreaListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ResponsibleColumn {
                get {
                    return this.columnResponsible;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ResponsibleRoleListsRowIdColumn {
                get {
                    return this.columnResponsibleRoleListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatusListsRowIdColumn {
                get {
                    return this.columnStatusListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPResponseColumn {
                get {
                    return this.columnSOPResponse;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nTextFree1Column {
                get {
                    return this.columnnTextFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nTextFree2Column {
                get {
                    return this.columnnTextFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nTextFree3Column {
                get {
                    return this.columnnTextFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyObservationRow this[int index] {
                get {
                    return ((GASafetyObservationRow)(this.Rows[index]));
                }
            }
            
            public event GASafetyObservationRowChangeEventHandler GASafetyObservationRowChanging;
            
            public event GASafetyObservationRowChangeEventHandler GASafetyObservationRowChanged;
            
            public event GASafetyObservationRowChangeEventHandler GASafetyObservationRowDeleting;
            
            public event GASafetyObservationRowChangeEventHandler GASafetyObservationRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGASafetyObservationRow(GASafetyObservationRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyObservationRow AddGASafetyObservationRow(
                        System.DateTime DateOfInspection, 
                        string SafetyObservationReferenceId, 
                        int Observer, 
                        string ActivityObserved, 
                        string SOPProcedure, 
                        bool ProcedureNotAvailable, 
                        string NotGoodComments, 
                        string SuggestionForImprovement, 
                        string Comment, 
                        int SOPHumanFactorListsRowId, 
                        int SOPLockOutListsRowId, 
                        int SOPPermitToWorkListsRowId, 
                        int SOPPersonalProtectiveEquipmentListsRowId, 
                        int SOPProceduresAndInstructionListsRowId, 
                        int SOPToolsAndEquipmentListsRowId, 
                        int SOPTypeOfObservationListsRowId, 
                        int WorkAreaListsRowId, 
                        System.Guid rowguid, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3, 
                        int Responsible, 
                        int ResponsibleRoleListsRowId, 
                        int StatusListsRowId, 
                        string SOPResponse, 
                        string nTextFree1, 
                        string nTextFree2, 
                        string nTextFree3) {
                GASafetyObservationRow rowGASafetyObservationRow = ((GASafetyObservationRow)(this.NewRow()));
                rowGASafetyObservationRow.ItemArray = new object[] {
                        null,
                        DateOfInspection,
                        SafetyObservationReferenceId,
                        Observer,
                        ActivityObserved,
                        SOPProcedure,
                        ProcedureNotAvailable,
                        NotGoodComments,
                        SuggestionForImprovement,
                        Comment,
                        SOPHumanFactorListsRowId,
                        SOPLockOutListsRowId,
                        SOPPermitToWorkListsRowId,
                        SOPPersonalProtectiveEquipmentListsRowId,
                        SOPProceduresAndInstructionListsRowId,
                        SOPToolsAndEquipmentListsRowId,
                        SOPTypeOfObservationListsRowId,
                        WorkAreaListsRowId,
                        rowguid,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3,
                        Responsible,
                        ResponsibleRoleListsRowId,
                        StatusListsRowId,
                        SOPResponse,
                        nTextFree1,
                        nTextFree2,
                        nTextFree3};
                this.Rows.Add(rowGASafetyObservationRow);
                return rowGASafetyObservationRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyObservationRow FindBySafetyObservationRowId(int SafetyObservationRowId) {
                return ((GASafetyObservationRow)(this.Rows.Find(new object[] {
                            SafetyObservationRowId})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                GASafetyObservationDataTable cln = ((GASafetyObservationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new GASafetyObservationDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSafetyObservationRowId = base.Columns["SafetyObservationRowId"];
                this.columnDateOfInspection = base.Columns["DateOfInspection"];
                this.columnSafetyObservationReferenceId = base.Columns["SafetyObservationReferenceId"];
                this.columnObserver = base.Columns["Observer"];
                this.columnActivityObserved = base.Columns["ActivityObserved"];
                this.columnSOPProcedure = base.Columns["SOPProcedure"];
                this.columnProcedureNotAvailable = base.Columns["ProcedureNotAvailable"];
                this.columnNotGoodComments = base.Columns["NotGoodComments"];
                this.columnSuggestionForImprovement = base.Columns["SuggestionForImprovement"];
                this.columnComment = base.Columns["Comment"];
                this.columnSOPHumanFactorListsRowId = base.Columns["SOPHumanFactorListsRowId"];
                this.columnSOPLockOutListsRowId = base.Columns["SOPLockOutListsRowId"];
                this.columnSOPPermitToWorkListsRowId = base.Columns["SOPPermitToWorkListsRowId"];
                this.columnSOPPersonalProtectiveEquipmentListsRowId = base.Columns["SOPPersonalProtectiveEquipmentListsRowId"];
                this.columnSOPProceduresAndInstructionListsRowId = base.Columns["SOPProceduresAndInstructionListsRowId"];
                this.columnSOPToolsAndEquipmentListsRowId = base.Columns["SOPToolsAndEquipmentListsRowId"];
                this.columnSOPTypeOfObservationListsRowId = base.Columns["SOPTypeOfObservationListsRowId"];
                this.columnWorkAreaListsRowId = base.Columns["WorkAreaListsRowId"];
                this.columnrowguid = base.Columns["rowguid"];
                this.columnMasterRowId = base.Columns["MasterRowId"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnDateChanged = base.Columns["DateChanged"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnDateDeleted = base.Columns["DateDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnSwitchFree1 = base.Columns["SwitchFree1"];
                this.columnSwitchFree2 = base.Columns["SwitchFree2"];
                this.columnSwitchFree3 = base.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = base.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = base.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = base.Columns["DateTimeFree3"];
                this.columnTextFree1 = base.Columns["TextFree1"];
                this.columnTextFree2 = base.Columns["TextFree2"];
                this.columnTextFree3 = base.Columns["TextFree3"];
                this.columnIntFree1 = base.Columns["IntFree1"];
                this.columnIntFree2 = base.Columns["IntFree2"];
                this.columnIntFree3 = base.Columns["IntFree3"];
                this.columnResponsible = base.Columns["Responsible"];
                this.columnResponsibleRoleListsRowId = base.Columns["ResponsibleRoleListsRowId"];
                this.columnStatusListsRowId = base.Columns["StatusListsRowId"];
                this.columnSOPResponse = base.Columns["SOPResponse"];
                this.columnnTextFree1 = base.Columns["nTextFree1"];
                this.columnnTextFree2 = base.Columns["nTextFree2"];
                this.columnnTextFree3 = base.Columns["nTextFree3"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSafetyObservationRowId = new System.Data.DataColumn("SafetyObservationRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyObservationRowId);
                this.columnDateOfInspection = new System.Data.DataColumn("DateOfInspection", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfInspection);
                this.columnSafetyObservationReferenceId = new System.Data.DataColumn("SafetyObservationReferenceId", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyObservationReferenceId);
                this.columnObserver = new System.Data.DataColumn("Observer", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnObserver);
                this.columnActivityObserved = new System.Data.DataColumn("ActivityObserved", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivityObserved);
                this.columnSOPProcedure = new System.Data.DataColumn("SOPProcedure", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPProcedure);
                this.columnProcedureNotAvailable = new System.Data.DataColumn("ProcedureNotAvailable", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcedureNotAvailable);
                this.columnNotGoodComments = new System.Data.DataColumn("NotGoodComments", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotGoodComments);
                this.columnSuggestionForImprovement = new System.Data.DataColumn("SuggestionForImprovement", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuggestionForImprovement);
                this.columnComment = new System.Data.DataColumn("Comment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnSOPHumanFactorListsRowId = new System.Data.DataColumn("SOPHumanFactorListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPHumanFactorListsRowId);
                this.columnSOPLockOutListsRowId = new System.Data.DataColumn("SOPLockOutListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPLockOutListsRowId);
                this.columnSOPPermitToWorkListsRowId = new System.Data.DataColumn("SOPPermitToWorkListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPPermitToWorkListsRowId);
                this.columnSOPPersonalProtectiveEquipmentListsRowId = new System.Data.DataColumn("SOPPersonalProtectiveEquipmentListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPPersonalProtectiveEquipmentListsRowId);
                this.columnSOPProceduresAndInstructionListsRowId = new System.Data.DataColumn("SOPProceduresAndInstructionListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPProceduresAndInstructionListsRowId);
                this.columnSOPToolsAndEquipmentListsRowId = new System.Data.DataColumn("SOPToolsAndEquipmentListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPToolsAndEquipmentListsRowId);
                this.columnSOPTypeOfObservationListsRowId = new System.Data.DataColumn("SOPTypeOfObservationListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPTypeOfObservationListsRowId);
                this.columnWorkAreaListsRowId = new System.Data.DataColumn("WorkAreaListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkAreaListsRowId);
                this.columnrowguid = new System.Data.DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowguid);
                this.columnMasterRowId = new System.Data.DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new System.Data.DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new System.Data.DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new System.Data.DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new System.Data.DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new System.Data.DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new System.Data.DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new System.Data.DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new System.Data.DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new System.Data.DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new System.Data.DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new System.Data.DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new System.Data.DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new System.Data.DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new System.Data.DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new System.Data.DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new System.Data.DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new System.Data.DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new System.Data.DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree3);
                this.columnResponsible = new System.Data.DataColumn("Responsible", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponsible);
                this.columnResponsibleRoleListsRowId = new System.Data.DataColumn("ResponsibleRoleListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponsibleRoleListsRowId);
                this.columnStatusListsRowId = new System.Data.DataColumn("StatusListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusListsRowId);
                this.columnSOPResponse = new System.Data.DataColumn("SOPResponse", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPResponse);
                this.columnnTextFree1 = new System.Data.DataColumn("nTextFree1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree1);
                this.columnnTextFree2 = new System.Data.DataColumn("nTextFree2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree2);
                this.columnnTextFree3 = new System.Data.DataColumn("nTextFree3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree3);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSafetyObservationRowId}, true));
                this.columnSafetyObservationRowId.AutoIncrement = true;
                this.columnSafetyObservationRowId.AllowDBNull = false;
                this.columnSafetyObservationRowId.ReadOnly = true;
                this.columnSafetyObservationRowId.Unique = true;
                this.columnSafetyObservationReferenceId.MaxLength = 50;
                this.columnActivityObserved.MaxLength = 100;
                this.columnSOPProcedure.MaxLength = 100;
                this.columnNotGoodComments.MaxLength = 1073741823;
                this.columnSuggestionForImprovement.MaxLength = 1073741823;
                this.columnComment.MaxLength = 1073741823;
                this.columnTextFree1.MaxLength = 200;
                this.columnTextFree2.MaxLength = 200;
                this.columnTextFree3.MaxLength = 200;
                this.columnSOPResponse.MaxLength = 1073741823;
                this.columnnTextFree1.MaxLength = 1073741823;
                this.columnnTextFree2.MaxLength = 1073741823;
                this.columnnTextFree3.MaxLength = 1073741823;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyObservationRow NewGASafetyObservationRow() {
                return ((GASafetyObservationRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new GASafetyObservationRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(GASafetyObservationRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GASafetyObservationRowChanged != null)) {
                    this.GASafetyObservationRowChanged(this, new GASafetyObservationRowChangeEvent(((GASafetyObservationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GASafetyObservationRowChanging != null)) {
                    this.GASafetyObservationRowChanging(this, new GASafetyObservationRowChangeEvent(((GASafetyObservationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GASafetyObservationRowDeleted != null)) {
                    this.GASafetyObservationRowDeleted(this, new GASafetyObservationRowChangeEvent(((GASafetyObservationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GASafetyObservationRowDeleting != null)) {
                    this.GASafetyObservationRowDeleting(this, new GASafetyObservationRowChangeEvent(((GASafetyObservationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGASafetyObservationRow(GASafetyObservationRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                SafetyObservationDS ds = new SafetyObservationDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GASafetyObservationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GASafetyObservationRow : System.Data.DataRow {
            
            private GASafetyObservationDataTable tableGASafetyObservation;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GASafetyObservationRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGASafetyObservation = ((GASafetyObservationDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SafetyObservationRowId {
                get {
                    return ((int)(this[this.tableGASafetyObservation.SafetyObservationRowIdColumn]));
                }
                set {
                    this[this.tableGASafetyObservation.SafetyObservationRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfInspection {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGASafetyObservation.DateOfInspectionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateOfInspection\' in table \'GASafetyObservation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.DateOfInspectionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SafetyObservationReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.SafetyObservationReferenceIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SafetyObservationReferenceId\' in table \'GASafetyObservation" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SafetyObservationReferenceIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Observer {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.ObserverColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Observer\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.ObserverColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ActivityObserved {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.ActivityObservedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ActivityObserved\' in table \'GASafetyObservation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.ActivityObservedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOPProcedure {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.SOPProcedureColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPProcedure\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPProcedureColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ProcedureNotAvailable {
                get {
                    try {
                        return ((bool)(this[this.tableGASafetyObservation.ProcedureNotAvailableColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ProcedureNotAvailable\' in table \'GASafetyObservation\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.ProcedureNotAvailableColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NotGoodComments {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.NotGoodCommentsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NotGoodComments\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.NotGoodCommentsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SuggestionForImprovement {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.SuggestionForImprovementColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SuggestionForImprovement\' in table \'GASafetyObservation\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SuggestionForImprovementColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.CommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Comment\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.CommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOPHumanFactorListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.SOPHumanFactorListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPHumanFactorListsRowId\' in table \'GASafetyObservation\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPHumanFactorListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOPLockOutListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.SOPLockOutListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPLockOutListsRowId\' in table \'GASafetyObservation\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPLockOutListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOPPermitToWorkListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.SOPPermitToWorkListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPPermitToWorkListsRowId\' in table \'GASafetyObservation\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPPermitToWorkListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOPPersonalProtectiveEquipmentListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.SOPPersonalProtectiveEquipmentListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPPersonalProtectiveEquipmentListsRowId\' in table \'GASafet" +
                                "yObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPPersonalProtectiveEquipmentListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOPProceduresAndInstructionListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.SOPProceduresAndInstructionListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPProceduresAndInstructionListsRowId\' in table \'GASafetyOb" +
                                "servation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPProceduresAndInstructionListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOPToolsAndEquipmentListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.SOPToolsAndEquipmentListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPToolsAndEquipmentListsRowId\' in table \'GASafetyObservati" +
                                "on\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPToolsAndEquipmentListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOPTypeOfObservationListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.SOPTypeOfObservationListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPTypeOfObservationListsRowId\' in table \'GASafetyObservati" +
                                "on\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPTypeOfObservationListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkAreaListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.WorkAreaListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WorkAreaListsRowId\' in table \'GASafetyObservation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.WorkAreaListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid rowguid {
                get {
                    try {
                        return ((System.Guid)(this[this.tableGASafetyObservation.rowguidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rowguid\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.rowguidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.MasterRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MasterRowId\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.MasterRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGASafetyObservation.DateCreatedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateCreated\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.DateCreatedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.CreatedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.CreatedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGASafetyObservation.DateChangedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateChanged\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.DateChangedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.ChangedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.ChangedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGASafetyObservation.DateDeletedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateDeleted\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.DateDeletedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.DeletedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.DeletedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGASafetyObservation.SwitchFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree1\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SwitchFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGASafetyObservation.SwitchFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree2\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SwitchFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGASafetyObservation.SwitchFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree3\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SwitchFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGASafetyObservation.DateTimeFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree1\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.DateTimeFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGASafetyObservation.DateTimeFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree2\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.DateTimeFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGASafetyObservation.DateTimeFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree3\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.DateTimeFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.TextFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree1\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.TextFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.TextFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree2\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.TextFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.TextFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree3\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.TextFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.IntFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree1\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.IntFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.IntFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree2\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.IntFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.IntFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree3\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.IntFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Responsible {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.ResponsibleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Responsible\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.ResponsibleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ResponsibleRoleListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.ResponsibleRoleListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ResponsibleRoleListsRowId\' in table \'GASafetyObservation\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.ResponsibleRoleListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StatusListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.StatusListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StatusListsRowId\' in table \'GASafetyObservation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.StatusListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOPResponse {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.SOPResponseColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPResponse\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPResponseColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.nTextFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nTextFree1\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.nTextFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.nTextFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nTextFree2\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.nTextFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.nTextFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nTextFree3\' in table \'GASafetyObservation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.nTextFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfInspectionNull() {
                return this.IsNull(this.tableGASafetyObservation.DateOfInspectionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfInspectionNull() {
                this[this.tableGASafetyObservation.DateOfInspectionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyObservationReferenceIdNull() {
                return this.IsNull(this.tableGASafetyObservation.SafetyObservationReferenceIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyObservationReferenceIdNull() {
                this[this.tableGASafetyObservation.SafetyObservationReferenceIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObserverNull() {
                return this.IsNull(this.tableGASafetyObservation.ObserverColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObserverNull() {
                this[this.tableGASafetyObservation.ObserverColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActivityObservedNull() {
                return this.IsNull(this.tableGASafetyObservation.ActivityObservedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActivityObservedNull() {
                this[this.tableGASafetyObservation.ActivityObservedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPProcedureNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPProcedureColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPProcedureNull() {
                this[this.tableGASafetyObservation.SOPProcedureColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProcedureNotAvailableNull() {
                return this.IsNull(this.tableGASafetyObservation.ProcedureNotAvailableColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProcedureNotAvailableNull() {
                this[this.tableGASafetyObservation.ProcedureNotAvailableColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotGoodCommentsNull() {
                return this.IsNull(this.tableGASafetyObservation.NotGoodCommentsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotGoodCommentsNull() {
                this[this.tableGASafetyObservation.NotGoodCommentsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuggestionForImprovementNull() {
                return this.IsNull(this.tableGASafetyObservation.SuggestionForImprovementColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuggestionForImprovementNull() {
                this[this.tableGASafetyObservation.SuggestionForImprovementColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableGASafetyObservation.CommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableGASafetyObservation.CommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPHumanFactorListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPHumanFactorListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPHumanFactorListsRowIdNull() {
                this[this.tableGASafetyObservation.SOPHumanFactorListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPLockOutListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPLockOutListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPLockOutListsRowIdNull() {
                this[this.tableGASafetyObservation.SOPLockOutListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPPermitToWorkListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPPermitToWorkListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPPermitToWorkListsRowIdNull() {
                this[this.tableGASafetyObservation.SOPPermitToWorkListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPPersonalProtectiveEquipmentListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPPersonalProtectiveEquipmentListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPPersonalProtectiveEquipmentListsRowIdNull() {
                this[this.tableGASafetyObservation.SOPPersonalProtectiveEquipmentListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPProceduresAndInstructionListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPProceduresAndInstructionListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPProceduresAndInstructionListsRowIdNull() {
                this[this.tableGASafetyObservation.SOPProceduresAndInstructionListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPToolsAndEquipmentListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPToolsAndEquipmentListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPToolsAndEquipmentListsRowIdNull() {
                this[this.tableGASafetyObservation.SOPToolsAndEquipmentListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPTypeOfObservationListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPTypeOfObservationListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPTypeOfObservationListsRowIdNull() {
                this[this.tableGASafetyObservation.SOPTypeOfObservationListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkAreaListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.WorkAreaListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkAreaListsRowIdNull() {
                this[this.tableGASafetyObservation.WorkAreaListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGASafetyObservation.rowguidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrowguidNull() {
                this[this.tableGASafetyObservation.rowguidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.MasterRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterRowIdNull() {
                this[this.tableGASafetyObservation.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGASafetyObservation.DateCreatedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateCreatedNull() {
                this[this.tableGASafetyObservation.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGASafetyObservation.CreatedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableGASafetyObservation.CreatedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGASafetyObservation.DateChangedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangedNull() {
                this[this.tableGASafetyObservation.DateChangedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGASafetyObservation.ChangedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableGASafetyObservation.ChangedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGASafetyObservation.DateDeletedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateDeletedNull() {
                this[this.tableGASafetyObservation.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGASafetyObservation.DeletedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableGASafetyObservation.DeletedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGASafetyObservation.SwitchFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree1Null() {
                this[this.tableGASafetyObservation.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGASafetyObservation.SwitchFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree2Null() {
                this[this.tableGASafetyObservation.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGASafetyObservation.SwitchFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree3Null() {
                this[this.tableGASafetyObservation.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGASafetyObservation.DateTimeFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree1Null() {
                this[this.tableGASafetyObservation.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGASafetyObservation.DateTimeFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree2Null() {
                this[this.tableGASafetyObservation.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGASafetyObservation.DateTimeFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree3Null() {
                this[this.tableGASafetyObservation.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGASafetyObservation.TextFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree1Null() {
                this[this.tableGASafetyObservation.TextFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGASafetyObservation.TextFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree2Null() {
                this[this.tableGASafetyObservation.TextFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGASafetyObservation.TextFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree3Null() {
                this[this.tableGASafetyObservation.TextFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGASafetyObservation.IntFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree1Null() {
                this[this.tableGASafetyObservation.IntFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGASafetyObservation.IntFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree2Null() {
                this[this.tableGASafetyObservation.IntFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGASafetyObservation.IntFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree3Null() {
                this[this.tableGASafetyObservation.IntFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResponsibleNull() {
                return this.IsNull(this.tableGASafetyObservation.ResponsibleColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResponsibleNull() {
                this[this.tableGASafetyObservation.ResponsibleColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResponsibleRoleListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.ResponsibleRoleListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResponsibleRoleListsRowIdNull() {
                this[this.tableGASafetyObservation.ResponsibleRoleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.StatusListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusListsRowIdNull() {
                this[this.tableGASafetyObservation.StatusListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPResponseNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPResponseColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPResponseNull() {
                this[this.tableGASafetyObservation.SOPResponseColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree1Null() {
                return this.IsNull(this.tableGASafetyObservation.nTextFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree1Null() {
                this[this.tableGASafetyObservation.nTextFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree2Null() {
                return this.IsNull(this.tableGASafetyObservation.nTextFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree2Null() {
                this[this.tableGASafetyObservation.nTextFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree3Null() {
                return this.IsNull(this.tableGASafetyObservation.nTextFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree3Null() {
                this[this.tableGASafetyObservation.nTextFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GASafetyObservationRowChangeEvent : System.EventArgs {
            
            private GASafetyObservationRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyObservationRowChangeEvent(GASafetyObservationRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyObservationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GASystem.DataModel.SafetyObservationDSTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GASafetyObservationTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GASafetyObservationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GASafetyObservation";
            tableMapping.ColumnMappings.Add("SafetyObservationRowId", "SafetyObservationRowId");
            tableMapping.ColumnMappings.Add("DateOfInspection", "DateOfInspection");
            tableMapping.ColumnMappings.Add("SafetyObservationReferenceId", "SafetyObservationReferenceId");
            tableMapping.ColumnMappings.Add("Observer", "Observer");
            tableMapping.ColumnMappings.Add("ActivityObserved", "ActivityObserved");
            tableMapping.ColumnMappings.Add("SOPProcedure", "SOPProcedure");
            tableMapping.ColumnMappings.Add("ProcedureNotAvailable", "ProcedureNotAvailable");
            tableMapping.ColumnMappings.Add("NotGoodComments", "NotGoodComments");
            tableMapping.ColumnMappings.Add("SuggestionForImprovement", "SuggestionForImprovement");
            tableMapping.ColumnMappings.Add("Comment", "Comment");
            tableMapping.ColumnMappings.Add("SOPHumanFactorListsRowId", "SOPHumanFactorListsRowId");
            tableMapping.ColumnMappings.Add("SOPLockOutListsRowId", "SOPLockOutListsRowId");
            tableMapping.ColumnMappings.Add("SOPPermitToWorkListsRowId", "SOPPermitToWorkListsRowId");
            tableMapping.ColumnMappings.Add("SOPPersonalProtectiveEquipmentListsRowId", "SOPPersonalProtectiveEquipmentListsRowId");
            tableMapping.ColumnMappings.Add("SOPProceduresAndInstructionListsRowId", "SOPProceduresAndInstructionListsRowId");
            tableMapping.ColumnMappings.Add("SOPToolsAndEquipmentListsRowId", "SOPToolsAndEquipmentListsRowId");
            tableMapping.ColumnMappings.Add("SOPTypeOfObservationListsRowId", "SOPTypeOfObservationListsRowId");
            tableMapping.ColumnMappings.Add("WorkAreaListsRowId", "WorkAreaListsRowId");
            tableMapping.ColumnMappings.Add("rowguid", "rowguid");
            tableMapping.ColumnMappings.Add("MasterRowId", "MasterRowId");
            tableMapping.ColumnMappings.Add("DateCreated", "DateCreated");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("DateChanged", "DateChanged");
            tableMapping.ColumnMappings.Add("ChangedBy", "ChangedBy");
            tableMapping.ColumnMappings.Add("DateDeleted", "DateDeleted");
            tableMapping.ColumnMappings.Add("DeletedBy", "DeletedBy");
            tableMapping.ColumnMappings.Add("SwitchFree1", "SwitchFree1");
            tableMapping.ColumnMappings.Add("SwitchFree2", "SwitchFree2");
            tableMapping.ColumnMappings.Add("SwitchFree3", "SwitchFree3");
            tableMapping.ColumnMappings.Add("DateTimeFree1", "DateTimeFree1");
            tableMapping.ColumnMappings.Add("DateTimeFree2", "DateTimeFree2");
            tableMapping.ColumnMappings.Add("DateTimeFree3", "DateTimeFree3");
            tableMapping.ColumnMappings.Add("TextFree1", "TextFree1");
            tableMapping.ColumnMappings.Add("TextFree2", "TextFree2");
            tableMapping.ColumnMappings.Add("TextFree3", "TextFree3");
            tableMapping.ColumnMappings.Add("IntFree1", "IntFree1");
            tableMapping.ColumnMappings.Add("IntFree2", "IntFree2");
            tableMapping.ColumnMappings.Add("IntFree3", "IntFree3");
            tableMapping.ColumnMappings.Add("Responsible", "Responsible");
            tableMapping.ColumnMappings.Add("ResponsibleRoleListsRowId", "ResponsibleRoleListsRowId");
            tableMapping.ColumnMappings.Add("StatusListsRowId", "StatusListsRowId");
            tableMapping.ColumnMappings.Add("SOPResponse", "SOPResponse");
            tableMapping.ColumnMappings.Add("nTextFree1", "nTextFree1");
            tableMapping.ColumnMappings.Add("nTextFree2", "nTextFree2");
            tableMapping.ColumnMappings.Add("nTextFree3", "nTextFree3");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[GASafetyObservation] WHERE (([SafetyObservationRowId] = @Origi" +
                "nal_SafetyObservationRowId) AND ((@IsNull_DateOfInspection = 1 AND [DateOfInspec" +
                "tion] IS NULL) OR ([DateOfInspection] = @Original_DateOfInspection)) AND ((@IsNu" +
                "ll_SafetyObservationReferenceId = 1 AND [SafetyObservationReferenceId] IS NULL) " +
                "OR ([SafetyObservationReferenceId] = @Original_SafetyObservationReferenceId)) AN" +
                "D ((@IsNull_Observer = 1 AND [Observer] IS NULL) OR ([Observer] = @Original_Obse" +
                "rver)) AND ((@IsNull_ActivityObserved = 1 AND [ActivityObserved] IS NULL) OR ([A" +
                "ctivityObserved] = @Original_ActivityObserved)) AND ((@IsNull_SOPProcedure = 1 A" +
                "ND [SOPProcedure] IS NULL) OR ([SOPProcedure] = @Original_SOPProcedure)) AND ((@" +
                "IsNull_ProcedureNotAvailable = 1 AND [ProcedureNotAvailable] IS NULL) OR ([Proce" +
                "dureNotAvailable] = @Original_ProcedureNotAvailable)) AND ((@IsNull_SOPHumanFact" +
                "orListsRowId = 1 AND [SOPHumanFactorListsRowId] IS NULL) OR ([SOPHumanFactorList" +
                "sRowId] = @Original_SOPHumanFactorListsRowId)) AND ((@IsNull_SOPLockOutListsRowI" +
                "d = 1 AND [SOPLockOutListsRowId] IS NULL) OR ([SOPLockOutListsRowId] = @Original" +
                "_SOPLockOutListsRowId)) AND ((@IsNull_SOPPermitToWorkListsRowId = 1 AND [SOPPerm" +
                "itToWorkListsRowId] IS NULL) OR ([SOPPermitToWorkListsRowId] = @Original_SOPPerm" +
                "itToWorkListsRowId)) AND ((@IsNull_SOPPersonalProtectiveEquipmentListsRowId = 1 " +
                "AND [SOPPersonalProtectiveEquipmentListsRowId] IS NULL) OR ([SOPPersonalProtecti" +
                "veEquipmentListsRowId] = @Original_SOPPersonalProtectiveEquipmentListsRowId)) AN" +
                "D ((@IsNull_SOPProceduresAndInstructionListsRowId = 1 AND [SOPProceduresAndInstr" +
                "uctionListsRowId] IS NULL) OR ([SOPProceduresAndInstructionListsRowId] = @Origin" +
                "al_SOPProceduresAndInstructionListsRowId)) AND ((@IsNull_SOPToolsAndEquipmentLis" +
                "tsRowId = 1 AND [SOPToolsAndEquipmentListsRowId] IS NULL) OR ([SOPToolsAndEquipm" +
                "entListsRowId] = @Original_SOPToolsAndEquipmentListsRowId)) AND ((@IsNull_SOPTyp" +
                "eOfObservationListsRowId = 1 AND [SOPTypeOfObservationListsRowId] IS NULL) OR ([" +
                "SOPTypeOfObservationListsRowId] = @Original_SOPTypeOfObservationListsRowId)) AND" +
                " ((@IsNull_WorkAreaListsRowId = 1 AND [WorkAreaListsRowId] IS NULL) OR ([WorkAre" +
                "aListsRowId] = @Original_WorkAreaListsRowId)) AND ([rowguid] = @Original_rowguid" +
                ") AND ((@IsNull_MasterRowId = 1 AND [MasterRowId] IS NULL) OR ([MasterRowId] = @" +
                "Original_MasterRowId)) AND ((@IsNull_DateCreated = 1 AND [DateCreated] IS NULL) " +
                "OR ([DateCreated] = @Original_DateCreated)) AND ((@IsNull_CreatedBy = 1 AND [Cre" +
                "atedBy] IS NULL) OR ([CreatedBy] = @Original_CreatedBy)) AND ((@IsNull_DateChang" +
                "ed = 1 AND [DateChanged] IS NULL) OR ([DateChanged] = @Original_DateChanged)) AN" +
                "D ((@IsNull_ChangedBy = 1 AND [ChangedBy] IS NULL) OR ([ChangedBy] = @Original_C" +
                "hangedBy)) AND ((@IsNull_DateDeleted = 1 AND [DateDeleted] IS NULL) OR ([DateDel" +
                "eted] = @Original_DateDeleted)) AND ((@IsNull_DeletedBy = 1 AND [DeletedBy] IS N" +
                "ULL) OR ([DeletedBy] = @Original_DeletedBy)) AND ((@IsNull_SwitchFree1 = 1 AND [" +
                "SwitchFree1] IS NULL) OR ([SwitchFree1] = @Original_SwitchFree1)) AND ((@IsNull_" +
                "SwitchFree2 = 1 AND [SwitchFree2] IS NULL) OR ([SwitchFree2] = @Original_SwitchF" +
                "ree2)) AND ((@IsNull_SwitchFree3 = 1 AND [SwitchFree3] IS NULL) OR ([SwitchFree3" +
                "] = @Original_SwitchFree3)) AND ((@IsNull_DateTimeFree1 = 1 AND [DateTimeFree1] " +
                "IS NULL) OR ([DateTimeFree1] = @Original_DateTimeFree1)) AND ((@IsNull_DateTimeF" +
                "ree2 = 1 AND [DateTimeFree2] IS NULL) OR ([DateTimeFree2] = @Original_DateTimeFr" +
                "ee2)) AND ((@IsNull_DateTimeFree3 = 1 AND [DateTimeFree3] IS NULL) OR ([DateTime" +
                "Free3] = @Original_DateTimeFree3)) AND ((@IsNull_TextFree1 = 1 AND [TextFree1] I" +
                "S NULL) OR ([TextFree1] = @Original_TextFree1)) AND ((@IsNull_TextFree2 = 1 AND " +
                "[TextFree2] IS NULL) OR ([TextFree2] = @Original_TextFree2)) AND ((@IsNull_TextF" +
                "ree3 = 1 AND [TextFree3] IS NULL) OR ([TextFree3] = @Original_TextFree3)) AND ((" +
                "@IsNull_IntFree1 = 1 AND [IntFree1] IS NULL) OR ([IntFree1] = @Original_IntFree1" +
                ")) AND ((@IsNull_IntFree2 = 1 AND [IntFree2] IS NULL) OR ([IntFree2] = @Original" +
                "_IntFree2)) AND ((@IsNull_IntFree3 = 1 AND [IntFree3] IS NULL) OR ([IntFree3] = " +
                "@Original_IntFree3)) AND ((@IsNull_Responsible = 1 AND [Responsible] IS NULL) OR" +
                " ([Responsible] = @Original_Responsible)) AND ((@IsNull_ResponsibleRoleListsRowI" +
                "d = 1 AND [ResponsibleRoleListsRowId] IS NULL) OR ([ResponsibleRoleListsRowId] =" +
                " @Original_ResponsibleRoleListsRowId)) AND ((@IsNull_StatusListsRowId = 1 AND [S" +
                "tatusListsRowId] IS NULL) OR ([StatusListsRowId] = @Original_StatusListsRowId)))" +
                "";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SafetyObservationRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyObservationRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateOfInspection", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfInspection", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateOfInspection", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfInspection", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SafetyObservationReferenceId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyObservationReferenceId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SafetyObservationReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyObservationReferenceId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Observer", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Observer", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Observer", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Observer", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ActivityObserved", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ActivityObserved", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ActivityObserved", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ActivityObserved", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPProcedure", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPProcedure", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPProcedure", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPProcedure", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ProcedureNotAvailable", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProcedureNotAvailable", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ProcedureNotAvailable", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ProcedureNotAvailable", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPHumanFactorListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPHumanFactorListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPHumanFactorListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPHumanFactorListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPLockOutListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPLockOutListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPLockOutListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPLockOutListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPPermitToWorkListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPermitToWorkListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPPermitToWorkListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPermitToWorkListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPPersonalProtectiveEquipmentListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPersonalProtectiveEquipmentListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPPersonalProtectiveEquipmentListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPersonalProtectiveEquipmentListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPProceduresAndInstructionListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPProceduresAndInstructionListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPProceduresAndInstructionListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPProceduresAndInstructionListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPToolsAndEquipmentListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPToolsAndEquipmentListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPToolsAndEquipmentListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPToolsAndEquipmentListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPTypeOfObservationListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPTypeOfObservationListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPTypeOfObservationListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPTypeOfObservationListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_WorkAreaListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "WorkAreaListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_WorkAreaListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "WorkAreaListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateCreated", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChanged", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateDeleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Responsible", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Responsible", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Responsible", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Responsible", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_StatusListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "StatusListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_StatusListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "StatusListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[GASafetyObservation] ([DateOfInspection], [SafetyObservationRe" +
                "ferenceId], [Observer], [ActivityObserved], [SOPProcedure], [ProcedureNotAvailab" +
                "le], [NotGoodComments], [SuggestionForImprovement], [Comment], [SOPHumanFactorLi" +
                "stsRowId], [SOPLockOutListsRowId], [SOPPermitToWorkListsRowId], [SOPPersonalProt" +
                "ectiveEquipmentListsRowId], [SOPProceduresAndInstructionListsRowId], [SOPToolsAn" +
                "dEquipmentListsRowId], [SOPTypeOfObservationListsRowId], [WorkAreaListsRowId], [" +
                "rowguid], [MasterRowId], [DateCreated], [CreatedBy], [DateChanged], [ChangedBy]," +
                " [DateDeleted], [DeletedBy], [SwitchFree1], [SwitchFree2], [SwitchFree3], [DateT" +
                "imeFree1], [DateTimeFree2], [DateTimeFree3], [TextFree1], [TextFree2], [TextFree" +
                "3], [IntFree1], [IntFree2], [IntFree3], [Responsible], [ResponsibleRoleListsRowI" +
                "d], [StatusListsRowId], [SOPResponse], [nTextFree1], [nTextFree2], [nTextFree3])" +
                " VALUES (@DateOfInspection, @SafetyObservationReferenceId, @Observer, @ActivityO" +
                "bserved, @SOPProcedure, @ProcedureNotAvailable, @NotGoodComments, @SuggestionFor" +
                "Improvement, @Comment, @SOPHumanFactorListsRowId, @SOPLockOutListsRowId, @SOPPer" +
                "mitToWorkListsRowId, @SOPPersonalProtectiveEquipmentListsRowId, @SOPProceduresAn" +
                "dInstructionListsRowId, @SOPToolsAndEquipmentListsRowId, @SOPTypeOfObservationLi" +
                "stsRowId, @WorkAreaListsRowId, @rowguid, @MasterRowId, @DateCreated, @CreatedBy," +
                " @DateChanged, @ChangedBy, @DateDeleted, @DeletedBy, @SwitchFree1, @SwitchFree2," +
                " @SwitchFree3, @DateTimeFree1, @DateTimeFree2, @DateTimeFree3, @TextFree1, @Text" +
                "Free2, @TextFree3, @IntFree1, @IntFree2, @IntFree3, @Responsible, @ResponsibleRo" +
                "leListsRowId, @StatusListsRowId, @SOPResponse, @nTextFree1, @nTextFree2, @nTextF" +
                "ree3);\r\nSELECT SafetyObservationRowId, DateOfInspection, SafetyObservationRefere" +
                "nceId, Observer, ActivityObserved, SOPProcedure, ProcedureNotAvailable, NotGoodC" +
                "omments, SuggestionForImprovement, Comment, SOPHumanFactorListsRowId, SOPLockOut" +
                "ListsRowId, SOPPermitToWorkListsRowId, SOPPersonalProtectiveEquipmentListsRowId," +
                " SOPProceduresAndInstructionListsRowId, SOPToolsAndEquipmentListsRowId, SOPTypeO" +
                "fObservationListsRowId, WorkAreaListsRowId, rowguid, MasterRowId, DateCreated, C" +
                "reatedBy, DateChanged, ChangedBy, DateDeleted, DeletedBy, SwitchFree1, SwitchFre" +
                "e2, SwitchFree3, DateTimeFree1, DateTimeFree2, DateTimeFree3, TextFree1, TextFre" +
                "e2, TextFree3, IntFree1, IntFree2, IntFree3, Responsible, ResponsibleRoleListsRo" +
                "wId, StatusListsRowId, SOPResponse, nTextFree1, nTextFree2, nTextFree3 FROM GASa" +
                "fetyObservation WHERE (SafetyObservationRowId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateOfInspection", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfInspection", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SafetyObservationReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyObservationReferenceId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Observer", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Observer", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ActivityObserved", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ActivityObserved", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPProcedure", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPProcedure", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ProcedureNotAvailable", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ProcedureNotAvailable", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NotGoodComments", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "NotGoodComments", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SuggestionForImprovement", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "SuggestionForImprovement", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Comment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Comment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPHumanFactorListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPHumanFactorListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPLockOutListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPLockOutListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPPermitToWorkListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPermitToWorkListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPPersonalProtectiveEquipmentListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPersonalProtectiveEquipmentListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPProceduresAndInstructionListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPProceduresAndInstructionListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPToolsAndEquipmentListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPToolsAndEquipmentListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPTypeOfObservationListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPTypeOfObservationListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@WorkAreaListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "WorkAreaListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Responsible", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Responsible", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@StatusListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "StatusListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPResponse", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPResponse", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree1", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree2", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree3", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[GASafetyObservation] SET [DateOfInspection] = @DateOfInspection, [S" +
                "afetyObservationReferenceId] = @SafetyObservationReferenceId, [Observer] = @Obse" +
                "rver, [ActivityObserved] = @ActivityObserved, [SOPProcedure] = @SOPProcedure, [P" +
                "rocedureNotAvailable] = @ProcedureNotAvailable, [NotGoodComments] = @NotGoodComm" +
                "ents, [SuggestionForImprovement] = @SuggestionForImprovement, [Comment] = @Comme" +
                "nt, [SOPHumanFactorListsRowId] = @SOPHumanFactorListsRowId, [SOPLockOutListsRowI" +
                "d] = @SOPLockOutListsRowId, [SOPPermitToWorkListsRowId] = @SOPPermitToWorkListsR" +
                "owId, [SOPPersonalProtectiveEquipmentListsRowId] = @SOPPersonalProtectiveEquipme" +
                "ntListsRowId, [SOPProceduresAndInstructionListsRowId] = @SOPProceduresAndInstruc" +
                "tionListsRowId, [SOPToolsAndEquipmentListsRowId] = @SOPToolsAndEquipmentListsRow" +
                "Id, [SOPTypeOfObservationListsRowId] = @SOPTypeOfObservationListsRowId, [WorkAre" +
                "aListsRowId] = @WorkAreaListsRowId, [rowguid] = @rowguid, [MasterRowId] = @Maste" +
                "rRowId, [DateCreated] = @DateCreated, [CreatedBy] = @CreatedBy, [DateChanged] = " +
                "@DateChanged, [ChangedBy] = @ChangedBy, [DateDeleted] = @DateDeleted, [DeletedBy" +
                "] = @DeletedBy, [SwitchFree1] = @SwitchFree1, [SwitchFree2] = @SwitchFree2, [Swi" +
                "tchFree3] = @SwitchFree3, [DateTimeFree1] = @DateTimeFree1, [DateTimeFree2] = @D" +
                "ateTimeFree2, [DateTimeFree3] = @DateTimeFree3, [TextFree1] = @TextFree1, [TextF" +
                "ree2] = @TextFree2, [TextFree3] = @TextFree3, [IntFree1] = @IntFree1, [IntFree2]" +
                " = @IntFree2, [IntFree3] = @IntFree3, [Responsible] = @Responsible, [Responsible" +
                "RoleListsRowId] = @ResponsibleRoleListsRowId, [StatusListsRowId] = @StatusListsR" +
                "owId, [SOPResponse] = @SOPResponse, [nTextFree1] = @nTextFree1, [nTextFree2] = @" +
                "nTextFree2, [nTextFree3] = @nTextFree3 WHERE (([SafetyObservationRowId] = @Origi" +
                "nal_SafetyObservationRowId) AND ((@IsNull_DateOfInspection = 1 AND [DateOfInspec" +
                "tion] IS NULL) OR ([DateOfInspection] = @Original_DateOfInspection)) AND ((@IsNu" +
                "ll_SafetyObservationReferenceId = 1 AND [SafetyObservationReferenceId] IS NULL) " +
                "OR ([SafetyObservationReferenceId] = @Original_SafetyObservationReferenceId)) AN" +
                "D ((@IsNull_Observer = 1 AND [Observer] IS NULL) OR ([Observer] = @Original_Obse" +
                "rver)) AND ((@IsNull_ActivityObserved = 1 AND [ActivityObserved] IS NULL) OR ([A" +
                "ctivityObserved] = @Original_ActivityObserved)) AND ((@IsNull_SOPProcedure = 1 A" +
                "ND [SOPProcedure] IS NULL) OR ([SOPProcedure] = @Original_SOPProcedure)) AND ((@" +
                "IsNull_ProcedureNotAvailable = 1 AND [ProcedureNotAvailable] IS NULL) OR ([Proce" +
                "dureNotAvailable] = @Original_ProcedureNotAvailable)) AND ((@IsNull_SOPHumanFact" +
                "orListsRowId = 1 AND [SOPHumanFactorListsRowId] IS NULL) OR ([SOPHumanFactorList" +
                "sRowId] = @Original_SOPHumanFactorListsRowId)) AND ((@IsNull_SOPLockOutListsRowI" +
                "d = 1 AND [SOPLockOutListsRowId] IS NULL) OR ([SOPLockOutListsRowId] = @Original" +
                "_SOPLockOutListsRowId)) AND ((@IsNull_SOPPermitToWorkListsRowId = 1 AND [SOPPerm" +
                "itToWorkListsRowId] IS NULL) OR ([SOPPermitToWorkListsRowId] = @Original_SOPPerm" +
                "itToWorkListsRowId)) AND ((@IsNull_SOPPersonalProtectiveEquipmentListsRowId = 1 " +
                "AND [SOPPersonalProtectiveEquipmentListsRowId] IS NULL) OR ([SOPPersonalProtecti" +
                "veEquipmentListsRowId] = @Original_SOPPersonalProtectiveEquipmentListsRowId)) AN" +
                "D ((@IsNull_SOPProceduresAndInstructionListsRowId = 1 AND [SOPProceduresAndInstr" +
                "uctionListsRowId] IS NULL) OR ([SOPProceduresAndInstructionListsRowId] = @Origin" +
                "al_SOPProceduresAndInstructionListsRowId)) AND ((@IsNull_SOPToolsAndEquipmentLis" +
                "tsRowId = 1 AND [SOPToolsAndEquipmentListsRowId] IS NULL) OR ([SOPToolsAndEquipm" +
                "entListsRowId] = @Original_SOPToolsAndEquipmentListsRowId)) AND ((@IsNull_SOPTyp" +
                "eOfObservationListsRowId = 1 AND [SOPTypeOfObservationListsRowId] IS NULL) OR ([" +
                "SOPTypeOfObservationListsRowId] = @Original_SOPTypeOfObservationListsRowId)) AND" +
                " ((@IsNull_WorkAreaListsRowId = 1 AND [WorkAreaListsRowId] IS NULL) OR ([WorkAre" +
                "aListsRowId] = @Original_WorkAreaListsRowId)) AND ([rowguid] = @Original_rowguid" +
                ") AND ((@IsNull_MasterRowId = 1 AND [MasterRowId] IS NULL) OR ([MasterRowId] = @" +
                "Original_MasterRowId)) AND ((@IsNull_DateCreated = 1 AND [DateCreated] IS NULL) " +
                "OR ([DateCreated] = @Original_DateCreated)) AND ((@IsNull_CreatedBy = 1 AND [Cre" +
                "atedBy] IS NULL) OR ([CreatedBy] = @Original_CreatedBy)) AND ((@IsNull_DateChang" +
                "ed = 1 AND [DateChanged] IS NULL) OR ([DateChanged] = @Original_DateChanged)) AN" +
                "D ((@IsNull_ChangedBy = 1 AND [ChangedBy] IS NULL) OR ([ChangedBy] = @Original_C" +
                "hangedBy)) AND ((@IsNull_DateDeleted = 1 AND [DateDeleted] IS NULL) OR ([DateDel" +
                "eted] = @Original_DateDeleted)) AND ((@IsNull_DeletedBy = 1 AND [DeletedBy] IS N" +
                "ULL) OR ([DeletedBy] = @Original_DeletedBy)) AND ((@IsNull_SwitchFree1 = 1 AND [" +
                "SwitchFree1] IS NULL) OR ([SwitchFree1] = @Original_SwitchFree1)) AND ((@IsNull_" +
                "SwitchFree2 = 1 AND [SwitchFree2] IS NULL) OR ([SwitchFree2] = @Original_SwitchF" +
                "ree2)) AND ((@IsNull_SwitchFree3 = 1 AND [SwitchFree3] IS NULL) OR ([SwitchFree3" +
                "] = @Original_SwitchFree3)) AND ((@IsNull_DateTimeFree1 = 1 AND [DateTimeFree1] " +
                "IS NULL) OR ([DateTimeFree1] = @Original_DateTimeFree1)) AND ((@IsNull_DateTimeF" +
                "ree2 = 1 AND [DateTimeFree2] IS NULL) OR ([DateTimeFree2] = @Original_DateTimeFr" +
                "ee2)) AND ((@IsNull_DateTimeFree3 = 1 AND [DateTimeFree3] IS NULL) OR ([DateTime" +
                "Free3] = @Original_DateTimeFree3)) AND ((@IsNull_TextFree1 = 1 AND [TextFree1] I" +
                "S NULL) OR ([TextFree1] = @Original_TextFree1)) AND ((@IsNull_TextFree2 = 1 AND " +
                "[TextFree2] IS NULL) OR ([TextFree2] = @Original_TextFree2)) AND ((@IsNull_TextF" +
                "ree3 = 1 AND [TextFree3] IS NULL) OR ([TextFree3] = @Original_TextFree3)) AND ((" +
                "@IsNull_IntFree1 = 1 AND [IntFree1] IS NULL) OR ([IntFree1] = @Original_IntFree1" +
                ")) AND ((@IsNull_IntFree2 = 1 AND [IntFree2] IS NULL) OR ([IntFree2] = @Original" +
                "_IntFree2)) AND ((@IsNull_IntFree3 = 1 AND [IntFree3] IS NULL) OR ([IntFree3] = " +
                "@Original_IntFree3)) AND ((@IsNull_Responsible = 1 AND [Responsible] IS NULL) OR" +
                " ([Responsible] = @Original_Responsible)) AND ((@IsNull_ResponsibleRoleListsRowI" +
                "d = 1 AND [ResponsibleRoleListsRowId] IS NULL) OR ([ResponsibleRoleListsRowId] =" +
                " @Original_ResponsibleRoleListsRowId)) AND ((@IsNull_StatusListsRowId = 1 AND [S" +
                "tatusListsRowId] IS NULL) OR ([StatusListsRowId] = @Original_StatusListsRowId)))" +
                ";\r\nSELECT SafetyObservationRowId, DateOfInspection, SafetyObservationReferenceId" +
                ", Observer, ActivityObserved, SOPProcedure, ProcedureNotAvailable, NotGoodCommen" +
                "ts, SuggestionForImprovement, Comment, SOPHumanFactorListsRowId, SOPLockOutLists" +
                "RowId, SOPPermitToWorkListsRowId, SOPPersonalProtectiveEquipmentListsRowId, SOPP" +
                "roceduresAndInstructionListsRowId, SOPToolsAndEquipmentListsRowId, SOPTypeOfObse" +
                "rvationListsRowId, WorkAreaListsRowId, rowguid, MasterRowId, DateCreated, Create" +
                "dBy, DateChanged, ChangedBy, DateDeleted, DeletedBy, SwitchFree1, SwitchFree2, S" +
                "witchFree3, DateTimeFree1, DateTimeFree2, DateTimeFree3, TextFree1, TextFree2, T" +
                "extFree3, IntFree1, IntFree2, IntFree3, Responsible, ResponsibleRoleListsRowId, " +
                "StatusListsRowId, SOPResponse, nTextFree1, nTextFree2, nTextFree3 FROM GASafetyO" +
                "bservation WHERE (SafetyObservationRowId = @SafetyObservationRowId)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateOfInspection", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfInspection", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SafetyObservationReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyObservationReferenceId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Observer", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Observer", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ActivityObserved", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ActivityObserved", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPProcedure", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPProcedure", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ProcedureNotAvailable", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ProcedureNotAvailable", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NotGoodComments", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "NotGoodComments", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SuggestionForImprovement", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "SuggestionForImprovement", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Comment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Comment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPHumanFactorListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPHumanFactorListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPLockOutListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPLockOutListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPPermitToWorkListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPermitToWorkListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPPersonalProtectiveEquipmentListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPersonalProtectiveEquipmentListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPProceduresAndInstructionListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPProceduresAndInstructionListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPToolsAndEquipmentListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPToolsAndEquipmentListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPTypeOfObservationListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPTypeOfObservationListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@WorkAreaListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "WorkAreaListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Responsible", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Responsible", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@StatusListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "StatusListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPResponse", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPResponse", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree1", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree2", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree3", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SafetyObservationRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyObservationRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateOfInspection", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfInspection", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateOfInspection", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateOfInspection", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SafetyObservationReferenceId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyObservationReferenceId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SafetyObservationReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyObservationReferenceId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Observer", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Observer", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Observer", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Observer", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ActivityObserved", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ActivityObserved", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ActivityObserved", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ActivityObserved", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPProcedure", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPProcedure", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPProcedure", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPProcedure", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ProcedureNotAvailable", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProcedureNotAvailable", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ProcedureNotAvailable", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ProcedureNotAvailable", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPHumanFactorListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPHumanFactorListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPHumanFactorListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPHumanFactorListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPLockOutListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPLockOutListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPLockOutListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPLockOutListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPPermitToWorkListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPermitToWorkListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPPermitToWorkListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPermitToWorkListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPPersonalProtectiveEquipmentListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPersonalProtectiveEquipmentListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPPersonalProtectiveEquipmentListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPersonalProtectiveEquipmentListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPProceduresAndInstructionListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPProceduresAndInstructionListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPProceduresAndInstructionListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPProceduresAndInstructionListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPToolsAndEquipmentListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPToolsAndEquipmentListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPToolsAndEquipmentListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPToolsAndEquipmentListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPTypeOfObservationListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPTypeOfObservationListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPTypeOfObservationListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPTypeOfObservationListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_WorkAreaListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "WorkAreaListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_WorkAreaListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "WorkAreaListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateCreated", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChanged", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateDeleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Responsible", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Responsible", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Responsible", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Responsible", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ResponsibleRoleListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ResponsibleRoleListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_StatusListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "StatusListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_StatusListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "StatusListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SafetyObservationRowId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "SafetyObservationRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GASystem.Properties.Settings.Default.flagdata070807ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT SafetyObservationRowId, DateOfInspection, SafetyObservationReferenceId, Observer, ActivityObserved, SOPProcedure, ProcedureNotAvailable, NotGoodComments, SuggestionForImprovement, Comment, SOPHumanFactorListsRowId, SOPLockOutListsRowId, SOPPermitToWorkListsRowId, SOPPersonalProtectiveEquipmentListsRowId, SOPProceduresAndInstructionListsRowId, SOPToolsAndEquipmentListsRowId, SOPTypeOfObservationListsRowId, WorkAreaListsRowId, rowguid, MasterRowId, DateCreated, CreatedBy, DateChanged, ChangedBy, DateDeleted, DeletedBy, SwitchFree1, SwitchFree2, SwitchFree3, DateTimeFree1, DateTimeFree2, DateTimeFree3, TextFree1, TextFree2, TextFree3, IntFree1, IntFree2, IntFree3, Responsible, ResponsibleRoleListsRowId, StatusListsRowId, SOPResponse, nTextFree1, nTextFree2, nTextFree3 FROM dbo.GASafetyObservation";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SafetyObservationDS.GASafetyObservationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SafetyObservationDS.GASafetyObservationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SafetyObservationDS.GASafetyObservationDataTable dataTable = new SafetyObservationDS.GASafetyObservationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SafetyObservationDS.GASafetyObservationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SafetyObservationDS dataSet) {
            return this.Adapter.Update(dataSet, "GASafetyObservation");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_SafetyObservationRowId, 
                    System.Nullable<System.DateTime> Original_DateOfInspection, 
                    string Original_SafetyObservationReferenceId, 
                    System.Nullable<int> Original_Observer, 
                    string Original_ActivityObserved, 
                    string Original_SOPProcedure, 
                    System.Nullable<bool> Original_ProcedureNotAvailable, 
                    System.Nullable<int> Original_SOPHumanFactorListsRowId, 
                    System.Nullable<int> Original_SOPLockOutListsRowId, 
                    System.Nullable<int> Original_SOPPermitToWorkListsRowId, 
                    System.Nullable<int> Original_SOPPersonalProtectiveEquipmentListsRowId, 
                    System.Nullable<int> Original_SOPProceduresAndInstructionListsRowId, 
                    System.Nullable<int> Original_SOPToolsAndEquipmentListsRowId, 
                    System.Nullable<int> Original_SOPTypeOfObservationListsRowId, 
                    System.Nullable<int> Original_WorkAreaListsRowId, 
                    System.Nullable<System.Guid> Original_rowguid, 
                    System.Nullable<int> Original_MasterRowId, 
                    System.Nullable<System.DateTime> Original_DateCreated, 
                    System.Nullable<int> Original_CreatedBy, 
                    System.Nullable<System.DateTime> Original_DateChanged, 
                    System.Nullable<int> Original_ChangedBy, 
                    System.Nullable<System.DateTime> Original_DateDeleted, 
                    System.Nullable<int> Original_DeletedBy, 
                    System.Nullable<bool> Original_SwitchFree1, 
                    System.Nullable<bool> Original_SwitchFree2, 
                    System.Nullable<bool> Original_SwitchFree3, 
                    System.Nullable<System.DateTime> Original_DateTimeFree1, 
                    System.Nullable<System.DateTime> Original_DateTimeFree2, 
                    System.Nullable<System.DateTime> Original_DateTimeFree3, 
                    string Original_TextFree1, 
                    string Original_TextFree2, 
                    string Original_TextFree3, 
                    System.Nullable<int> Original_IntFree1, 
                    System.Nullable<int> Original_IntFree2, 
                    System.Nullable<int> Original_IntFree3, 
                    System.Nullable<int> Original_Responsible, 
                    System.Nullable<int> Original_ResponsibleRoleListsRowId, 
                    System.Nullable<int> Original_StatusListsRowId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_SafetyObservationRowId));
            if ((Original_DateOfInspection.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_DateOfInspection.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_SafetyObservationReferenceId == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SafetyObservationReferenceId));
            }
            if ((Original_Observer.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_Observer.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_ActivityObserved == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ActivityObserved));
            }
            if ((Original_SOPProcedure == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_SOPProcedure));
            }
            if ((Original_ProcedureNotAvailable.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_ProcedureNotAvailable.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_SOPHumanFactorListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_SOPHumanFactorListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_SOPLockOutListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_SOPLockOutListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_SOPPermitToWorkListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_SOPPermitToWorkListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_SOPPersonalProtectiveEquipmentListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_SOPPersonalProtectiveEquipmentListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_SOPProceduresAndInstructionListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_SOPProceduresAndInstructionListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_SOPToolsAndEquipmentListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_SOPToolsAndEquipmentListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_SOPTypeOfObservationListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_SOPTypeOfObservationListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((Original_WorkAreaListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_WorkAreaListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((Original_rowguid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.Guid)(Original_rowguid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = System.DBNull.Value;
            }
            if ((Original_MasterRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((int)(Original_MasterRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = System.DBNull.Value;
            }
            if ((Original_DateCreated.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((System.DateTime)(Original_DateCreated.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = System.DBNull.Value;
            }
            if ((Original_CreatedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((int)(Original_CreatedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((Original_DateChanged.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((System.DateTime)(Original_DateChanged.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((Original_ChangedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((int)(Original_ChangedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = System.DBNull.Value;
            }
            if ((Original_DateDeleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((System.DateTime)(Original_DateDeleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = System.DBNull.Value;
            }
            if ((Original_DeletedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((int)(Original_DeletedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((bool)(Original_SwitchFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((bool)(Original_SwitchFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((bool)(Original_SwitchFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((System.DateTime)(Original_DateTimeFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((System.DateTime)(Original_DateTimeFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((System.DateTime)(Original_DateTimeFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = System.DBNull.Value;
            }
            if ((Original_TextFree1 == null)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((string)(Original_TextFree1));
            }
            if ((Original_TextFree2 == null)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_TextFree2));
            }
            if ((Original_TextFree3 == null)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((string)(Original_TextFree3));
            }
            if ((Original_IntFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((int)(Original_IntFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = System.DBNull.Value;
            }
            if ((Original_IntFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((int)(Original_IntFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = System.DBNull.Value;
            }
            if ((Original_IntFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((int)(Original_IntFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = System.DBNull.Value;
            }
            if ((Original_Responsible.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((int)(Original_Responsible.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = System.DBNull.Value;
            }
            if ((Original_ResponsibleRoleListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((int)(Original_ResponsibleRoleListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = System.DBNull.Value;
            }
            if ((Original_StatusListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((int)(Original_StatusListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.Nullable<System.DateTime> DateOfInspection, 
                    string SafetyObservationReferenceId, 
                    System.Nullable<int> Observer, 
                    string ActivityObserved, 
                    string SOPProcedure, 
                    System.Nullable<bool> ProcedureNotAvailable, 
                    string NotGoodComments, 
                    string SuggestionForImprovement, 
                    string Comment, 
                    System.Nullable<int> SOPHumanFactorListsRowId, 
                    System.Nullable<int> SOPLockOutListsRowId, 
                    System.Nullable<int> SOPPermitToWorkListsRowId, 
                    System.Nullable<int> SOPPersonalProtectiveEquipmentListsRowId, 
                    System.Nullable<int> SOPProceduresAndInstructionListsRowId, 
                    System.Nullable<int> SOPToolsAndEquipmentListsRowId, 
                    System.Nullable<int> SOPTypeOfObservationListsRowId, 
                    System.Nullable<int> WorkAreaListsRowId, 
                    System.Nullable<System.Guid> rowguid, 
                    System.Nullable<int> MasterRowId, 
                    System.Nullable<System.DateTime> DateCreated, 
                    System.Nullable<int> CreatedBy, 
                    System.Nullable<System.DateTime> DateChanged, 
                    System.Nullable<int> ChangedBy, 
                    System.Nullable<System.DateTime> DateDeleted, 
                    System.Nullable<int> DeletedBy, 
                    System.Nullable<bool> SwitchFree1, 
                    System.Nullable<bool> SwitchFree2, 
                    System.Nullable<bool> SwitchFree3, 
                    System.Nullable<System.DateTime> DateTimeFree1, 
                    System.Nullable<System.DateTime> DateTimeFree2, 
                    System.Nullable<System.DateTime> DateTimeFree3, 
                    string TextFree1, 
                    string TextFree2, 
                    string TextFree3, 
                    System.Nullable<int> IntFree1, 
                    System.Nullable<int> IntFree2, 
                    System.Nullable<int> IntFree3, 
                    System.Nullable<int> Responsible, 
                    System.Nullable<int> ResponsibleRoleListsRowId, 
                    System.Nullable<int> StatusListsRowId, 
                    string SOPResponse, 
                    string nTextFree1, 
                    string nTextFree2, 
                    string nTextFree3) {
            if ((DateOfInspection.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(DateOfInspection.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((SafetyObservationReferenceId == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SafetyObservationReferenceId));
            }
            if ((Observer.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Observer.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ActivityObserved == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ActivityObserved));
            }
            if ((SOPProcedure == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SOPProcedure));
            }
            if ((ProcedureNotAvailable.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(ProcedureNotAvailable.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((NotGoodComments == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(NotGoodComments));
            }
            if ((SuggestionForImprovement == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SuggestionForImprovement));
            }
            if ((Comment == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Comment));
            }
            if ((SOPHumanFactorListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(SOPHumanFactorListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((SOPLockOutListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(SOPLockOutListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((SOPPermitToWorkListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(SOPPermitToWorkListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((SOPPersonalProtectiveEquipmentListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(SOPPersonalProtectiveEquipmentListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((SOPProceduresAndInstructionListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(SOPProceduresAndInstructionListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((SOPToolsAndEquipmentListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(SOPToolsAndEquipmentListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((SOPTypeOfObservationListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(SOPTypeOfObservationListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((WorkAreaListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(WorkAreaListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((rowguid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.Guid)(rowguid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((MasterRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(MasterRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((DateCreated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((CreatedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(CreatedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((DateChanged.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(DateChanged.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = System.DBNull.Value;
            }
            if ((ChangedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(ChangedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((DateDeleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(DateDeleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = System.DBNull.Value;
            }
            if ((DeletedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(DeletedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((SwitchFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(SwitchFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((SwitchFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(SwitchFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((SwitchFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((bool)(SwitchFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = System.DBNull.Value;
            }
            if ((DateTimeFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((System.DateTime)(DateTimeFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((DateTimeFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((System.DateTime)(DateTimeFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = System.DBNull.Value;
            }
            if ((DateTimeFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((System.DateTime)(DateTimeFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((TextFree1 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(TextFree1));
            }
            if ((TextFree2 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(TextFree2));
            }
            if ((TextFree3 == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(TextFree3));
            }
            if ((IntFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((int)(IntFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((IntFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(IntFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((IntFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(IntFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((Responsible.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((int)(Responsible.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((ResponsibleRoleListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((int)(ResponsibleRoleListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = System.DBNull.Value;
            }
            if ((StatusListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((int)(StatusListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = System.DBNull.Value;
            }
            if ((SOPResponse == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(SOPResponse));
            }
            if ((nTextFree1 == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(nTextFree1));
            }
            if ((nTextFree2 == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(nTextFree2));
            }
            if ((nTextFree3 == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(nTextFree3));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Nullable<System.DateTime> DateOfInspection, 
                    string SafetyObservationReferenceId, 
                    System.Nullable<int> Observer, 
                    string ActivityObserved, 
                    string SOPProcedure, 
                    System.Nullable<bool> ProcedureNotAvailable, 
                    string NotGoodComments, 
                    string SuggestionForImprovement, 
                    string Comment, 
                    System.Nullable<int> SOPHumanFactorListsRowId, 
                    System.Nullable<int> SOPLockOutListsRowId, 
                    System.Nullable<int> SOPPermitToWorkListsRowId, 
                    System.Nullable<int> SOPPersonalProtectiveEquipmentListsRowId, 
                    System.Nullable<int> SOPProceduresAndInstructionListsRowId, 
                    System.Nullable<int> SOPToolsAndEquipmentListsRowId, 
                    System.Nullable<int> SOPTypeOfObservationListsRowId, 
                    System.Nullable<int> WorkAreaListsRowId, 
                    System.Nullable<System.Guid> rowguid, 
                    System.Nullable<int> MasterRowId, 
                    System.Nullable<System.DateTime> DateCreated, 
                    System.Nullable<int> CreatedBy, 
                    System.Nullable<System.DateTime> DateChanged, 
                    System.Nullable<int> ChangedBy, 
                    System.Nullable<System.DateTime> DateDeleted, 
                    System.Nullable<int> DeletedBy, 
                    System.Nullable<bool> SwitchFree1, 
                    System.Nullable<bool> SwitchFree2, 
                    System.Nullable<bool> SwitchFree3, 
                    System.Nullable<System.DateTime> DateTimeFree1, 
                    System.Nullable<System.DateTime> DateTimeFree2, 
                    System.Nullable<System.DateTime> DateTimeFree3, 
                    string TextFree1, 
                    string TextFree2, 
                    string TextFree3, 
                    System.Nullable<int> IntFree1, 
                    System.Nullable<int> IntFree2, 
                    System.Nullable<int> IntFree3, 
                    System.Nullable<int> Responsible, 
                    System.Nullable<int> ResponsibleRoleListsRowId, 
                    System.Nullable<int> StatusListsRowId, 
                    string SOPResponse, 
                    string nTextFree1, 
                    string nTextFree2, 
                    string nTextFree3, 
                    int Original_SafetyObservationRowId, 
                    System.Nullable<System.DateTime> Original_DateOfInspection, 
                    string Original_SafetyObservationReferenceId, 
                    System.Nullable<int> Original_Observer, 
                    string Original_ActivityObserved, 
                    string Original_SOPProcedure, 
                    System.Nullable<bool> Original_ProcedureNotAvailable, 
                    System.Nullable<int> Original_SOPHumanFactorListsRowId, 
                    System.Nullable<int> Original_SOPLockOutListsRowId, 
                    System.Nullable<int> Original_SOPPermitToWorkListsRowId, 
                    System.Nullable<int> Original_SOPPersonalProtectiveEquipmentListsRowId, 
                    System.Nullable<int> Original_SOPProceduresAndInstructionListsRowId, 
                    System.Nullable<int> Original_SOPToolsAndEquipmentListsRowId, 
                    System.Nullable<int> Original_SOPTypeOfObservationListsRowId, 
                    System.Nullable<int> Original_WorkAreaListsRowId, 
                    System.Nullable<System.Guid> Original_rowguid, 
                    System.Nullable<int> Original_MasterRowId, 
                    System.Nullable<System.DateTime> Original_DateCreated, 
                    System.Nullable<int> Original_CreatedBy, 
                    System.Nullable<System.DateTime> Original_DateChanged, 
                    System.Nullable<int> Original_ChangedBy, 
                    System.Nullable<System.DateTime> Original_DateDeleted, 
                    System.Nullable<int> Original_DeletedBy, 
                    System.Nullable<bool> Original_SwitchFree1, 
                    System.Nullable<bool> Original_SwitchFree2, 
                    System.Nullable<bool> Original_SwitchFree3, 
                    System.Nullable<System.DateTime> Original_DateTimeFree1, 
                    System.Nullable<System.DateTime> Original_DateTimeFree2, 
                    System.Nullable<System.DateTime> Original_DateTimeFree3, 
                    string Original_TextFree1, 
                    string Original_TextFree2, 
                    string Original_TextFree3, 
                    System.Nullable<int> Original_IntFree1, 
                    System.Nullable<int> Original_IntFree2, 
                    System.Nullable<int> Original_IntFree3, 
                    System.Nullable<int> Original_Responsible, 
                    System.Nullable<int> Original_ResponsibleRoleListsRowId, 
                    System.Nullable<int> Original_StatusListsRowId, 
                    int SafetyObservationRowId) {
            if ((DateOfInspection.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(DateOfInspection.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((SafetyObservationReferenceId == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SafetyObservationReferenceId));
            }
            if ((Observer.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Observer.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ActivityObserved == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ActivityObserved));
            }
            if ((SOPProcedure == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(SOPProcedure));
            }
            if ((ProcedureNotAvailable.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(ProcedureNotAvailable.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((NotGoodComments == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(NotGoodComments));
            }
            if ((SuggestionForImprovement == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SuggestionForImprovement));
            }
            if ((Comment == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Comment));
            }
            if ((SOPHumanFactorListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(SOPHumanFactorListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((SOPLockOutListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(SOPLockOutListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((SOPPermitToWorkListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(SOPPermitToWorkListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((SOPPersonalProtectiveEquipmentListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(SOPPersonalProtectiveEquipmentListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((SOPProceduresAndInstructionListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(SOPProceduresAndInstructionListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((SOPToolsAndEquipmentListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(SOPToolsAndEquipmentListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((SOPTypeOfObservationListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(SOPTypeOfObservationListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((WorkAreaListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(WorkAreaListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((rowguid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.Guid)(rowguid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((MasterRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(MasterRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((DateCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((CreatedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(CreatedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((DateChanged.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(DateChanged.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            if ((ChangedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(ChangedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((DateDeleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(DateDeleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            if ((DeletedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(DeletedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((SwitchFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(SwitchFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((SwitchFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(SwitchFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((SwitchFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(SwitchFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            if ((DateTimeFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(DateTimeFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((DateTimeFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(DateTimeFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = System.DBNull.Value;
            }
            if ((DateTimeFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(DateTimeFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((TextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(TextFree1));
            }
            if ((TextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(TextFree2));
            }
            if ((TextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(TextFree3));
            }
            if ((IntFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(IntFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((IntFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(IntFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((IntFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(IntFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((Responsible.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Responsible.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((ResponsibleRoleListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(ResponsibleRoleListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = System.DBNull.Value;
            }
            if ((StatusListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(StatusListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = System.DBNull.Value;
            }
            if ((SOPResponse == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(SOPResponse));
            }
            if ((nTextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(nTextFree1));
            }
            if ((nTextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(nTextFree2));
            }
            if ((nTextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(nTextFree3));
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_SafetyObservationRowId));
            if ((Original_DateOfInspection.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((System.DateTime)(Original_DateOfInspection.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = System.DBNull.Value;
            }
            if ((Original_SafetyObservationReferenceId == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_SafetyObservationReferenceId));
            }
            if ((Original_Observer.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Original_Observer.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = System.DBNull.Value;
            }
            if ((Original_ActivityObserved == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_ActivityObserved));
            }
            if ((Original_SOPProcedure == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_SOPProcedure));
            }
            if ((Original_ProcedureNotAvailable.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(Original_ProcedureNotAvailable.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = System.DBNull.Value;
            }
            if ((Original_SOPHumanFactorListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(Original_SOPHumanFactorListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = System.DBNull.Value;
            }
            if ((Original_SOPLockOutListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(Original_SOPLockOutListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = System.DBNull.Value;
            }
            if ((Original_SOPPermitToWorkListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(Original_SOPPermitToWorkListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = System.DBNull.Value;
            }
            if ((Original_SOPPersonalProtectiveEquipmentListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(Original_SOPPersonalProtectiveEquipmentListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = System.DBNull.Value;
            }
            if ((Original_SOPProceduresAndInstructionListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(Original_SOPProceduresAndInstructionListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = System.DBNull.Value;
            }
            if ((Original_SOPToolsAndEquipmentListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Original_SOPToolsAndEquipmentListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = System.DBNull.Value;
            }
            if ((Original_SOPTypeOfObservationListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(Original_SOPTypeOfObservationListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = System.DBNull.Value;
            }
            if ((Original_WorkAreaListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((int)(Original_WorkAreaListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = System.DBNull.Value;
            }
            if ((Original_rowguid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((System.Guid)(Original_rowguid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = System.DBNull.Value;
            }
            if ((Original_MasterRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_MasterRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = System.DBNull.Value;
            }
            if ((Original_DateCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((System.DateTime)(Original_DateCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = System.DBNull.Value;
            }
            if ((Original_CreatedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(Original_CreatedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = System.DBNull.Value;
            }
            if ((Original_DateChanged.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((System.DateTime)(Original_DateChanged.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = System.DBNull.Value;
            }
            if ((Original_ChangedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((int)(Original_ChangedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = System.DBNull.Value;
            }
            if ((Original_DateDeleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((System.DateTime)(Original_DateDeleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = System.DBNull.Value;
            }
            if ((Original_DeletedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((int)(Original_DeletedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((bool)(Original_SwitchFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((bool)(Original_SwitchFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((bool)(Original_SwitchFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((System.DateTime)(Original_DateTimeFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((System.DateTime)(Original_DateTimeFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((System.DateTime)(Original_DateTimeFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = System.DBNull.Value;
            }
            if ((Original_TextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_TextFree1));
            }
            if ((Original_TextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Original_TextFree2));
            }
            if ((Original_TextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_TextFree3));
            }
            if ((Original_IntFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((int)(Original_IntFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = System.DBNull.Value;
            }
            if ((Original_IntFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((int)(Original_IntFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = System.DBNull.Value;
            }
            if ((Original_IntFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((int)(Original_IntFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = System.DBNull.Value;
            }
            if ((Original_Responsible.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((int)(Original_Responsible.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = System.DBNull.Value;
            }
            if ((Original_ResponsibleRoleListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((int)(Original_ResponsibleRoleListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = System.DBNull.Value;
            }
            if ((Original_StatusListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((int)(Original_StatusListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[118].Value = ((int)(SafetyObservationRowId));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591