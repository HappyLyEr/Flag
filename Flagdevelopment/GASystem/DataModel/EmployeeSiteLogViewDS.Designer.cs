//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("EmployeeSiteLogViewDS")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EmployeeSiteLogViewDS : System.Data.DataSet {
        
        private GAEmployeeSiteLogViewDataTable tableGAEmployeeSiteLogView;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmployeeSiteLogViewDS() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected EmployeeSiteLogViewDS(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["GAEmployeeSiteLogView"] != null)) {
                    base.Tables.Add(new GAEmployeeSiteLogViewDataTable(ds.Tables["GAEmployeeSiteLogView"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAEmployeeSiteLogViewDataTable GAEmployeeSiteLogView {
            get {
                return this.tableGAEmployeeSiteLogView;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            EmployeeSiteLogViewDS cln = ((EmployeeSiteLogViewDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GAEmployeeSiteLogView"] != null)) {
                    base.Tables.Add(new GAEmployeeSiteLogViewDataTable(ds.Tables["GAEmployeeSiteLogView"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGAEmployeeSiteLogView = ((GAEmployeeSiteLogViewDataTable)(base.Tables["GAEmployeeSiteLogView"]));
            if ((initTable == true)) {
                if ((this.tableGAEmployeeSiteLogView != null)) {
                    this.tableGAEmployeeSiteLogView.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "EmployeeSiteLogViewDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EmployeeSiteLogViewDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGAEmployeeSiteLogView = new GAEmployeeSiteLogViewDataTable();
            base.Tables.Add(this.tableGAEmployeeSiteLogView);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGAEmployeeSiteLogView() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            EmployeeSiteLogViewDS ds = new EmployeeSiteLogViewDS();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void GAEmployeeSiteLogViewRowChangeEventHandler(object sender, GAEmployeeSiteLogViewRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GAEmployeeSiteLogViewDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnEmployeeSiteLogViewRowId;
            
            private System.Data.DataColumn columnContractNumber;
            
            private System.Data.DataColumn columnPersonnelRowId;
            
            private System.Data.DataColumn columnFromDate;
            
            private System.Data.DataColumn columnToDate;
            
            private System.Data.DataColumn columnDepartmentListsRowId;
            
            private System.Data.DataColumn columnCompanyRowId;
            
            private System.Data.DataColumn columnRotationListsRowId;
            
            private System.Data.DataColumn columnRoleListsRowId;
            
            private System.Data.DataColumn columnOwnerClass;
            
            private System.Data.DataColumn columnOwnerClassRowId;
            
            private System.Data.DataColumn columnPath;
            
            private System.Data.DataColumn columnDNNUserId;
            
            private System.Data.DataColumn columnIsCompanyUser;
            
            private System.Data.DataColumn columnUserID;
            
            private System.Data.DataColumn columnDateTime;
            
            private System.Data.DataColumn columnUrl;
            
            private System.Data.DataColumn columnUserAgent;
            
            private System.Data.DataColumn columnUserHostAddress;
            
            private System.Data.DataColumn columnUserHostName;
            
            private System.Data.DataColumn columnTabId;
            
            private System.Data.DataColumn columnAffiliateId;
            
            private System.Data.DataColumn columnGivenName;
            
            private System.Data.DataColumn columnFamilyName;
            
            private System.Data.DataColumn columnAddress;
            
            private System.Data.DataColumn columnDateOfBirth;
            
            private System.Data.DataColumn columnNationalOrSecurityNumber;
            
            private System.Data.DataColumn columnMaritalStatusListsRowId;
            
            private System.Data.DataColumn columnNationalityListsRowId;
            
            private System.Data.DataColumn columnSexListsRowId;
            
            private System.Data.DataColumn columnDepartment;
            
            private System.Data.DataColumn columnCompany;
            
            private System.Data.DataColumn columnRotation;
            
            private System.Data.DataColumn columnRole;
            
            private System.Data.DataColumn columnMaritalStatus;
            
            private System.Data.DataColumn columnNationality;
            
            private System.Data.DataColumn columnSex;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAEmployeeSiteLogViewDataTable() {
                this.TableName = "GAEmployeeSiteLogView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAEmployeeSiteLogViewDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GAEmployeeSiteLogViewDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EmployeeSiteLogViewRowIdColumn {
                get {
                    return this.columnEmployeeSiteLogViewRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ContractNumberColumn {
                get {
                    return this.columnContractNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PersonnelRowIdColumn {
                get {
                    return this.columnPersonnelRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FromDateColumn {
                get {
                    return this.columnFromDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ToDateColumn {
                get {
                    return this.columnToDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DepartmentListsRowIdColumn {
                get {
                    return this.columnDepartmentListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CompanyRowIdColumn {
                get {
                    return this.columnCompanyRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RotationListsRowIdColumn {
                get {
                    return this.columnRotationListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RoleListsRowIdColumn {
                get {
                    return this.columnRoleListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OwnerClassColumn {
                get {
                    return this.columnOwnerClass;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OwnerClassRowIdColumn {
                get {
                    return this.columnOwnerClassRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PathColumn {
                get {
                    return this.columnPath;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DNNUserIdColumn {
                get {
                    return this.columnDNNUserId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IsCompanyUserColumn {
                get {
                    return this.columnIsCompanyUser;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeColumn {
                get {
                    return this.columnDateTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UrlColumn {
                get {
                    return this.columnUrl;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserAgentColumn {
                get {
                    return this.columnUserAgent;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserHostAddressColumn {
                get {
                    return this.columnUserHostAddress;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserHostNameColumn {
                get {
                    return this.columnUserHostName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TabIdColumn {
                get {
                    return this.columnTabId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AffiliateIdColumn {
                get {
                    return this.columnAffiliateId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GivenNameColumn {
                get {
                    return this.columnGivenName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FamilyNameColumn {
                get {
                    return this.columnFamilyName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateOfBirthColumn {
                get {
                    return this.columnDateOfBirth;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NationalOrSecurityNumberColumn {
                get {
                    return this.columnNationalOrSecurityNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaritalStatusListsRowIdColumn {
                get {
                    return this.columnMaritalStatusListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NationalityListsRowIdColumn {
                get {
                    return this.columnNationalityListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SexListsRowIdColumn {
                get {
                    return this.columnSexListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DepartmentColumn {
                get {
                    return this.columnDepartment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CompanyColumn {
                get {
                    return this.columnCompany;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RotationColumn {
                get {
                    return this.columnRotation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RoleColumn {
                get {
                    return this.columnRole;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NationalityColumn {
                get {
                    return this.columnNationality;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAEmployeeSiteLogViewRow this[int index] {
                get {
                    return ((GAEmployeeSiteLogViewRow)(this.Rows[index]));
                }
            }
            
            public event GAEmployeeSiteLogViewRowChangeEventHandler GAEmployeeSiteLogViewRowChanging;
            
            public event GAEmployeeSiteLogViewRowChangeEventHandler GAEmployeeSiteLogViewRowChanged;
            
            public event GAEmployeeSiteLogViewRowChangeEventHandler GAEmployeeSiteLogViewRowDeleting;
            
            public event GAEmployeeSiteLogViewRowChangeEventHandler GAEmployeeSiteLogViewRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGAEmployeeSiteLogViewRow(GAEmployeeSiteLogViewRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAEmployeeSiteLogViewRow AddGAEmployeeSiteLogViewRow(
                        string ContractNumber, 
                        int PersonnelRowId, 
                        System.DateTime FromDate, 
                        System.DateTime ToDate, 
                        int DepartmentListsRowId, 
                        int CompanyRowId, 
                        int RotationListsRowId, 
                        int RoleListsRowId, 
                        string OwnerClass, 
                        int OwnerClassRowId, 
                        string Path, 
                        string DNNUserId, 
                        bool IsCompanyUser, 
                        System.DateTime DateTime, 
                        string Url, 
                        string UserAgent, 
                        string UserHostAddress, 
                        string UserHostName, 
                        int TabId, 
                        int AffiliateId, 
                        string GivenName, 
                        string FamilyName, 
                        string Address, 
                        System.DateTime DateOfBirth, 
                        string NationalOrSecurityNumber, 
                        int MaritalStatusListsRowId, 
                        int NationalityListsRowId, 
                        int SexListsRowId, 
                        string Department, 
                        string Company, 
                        string Rotation, 
                        string Role, 
                        string MaritalStatus, 
                        string Nationality, 
                        string Sex) {
                GAEmployeeSiteLogViewRow rowGAEmployeeSiteLogViewRow = ((GAEmployeeSiteLogViewRow)(this.NewRow()));
                rowGAEmployeeSiteLogViewRow.ItemArray = new object[] {
                        null,
                        ContractNumber,
                        PersonnelRowId,
                        FromDate,
                        ToDate,
                        DepartmentListsRowId,
                        CompanyRowId,
                        RotationListsRowId,
                        RoleListsRowId,
                        OwnerClass,
                        OwnerClassRowId,
                        Path,
                        DNNUserId,
                        IsCompanyUser,
                        null,
                        DateTime,
                        Url,
                        UserAgent,
                        UserHostAddress,
                        UserHostName,
                        TabId,
                        AffiliateId,
                        GivenName,
                        FamilyName,
                        Address,
                        DateOfBirth,
                        NationalOrSecurityNumber,
                        MaritalStatusListsRowId,
                        NationalityListsRowId,
                        SexListsRowId,
                        Department,
                        Company,
                        Rotation,
                        Role,
                        MaritalStatus,
                        Nationality,
                        Sex};
                this.Rows.Add(rowGAEmployeeSiteLogViewRow);
                return rowGAEmployeeSiteLogViewRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                GAEmployeeSiteLogViewDataTable cln = ((GAEmployeeSiteLogViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new GAEmployeeSiteLogViewDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployeeSiteLogViewRowId = base.Columns["EmployeeSiteLogViewRowId"];
                this.columnContractNumber = base.Columns["ContractNumber"];
                this.columnPersonnelRowId = base.Columns["PersonnelRowId"];
                this.columnFromDate = base.Columns["FromDate"];
                this.columnToDate = base.Columns["ToDate"];
                this.columnDepartmentListsRowId = base.Columns["DepartmentListsRowId"];
                this.columnCompanyRowId = base.Columns["CompanyRowId"];
                this.columnRotationListsRowId = base.Columns["RotationListsRowId"];
                this.columnRoleListsRowId = base.Columns["RoleListsRowId"];
                this.columnOwnerClass = base.Columns["OwnerClass"];
                this.columnOwnerClassRowId = base.Columns["OwnerClassRowId"];
                this.columnPath = base.Columns["Path"];
                this.columnDNNUserId = base.Columns["DNNUserId"];
                this.columnIsCompanyUser = base.Columns["IsCompanyUser"];
                this.columnUserID = base.Columns["UserID"];
                this.columnDateTime = base.Columns["DateTime"];
                this.columnUrl = base.Columns["Url"];
                this.columnUserAgent = base.Columns["UserAgent"];
                this.columnUserHostAddress = base.Columns["UserHostAddress"];
                this.columnUserHostName = base.Columns["UserHostName"];
                this.columnTabId = base.Columns["TabId"];
                this.columnAffiliateId = base.Columns["AffiliateId"];
                this.columnGivenName = base.Columns["GivenName"];
                this.columnFamilyName = base.Columns["FamilyName"];
                this.columnAddress = base.Columns["Address"];
                this.columnDateOfBirth = base.Columns["DateOfBirth"];
                this.columnNationalOrSecurityNumber = base.Columns["NationalOrSecurityNumber"];
                this.columnMaritalStatusListsRowId = base.Columns["MaritalStatusListsRowId"];
                this.columnNationalityListsRowId = base.Columns["NationalityListsRowId"];
                this.columnSexListsRowId = base.Columns["SexListsRowId"];
                this.columnDepartment = base.Columns["Department"];
                this.columnCompany = base.Columns["Company"];
                this.columnRotation = base.Columns["Rotation"];
                this.columnRole = base.Columns["Role"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnNationality = base.Columns["Nationality"];
                this.columnSex = base.Columns["Sex"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployeeSiteLogViewRowId = new System.Data.DataColumn("EmployeeSiteLogViewRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeSiteLogViewRowId);
                this.columnContractNumber = new System.Data.DataColumn("ContractNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractNumber);
                this.columnPersonnelRowId = new System.Data.DataColumn("PersonnelRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonnelRowId);
                this.columnFromDate = new System.Data.DataColumn("FromDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDate);
                this.columnToDate = new System.Data.DataColumn("ToDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnToDate);
                this.columnDepartmentListsRowId = new System.Data.DataColumn("DepartmentListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartmentListsRowId);
                this.columnCompanyRowId = new System.Data.DataColumn("CompanyRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyRowId);
                this.columnRotationListsRowId = new System.Data.DataColumn("RotationListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRotationListsRowId);
                this.columnRoleListsRowId = new System.Data.DataColumn("RoleListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoleListsRowId);
                this.columnOwnerClass = new System.Data.DataColumn("OwnerClass", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerClass);
                this.columnOwnerClassRowId = new System.Data.DataColumn("OwnerClassRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerClassRowId);
                this.columnPath = new System.Data.DataColumn("Path", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPath);
                this.columnDNNUserId = new System.Data.DataColumn("DNNUserId", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDNNUserId);
                this.columnIsCompanyUser = new System.Data.DataColumn("IsCompanyUser", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCompanyUser);
                this.columnUserID = new System.Data.DataColumn("UserID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnDateTime = new System.Data.DataColumn("DateTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime);
                this.columnUrl = new System.Data.DataColumn("Url", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUrl);
                this.columnUserAgent = new System.Data.DataColumn("UserAgent", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserAgent);
                this.columnUserHostAddress = new System.Data.DataColumn("UserHostAddress", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserHostAddress);
                this.columnUserHostName = new System.Data.DataColumn("UserHostName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserHostName);
                this.columnTabId = new System.Data.DataColumn("TabId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabId);
                this.columnAffiliateId = new System.Data.DataColumn("AffiliateId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAffiliateId);
                this.columnGivenName = new System.Data.DataColumn("GivenName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGivenName);
                this.columnFamilyName = new System.Data.DataColumn("FamilyName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyName);
                this.columnAddress = new System.Data.DataColumn("Address", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnDateOfBirth = new System.Data.DataColumn("DateOfBirth", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfBirth);
                this.columnNationalOrSecurityNumber = new System.Data.DataColumn("NationalOrSecurityNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationalOrSecurityNumber);
                this.columnMaritalStatusListsRowId = new System.Data.DataColumn("MaritalStatusListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatusListsRowId);
                this.columnNationalityListsRowId = new System.Data.DataColumn("NationalityListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationalityListsRowId);
                this.columnSexListsRowId = new System.Data.DataColumn("SexListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSexListsRowId);
                this.columnDepartment = new System.Data.DataColumn("Department", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment);
                this.columnCompany = new System.Data.DataColumn("Company", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnRotation = new System.Data.DataColumn("Rotation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRotation);
                this.columnRole = new System.Data.DataColumn("Role", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRole);
                this.columnMaritalStatus = new System.Data.DataColumn("MaritalStatus", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnNationality = new System.Data.DataColumn("Nationality", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationality);
                this.columnSex = new System.Data.DataColumn("Sex", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnEmployeeSiteLogViewRowId.AutoIncrement = true;
                this.columnEmployeeSiteLogViewRowId.AllowDBNull = false;
                this.columnEmployeeSiteLogViewRowId.ReadOnly = true;
                this.columnContractNumber.MaxLength = 50;
                this.columnOwnerClass.MaxLength = 50;
                this.columnPath.MaxLength = 4000;
                this.columnDNNUserId.MaxLength = 500;
                this.columnUserID.AutoIncrement = true;
                this.columnUserID.AllowDBNull = false;
                this.columnUserID.ReadOnly = true;
                this.columnDateTime.AllowDBNull = false;
                this.columnUrl.MaxLength = 255;
                this.columnUserAgent.MaxLength = 255;
                this.columnUserHostAddress.MaxLength = 255;
                this.columnUserHostName.MaxLength = 255;
                this.columnGivenName.MaxLength = 50;
                this.columnFamilyName.MaxLength = 50;
                this.columnAddress.MaxLength = 1073741823;
                this.columnNationalOrSecurityNumber.MaxLength = 50;
                this.columnDepartment.MaxLength = 400;
                this.columnCompany.MaxLength = 100;
                this.columnRotation.MaxLength = 400;
                this.columnRole.MaxLength = 400;
                this.columnMaritalStatus.MaxLength = 400;
                this.columnNationality.MaxLength = 400;
                this.columnSex.MaxLength = 400;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAEmployeeSiteLogViewRow NewGAEmployeeSiteLogViewRow() {
                return ((GAEmployeeSiteLogViewRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new GAEmployeeSiteLogViewRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(GAEmployeeSiteLogViewRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAEmployeeSiteLogViewRowChanged != null)) {
                    this.GAEmployeeSiteLogViewRowChanged(this, new GAEmployeeSiteLogViewRowChangeEvent(((GAEmployeeSiteLogViewRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAEmployeeSiteLogViewRowChanging != null)) {
                    this.GAEmployeeSiteLogViewRowChanging(this, new GAEmployeeSiteLogViewRowChangeEvent(((GAEmployeeSiteLogViewRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAEmployeeSiteLogViewRowDeleted != null)) {
                    this.GAEmployeeSiteLogViewRowDeleted(this, new GAEmployeeSiteLogViewRowChangeEvent(((GAEmployeeSiteLogViewRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAEmployeeSiteLogViewRowDeleting != null)) {
                    this.GAEmployeeSiteLogViewRowDeleting(this, new GAEmployeeSiteLogViewRowChangeEvent(((GAEmployeeSiteLogViewRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGAEmployeeSiteLogViewRow(GAEmployeeSiteLogViewRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                EmployeeSiteLogViewDS ds = new EmployeeSiteLogViewDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GAEmployeeSiteLogViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GAEmployeeSiteLogViewRow : System.Data.DataRow {
            
            private GAEmployeeSiteLogViewDataTable tableGAEmployeeSiteLogView;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAEmployeeSiteLogViewRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAEmployeeSiteLogView = ((GAEmployeeSiteLogViewDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeSiteLogViewRowId {
                get {
                    return ((int)(this[this.tableGAEmployeeSiteLogView.EmployeeSiteLogViewRowIdColumn]));
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.EmployeeSiteLogViewRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContractNumber {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.ContractNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ContractNumber\' in table \'GAEmployeeSiteLogView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.ContractNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PersonnelRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.PersonnelRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PersonnelRowId\' in table \'GAEmployeeSiteLogView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.PersonnelRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FromDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEmployeeSiteLogView.FromDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FromDate\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.FromDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ToDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEmployeeSiteLogView.ToDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ToDate\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.ToDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DepartmentListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.DepartmentListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DepartmentListsRowId\' in table \'GAEmployeeSiteLogView\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.DepartmentListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompanyRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.CompanyRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CompanyRowId\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.CompanyRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RotationListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.RotationListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RotationListsRowId\' in table \'GAEmployeeSiteLogView\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.RotationListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RoleListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.RoleListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RoleListsRowId\' in table \'GAEmployeeSiteLogView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.RoleListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerClass {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.OwnerClassColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OwnerClass\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.OwnerClassColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerClassRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.OwnerClassRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OwnerClassRowId\' in table \'GAEmployeeSiteLogView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.OwnerClassRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Path {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.PathColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Path\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.PathColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DNNUserId {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.DNNUserIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DNNUserId\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.DNNUserIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyUser {
                get {
                    try {
                        return ((bool)(this[this.tableGAEmployeeSiteLogView.IsCompanyUserColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IsCompanyUser\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.IsCompanyUserColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    return ((int)(this[this.tableGAEmployeeSiteLogView.UserIDColumn]));
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.UserIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime {
                get {
                    return ((System.DateTime)(this[this.tableGAEmployeeSiteLogView.DateTimeColumn]));
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.DateTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Url {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.UrlColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Url\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.UrlColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserAgent {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.UserAgentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UserAgent\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.UserAgentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserHostAddress {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.UserHostAddressColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UserHostAddress\' in table \'GAEmployeeSiteLogView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.UserHostAddressColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserHostName {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.UserHostNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UserHostName\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.UserHostNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TabId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.TabIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TabId\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.TabIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AffiliateId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.AffiliateIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AffiliateId\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.AffiliateIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GivenName {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.GivenNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GivenName\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.GivenNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FamilyName {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.FamilyNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FamilyName\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.FamilyNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.AddressColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.AddressColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfBirth {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEmployeeSiteLogView.DateOfBirthColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateOfBirth\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.DateOfBirthColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NationalOrSecurityNumber {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.NationalOrSecurityNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NationalOrSecurityNumber\' in table \'GAEmployeeSiteLogView\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.NationalOrSecurityNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaritalStatusListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.MaritalStatusListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MaritalStatusListsRowId\' in table \'GAEmployeeSiteLogView\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.MaritalStatusListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NationalityListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.NationalityListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NationalityListsRowId\' in table \'GAEmployeeSiteLogView\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.NationalityListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SexListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.SexListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SexListsRowId\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.SexListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.DepartmentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Department\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.DepartmentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.CompanyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Company\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.CompanyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rotation {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.RotationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Rotation\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.RotationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Role {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.RoleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Role\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.RoleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaritalStatus {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.MaritalStatusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MaritalStatus\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.MaritalStatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nationality {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.NationalityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Nationality\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.NationalityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sex {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.SexColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Sex\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.SexColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContractNumberNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.ContractNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContractNumberNull() {
                this[this.tableGAEmployeeSiteLogView.ContractNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonnelRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.PersonnelRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonnelRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.PersonnelRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromDateNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.FromDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromDateNull() {
                this[this.tableGAEmployeeSiteLogView.FromDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToDateNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.ToDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToDateNull() {
                this[this.tableGAEmployeeSiteLogView.ToDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartmentListsRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.DepartmentListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartmentListsRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.DepartmentListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.CompanyRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.CompanyRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRotationListsRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.RotationListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRotationListsRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.RotationListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoleListsRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.RoleListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoleListsRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.RoleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerClassNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.OwnerClassColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerClassNull() {
                this[this.tableGAEmployeeSiteLogView.OwnerClassColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerClassRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.OwnerClassRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerClassRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.OwnerClassRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPathNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.PathColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPathNull() {
                this[this.tableGAEmployeeSiteLogView.PathColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDNNUserIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.DNNUserIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDNNUserIdNull() {
                this[this.tableGAEmployeeSiteLogView.DNNUserIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCompanyUserNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.IsCompanyUserColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCompanyUserNull() {
                this[this.tableGAEmployeeSiteLogView.IsCompanyUserColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUrlNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.UrlColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUrlNull() {
                this[this.tableGAEmployeeSiteLogView.UrlColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserAgentNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.UserAgentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserAgentNull() {
                this[this.tableGAEmployeeSiteLogView.UserAgentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserHostAddressNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.UserHostAddressColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserHostAddressNull() {
                this[this.tableGAEmployeeSiteLogView.UserHostAddressColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserHostNameNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.UserHostNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserHostNameNull() {
                this[this.tableGAEmployeeSiteLogView.UserHostNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTabIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.TabIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTabIdNull() {
                this[this.tableGAEmployeeSiteLogView.TabIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAffiliateIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.AffiliateIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAffiliateIdNull() {
                this[this.tableGAEmployeeSiteLogView.AffiliateIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGivenNameNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.GivenNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGivenNameNull() {
                this[this.tableGAEmployeeSiteLogView.GivenNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFamilyNameNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.FamilyNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFamilyNameNull() {
                this[this.tableGAEmployeeSiteLogView.FamilyNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.AddressColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableGAEmployeeSiteLogView.AddressColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfBirthNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.DateOfBirthColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfBirthNull() {
                this[this.tableGAEmployeeSiteLogView.DateOfBirthColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNationalOrSecurityNumberNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.NationalOrSecurityNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNationalOrSecurityNumberNull() {
                this[this.tableGAEmployeeSiteLogView.NationalOrSecurityNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritalStatusListsRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.MaritalStatusListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritalStatusListsRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.MaritalStatusListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNationalityListsRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.NationalityListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNationalityListsRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.NationalityListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSexListsRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.SexListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSexListsRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.SexListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartmentNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.DepartmentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartmentNull() {
                this[this.tableGAEmployeeSiteLogView.DepartmentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.CompanyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNull() {
                this[this.tableGAEmployeeSiteLogView.CompanyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRotationNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.RotationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRotationNull() {
                this[this.tableGAEmployeeSiteLogView.RotationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoleNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.RoleColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoleNull() {
                this[this.tableGAEmployeeSiteLogView.RoleColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritalStatusNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.MaritalStatusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritalStatusNull() {
                this[this.tableGAEmployeeSiteLogView.MaritalStatusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNationalityNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.NationalityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNationalityNull() {
                this[this.tableGAEmployeeSiteLogView.NationalityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSexNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.SexColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSexNull() {
                this[this.tableGAEmployeeSiteLogView.SexColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GAEmployeeSiteLogViewRowChangeEvent : System.EventArgs {
            
            private GAEmployeeSiteLogViewRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAEmployeeSiteLogViewRowChangeEvent(GAEmployeeSiteLogViewRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAEmployeeSiteLogViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GASystem.DataModel.EmployeeSiteLogViewDSTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GAEmployeeSiteLogViewTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GAEmployeeSiteLogViewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GAEmployeeSiteLogView";
            tableMapping.ColumnMappings.Add("EmployeeSiteLogViewRowId", "EmployeeSiteLogViewRowId");
            tableMapping.ColumnMappings.Add("ContractNumber", "ContractNumber");
            tableMapping.ColumnMappings.Add("PersonnelRowId", "PersonnelRowId");
            tableMapping.ColumnMappings.Add("FromDate", "FromDate");
            tableMapping.ColumnMappings.Add("ToDate", "ToDate");
            tableMapping.ColumnMappings.Add("DepartmentListsRowId", "DepartmentListsRowId");
            tableMapping.ColumnMappings.Add("CompanyRowId", "CompanyRowId");
            tableMapping.ColumnMappings.Add("RotationListsRowId", "RotationListsRowId");
            tableMapping.ColumnMappings.Add("RoleListsRowId", "RoleListsRowId");
            tableMapping.ColumnMappings.Add("OwnerClass", "OwnerClass");
            tableMapping.ColumnMappings.Add("OwnerClassRowId", "OwnerClassRowId");
            tableMapping.ColumnMappings.Add("Path", "Path");
            tableMapping.ColumnMappings.Add("DNNUserId", "DNNUserId");
            tableMapping.ColumnMappings.Add("IsCompanyUser", "IsCompanyUser");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("DateTime", "DateTime");
            tableMapping.ColumnMappings.Add("Url", "Url");
            tableMapping.ColumnMappings.Add("UserAgent", "UserAgent");
            tableMapping.ColumnMappings.Add("UserHostAddress", "UserHostAddress");
            tableMapping.ColumnMappings.Add("UserHostName", "UserHostName");
            tableMapping.ColumnMappings.Add("TabId", "TabId");
            tableMapping.ColumnMappings.Add("AffiliateId", "AffiliateId");
            tableMapping.ColumnMappings.Add("GivenName", "GivenName");
            tableMapping.ColumnMappings.Add("FamilyName", "FamilyName");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("DateOfBirth", "DateOfBirth");
            tableMapping.ColumnMappings.Add("NationalOrSecurityNumber", "NationalOrSecurityNumber");
            tableMapping.ColumnMappings.Add("MaritalStatusListsRowId", "MaritalStatusListsRowId");
            tableMapping.ColumnMappings.Add("NationalityListsRowId", "NationalityListsRowId");
            tableMapping.ColumnMappings.Add("SexListsRowId", "SexListsRowId");
            tableMapping.ColumnMappings.Add("Department", "Department");
            tableMapping.ColumnMappings.Add("Company", "Company");
            tableMapping.ColumnMappings.Add("Rotation", "Rotation");
            tableMapping.ColumnMappings.Add("Role", "Role");
            tableMapping.ColumnMappings.Add("MaritalStatus", "MaritalStatus");
            tableMapping.ColumnMappings.Add("Nationality", "Nationality");
            tableMapping.ColumnMappings.Add("Sex", "Sex");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GASystem.Properties.Settings.Default.flagdata070807ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT EmployeeSiteLogViewRowId, ContractNumber, PersonnelRowId, FromDate, ToDate, DepartmentListsRowId, CompanyRowId, RotationListsRowId, RoleListsRowId, OwnerClass, OwnerClassRowId, Path, DNNUserId, IsCompanyUser, UserID, DateTime, Url, UserAgent, UserHostAddress, UserHostName, TabId, AffiliateId, GivenName, FamilyName, Address, DateOfBirth, NationalOrSecurityNumber, MaritalStatusListsRowId, NationalityListsRowId, SexListsRowId, Department, Company, Rotation, Role, MaritalStatus, Nationality, Sex FROM dbo.GAEmployeeSiteLogView";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EmployeeSiteLogViewDS.GAEmployeeSiteLogViewDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EmployeeSiteLogViewDS.GAEmployeeSiteLogViewDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EmployeeSiteLogViewDS.GAEmployeeSiteLogViewDataTable dataTable = new EmployeeSiteLogViewDS.GAEmployeeSiteLogViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591