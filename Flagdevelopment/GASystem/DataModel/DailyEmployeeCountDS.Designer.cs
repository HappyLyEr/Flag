//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DailyEmployeeCountDS")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DailyEmployeeCountDS : System.Data.DataSet {
        
        private GADailyEmployeeCountDataTable tableGADailyEmployeeCount;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DailyEmployeeCountDS() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DailyEmployeeCountDS(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["GADailyEmployeeCount"] != null)) {
                    base.Tables.Add(new GADailyEmployeeCountDataTable(ds.Tables["GADailyEmployeeCount"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GADailyEmployeeCountDataTable GADailyEmployeeCount {
            get {
                return this.tableGADailyEmployeeCount;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DailyEmployeeCountDS cln = ((DailyEmployeeCountDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GADailyEmployeeCount"] != null)) {
                    base.Tables.Add(new GADailyEmployeeCountDataTable(ds.Tables["GADailyEmployeeCount"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGADailyEmployeeCount = ((GADailyEmployeeCountDataTable)(base.Tables["GADailyEmployeeCount"]));
            if ((initTable == true)) {
                if ((this.tableGADailyEmployeeCount != null)) {
                    this.tableGADailyEmployeeCount.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DailyEmployeeCountDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DailyEmployeeCountDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGADailyEmployeeCount = new GADailyEmployeeCountDataTable();
            base.Tables.Add(this.tableGADailyEmployeeCount);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGADailyEmployeeCount() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DailyEmployeeCountDS ds = new DailyEmployeeCountDS();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void GADailyEmployeeCountRowChangeEventHandler(object sender, GADailyEmployeeCountRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GADailyEmployeeCountDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDailyEmployeeCountRowId;
            
            private System.Data.DataColumn columnDailyEmployeeCountReferenceId;
            
            private System.Data.DataColumn columnLocationOfWork;
            
            private System.Data.DataColumn columnReportDate;
            
            private System.Data.DataColumn columnComment;
            
            private System.Data.DataColumn columnSeismicPersonnelCount;
            
            private System.Data.DataColumn columnMarinePersonnelCount;
            
            private System.Data.DataColumn columnThirdPartyPersonnelCount;
            
            private System.Data.DataColumn columnOfficePersonnelCount;
            
            private System.Data.DataColumn columnClientPersonnelCount;
            
            private System.Data.DataColumn columnDailyEmployeeCountComment;
            
            private System.Data.DataColumn columnCetaceansCount;
            
            private System.Data.DataColumn columnCetaceansCountComment;
            
            private System.Data.DataColumn columnCrewBoatActivitiesCount;
            
            private System.Data.DataColumn columnCrewBoatActivitiesCountComment;
            
            private System.Data.DataColumn columnMaritimeIcidentAndIllnessCount;
            
            private System.Data.DataColumn columnMaritimeIcidentAndIllnessCountComment;
            
            private System.Data.DataColumn columnOwnIncidentAndIllnessCount;
            
            private System.Data.DataColumn columnOwnIncidentAndIllnessCountComment;
            
            private System.Data.DataColumn columnHIPCardUnsafeActsCount;
            
            private System.Data.DataColumn columnHIPCardUnsafeActsCountComment;
            
            private System.Data.DataColumn columnHIPCardNearMissesCount;
            
            private System.Data.DataColumn columnHIPCardNearMissesCountComment;
            
            private System.Data.DataColumn columnCrewSafetyMeetingsCount;
            
            private System.Data.DataColumn columnCrewSafetyMeetingsCountComment;
            
            private System.Data.DataColumn columnToolboxMeetingsCount;
            
            private System.Data.DataColumn columnToolboxMeetingsCountComment;
            
            private System.Data.DataColumn columnSafetyDrillsCount;
            
            private System.Data.DataColumn columnSafetyDrillsCountComment;
            
            private System.Data.DataColumn columnSOPDepartmentalInspectionsCount;
            
            private System.Data.DataColumn columnSOPDepartmentalInspectionsCountComment;
            
            private System.Data.DataColumn columnSOPCrossDepartmentalInspectionsCount;
            
            private System.Data.DataColumn columnSOPCrossDepartmentalInspectionsCountComment;
            
            private System.Data.DataColumn columnSOPPartyChiefInspectionsCount;
            
            private System.Data.DataColumn columnSOPPartyChiefInspectionsCountComment;
            
            private System.Data.DataColumn columnAOBComment;
            
            private System.Data.DataColumn columnManHours;
            
            private System.Data.DataColumn columnProjectManHours;
            
            private System.Data.DataColumn columnYesNoSafetyEventListsRowId;
            
            private System.Data.DataColumn columnrowguid;
            
            private System.Data.DataColumn columnMasterRowId;
            
            private System.Data.DataColumn columnDateCreated;
            
            private System.Data.DataColumn columnCreatedBy;
            
            private System.Data.DataColumn columnDateChanged;
            
            private System.Data.DataColumn columnChangedBy;
            
            private System.Data.DataColumn columnDateDeleted;
            
            private System.Data.DataColumn columnDeletedBy;
            
            private System.Data.DataColumn columnSwitchFree1;
            
            private System.Data.DataColumn columnSwitchFree2;
            
            private System.Data.DataColumn columnSwitchFree3;
            
            private System.Data.DataColumn columnDateTimeFree1;
            
            private System.Data.DataColumn columnDateTimeFree2;
            
            private System.Data.DataColumn columnDateTimeFree3;
            
            private System.Data.DataColumn columnTextFree1;
            
            private System.Data.DataColumn columnTextFree2;
            
            private System.Data.DataColumn columnTextFree3;
            
            private System.Data.DataColumn columnIntFree1;
            
            private System.Data.DataColumn columnIntFree2;
            
            private System.Data.DataColumn columnIntFree3;
            
            private System.Data.DataColumn columnnTextFree1;
            
            private System.Data.DataColumn columnnTextFree2;
            
            private System.Data.DataColumn columnnTextFree3;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADailyEmployeeCountDataTable() {
                this.TableName = "GADailyEmployeeCount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GADailyEmployeeCountDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GADailyEmployeeCountDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DailyEmployeeCountRowIdColumn {
                get {
                    return this.columnDailyEmployeeCountRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DailyEmployeeCountReferenceIdColumn {
                get {
                    return this.columnDailyEmployeeCountReferenceId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LocationOfWorkColumn {
                get {
                    return this.columnLocationOfWork;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SeismicPersonnelCountColumn {
                get {
                    return this.columnSeismicPersonnelCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MarinePersonnelCountColumn {
                get {
                    return this.columnMarinePersonnelCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ThirdPartyPersonnelCountColumn {
                get {
                    return this.columnThirdPartyPersonnelCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OfficePersonnelCountColumn {
                get {
                    return this.columnOfficePersonnelCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ClientPersonnelCountColumn {
                get {
                    return this.columnClientPersonnelCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DailyEmployeeCountCommentColumn {
                get {
                    return this.columnDailyEmployeeCountComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CetaceansCountColumn {
                get {
                    return this.columnCetaceansCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CetaceansCountCommentColumn {
                get {
                    return this.columnCetaceansCountComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CrewBoatActivitiesCountColumn {
                get {
                    return this.columnCrewBoatActivitiesCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CrewBoatActivitiesCountCommentColumn {
                get {
                    return this.columnCrewBoatActivitiesCountComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaritimeIcidentAndIllnessCountColumn {
                get {
                    return this.columnMaritimeIcidentAndIllnessCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaritimeIcidentAndIllnessCountCommentColumn {
                get {
                    return this.columnMaritimeIcidentAndIllnessCountComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OwnIncidentAndIllnessCountColumn {
                get {
                    return this.columnOwnIncidentAndIllnessCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OwnIncidentAndIllnessCountCommentColumn {
                get {
                    return this.columnOwnIncidentAndIllnessCountComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HIPCardUnsafeActsCountColumn {
                get {
                    return this.columnHIPCardUnsafeActsCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HIPCardUnsafeActsCountCommentColumn {
                get {
                    return this.columnHIPCardUnsafeActsCountComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HIPCardNearMissesCountColumn {
                get {
                    return this.columnHIPCardNearMissesCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HIPCardNearMissesCountCommentColumn {
                get {
                    return this.columnHIPCardNearMissesCountComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CrewSafetyMeetingsCountColumn {
                get {
                    return this.columnCrewSafetyMeetingsCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CrewSafetyMeetingsCountCommentColumn {
                get {
                    return this.columnCrewSafetyMeetingsCountComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ToolboxMeetingsCountColumn {
                get {
                    return this.columnToolboxMeetingsCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ToolboxMeetingsCountCommentColumn {
                get {
                    return this.columnToolboxMeetingsCountComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SafetyDrillsCountColumn {
                get {
                    return this.columnSafetyDrillsCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SafetyDrillsCountCommentColumn {
                get {
                    return this.columnSafetyDrillsCountComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPDepartmentalInspectionsCountColumn {
                get {
                    return this.columnSOPDepartmentalInspectionsCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPDepartmentalInspectionsCountCommentColumn {
                get {
                    return this.columnSOPDepartmentalInspectionsCountComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPCrossDepartmentalInspectionsCountColumn {
                get {
                    return this.columnSOPCrossDepartmentalInspectionsCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPCrossDepartmentalInspectionsCountCommentColumn {
                get {
                    return this.columnSOPCrossDepartmentalInspectionsCountComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPPartyChiefInspectionsCountColumn {
                get {
                    return this.columnSOPPartyChiefInspectionsCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPPartyChiefInspectionsCountCommentColumn {
                get {
                    return this.columnSOPPartyChiefInspectionsCountComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AOBCommentColumn {
                get {
                    return this.columnAOBComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ManHoursColumn {
                get {
                    return this.columnManHours;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProjectManHoursColumn {
                get {
                    return this.columnProjectManHours;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn YesNoSafetyEventListsRowIdColumn {
                get {
                    return this.columnYesNoSafetyEventListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nTextFree1Column {
                get {
                    return this.columnnTextFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nTextFree2Column {
                get {
                    return this.columnnTextFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nTextFree3Column {
                get {
                    return this.columnnTextFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADailyEmployeeCountRow this[int index] {
                get {
                    return ((GADailyEmployeeCountRow)(this.Rows[index]));
                }
            }
            
            public event GADailyEmployeeCountRowChangeEventHandler GADailyEmployeeCountRowChanging;
            
            public event GADailyEmployeeCountRowChangeEventHandler GADailyEmployeeCountRowChanged;
            
            public event GADailyEmployeeCountRowChangeEventHandler GADailyEmployeeCountRowDeleting;
            
            public event GADailyEmployeeCountRowChangeEventHandler GADailyEmployeeCountRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGADailyEmployeeCountRow(GADailyEmployeeCountRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADailyEmployeeCountRow AddGADailyEmployeeCountRow(
                        string DailyEmployeeCountReferenceId, 
                        string LocationOfWork, 
                        System.DateTime ReportDate, 
                        string Comment, 
                        int SeismicPersonnelCount, 
                        int MarinePersonnelCount, 
                        int ThirdPartyPersonnelCount, 
                        int OfficePersonnelCount, 
                        int ClientPersonnelCount, 
                        string DailyEmployeeCountComment, 
                        int CetaceansCount, 
                        string CetaceansCountComment, 
                        int CrewBoatActivitiesCount, 
                        string CrewBoatActivitiesCountComment, 
                        int MaritimeIcidentAndIllnessCount, 
                        string MaritimeIcidentAndIllnessCountComment, 
                        int OwnIncidentAndIllnessCount, 
                        string OwnIncidentAndIllnessCountComment, 
                        int HIPCardUnsafeActsCount, 
                        string HIPCardUnsafeActsCountComment, 
                        int HIPCardNearMissesCount, 
                        string HIPCardNearMissesCountComment, 
                        int CrewSafetyMeetingsCount, 
                        string CrewSafetyMeetingsCountComment, 
                        int ToolboxMeetingsCount, 
                        string ToolboxMeetingsCountComment, 
                        int SafetyDrillsCount, 
                        string SafetyDrillsCountComment, 
                        int SOPDepartmentalInspectionsCount, 
                        string SOPDepartmentalInspectionsCountComment, 
                        int SOPCrossDepartmentalInspectionsCount, 
                        string SOPCrossDepartmentalInspectionsCountComment, 
                        int SOPPartyChiefInspectionsCount, 
                        string SOPPartyChiefInspectionsCountComment, 
                        string AOBComment, 
                        int ManHours, 
                        int ProjectManHours, 
                        int YesNoSafetyEventListsRowId, 
                        System.Guid rowguid, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3, 
                        string nTextFree1, 
                        string nTextFree2, 
                        string nTextFree3) {
                GADailyEmployeeCountRow rowGADailyEmployeeCountRow = ((GADailyEmployeeCountRow)(this.NewRow()));
                rowGADailyEmployeeCountRow.ItemArray = new object[] {
                        null,
                        DailyEmployeeCountReferenceId,
                        LocationOfWork,
                        ReportDate,
                        Comment,
                        SeismicPersonnelCount,
                        MarinePersonnelCount,
                        ThirdPartyPersonnelCount,
                        OfficePersonnelCount,
                        ClientPersonnelCount,
                        DailyEmployeeCountComment,
                        CetaceansCount,
                        CetaceansCountComment,
                        CrewBoatActivitiesCount,
                        CrewBoatActivitiesCountComment,
                        MaritimeIcidentAndIllnessCount,
                        MaritimeIcidentAndIllnessCountComment,
                        OwnIncidentAndIllnessCount,
                        OwnIncidentAndIllnessCountComment,
                        HIPCardUnsafeActsCount,
                        HIPCardUnsafeActsCountComment,
                        HIPCardNearMissesCount,
                        HIPCardNearMissesCountComment,
                        CrewSafetyMeetingsCount,
                        CrewSafetyMeetingsCountComment,
                        ToolboxMeetingsCount,
                        ToolboxMeetingsCountComment,
                        SafetyDrillsCount,
                        SafetyDrillsCountComment,
                        SOPDepartmentalInspectionsCount,
                        SOPDepartmentalInspectionsCountComment,
                        SOPCrossDepartmentalInspectionsCount,
                        SOPCrossDepartmentalInspectionsCountComment,
                        SOPPartyChiefInspectionsCount,
                        SOPPartyChiefInspectionsCountComment,
                        AOBComment,
                        ManHours,
                        ProjectManHours,
                        YesNoSafetyEventListsRowId,
                        rowguid,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3,
                        nTextFree1,
                        nTextFree2,
                        nTextFree3};
                this.Rows.Add(rowGADailyEmployeeCountRow);
                return rowGADailyEmployeeCountRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADailyEmployeeCountRow FindByDailyEmployeeCountRowId(int DailyEmployeeCountRowId) {
                return ((GADailyEmployeeCountRow)(this.Rows.Find(new object[] {
                            DailyEmployeeCountRowId})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                GADailyEmployeeCountDataTable cln = ((GADailyEmployeeCountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new GADailyEmployeeCountDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDailyEmployeeCountRowId = base.Columns["DailyEmployeeCountRowId"];
                this.columnDailyEmployeeCountReferenceId = base.Columns["DailyEmployeeCountReferenceId"];
                this.columnLocationOfWork = base.Columns["LocationOfWork"];
                this.columnReportDate = base.Columns["ReportDate"];
                this.columnComment = base.Columns["Comment"];
                this.columnSeismicPersonnelCount = base.Columns["SeismicPersonnelCount"];
                this.columnMarinePersonnelCount = base.Columns["MarinePersonnelCount"];
                this.columnThirdPartyPersonnelCount = base.Columns["ThirdPartyPersonnelCount"];
                this.columnOfficePersonnelCount = base.Columns["OfficePersonnelCount"];
                this.columnClientPersonnelCount = base.Columns["ClientPersonnelCount"];
                this.columnDailyEmployeeCountComment = base.Columns["DailyEmployeeCountComment"];
                this.columnCetaceansCount = base.Columns["CetaceansCount"];
                this.columnCetaceansCountComment = base.Columns["CetaceansCountComment"];
                this.columnCrewBoatActivitiesCount = base.Columns["CrewBoatActivitiesCount"];
                this.columnCrewBoatActivitiesCountComment = base.Columns["CrewBoatActivitiesCountComment"];
                this.columnMaritimeIcidentAndIllnessCount = base.Columns["MaritimeIcidentAndIllnessCount"];
                this.columnMaritimeIcidentAndIllnessCountComment = base.Columns["MaritimeIcidentAndIllnessCountComment"];
                this.columnOwnIncidentAndIllnessCount = base.Columns["OwnIncidentAndIllnessCount"];
                this.columnOwnIncidentAndIllnessCountComment = base.Columns["OwnIncidentAndIllnessCountComment"];
                this.columnHIPCardUnsafeActsCount = base.Columns["HIPCardUnsafeActsCount"];
                this.columnHIPCardUnsafeActsCountComment = base.Columns["HIPCardUnsafeActsCountComment"];
                this.columnHIPCardNearMissesCount = base.Columns["HIPCardNearMissesCount"];
                this.columnHIPCardNearMissesCountComment = base.Columns["HIPCardNearMissesCountComment"];
                this.columnCrewSafetyMeetingsCount = base.Columns["CrewSafetyMeetingsCount"];
                this.columnCrewSafetyMeetingsCountComment = base.Columns["CrewSafetyMeetingsCountComment"];
                this.columnToolboxMeetingsCount = base.Columns["ToolboxMeetingsCount"];
                this.columnToolboxMeetingsCountComment = base.Columns["ToolboxMeetingsCountComment"];
                this.columnSafetyDrillsCount = base.Columns["SafetyDrillsCount"];
                this.columnSafetyDrillsCountComment = base.Columns["SafetyDrillsCountComment"];
                this.columnSOPDepartmentalInspectionsCount = base.Columns["SOPDepartmentalInspectionsCount"];
                this.columnSOPDepartmentalInspectionsCountComment = base.Columns["SOPDepartmentalInspectionsCountComment"];
                this.columnSOPCrossDepartmentalInspectionsCount = base.Columns["SOPCrossDepartmentalInspectionsCount"];
                this.columnSOPCrossDepartmentalInspectionsCountComment = base.Columns["SOPCrossDepartmentalInspectionsCountComment"];
                this.columnSOPPartyChiefInspectionsCount = base.Columns["SOPPartyChiefInspectionsCount"];
                this.columnSOPPartyChiefInspectionsCountComment = base.Columns["SOPPartyChiefInspectionsCountComment"];
                this.columnAOBComment = base.Columns["AOBComment"];
                this.columnManHours = base.Columns["ManHours"];
                this.columnProjectManHours = base.Columns["ProjectManHours"];
                this.columnYesNoSafetyEventListsRowId = base.Columns["YesNoSafetyEventListsRowId"];
                this.columnrowguid = base.Columns["rowguid"];
                this.columnMasterRowId = base.Columns["MasterRowId"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnDateChanged = base.Columns["DateChanged"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnDateDeleted = base.Columns["DateDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnSwitchFree1 = base.Columns["SwitchFree1"];
                this.columnSwitchFree2 = base.Columns["SwitchFree2"];
                this.columnSwitchFree3 = base.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = base.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = base.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = base.Columns["DateTimeFree3"];
                this.columnTextFree1 = base.Columns["TextFree1"];
                this.columnTextFree2 = base.Columns["TextFree2"];
                this.columnTextFree3 = base.Columns["TextFree3"];
                this.columnIntFree1 = base.Columns["IntFree1"];
                this.columnIntFree2 = base.Columns["IntFree2"];
                this.columnIntFree3 = base.Columns["IntFree3"];
                this.columnnTextFree1 = base.Columns["nTextFree1"];
                this.columnnTextFree2 = base.Columns["nTextFree2"];
                this.columnnTextFree3 = base.Columns["nTextFree3"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDailyEmployeeCountRowId = new System.Data.DataColumn("DailyEmployeeCountRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDailyEmployeeCountRowId);
                this.columnDailyEmployeeCountReferenceId = new System.Data.DataColumn("DailyEmployeeCountReferenceId", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDailyEmployeeCountReferenceId);
                this.columnLocationOfWork = new System.Data.DataColumn("LocationOfWork", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationOfWork);
                this.columnReportDate = new System.Data.DataColumn("ReportDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportDate);
                this.columnComment = new System.Data.DataColumn("Comment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnSeismicPersonnelCount = new System.Data.DataColumn("SeismicPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeismicPersonnelCount);
                this.columnMarinePersonnelCount = new System.Data.DataColumn("MarinePersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarinePersonnelCount);
                this.columnThirdPartyPersonnelCount = new System.Data.DataColumn("ThirdPartyPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnThirdPartyPersonnelCount);
                this.columnOfficePersonnelCount = new System.Data.DataColumn("OfficePersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficePersonnelCount);
                this.columnClientPersonnelCount = new System.Data.DataColumn("ClientPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientPersonnelCount);
                this.columnDailyEmployeeCountComment = new System.Data.DataColumn("DailyEmployeeCountComment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDailyEmployeeCountComment);
                this.columnCetaceansCount = new System.Data.DataColumn("CetaceansCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCetaceansCount);
                this.columnCetaceansCountComment = new System.Data.DataColumn("CetaceansCountComment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCetaceansCountComment);
                this.columnCrewBoatActivitiesCount = new System.Data.DataColumn("CrewBoatActivitiesCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrewBoatActivitiesCount);
                this.columnCrewBoatActivitiesCountComment = new System.Data.DataColumn("CrewBoatActivitiesCountComment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrewBoatActivitiesCountComment);
                this.columnMaritimeIcidentAndIllnessCount = new System.Data.DataColumn("MaritimeIcidentAndIllnessCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritimeIcidentAndIllnessCount);
                this.columnMaritimeIcidentAndIllnessCountComment = new System.Data.DataColumn("MaritimeIcidentAndIllnessCountComment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritimeIcidentAndIllnessCountComment);
                this.columnOwnIncidentAndIllnessCount = new System.Data.DataColumn("OwnIncidentAndIllnessCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnIncidentAndIllnessCount);
                this.columnOwnIncidentAndIllnessCountComment = new System.Data.DataColumn("OwnIncidentAndIllnessCountComment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnIncidentAndIllnessCountComment);
                this.columnHIPCardUnsafeActsCount = new System.Data.DataColumn("HIPCardUnsafeActsCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIPCardUnsafeActsCount);
                this.columnHIPCardUnsafeActsCountComment = new System.Data.DataColumn("HIPCardUnsafeActsCountComment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIPCardUnsafeActsCountComment);
                this.columnHIPCardNearMissesCount = new System.Data.DataColumn("HIPCardNearMissesCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIPCardNearMissesCount);
                this.columnHIPCardNearMissesCountComment = new System.Data.DataColumn("HIPCardNearMissesCountComment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIPCardNearMissesCountComment);
                this.columnCrewSafetyMeetingsCount = new System.Data.DataColumn("CrewSafetyMeetingsCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrewSafetyMeetingsCount);
                this.columnCrewSafetyMeetingsCountComment = new System.Data.DataColumn("CrewSafetyMeetingsCountComment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrewSafetyMeetingsCountComment);
                this.columnToolboxMeetingsCount = new System.Data.DataColumn("ToolboxMeetingsCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnToolboxMeetingsCount);
                this.columnToolboxMeetingsCountComment = new System.Data.DataColumn("ToolboxMeetingsCountComment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnToolboxMeetingsCountComment);
                this.columnSafetyDrillsCount = new System.Data.DataColumn("SafetyDrillsCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyDrillsCount);
                this.columnSafetyDrillsCountComment = new System.Data.DataColumn("SafetyDrillsCountComment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyDrillsCountComment);
                this.columnSOPDepartmentalInspectionsCount = new System.Data.DataColumn("SOPDepartmentalInspectionsCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPDepartmentalInspectionsCount);
                this.columnSOPDepartmentalInspectionsCountComment = new System.Data.DataColumn("SOPDepartmentalInspectionsCountComment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPDepartmentalInspectionsCountComment);
                this.columnSOPCrossDepartmentalInspectionsCount = new System.Data.DataColumn("SOPCrossDepartmentalInspectionsCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPCrossDepartmentalInspectionsCount);
                this.columnSOPCrossDepartmentalInspectionsCountComment = new System.Data.DataColumn("SOPCrossDepartmentalInspectionsCountComment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPCrossDepartmentalInspectionsCountComment);
                this.columnSOPPartyChiefInspectionsCount = new System.Data.DataColumn("SOPPartyChiefInspectionsCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPPartyChiefInspectionsCount);
                this.columnSOPPartyChiefInspectionsCountComment = new System.Data.DataColumn("SOPPartyChiefInspectionsCountComment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPPartyChiefInspectionsCountComment);
                this.columnAOBComment = new System.Data.DataColumn("AOBComment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAOBComment);
                this.columnManHours = new System.Data.DataColumn("ManHours", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManHours);
                this.columnProjectManHours = new System.Data.DataColumn("ProjectManHours", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectManHours);
                this.columnYesNoSafetyEventListsRowId = new System.Data.DataColumn("YesNoSafetyEventListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnYesNoSafetyEventListsRowId);
                this.columnrowguid = new System.Data.DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowguid);
                this.columnMasterRowId = new System.Data.DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new System.Data.DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new System.Data.DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new System.Data.DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new System.Data.DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new System.Data.DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new System.Data.DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new System.Data.DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new System.Data.DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new System.Data.DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new System.Data.DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new System.Data.DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new System.Data.DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new System.Data.DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new System.Data.DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new System.Data.DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new System.Data.DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new System.Data.DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new System.Data.DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree3);
                this.columnnTextFree1 = new System.Data.DataColumn("nTextFree1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree1);
                this.columnnTextFree2 = new System.Data.DataColumn("nTextFree2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree2);
                this.columnnTextFree3 = new System.Data.DataColumn("nTextFree3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree3);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnDailyEmployeeCountRowId}, true));
                this.columnDailyEmployeeCountRowId.AutoIncrement = true;
                this.columnDailyEmployeeCountRowId.AllowDBNull = false;
                this.columnDailyEmployeeCountRowId.ReadOnly = true;
                this.columnDailyEmployeeCountRowId.Unique = true;
                this.columnDailyEmployeeCountReferenceId.MaxLength = 50;
                this.columnLocationOfWork.MaxLength = 50;
                this.columnComment.MaxLength = 1073741823;
                this.columnDailyEmployeeCountComment.MaxLength = 1073741823;
                this.columnCetaceansCountComment.MaxLength = 1073741823;
                this.columnCrewBoatActivitiesCountComment.MaxLength = 1073741823;
                this.columnMaritimeIcidentAndIllnessCountComment.MaxLength = 1073741823;
                this.columnOwnIncidentAndIllnessCountComment.MaxLength = 1073741823;
                this.columnHIPCardUnsafeActsCountComment.MaxLength = 1073741823;
                this.columnHIPCardNearMissesCountComment.MaxLength = 1073741823;
                this.columnCrewSafetyMeetingsCountComment.MaxLength = 1073741823;
                this.columnToolboxMeetingsCountComment.MaxLength = 1073741823;
                this.columnSafetyDrillsCountComment.MaxLength = 1073741823;
                this.columnSOPDepartmentalInspectionsCountComment.MaxLength = 1073741823;
                this.columnSOPCrossDepartmentalInspectionsCountComment.MaxLength = 1073741823;
                this.columnSOPPartyChiefInspectionsCountComment.MaxLength = 1073741823;
                this.columnAOBComment.MaxLength = 1073741823;
                this.columnTextFree1.MaxLength = 200;
                this.columnTextFree2.MaxLength = 200;
                this.columnTextFree3.MaxLength = 200;
                this.columnnTextFree1.MaxLength = 1073741823;
                this.columnnTextFree2.MaxLength = 1073741823;
                this.columnnTextFree3.MaxLength = 1073741823;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADailyEmployeeCountRow NewGADailyEmployeeCountRow() {
                return ((GADailyEmployeeCountRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new GADailyEmployeeCountRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(GADailyEmployeeCountRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GADailyEmployeeCountRowChanged != null)) {
                    this.GADailyEmployeeCountRowChanged(this, new GADailyEmployeeCountRowChangeEvent(((GADailyEmployeeCountRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GADailyEmployeeCountRowChanging != null)) {
                    this.GADailyEmployeeCountRowChanging(this, new GADailyEmployeeCountRowChangeEvent(((GADailyEmployeeCountRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GADailyEmployeeCountRowDeleted != null)) {
                    this.GADailyEmployeeCountRowDeleted(this, new GADailyEmployeeCountRowChangeEvent(((GADailyEmployeeCountRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GADailyEmployeeCountRowDeleting != null)) {
                    this.GADailyEmployeeCountRowDeleting(this, new GADailyEmployeeCountRowChangeEvent(((GADailyEmployeeCountRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGADailyEmployeeCountRow(GADailyEmployeeCountRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DailyEmployeeCountDS ds = new DailyEmployeeCountDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GADailyEmployeeCountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GADailyEmployeeCountRow : System.Data.DataRow {
            
            private GADailyEmployeeCountDataTable tableGADailyEmployeeCount;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GADailyEmployeeCountRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGADailyEmployeeCount = ((GADailyEmployeeCountDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DailyEmployeeCountRowId {
                get {
                    return ((int)(this[this.tableGADailyEmployeeCount.DailyEmployeeCountRowIdColumn]));
                }
                set {
                    this[this.tableGADailyEmployeeCount.DailyEmployeeCountRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DailyEmployeeCountReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.DailyEmployeeCountReferenceIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DailyEmployeeCountReferenceId\' in table \'GADailyEmployeeCou" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DailyEmployeeCountReferenceIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocationOfWork {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.LocationOfWorkColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LocationOfWork\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.LocationOfWorkColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReportDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADailyEmployeeCount.ReportDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ReportDate\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.ReportDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.CommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Comment\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.CommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SeismicPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.SeismicPersonnelCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SeismicPersonnelCount\' in table \'GADailyEmployeeCount\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SeismicPersonnelCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MarinePersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.MarinePersonnelCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MarinePersonnelCount\' in table \'GADailyEmployeeCount\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.MarinePersonnelCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ThirdPartyPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.ThirdPartyPersonnelCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ThirdPartyPersonnelCount\' in table \'GADailyEmployeeCount\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.ThirdPartyPersonnelCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OfficePersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.OfficePersonnelCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OfficePersonnelCount\' in table \'GADailyEmployeeCount\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.OfficePersonnelCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.ClientPersonnelCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ClientPersonnelCount\' in table \'GADailyEmployeeCount\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.ClientPersonnelCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DailyEmployeeCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.DailyEmployeeCountCommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DailyEmployeeCountComment\' in table \'GADailyEmployeeCount\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DailyEmployeeCountCommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CetaceansCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.CetaceansCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CetaceansCount\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.CetaceansCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CetaceansCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.CetaceansCountCommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CetaceansCountComment\' in table \'GADailyEmployeeCount\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.CetaceansCountCommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CrewBoatActivitiesCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.CrewBoatActivitiesCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CrewBoatActivitiesCount\' in table \'GADailyEmployeeCount\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.CrewBoatActivitiesCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CrewBoatActivitiesCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.CrewBoatActivitiesCountCommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CrewBoatActivitiesCountComment\' in table \'GADailyEmployeeCo" +
                                "unt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.CrewBoatActivitiesCountCommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaritimeIcidentAndIllnessCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.MaritimeIcidentAndIllnessCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MaritimeIcidentAndIllnessCount\' in table \'GADailyEmployeeCo" +
                                "unt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.MaritimeIcidentAndIllnessCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaritimeIcidentAndIllnessCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.MaritimeIcidentAndIllnessCountCommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MaritimeIcidentAndIllnessCountComment\' in table \'GADailyEmp" +
                                "loyeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.MaritimeIcidentAndIllnessCountCommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnIncidentAndIllnessCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.OwnIncidentAndIllnessCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OwnIncidentAndIllnessCount\' in table \'GADailyEmployeeCount\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.OwnIncidentAndIllnessCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnIncidentAndIllnessCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.OwnIncidentAndIllnessCountCommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OwnIncidentAndIllnessCountComment\' in table \'GADailyEmploye" +
                                "eCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.OwnIncidentAndIllnessCountCommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HIPCardUnsafeActsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.HIPCardUnsafeActsCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HIPCardUnsafeActsCount\' in table \'GADailyEmployeeCount\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.HIPCardUnsafeActsCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HIPCardUnsafeActsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.HIPCardUnsafeActsCountCommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HIPCardUnsafeActsCountComment\' in table \'GADailyEmployeeCou" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.HIPCardUnsafeActsCountCommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HIPCardNearMissesCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.HIPCardNearMissesCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HIPCardNearMissesCount\' in table \'GADailyEmployeeCount\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.HIPCardNearMissesCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HIPCardNearMissesCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.HIPCardNearMissesCountCommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HIPCardNearMissesCountComment\' in table \'GADailyEmployeeCou" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.HIPCardNearMissesCountCommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CrewSafetyMeetingsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.CrewSafetyMeetingsCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CrewSafetyMeetingsCount\' in table \'GADailyEmployeeCount\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.CrewSafetyMeetingsCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CrewSafetyMeetingsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.CrewSafetyMeetingsCountCommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CrewSafetyMeetingsCountComment\' in table \'GADailyEmployeeCo" +
                                "unt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.CrewSafetyMeetingsCountCommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ToolboxMeetingsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.ToolboxMeetingsCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ToolboxMeetingsCount\' in table \'GADailyEmployeeCount\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.ToolboxMeetingsCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToolboxMeetingsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.ToolboxMeetingsCountCommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ToolboxMeetingsCountComment\' in table \'GADailyEmployeeCount" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.ToolboxMeetingsCountCommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SafetyDrillsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.SafetyDrillsCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SafetyDrillsCount\' in table \'GADailyEmployeeCount\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SafetyDrillsCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SafetyDrillsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.SafetyDrillsCountCommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SafetyDrillsCountComment\' in table \'GADailyEmployeeCount\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SafetyDrillsCountCommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOPDepartmentalInspectionsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.SOPDepartmentalInspectionsCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPDepartmentalInspectionsCount\' in table \'GADailyEmployeeC" +
                                "ount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SOPDepartmentalInspectionsCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOPDepartmentalInspectionsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.SOPDepartmentalInspectionsCountCommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPDepartmentalInspectionsCountComment\' in table \'GADailyEm" +
                                "ployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SOPDepartmentalInspectionsCountCommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOPCrossDepartmentalInspectionsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.SOPCrossDepartmentalInspectionsCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPCrossDepartmentalInspectionsCount\' in table \'GADailyEmpl" +
                                "oyeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SOPCrossDepartmentalInspectionsCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOPCrossDepartmentalInspectionsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.SOPCrossDepartmentalInspectionsCountCommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPCrossDepartmentalInspectionsCountComment\' in table \'GADa" +
                                "ilyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SOPCrossDepartmentalInspectionsCountCommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOPPartyChiefInspectionsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.SOPPartyChiefInspectionsCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPPartyChiefInspectionsCount\' in table \'GADailyEmployeeCou" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SOPPartyChiefInspectionsCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOPPartyChiefInspectionsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.SOPPartyChiefInspectionsCountCommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPPartyChiefInspectionsCountComment\' in table \'GADailyEmpl" +
                                "oyeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SOPPartyChiefInspectionsCountCommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AOBComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.AOBCommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AOBComment\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.AOBCommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ManHours {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.ManHoursColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ManHours\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.ManHoursColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectManHours {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.ProjectManHoursColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ProjectManHours\' in table \'GADailyEmployeeCount\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.ProjectManHoursColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YesNoSafetyEventListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.YesNoSafetyEventListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'YesNoSafetyEventListsRowId\' in table \'GADailyEmployeeCount\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.YesNoSafetyEventListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid rowguid {
                get {
                    try {
                        return ((System.Guid)(this[this.tableGADailyEmployeeCount.rowguidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rowguid\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.rowguidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.MasterRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MasterRowId\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.MasterRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADailyEmployeeCount.DateCreatedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateCreated\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DateCreatedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.CreatedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.CreatedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADailyEmployeeCount.DateChangedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateChanged\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DateChangedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.ChangedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.ChangedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADailyEmployeeCount.DateDeletedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateDeleted\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DateDeletedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.DeletedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DeletedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGADailyEmployeeCount.SwitchFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree1\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SwitchFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGADailyEmployeeCount.SwitchFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree2\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SwitchFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGADailyEmployeeCount.SwitchFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree3\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SwitchFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADailyEmployeeCount.DateTimeFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree1\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DateTimeFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADailyEmployeeCount.DateTimeFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree2\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DateTimeFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADailyEmployeeCount.DateTimeFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree3\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DateTimeFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.TextFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree1\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.TextFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.TextFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree2\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.TextFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.TextFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree3\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.TextFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.IntFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree1\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.IntFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.IntFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree2\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.IntFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.IntFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree3\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.IntFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.nTextFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nTextFree1\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.nTextFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.nTextFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nTextFree2\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.nTextFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.nTextFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nTextFree3\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.nTextFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDailyEmployeeCountReferenceIdNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.DailyEmployeeCountReferenceIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDailyEmployeeCountReferenceIdNull() {
                this[this.tableGADailyEmployeeCount.DailyEmployeeCountReferenceIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationOfWorkNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.LocationOfWorkColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationOfWorkNull() {
                this[this.tableGADailyEmployeeCount.LocationOfWorkColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportDateNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.ReportDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportDateNull() {
                this[this.tableGADailyEmployeeCount.ReportDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.CommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableGADailyEmployeeCount.CommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeismicPersonnelCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SeismicPersonnelCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeismicPersonnelCountNull() {
                this[this.tableGADailyEmployeeCount.SeismicPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarinePersonnelCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.MarinePersonnelCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarinePersonnelCountNull() {
                this[this.tableGADailyEmployeeCount.MarinePersonnelCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThirdPartyPersonnelCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.ThirdPartyPersonnelCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThirdPartyPersonnelCountNull() {
                this[this.tableGADailyEmployeeCount.ThirdPartyPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfficePersonnelCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.OfficePersonnelCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfficePersonnelCountNull() {
                this[this.tableGADailyEmployeeCount.OfficePersonnelCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientPersonnelCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.ClientPersonnelCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientPersonnelCountNull() {
                this[this.tableGADailyEmployeeCount.ClientPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDailyEmployeeCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.DailyEmployeeCountCommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDailyEmployeeCountCommentNull() {
                this[this.tableGADailyEmployeeCount.DailyEmployeeCountCommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCetaceansCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.CetaceansCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCetaceansCountNull() {
                this[this.tableGADailyEmployeeCount.CetaceansCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCetaceansCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.CetaceansCountCommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCetaceansCountCommentNull() {
                this[this.tableGADailyEmployeeCount.CetaceansCountCommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrewBoatActivitiesCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.CrewBoatActivitiesCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrewBoatActivitiesCountNull() {
                this[this.tableGADailyEmployeeCount.CrewBoatActivitiesCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrewBoatActivitiesCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.CrewBoatActivitiesCountCommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrewBoatActivitiesCountCommentNull() {
                this[this.tableGADailyEmployeeCount.CrewBoatActivitiesCountCommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritimeIcidentAndIllnessCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.MaritimeIcidentAndIllnessCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritimeIcidentAndIllnessCountNull() {
                this[this.tableGADailyEmployeeCount.MaritimeIcidentAndIllnessCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritimeIcidentAndIllnessCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.MaritimeIcidentAndIllnessCountCommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritimeIcidentAndIllnessCountCommentNull() {
                this[this.tableGADailyEmployeeCount.MaritimeIcidentAndIllnessCountCommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnIncidentAndIllnessCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.OwnIncidentAndIllnessCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnIncidentAndIllnessCountNull() {
                this[this.tableGADailyEmployeeCount.OwnIncidentAndIllnessCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnIncidentAndIllnessCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.OwnIncidentAndIllnessCountCommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnIncidentAndIllnessCountCommentNull() {
                this[this.tableGADailyEmployeeCount.OwnIncidentAndIllnessCountCommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIPCardUnsafeActsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.HIPCardUnsafeActsCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIPCardUnsafeActsCountNull() {
                this[this.tableGADailyEmployeeCount.HIPCardUnsafeActsCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIPCardUnsafeActsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.HIPCardUnsafeActsCountCommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIPCardUnsafeActsCountCommentNull() {
                this[this.tableGADailyEmployeeCount.HIPCardUnsafeActsCountCommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIPCardNearMissesCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.HIPCardNearMissesCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIPCardNearMissesCountNull() {
                this[this.tableGADailyEmployeeCount.HIPCardNearMissesCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIPCardNearMissesCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.HIPCardNearMissesCountCommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIPCardNearMissesCountCommentNull() {
                this[this.tableGADailyEmployeeCount.HIPCardNearMissesCountCommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrewSafetyMeetingsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.CrewSafetyMeetingsCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrewSafetyMeetingsCountNull() {
                this[this.tableGADailyEmployeeCount.CrewSafetyMeetingsCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrewSafetyMeetingsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.CrewSafetyMeetingsCountCommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrewSafetyMeetingsCountCommentNull() {
                this[this.tableGADailyEmployeeCount.CrewSafetyMeetingsCountCommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToolboxMeetingsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.ToolboxMeetingsCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToolboxMeetingsCountNull() {
                this[this.tableGADailyEmployeeCount.ToolboxMeetingsCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToolboxMeetingsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.ToolboxMeetingsCountCommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToolboxMeetingsCountCommentNull() {
                this[this.tableGADailyEmployeeCount.ToolboxMeetingsCountCommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyDrillsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SafetyDrillsCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyDrillsCountNull() {
                this[this.tableGADailyEmployeeCount.SafetyDrillsCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyDrillsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SafetyDrillsCountCommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyDrillsCountCommentNull() {
                this[this.tableGADailyEmployeeCount.SafetyDrillsCountCommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPDepartmentalInspectionsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SOPDepartmentalInspectionsCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPDepartmentalInspectionsCountNull() {
                this[this.tableGADailyEmployeeCount.SOPDepartmentalInspectionsCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPDepartmentalInspectionsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SOPDepartmentalInspectionsCountCommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPDepartmentalInspectionsCountCommentNull() {
                this[this.tableGADailyEmployeeCount.SOPDepartmentalInspectionsCountCommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPCrossDepartmentalInspectionsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SOPCrossDepartmentalInspectionsCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPCrossDepartmentalInspectionsCountNull() {
                this[this.tableGADailyEmployeeCount.SOPCrossDepartmentalInspectionsCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPCrossDepartmentalInspectionsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SOPCrossDepartmentalInspectionsCountCommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPCrossDepartmentalInspectionsCountCommentNull() {
                this[this.tableGADailyEmployeeCount.SOPCrossDepartmentalInspectionsCountCommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPPartyChiefInspectionsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SOPPartyChiefInspectionsCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPPartyChiefInspectionsCountNull() {
                this[this.tableGADailyEmployeeCount.SOPPartyChiefInspectionsCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPPartyChiefInspectionsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SOPPartyChiefInspectionsCountCommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPPartyChiefInspectionsCountCommentNull() {
                this[this.tableGADailyEmployeeCount.SOPPartyChiefInspectionsCountCommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAOBCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.AOBCommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAOBCommentNull() {
                this[this.tableGADailyEmployeeCount.AOBCommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManHoursNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.ManHoursColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManHoursNull() {
                this[this.tableGADailyEmployeeCount.ManHoursColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectManHoursNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.ProjectManHoursColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectManHoursNull() {
                this[this.tableGADailyEmployeeCount.ProjectManHoursColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYesNoSafetyEventListsRowIdNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.YesNoSafetyEventListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYesNoSafetyEventListsRowIdNull() {
                this[this.tableGADailyEmployeeCount.YesNoSafetyEventListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.rowguidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrowguidNull() {
                this[this.tableGADailyEmployeeCount.rowguidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.MasterRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterRowIdNull() {
                this[this.tableGADailyEmployeeCount.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.DateCreatedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateCreatedNull() {
                this[this.tableGADailyEmployeeCount.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.CreatedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableGADailyEmployeeCount.CreatedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.DateChangedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangedNull() {
                this[this.tableGADailyEmployeeCount.DateChangedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.ChangedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableGADailyEmployeeCount.ChangedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.DateDeletedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateDeletedNull() {
                this[this.tableGADailyEmployeeCount.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.DeletedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableGADailyEmployeeCount.DeletedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.SwitchFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree1Null() {
                this[this.tableGADailyEmployeeCount.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.SwitchFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree2Null() {
                this[this.tableGADailyEmployeeCount.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.SwitchFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree3Null() {
                this[this.tableGADailyEmployeeCount.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.DateTimeFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree1Null() {
                this[this.tableGADailyEmployeeCount.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.DateTimeFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree2Null() {
                this[this.tableGADailyEmployeeCount.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.DateTimeFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree3Null() {
                this[this.tableGADailyEmployeeCount.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.TextFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree1Null() {
                this[this.tableGADailyEmployeeCount.TextFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.TextFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree2Null() {
                this[this.tableGADailyEmployeeCount.TextFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.TextFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree3Null() {
                this[this.tableGADailyEmployeeCount.TextFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.IntFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree1Null() {
                this[this.tableGADailyEmployeeCount.IntFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.IntFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree2Null() {
                this[this.tableGADailyEmployeeCount.IntFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.IntFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree3Null() {
                this[this.tableGADailyEmployeeCount.IntFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree1Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.nTextFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree1Null() {
                this[this.tableGADailyEmployeeCount.nTextFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree2Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.nTextFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree2Null() {
                this[this.tableGADailyEmployeeCount.nTextFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree3Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.nTextFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree3Null() {
                this[this.tableGADailyEmployeeCount.nTextFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GADailyEmployeeCountRowChangeEvent : System.EventArgs {
            
            private GADailyEmployeeCountRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADailyEmployeeCountRowChangeEvent(GADailyEmployeeCountRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADailyEmployeeCountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GASystem.DataModel.DailyEmployeeCountDSTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GADailyEmployeeCountTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GADailyEmployeeCountTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GADailyEmployeeCount";
            tableMapping.ColumnMappings.Add("DailyEmployeeCountRowId", "DailyEmployeeCountRowId");
            tableMapping.ColumnMappings.Add("DailyEmployeeCountReferenceId", "DailyEmployeeCountReferenceId");
            tableMapping.ColumnMappings.Add("LocationOfWork", "LocationOfWork");
            tableMapping.ColumnMappings.Add("ReportDate", "ReportDate");
            tableMapping.ColumnMappings.Add("Comment", "Comment");
            tableMapping.ColumnMappings.Add("SeismicPersonnelCount", "SeismicPersonnelCount");
            tableMapping.ColumnMappings.Add("MarinePersonnelCount", "MarinePersonnelCount");
            tableMapping.ColumnMappings.Add("ThirdPartyPersonnelCount", "ThirdPartyPersonnelCount");
            tableMapping.ColumnMappings.Add("OfficePersonnelCount", "OfficePersonnelCount");
            tableMapping.ColumnMappings.Add("ClientPersonnelCount", "ClientPersonnelCount");
            tableMapping.ColumnMappings.Add("DailyEmployeeCountComment", "DailyEmployeeCountComment");
            tableMapping.ColumnMappings.Add("CetaceansCount", "CetaceansCount");
            tableMapping.ColumnMappings.Add("CetaceansCountComment", "CetaceansCountComment");
            tableMapping.ColumnMappings.Add("CrewBoatActivitiesCount", "CrewBoatActivitiesCount");
            tableMapping.ColumnMappings.Add("CrewBoatActivitiesCountComment", "CrewBoatActivitiesCountComment");
            tableMapping.ColumnMappings.Add("MaritimeIcidentAndIllnessCount", "MaritimeIcidentAndIllnessCount");
            tableMapping.ColumnMappings.Add("MaritimeIcidentAndIllnessCountComment", "MaritimeIcidentAndIllnessCountComment");
            tableMapping.ColumnMappings.Add("OwnIncidentAndIllnessCount", "OwnIncidentAndIllnessCount");
            tableMapping.ColumnMappings.Add("OwnIncidentAndIllnessCountComment", "OwnIncidentAndIllnessCountComment");
            tableMapping.ColumnMappings.Add("HIPCardUnsafeActsCount", "HIPCardUnsafeActsCount");
            tableMapping.ColumnMappings.Add("HIPCardUnsafeActsCountComment", "HIPCardUnsafeActsCountComment");
            tableMapping.ColumnMappings.Add("HIPCardNearMissesCount", "HIPCardNearMissesCount");
            tableMapping.ColumnMappings.Add("HIPCardNearMissesCountComment", "HIPCardNearMissesCountComment");
            tableMapping.ColumnMappings.Add("CrewSafetyMeetingsCount", "CrewSafetyMeetingsCount");
            tableMapping.ColumnMappings.Add("CrewSafetyMeetingsCountComment", "CrewSafetyMeetingsCountComment");
            tableMapping.ColumnMappings.Add("ToolboxMeetingsCount", "ToolboxMeetingsCount");
            tableMapping.ColumnMappings.Add("ToolboxMeetingsCountComment", "ToolboxMeetingsCountComment");
            tableMapping.ColumnMappings.Add("SafetyDrillsCount", "SafetyDrillsCount");
            tableMapping.ColumnMappings.Add("SafetyDrillsCountComment", "SafetyDrillsCountComment");
            tableMapping.ColumnMappings.Add("SOPDepartmentalInspectionsCount", "SOPDepartmentalInspectionsCount");
            tableMapping.ColumnMappings.Add("SOPDepartmentalInspectionsCountComment", "SOPDepartmentalInspectionsCountComment");
            tableMapping.ColumnMappings.Add("SOPCrossDepartmentalInspectionsCount", "SOPCrossDepartmentalInspectionsCount");
            tableMapping.ColumnMappings.Add("SOPCrossDepartmentalInspectionsCountComment", "SOPCrossDepartmentalInspectionsCountComment");
            tableMapping.ColumnMappings.Add("SOPPartyChiefInspectionsCount", "SOPPartyChiefInspectionsCount");
            tableMapping.ColumnMappings.Add("SOPPartyChiefInspectionsCountComment", "SOPPartyChiefInspectionsCountComment");
            tableMapping.ColumnMappings.Add("AOBComment", "AOBComment");
            tableMapping.ColumnMappings.Add("ManHours", "ManHours");
            tableMapping.ColumnMappings.Add("ProjectManHours", "ProjectManHours");
            tableMapping.ColumnMappings.Add("YesNoSafetyEventListsRowId", "YesNoSafetyEventListsRowId");
            tableMapping.ColumnMappings.Add("rowguid", "rowguid");
            tableMapping.ColumnMappings.Add("MasterRowId", "MasterRowId");
            tableMapping.ColumnMappings.Add("DateCreated", "DateCreated");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("DateChanged", "DateChanged");
            tableMapping.ColumnMappings.Add("ChangedBy", "ChangedBy");
            tableMapping.ColumnMappings.Add("DateDeleted", "DateDeleted");
            tableMapping.ColumnMappings.Add("DeletedBy", "DeletedBy");
            tableMapping.ColumnMappings.Add("SwitchFree1", "SwitchFree1");
            tableMapping.ColumnMappings.Add("SwitchFree2", "SwitchFree2");
            tableMapping.ColumnMappings.Add("SwitchFree3", "SwitchFree3");
            tableMapping.ColumnMappings.Add("DateTimeFree1", "DateTimeFree1");
            tableMapping.ColumnMappings.Add("DateTimeFree2", "DateTimeFree2");
            tableMapping.ColumnMappings.Add("DateTimeFree3", "DateTimeFree3");
            tableMapping.ColumnMappings.Add("TextFree1", "TextFree1");
            tableMapping.ColumnMappings.Add("TextFree2", "TextFree2");
            tableMapping.ColumnMappings.Add("TextFree3", "TextFree3");
            tableMapping.ColumnMappings.Add("IntFree1", "IntFree1");
            tableMapping.ColumnMappings.Add("IntFree2", "IntFree2");
            tableMapping.ColumnMappings.Add("IntFree3", "IntFree3");
            tableMapping.ColumnMappings.Add("nTextFree1", "nTextFree1");
            tableMapping.ColumnMappings.Add("nTextFree2", "nTextFree2");
            tableMapping.ColumnMappings.Add("nTextFree3", "nTextFree3");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[GADailyEmployeeCount] WHERE (([DailyEmployeeCountRowId] = @Ori" +
                "ginal_DailyEmployeeCountRowId) AND ((@IsNull_DailyEmployeeCountReferenceId = 1 A" +
                "ND [DailyEmployeeCountReferenceId] IS NULL) OR ([DailyEmployeeCountReferenceId] " +
                "= @Original_DailyEmployeeCountReferenceId)) AND ((@IsNull_LocationOfWork = 1 AND" +
                " [LocationOfWork] IS NULL) OR ([LocationOfWork] = @Original_LocationOfWork)) AND" +
                " ((@IsNull_ReportDate = 1 AND [ReportDate] IS NULL) OR ([ReportDate] = @Original" +
                "_ReportDate)) AND ((@IsNull_SeismicPersonnelCount = 1 AND [SeismicPersonnelCount" +
                "] IS NULL) OR ([SeismicPersonnelCount] = @Original_SeismicPersonnelCount)) AND (" +
                "(@IsNull_MarinePersonnelCount = 1 AND [MarinePersonnelCount] IS NULL) OR ([Marin" +
                "ePersonnelCount] = @Original_MarinePersonnelCount)) AND ((@IsNull_ThirdPartyPers" +
                "onnelCount = 1 AND [ThirdPartyPersonnelCount] IS NULL) OR ([ThirdPartyPersonnelC" +
                "ount] = @Original_ThirdPartyPersonnelCount)) AND ((@IsNull_OfficePersonnelCount " +
                "= 1 AND [OfficePersonnelCount] IS NULL) OR ([OfficePersonnelCount] = @Original_O" +
                "fficePersonnelCount)) AND ((@IsNull_ClientPersonnelCount = 1 AND [ClientPersonne" +
                "lCount] IS NULL) OR ([ClientPersonnelCount] = @Original_ClientPersonnelCount)) A" +
                "ND ((@IsNull_CetaceansCount = 1 AND [CetaceansCount] IS NULL) OR ([CetaceansCoun" +
                "t] = @Original_CetaceansCount)) AND ((@IsNull_CrewBoatActivitiesCount = 1 AND [C" +
                "rewBoatActivitiesCount] IS NULL) OR ([CrewBoatActivitiesCount] = @Original_CrewB" +
                "oatActivitiesCount)) AND ((@IsNull_MaritimeIcidentAndIllnessCount = 1 AND [Marit" +
                "imeIcidentAndIllnessCount] IS NULL) OR ([MaritimeIcidentAndIllnessCount] = @Orig" +
                "inal_MaritimeIcidentAndIllnessCount)) AND ((@IsNull_OwnIncidentAndIllnessCount =" +
                " 1 AND [OwnIncidentAndIllnessCount] IS NULL) OR ([OwnIncidentAndIllnessCount] = " +
                "@Original_OwnIncidentAndIllnessCount)) AND ((@IsNull_HIPCardUnsafeActsCount = 1 " +
                "AND [HIPCardUnsafeActsCount] IS NULL) OR ([HIPCardUnsafeActsCount] = @Original_H" +
                "IPCardUnsafeActsCount)) AND ((@IsNull_HIPCardNearMissesCount = 1 AND [HIPCardNea" +
                "rMissesCount] IS NULL) OR ([HIPCardNearMissesCount] = @Original_HIPCardNearMisse" +
                "sCount)) AND ((@IsNull_CrewSafetyMeetingsCount = 1 AND [CrewSafetyMeetingsCount]" +
                " IS NULL) OR ([CrewSafetyMeetingsCount] = @Original_CrewSafetyMeetingsCount)) AN" +
                "D ((@IsNull_ToolboxMeetingsCount = 1 AND [ToolboxMeetingsCount] IS NULL) OR ([To" +
                "olboxMeetingsCount] = @Original_ToolboxMeetingsCount)) AND ((@IsNull_SafetyDrill" +
                "sCount = 1 AND [SafetyDrillsCount] IS NULL) OR ([SafetyDrillsCount] = @Original_" +
                "SafetyDrillsCount)) AND ((@IsNull_SOPDepartmentalInspectionsCount = 1 AND [SOPDe" +
                "partmentalInspectionsCount] IS NULL) OR ([SOPDepartmentalInspectionsCount] = @Or" +
                "iginal_SOPDepartmentalInspectionsCount)) AND ((@IsNull_SOPCrossDepartmentalInspe" +
                "ctionsCount = 1 AND [SOPCrossDepartmentalInspectionsCount] IS NULL) OR ([SOPCros" +
                "sDepartmentalInspectionsCount] = @Original_SOPCrossDepartmentalInspectionsCount)" +
                ") AND ((@IsNull_SOPPartyChiefInspectionsCount = 1 AND [SOPPartyChiefInspectionsC" +
                "ount] IS NULL) OR ([SOPPartyChiefInspectionsCount] = @Original_SOPPartyChiefInsp" +
                "ectionsCount)) AND ((@IsNull_ManHours = 1 AND [ManHours] IS NULL) OR ([ManHours]" +
                " = @Original_ManHours)) AND ((@IsNull_ProjectManHours = 1 AND [ProjectManHours] " +
                "IS NULL) OR ([ProjectManHours] = @Original_ProjectManHours)) AND ((@IsNull_YesNo" +
                "SafetyEventListsRowId = 1 AND [YesNoSafetyEventListsRowId] IS NULL) OR ([YesNoSa" +
                "fetyEventListsRowId] = @Original_YesNoSafetyEventListsRowId)) AND ([rowguid] = @" +
                "Original_rowguid) AND ((@IsNull_MasterRowId = 1 AND [MasterRowId] IS NULL) OR ([" +
                "MasterRowId] = @Original_MasterRowId)) AND ((@IsNull_DateCreated = 1 AND [DateCr" +
                "eated] IS NULL) OR ([DateCreated] = @Original_DateCreated)) AND ((@IsNull_Create" +
                "dBy = 1 AND [CreatedBy] IS NULL) OR ([CreatedBy] = @Original_CreatedBy)) AND ((@" +
                "IsNull_DateChanged = 1 AND [DateChanged] IS NULL) OR ([DateChanged] = @Original_" +
                "DateChanged)) AND ((@IsNull_ChangedBy = 1 AND [ChangedBy] IS NULL) OR ([ChangedB" +
                "y] = @Original_ChangedBy)) AND ((@IsNull_DateDeleted = 1 AND [DateDeleted] IS NU" +
                "LL) OR ([DateDeleted] = @Original_DateDeleted)) AND ((@IsNull_DeletedBy = 1 AND " +
                "[DeletedBy] IS NULL) OR ([DeletedBy] = @Original_DeletedBy)) AND ((@IsNull_Switc" +
                "hFree1 = 1 AND [SwitchFree1] IS NULL) OR ([SwitchFree1] = @Original_SwitchFree1)" +
                ") AND ((@IsNull_SwitchFree2 = 1 AND [SwitchFree2] IS NULL) OR ([SwitchFree2] = @" +
                "Original_SwitchFree2)) AND ((@IsNull_SwitchFree3 = 1 AND [SwitchFree3] IS NULL) " +
                "OR ([SwitchFree3] = @Original_SwitchFree3)) AND ((@IsNull_DateTimeFree1 = 1 AND " +
                "[DateTimeFree1] IS NULL) OR ([DateTimeFree1] = @Original_DateTimeFree1)) AND ((@" +
                "IsNull_DateTimeFree2 = 1 AND [DateTimeFree2] IS NULL) OR ([DateTimeFree2] = @Ori" +
                "ginal_DateTimeFree2)) AND ((@IsNull_DateTimeFree3 = 1 AND [DateTimeFree3] IS NUL" +
                "L) OR ([DateTimeFree3] = @Original_DateTimeFree3)) AND ((@IsNull_TextFree1 = 1 A" +
                "ND [TextFree1] IS NULL) OR ([TextFree1] = @Original_TextFree1)) AND ((@IsNull_Te" +
                "xtFree2 = 1 AND [TextFree2] IS NULL) OR ([TextFree2] = @Original_TextFree2)) AND" +
                " ((@IsNull_TextFree3 = 1 AND [TextFree3] IS NULL) OR ([TextFree3] = @Original_Te" +
                "xtFree3)) AND ((@IsNull_IntFree1 = 1 AND [IntFree1] IS NULL) OR ([IntFree1] = @O" +
                "riginal_IntFree1)) AND ((@IsNull_IntFree2 = 1 AND [IntFree2] IS NULL) OR ([IntFr" +
                "ee2] = @Original_IntFree2)) AND ((@IsNull_IntFree3 = 1 AND [IntFree3] IS NULL) O" +
                "R ([IntFree3] = @Original_IntFree3)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DailyEmployeeCountRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DailyEmployeeCountRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DailyEmployeeCountReferenceId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DailyEmployeeCountReferenceId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DailyEmployeeCountReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DailyEmployeeCountReferenceId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LocationOfWork", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LocationOfWork", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LocationOfWork", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LocationOfWork", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ReportDate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ReportDate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ReportDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ReportDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SeismicPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SeismicPersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SeismicPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SeismicPersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MarinePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MarinePersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MarinePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MarinePersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ThirdPartyPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ThirdPartyPersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ThirdPartyPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ThirdPartyPersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OfficePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OfficePersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OfficePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OfficePersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ClientPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ClientPersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ClientPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ClientPersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CetaceansCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CetaceansCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CetaceansCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CetaceansCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CrewBoatActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewBoatActivitiesCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CrewBoatActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewBoatActivitiesCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MaritimeIcidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MaritimeIcidentAndIllnessCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaritimeIcidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MaritimeIcidentAndIllnessCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OwnIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OwnIncidentAndIllnessCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OwnIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OwnIncidentAndIllnessCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HIPCardUnsafeActsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardUnsafeActsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HIPCardUnsafeActsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardUnsafeActsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HIPCardNearMissesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardNearMissesCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HIPCardNearMissesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardNearMissesCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CrewSafetyMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewSafetyMeetingsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CrewSafetyMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewSafetyMeetingsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ToolboxMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ToolboxMeetingsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ToolboxMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ToolboxMeetingsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SafetyDrillsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyDrillsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SafetyDrillsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyDrillsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPDepartmentalInspectionsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPDepartmentalInspectionsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPCrossDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPCrossDepartmentalInspectionsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPCrossDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPCrossDepartmentalInspectionsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPPartyChiefInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPartyChiefInspectionsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPPartyChiefInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPartyChiefInspectionsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManHours", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManHours", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ProjectManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectManHours", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ProjectManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectManHours", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_YesNoSafetyEventListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "YesNoSafetyEventListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_YesNoSafetyEventListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "YesNoSafetyEventListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateCreated", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChanged", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateDeleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[GADailyEmployeeCount] ([DailyEmployeeCountReferenceId], [Locat" +
                "ionOfWork], [ReportDate], [Comment], [SeismicPersonnelCount], [MarinePersonnelCo" +
                "unt], [ThirdPartyPersonnelCount], [OfficePersonnelCount], [ClientPersonnelCount]" +
                ", [DailyEmployeeCountComment], [CetaceansCount], [CetaceansCountComment], [CrewB" +
                "oatActivitiesCount], [CrewBoatActivitiesCountComment], [MaritimeIcidentAndIllnes" +
                "sCount], [MaritimeIcidentAndIllnessCountComment], [OwnIncidentAndIllnessCount], " +
                "[OwnIncidentAndIllnessCountComment], [HIPCardUnsafeActsCount], [HIPCardUnsafeAct" +
                "sCountComment], [HIPCardNearMissesCount], [HIPCardNearMissesCountComment], [Crew" +
                "SafetyMeetingsCount], [CrewSafetyMeetingsCountComment], [ToolboxMeetingsCount], " +
                "[ToolboxMeetingsCountComment], [SafetyDrillsCount], [SafetyDrillsCountComment], " +
                "[SOPDepartmentalInspectionsCount], [SOPDepartmentalInspectionsCountComment], [SO" +
                "PCrossDepartmentalInspectionsCount], [SOPCrossDepartmentalInspectionsCountCommen" +
                "t], [SOPPartyChiefInspectionsCount], [SOPPartyChiefInspectionsCountComment], [AO" +
                "BComment], [ManHours], [ProjectManHours], [YesNoSafetyEventListsRowId], [rowguid" +
                "], [MasterRowId], [DateCreated], [CreatedBy], [DateChanged], [ChangedBy], [DateD" +
                "eleted], [DeletedBy], [SwitchFree1], [SwitchFree2], [SwitchFree3], [DateTimeFree" +
                "1], [DateTimeFree2], [DateTimeFree3], [TextFree1], [TextFree2], [TextFree3], [In" +
                "tFree1], [IntFree2], [IntFree3], [nTextFree1], [nTextFree2], [nTextFree3]) VALUE" +
                "S (@DailyEmployeeCountReferenceId, @LocationOfWork, @ReportDate, @Comment, @Seis" +
                "micPersonnelCount, @MarinePersonnelCount, @ThirdPartyPersonnelCount, @OfficePers" +
                "onnelCount, @ClientPersonnelCount, @DailyEmployeeCountComment, @CetaceansCount, " +
                "@CetaceansCountComment, @CrewBoatActivitiesCount, @CrewBoatActivitiesCountCommen" +
                "t, @MaritimeIcidentAndIllnessCount, @MaritimeIcidentAndIllnessCountComment, @Own" +
                "IncidentAndIllnessCount, @OwnIncidentAndIllnessCountComment, @HIPCardUnsafeActsC" +
                "ount, @HIPCardUnsafeActsCountComment, @HIPCardNearMissesCount, @HIPCardNearMisse" +
                "sCountComment, @CrewSafetyMeetingsCount, @CrewSafetyMeetingsCountComment, @Toolb" +
                "oxMeetingsCount, @ToolboxMeetingsCountComment, @SafetyDrillsCount, @SafetyDrills" +
                "CountComment, @SOPDepartmentalInspectionsCount, @SOPDepartmentalInspectionsCount" +
                "Comment, @SOPCrossDepartmentalInspectionsCount, @SOPCrossDepartmentalInspections" +
                "CountComment, @SOPPartyChiefInspectionsCount, @SOPPartyChiefInspectionsCountComm" +
                "ent, @AOBComment, @ManHours, @ProjectManHours, @YesNoSafetyEventListsRowId, @row" +
                "guid, @MasterRowId, @DateCreated, @CreatedBy, @DateChanged, @ChangedBy, @DateDel" +
                "eted, @DeletedBy, @SwitchFree1, @SwitchFree2, @SwitchFree3, @DateTimeFree1, @Dat" +
                "eTimeFree2, @DateTimeFree3, @TextFree1, @TextFree2, @TextFree3, @IntFree1, @IntF" +
                "ree2, @IntFree3, @nTextFree1, @nTextFree2, @nTextFree3);\r\nSELECT DailyEmployeeCo" +
                "untRowId, DailyEmployeeCountReferenceId, LocationOfWork, ReportDate, Comment, Se" +
                "ismicPersonnelCount, MarinePersonnelCount, ThirdPartyPersonnelCount, OfficePerso" +
                "nnelCount, ClientPersonnelCount, DailyEmployeeCountComment, CetaceansCount, Ceta" +
                "ceansCountComment, CrewBoatActivitiesCount, CrewBoatActivitiesCountComment, Mari" +
                "timeIcidentAndIllnessCount, MaritimeIcidentAndIllnessCountComment, OwnIncidentAn" +
                "dIllnessCount, OwnIncidentAndIllnessCountComment, HIPCardUnsafeActsCount, HIPCar" +
                "dUnsafeActsCountComment, HIPCardNearMissesCount, HIPCardNearMissesCountComment, " +
                "CrewSafetyMeetingsCount, CrewSafetyMeetingsCountComment, ToolboxMeetingsCount, T" +
                "oolboxMeetingsCountComment, SafetyDrillsCount, SafetyDrillsCountComment, SOPDepa" +
                "rtmentalInspectionsCount, SOPDepartmentalInspectionsCountComment, SOPCrossDepart" +
                "mentalInspectionsCount, SOPCrossDepartmentalInspectionsCountComment, SOPPartyChi" +
                "efInspectionsCount, SOPPartyChiefInspectionsCountComment, AOBComment, ManHours, " +
                "ProjectManHours, YesNoSafetyEventListsRowId, rowguid, MasterRowId, DateCreated, " +
                "CreatedBy, DateChanged, ChangedBy, DateDeleted, DeletedBy, SwitchFree1, SwitchFr" +
                "ee2, SwitchFree3, DateTimeFree1, DateTimeFree2, DateTimeFree3, TextFree1, TextFr" +
                "ee2, TextFree3, IntFree1, IntFree2, IntFree3, nTextFree1, nTextFree2, nTextFree3" +
                " FROM GADailyEmployeeCount WHERE (DailyEmployeeCountRowId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DailyEmployeeCountReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DailyEmployeeCountReferenceId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LocationOfWork", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LocationOfWork", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ReportDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ReportDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Comment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Comment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SeismicPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SeismicPersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MarinePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MarinePersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ThirdPartyPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ThirdPartyPersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OfficePersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ClientPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ClientPersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DailyEmployeeCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "DailyEmployeeCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CetaceansCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CetaceansCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CetaceansCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "CetaceansCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CrewBoatActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewBoatActivitiesCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CrewBoatActivitiesCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewBoatActivitiesCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaritimeIcidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MaritimeIcidentAndIllnessCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaritimeIcidentAndIllnessCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "MaritimeIcidentAndIllnessCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OwnIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OwnIncidentAndIllnessCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OwnIncidentAndIllnessCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "OwnIncidentAndIllnessCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HIPCardUnsafeActsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardUnsafeActsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HIPCardUnsafeActsCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardUnsafeActsCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HIPCardNearMissesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardNearMissesCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HIPCardNearMissesCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardNearMissesCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CrewSafetyMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewSafetyMeetingsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CrewSafetyMeetingsCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewSafetyMeetingsCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ToolboxMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ToolboxMeetingsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ToolboxMeetingsCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "ToolboxMeetingsCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SafetyDrillsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyDrillsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SafetyDrillsCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyDrillsCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPDepartmentalInspectionsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPDepartmentalInspectionsCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPDepartmentalInspectionsCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPCrossDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPCrossDepartmentalInspectionsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPCrossDepartmentalInspectionsCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPCrossDepartmentalInspectionsCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPPartyChiefInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPartyChiefInspectionsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPPartyChiefInspectionsCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPartyChiefInspectionsCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AOBComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "AOBComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManHours", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ProjectManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectManHours", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@YesNoSafetyEventListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "YesNoSafetyEventListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree1", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree2", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree3", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[GADailyEmployeeCount] SET [DailyEmployeeCountReferenceId] = @DailyE" +
                "mployeeCountReferenceId, [LocationOfWork] = @LocationOfWork, [ReportDate] = @Rep" +
                "ortDate, [Comment] = @Comment, [SeismicPersonnelCount] = @SeismicPersonnelCount," +
                " [MarinePersonnelCount] = @MarinePersonnelCount, [ThirdPartyPersonnelCount] = @T" +
                "hirdPartyPersonnelCount, [OfficePersonnelCount] = @OfficePersonnelCount, [Client" +
                "PersonnelCount] = @ClientPersonnelCount, [DailyEmployeeCountComment] = @DailyEmp" +
                "loyeeCountComment, [CetaceansCount] = @CetaceansCount, [CetaceansCountComment] =" +
                " @CetaceansCountComment, [CrewBoatActivitiesCount] = @CrewBoatActivitiesCount, [" +
                "CrewBoatActivitiesCountComment] = @CrewBoatActivitiesCountComment, [MaritimeIcid" +
                "entAndIllnessCount] = @MaritimeIcidentAndIllnessCount, [MaritimeIcidentAndIllnes" +
                "sCountComment] = @MaritimeIcidentAndIllnessCountComment, [OwnIncidentAndIllnessC" +
                "ount] = @OwnIncidentAndIllnessCount, [OwnIncidentAndIllnessCountComment] = @OwnI" +
                "ncidentAndIllnessCountComment, [HIPCardUnsafeActsCount] = @HIPCardUnsafeActsCoun" +
                "t, [HIPCardUnsafeActsCountComment] = @HIPCardUnsafeActsCountComment, [HIPCardNea" +
                "rMissesCount] = @HIPCardNearMissesCount, [HIPCardNearMissesCountComment] = @HIPC" +
                "ardNearMissesCountComment, [CrewSafetyMeetingsCount] = @CrewSafetyMeetingsCount," +
                " [CrewSafetyMeetingsCountComment] = @CrewSafetyMeetingsCountComment, [ToolboxMee" +
                "tingsCount] = @ToolboxMeetingsCount, [ToolboxMeetingsCountComment] = @ToolboxMee" +
                "tingsCountComment, [SafetyDrillsCount] = @SafetyDrillsCount, [SafetyDrillsCountC" +
                "omment] = @SafetyDrillsCountComment, [SOPDepartmentalInspectionsCount] = @SOPDep" +
                "artmentalInspectionsCount, [SOPDepartmentalInspectionsCountComment] = @SOPDepart" +
                "mentalInspectionsCountComment, [SOPCrossDepartmentalInspectionsCount] = @SOPCros" +
                "sDepartmentalInspectionsCount, [SOPCrossDepartmentalInspectionsCountComment] = @" +
                "SOPCrossDepartmentalInspectionsCountComment, [SOPPartyChiefInspectionsCount] = @" +
                "SOPPartyChiefInspectionsCount, [SOPPartyChiefInspectionsCountComment] = @SOPPart" +
                "yChiefInspectionsCountComment, [AOBComment] = @AOBComment, [ManHours] = @ManHour" +
                "s, [ProjectManHours] = @ProjectManHours, [YesNoSafetyEventListsRowId] = @YesNoSa" +
                "fetyEventListsRowId, [rowguid] = @rowguid, [MasterRowId] = @MasterRowId, [DateCr" +
                "eated] = @DateCreated, [CreatedBy] = @CreatedBy, [DateChanged] = @DateChanged, [" +
                "ChangedBy] = @ChangedBy, [DateDeleted] = @DateDeleted, [DeletedBy] = @DeletedBy," +
                " [SwitchFree1] = @SwitchFree1, [SwitchFree2] = @SwitchFree2, [SwitchFree3] = @Sw" +
                "itchFree3, [DateTimeFree1] = @DateTimeFree1, [DateTimeFree2] = @DateTimeFree2, [" +
                "DateTimeFree3] = @DateTimeFree3, [TextFree1] = @TextFree1, [TextFree2] = @TextFr" +
                "ee2, [TextFree3] = @TextFree3, [IntFree1] = @IntFree1, [IntFree2] = @IntFree2, [" +
                "IntFree3] = @IntFree3, [nTextFree1] = @nTextFree1, [nTextFree2] = @nTextFree2, [" +
                "nTextFree3] = @nTextFree3 WHERE (([DailyEmployeeCountRowId] = @Original_DailyEmp" +
                "loyeeCountRowId) AND ((@IsNull_DailyEmployeeCountReferenceId = 1 AND [DailyEmplo" +
                "yeeCountReferenceId] IS NULL) OR ([DailyEmployeeCountReferenceId] = @Original_Da" +
                "ilyEmployeeCountReferenceId)) AND ((@IsNull_LocationOfWork = 1 AND [LocationOfWo" +
                "rk] IS NULL) OR ([LocationOfWork] = @Original_LocationOfWork)) AND ((@IsNull_Rep" +
                "ortDate = 1 AND [ReportDate] IS NULL) OR ([ReportDate] = @Original_ReportDate)) " +
                "AND ((@IsNull_SeismicPersonnelCount = 1 AND [SeismicPersonnelCount] IS NULL) OR " +
                "([SeismicPersonnelCount] = @Original_SeismicPersonnelCount)) AND ((@IsNull_Marin" +
                "ePersonnelCount = 1 AND [MarinePersonnelCount] IS NULL) OR ([MarinePersonnelCoun" +
                "t] = @Original_MarinePersonnelCount)) AND ((@IsNull_ThirdPartyPersonnelCount = 1" +
                " AND [ThirdPartyPersonnelCount] IS NULL) OR ([ThirdPartyPersonnelCount] = @Origi" +
                "nal_ThirdPartyPersonnelCount)) AND ((@IsNull_OfficePersonnelCount = 1 AND [Offic" +
                "ePersonnelCount] IS NULL) OR ([OfficePersonnelCount] = @Original_OfficePersonnel" +
                "Count)) AND ((@IsNull_ClientPersonnelCount = 1 AND [ClientPersonnelCount] IS NUL" +
                "L) OR ([ClientPersonnelCount] = @Original_ClientPersonnelCount)) AND ((@IsNull_C" +
                "etaceansCount = 1 AND [CetaceansCount] IS NULL) OR ([CetaceansCount] = @Original" +
                "_CetaceansCount)) AND ((@IsNull_CrewBoatActivitiesCount = 1 AND [CrewBoatActivit" +
                "iesCount] IS NULL) OR ([CrewBoatActivitiesCount] = @Original_CrewBoatActivitiesC" +
                "ount)) AND ((@IsNull_MaritimeIcidentAndIllnessCount = 1 AND [MaritimeIcidentAndI" +
                "llnessCount] IS NULL) OR ([MaritimeIcidentAndIllnessCount] = @Original_MaritimeI" +
                "cidentAndIllnessCount)) AND ((@IsNull_OwnIncidentAndIllnessCount = 1 AND [OwnInc" +
                "identAndIllnessCount] IS NULL) OR ([OwnIncidentAndIllnessCount] = @Original_OwnI" +
                "ncidentAndIllnessCount)) AND ((@IsNull_HIPCardUnsafeActsCount = 1 AND [HIPCardUn" +
                "safeActsCount] IS NULL) OR ([HIPCardUnsafeActsCount] = @Original_HIPCardUnsafeAc" +
                "tsCount)) AND ((@IsNull_HIPCardNearMissesCount = 1 AND [HIPCardNearMissesCount] " +
                "IS NULL) OR ([HIPCardNearMissesCount] = @Original_HIPCardNearMissesCount)) AND (" +
                "(@IsNull_CrewSafetyMeetingsCount = 1 AND [CrewSafetyMeetingsCount] IS NULL) OR (" +
                "[CrewSafetyMeetingsCount] = @Original_CrewSafetyMeetingsCount)) AND ((@IsNull_To" +
                "olboxMeetingsCount = 1 AND [ToolboxMeetingsCount] IS NULL) OR ([ToolboxMeetingsC" +
                "ount] = @Original_ToolboxMeetingsCount)) AND ((@IsNull_SafetyDrillsCount = 1 AND" +
                " [SafetyDrillsCount] IS NULL) OR ([SafetyDrillsCount] = @Original_SafetyDrillsCo" +
                "unt)) AND ((@IsNull_SOPDepartmentalInspectionsCount = 1 AND [SOPDepartmentalInsp" +
                "ectionsCount] IS NULL) OR ([SOPDepartmentalInspectionsCount] = @Original_SOPDepa" +
                "rtmentalInspectionsCount)) AND ((@IsNull_SOPCrossDepartmentalInspectionsCount = " +
                "1 AND [SOPCrossDepartmentalInspectionsCount] IS NULL) OR ([SOPCrossDepartmentalI" +
                "nspectionsCount] = @Original_SOPCrossDepartmentalInspectionsCount)) AND ((@IsNul" +
                "l_SOPPartyChiefInspectionsCount = 1 AND [SOPPartyChiefInspectionsCount] IS NULL)" +
                " OR ([SOPPartyChiefInspectionsCount] = @Original_SOPPartyChiefInspectionsCount))" +
                " AND ((@IsNull_ManHours = 1 AND [ManHours] IS NULL) OR ([ManHours] = @Original_M" +
                "anHours)) AND ((@IsNull_ProjectManHours = 1 AND [ProjectManHours] IS NULL) OR ([" +
                "ProjectManHours] = @Original_ProjectManHours)) AND ((@IsNull_YesNoSafetyEventLis" +
                "tsRowId = 1 AND [YesNoSafetyEventListsRowId] IS NULL) OR ([YesNoSafetyEventLists" +
                "RowId] = @Original_YesNoSafetyEventListsRowId)) AND ([rowguid] = @Original_rowgu" +
                "id) AND ((@IsNull_MasterRowId = 1 AND [MasterRowId] IS NULL) OR ([MasterRowId] =" +
                " @Original_MasterRowId)) AND ((@IsNull_DateCreated = 1 AND [DateCreated] IS NULL" +
                ") OR ([DateCreated] = @Original_DateCreated)) AND ((@IsNull_CreatedBy = 1 AND [C" +
                "reatedBy] IS NULL) OR ([CreatedBy] = @Original_CreatedBy)) AND ((@IsNull_DateCha" +
                "nged = 1 AND [DateChanged] IS NULL) OR ([DateChanged] = @Original_DateChanged)) " +
                "AND ((@IsNull_ChangedBy = 1 AND [ChangedBy] IS NULL) OR ([ChangedBy] = @Original" +
                "_ChangedBy)) AND ((@IsNull_DateDeleted = 1 AND [DateDeleted] IS NULL) OR ([DateD" +
                "eleted] = @Original_DateDeleted)) AND ((@IsNull_DeletedBy = 1 AND [DeletedBy] IS" +
                " NULL) OR ([DeletedBy] = @Original_DeletedBy)) AND ((@IsNull_SwitchFree1 = 1 AND" +
                " [SwitchFree1] IS NULL) OR ([SwitchFree1] = @Original_SwitchFree1)) AND ((@IsNul" +
                "l_SwitchFree2 = 1 AND [SwitchFree2] IS NULL) OR ([SwitchFree2] = @Original_Switc" +
                "hFree2)) AND ((@IsNull_SwitchFree3 = 1 AND [SwitchFree3] IS NULL) OR ([SwitchFre" +
                "e3] = @Original_SwitchFree3)) AND ((@IsNull_DateTimeFree1 = 1 AND [DateTimeFree1" +
                "] IS NULL) OR ([DateTimeFree1] = @Original_DateTimeFree1)) AND ((@IsNull_DateTim" +
                "eFree2 = 1 AND [DateTimeFree2] IS NULL) OR ([DateTimeFree2] = @Original_DateTime" +
                "Free2)) AND ((@IsNull_DateTimeFree3 = 1 AND [DateTimeFree3] IS NULL) OR ([DateTi" +
                "meFree3] = @Original_DateTimeFree3)) AND ((@IsNull_TextFree1 = 1 AND [TextFree1]" +
                " IS NULL) OR ([TextFree1] = @Original_TextFree1)) AND ((@IsNull_TextFree2 = 1 AN" +
                "D [TextFree2] IS NULL) OR ([TextFree2] = @Original_TextFree2)) AND ((@IsNull_Tex" +
                "tFree3 = 1 AND [TextFree3] IS NULL) OR ([TextFree3] = @Original_TextFree3)) AND " +
                "((@IsNull_IntFree1 = 1 AND [IntFree1] IS NULL) OR ([IntFree1] = @Original_IntFre" +
                "e1)) AND ((@IsNull_IntFree2 = 1 AND [IntFree2] IS NULL) OR ([IntFree2] = @Origin" +
                "al_IntFree2)) AND ((@IsNull_IntFree3 = 1 AND [IntFree3] IS NULL) OR ([IntFree3] " +
                "= @Original_IntFree3)));\r\nSELECT DailyEmployeeCountRowId, DailyEmployeeCountRefe" +
                "renceId, LocationOfWork, ReportDate, Comment, SeismicPersonnelCount, MarinePerso" +
                "nnelCount, ThirdPartyPersonnelCount, OfficePersonnelCount, ClientPersonnelCount," +
                " DailyEmployeeCountComment, CetaceansCount, CetaceansCountComment, CrewBoatActiv" +
                "itiesCount, CrewBoatActivitiesCountComment, MaritimeIcidentAndIllnessCount, Mari" +
                "timeIcidentAndIllnessCountComment, OwnIncidentAndIllnessCount, OwnIncidentAndIll" +
                "nessCountComment, HIPCardUnsafeActsCount, HIPCardUnsafeActsCountComment, HIPCard" +
                "NearMissesCount, HIPCardNearMissesCountComment, CrewSafetyMeetingsCount, CrewSaf" +
                "etyMeetingsCountComment, ToolboxMeetingsCount, ToolboxMeetingsCountComment, Safe" +
                "tyDrillsCount, SafetyDrillsCountComment, SOPDepartmentalInspectionsCount, SOPDep" +
                "artmentalInspectionsCountComment, SOPCrossDepartmentalInspectionsCount, SOPCross" +
                "DepartmentalInspectionsCountComment, SOPPartyChiefInspectionsCount, SOPPartyChie" +
                "fInspectionsCountComment, AOBComment, ManHours, ProjectManHours, YesNoSafetyEven" +
                "tListsRowId, rowguid, MasterRowId, DateCreated, CreatedBy, DateChanged, ChangedB" +
                "y, DateDeleted, DeletedBy, SwitchFree1, SwitchFree2, SwitchFree3, DateTimeFree1," +
                " DateTimeFree2, DateTimeFree3, TextFree1, TextFree2, TextFree3, IntFree1, IntFre" +
                "e2, IntFree3, nTextFree1, nTextFree2, nTextFree3 FROM GADailyEmployeeCount WHERE" +
                " (DailyEmployeeCountRowId = @DailyEmployeeCountRowId)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DailyEmployeeCountReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DailyEmployeeCountReferenceId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LocationOfWork", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LocationOfWork", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ReportDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ReportDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Comment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Comment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SeismicPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SeismicPersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MarinePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MarinePersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ThirdPartyPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ThirdPartyPersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OfficePersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ClientPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ClientPersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DailyEmployeeCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "DailyEmployeeCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CetaceansCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CetaceansCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CetaceansCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "CetaceansCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CrewBoatActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewBoatActivitiesCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CrewBoatActivitiesCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewBoatActivitiesCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaritimeIcidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MaritimeIcidentAndIllnessCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaritimeIcidentAndIllnessCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "MaritimeIcidentAndIllnessCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OwnIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OwnIncidentAndIllnessCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OwnIncidentAndIllnessCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "OwnIncidentAndIllnessCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HIPCardUnsafeActsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardUnsafeActsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HIPCardUnsafeActsCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardUnsafeActsCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HIPCardNearMissesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardNearMissesCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HIPCardNearMissesCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardNearMissesCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CrewSafetyMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewSafetyMeetingsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CrewSafetyMeetingsCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewSafetyMeetingsCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ToolboxMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ToolboxMeetingsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ToolboxMeetingsCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "ToolboxMeetingsCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SafetyDrillsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyDrillsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SafetyDrillsCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyDrillsCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPDepartmentalInspectionsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPDepartmentalInspectionsCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPDepartmentalInspectionsCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPCrossDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPCrossDepartmentalInspectionsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPCrossDepartmentalInspectionsCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPCrossDepartmentalInspectionsCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPPartyChiefInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPartyChiefInspectionsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPPartyChiefInspectionsCountComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPartyChiefInspectionsCountComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AOBComment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "AOBComment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManHours", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ProjectManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectManHours", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@YesNoSafetyEventListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "YesNoSafetyEventListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree1", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree2", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree3", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DailyEmployeeCountRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DailyEmployeeCountRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DailyEmployeeCountReferenceId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DailyEmployeeCountReferenceId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DailyEmployeeCountReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DailyEmployeeCountReferenceId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LocationOfWork", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LocationOfWork", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LocationOfWork", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LocationOfWork", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ReportDate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ReportDate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ReportDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ReportDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SeismicPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SeismicPersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SeismicPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SeismicPersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MarinePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MarinePersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MarinePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MarinePersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ThirdPartyPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ThirdPartyPersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ThirdPartyPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ThirdPartyPersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OfficePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OfficePersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OfficePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OfficePersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ClientPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ClientPersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ClientPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ClientPersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CetaceansCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CetaceansCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CetaceansCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CetaceansCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CrewBoatActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewBoatActivitiesCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CrewBoatActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewBoatActivitiesCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MaritimeIcidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MaritimeIcidentAndIllnessCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaritimeIcidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MaritimeIcidentAndIllnessCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OwnIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OwnIncidentAndIllnessCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OwnIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OwnIncidentAndIllnessCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HIPCardUnsafeActsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardUnsafeActsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HIPCardUnsafeActsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardUnsafeActsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HIPCardNearMissesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardNearMissesCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HIPCardNearMissesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardNearMissesCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CrewSafetyMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewSafetyMeetingsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CrewSafetyMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewSafetyMeetingsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ToolboxMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ToolboxMeetingsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ToolboxMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ToolboxMeetingsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SafetyDrillsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyDrillsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SafetyDrillsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyDrillsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPDepartmentalInspectionsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPDepartmentalInspectionsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPCrossDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPCrossDepartmentalInspectionsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPCrossDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPCrossDepartmentalInspectionsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPPartyChiefInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPartyChiefInspectionsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPPartyChiefInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPartyChiefInspectionsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManHours", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManHours", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ProjectManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectManHours", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ProjectManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectManHours", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_YesNoSafetyEventListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "YesNoSafetyEventListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_YesNoSafetyEventListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "YesNoSafetyEventListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateCreated", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChanged", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateDeleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DailyEmployeeCountRowId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "DailyEmployeeCountRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GASystem.Properties.Settings.Default.flagdata070807ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT DailyEmployeeCountRowId, DailyEmployeeCountReferenceId, LocationOfWork, ReportDate, Comment, SeismicPersonnelCount, MarinePersonnelCount, ThirdPartyPersonnelCount, OfficePersonnelCount, ClientPersonnelCount, DailyEmployeeCountComment, CetaceansCount, CetaceansCountComment, CrewBoatActivitiesCount, CrewBoatActivitiesCountComment, MaritimeIcidentAndIllnessCount, MaritimeIcidentAndIllnessCountComment, OwnIncidentAndIllnessCount, OwnIncidentAndIllnessCountComment, HIPCardUnsafeActsCount, HIPCardUnsafeActsCountComment, HIPCardNearMissesCount, HIPCardNearMissesCountComment, CrewSafetyMeetingsCount, CrewSafetyMeetingsCountComment, ToolboxMeetingsCount, ToolboxMeetingsCountComment, SafetyDrillsCount, SafetyDrillsCountComment, SOPDepartmentalInspectionsCount, SOPDepartmentalInspectionsCountComment, SOPCrossDepartmentalInspectionsCount, SOPCrossDepartmentalInspectionsCountComment, SOPPartyChiefInspectionsCount, SOPPartyChiefInspectionsCountComment, AOBComment, ManHours, ProjectManHours, YesNoSafetyEventListsRowId, rowguid, MasterRowId, DateCreated, CreatedBy, DateChanged, ChangedBy, DateDeleted, DeletedBy, SwitchFree1, SwitchFree2, SwitchFree3, DateTimeFree1, DateTimeFree2, DateTimeFree3, TextFree1, TextFree2, TextFree3, IntFree1, IntFree2, IntFree3, nTextFree1, nTextFree2, nTextFree3 FROM dbo.GADailyEmployeeCount";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DailyEmployeeCountDS.GADailyEmployeeCountDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DailyEmployeeCountDS.GADailyEmployeeCountDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DailyEmployeeCountDS.GADailyEmployeeCountDataTable dataTable = new DailyEmployeeCountDS.GADailyEmployeeCountDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DailyEmployeeCountDS.GADailyEmployeeCountDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DailyEmployeeCountDS dataSet) {
            return this.Adapter.Update(dataSet, "GADailyEmployeeCount");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_DailyEmployeeCountRowId, 
                    string Original_DailyEmployeeCountReferenceId, 
                    string Original_LocationOfWork, 
                    System.Nullable<System.DateTime> Original_ReportDate, 
                    System.Nullable<int> Original_SeismicPersonnelCount, 
                    System.Nullable<int> Original_MarinePersonnelCount, 
                    System.Nullable<int> Original_ThirdPartyPersonnelCount, 
                    System.Nullable<int> Original_OfficePersonnelCount, 
                    System.Nullable<int> Original_ClientPersonnelCount, 
                    System.Nullable<int> Original_CetaceansCount, 
                    System.Nullable<int> Original_CrewBoatActivitiesCount, 
                    System.Nullable<int> Original_MaritimeIcidentAndIllnessCount, 
                    System.Nullable<int> Original_OwnIncidentAndIllnessCount, 
                    System.Nullable<int> Original_HIPCardUnsafeActsCount, 
                    System.Nullable<int> Original_HIPCardNearMissesCount, 
                    System.Nullable<int> Original_CrewSafetyMeetingsCount, 
                    System.Nullable<int> Original_ToolboxMeetingsCount, 
                    System.Nullable<int> Original_SafetyDrillsCount, 
                    System.Nullable<int> Original_SOPDepartmentalInspectionsCount, 
                    System.Nullable<int> Original_SOPCrossDepartmentalInspectionsCount, 
                    System.Nullable<int> Original_SOPPartyChiefInspectionsCount, 
                    System.Nullable<int> Original_ManHours, 
                    System.Nullable<int> Original_ProjectManHours, 
                    System.Nullable<int> Original_YesNoSafetyEventListsRowId, 
                    System.Nullable<System.Guid> Original_rowguid, 
                    System.Nullable<int> Original_MasterRowId, 
                    System.Nullable<System.DateTime> Original_DateCreated, 
                    System.Nullable<int> Original_CreatedBy, 
                    System.Nullable<System.DateTime> Original_DateChanged, 
                    System.Nullable<int> Original_ChangedBy, 
                    System.Nullable<System.DateTime> Original_DateDeleted, 
                    System.Nullable<int> Original_DeletedBy, 
                    System.Nullable<bool> Original_SwitchFree1, 
                    System.Nullable<bool> Original_SwitchFree2, 
                    System.Nullable<bool> Original_SwitchFree3, 
                    System.Nullable<System.DateTime> Original_DateTimeFree1, 
                    System.Nullable<System.DateTime> Original_DateTimeFree2, 
                    System.Nullable<System.DateTime> Original_DateTimeFree3, 
                    string Original_TextFree1, 
                    string Original_TextFree2, 
                    string Original_TextFree3, 
                    System.Nullable<int> Original_IntFree1, 
                    System.Nullable<int> Original_IntFree2, 
                    System.Nullable<int> Original_IntFree3) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_DailyEmployeeCountRowId));
            if ((Original_DailyEmployeeCountReferenceId == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_DailyEmployeeCountReferenceId));
            }
            if ((Original_LocationOfWork == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_LocationOfWork));
            }
            if ((Original_ReportDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_ReportDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_SeismicPersonnelCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_SeismicPersonnelCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_MarinePersonnelCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_MarinePersonnelCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_ThirdPartyPersonnelCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_ThirdPartyPersonnelCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_OfficePersonnelCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_OfficePersonnelCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_ClientPersonnelCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_ClientPersonnelCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_CetaceansCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_CetaceansCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_CrewBoatActivitiesCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_CrewBoatActivitiesCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_MaritimeIcidentAndIllnessCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_MaritimeIcidentAndIllnessCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_OwnIncidentAndIllnessCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_OwnIncidentAndIllnessCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_HIPCardUnsafeActsCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_HIPCardUnsafeActsCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((Original_HIPCardNearMissesCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_HIPCardNearMissesCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((Original_CrewSafetyMeetingsCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_CrewSafetyMeetingsCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((Original_ToolboxMeetingsCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_ToolboxMeetingsCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((Original_SafetyDrillsCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_SafetyDrillsCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((Original_SOPDepartmentalInspectionsCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_SOPDepartmentalInspectionsCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((Original_SOPCrossDepartmentalInspectionsCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_SOPCrossDepartmentalInspectionsCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = System.DBNull.Value;
            }
            if ((Original_SOPPartyChiefInspectionsCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_SOPPartyChiefInspectionsCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = System.DBNull.Value;
            }
            if ((Original_ManHours.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((int)(Original_ManHours.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = System.DBNull.Value;
            }
            if ((Original_ProjectManHours.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((int)(Original_ProjectManHours.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = System.DBNull.Value;
            }
            if ((Original_YesNoSafetyEventListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((int)(Original_YesNoSafetyEventListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = System.DBNull.Value;
            }
            if ((Original_rowguid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((System.Guid)(Original_rowguid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = System.DBNull.Value;
            }
            if ((Original_MasterRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((int)(Original_MasterRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = System.DBNull.Value;
            }
            if ((Original_DateCreated.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((System.DateTime)(Original_DateCreated.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = System.DBNull.Value;
            }
            if ((Original_CreatedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((int)(Original_CreatedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = System.DBNull.Value;
            }
            if ((Original_DateChanged.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((System.DateTime)(Original_DateChanged.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = System.DBNull.Value;
            }
            if ((Original_ChangedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((int)(Original_ChangedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = System.DBNull.Value;
            }
            if ((Original_DateDeleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((System.DateTime)(Original_DateDeleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = System.DBNull.Value;
            }
            if ((Original_DeletedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((int)(Original_DeletedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((bool)(Original_SwitchFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((bool)(Original_SwitchFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((bool)(Original_SwitchFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((System.DateTime)(Original_DateTimeFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((System.DateTime)(Original_DateTimeFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((System.DateTime)(Original_DateTimeFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = System.DBNull.Value;
            }
            if ((Original_TextFree1 == null)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((string)(Original_TextFree1));
            }
            if ((Original_TextFree2 == null)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((string)(Original_TextFree2));
            }
            if ((Original_TextFree3 == null)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((string)(Original_TextFree3));
            }
            if ((Original_IntFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((int)(Original_IntFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = System.DBNull.Value;
            }
            if ((Original_IntFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((int)(Original_IntFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = System.DBNull.Value;
            }
            if ((Original_IntFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((int)(Original_IntFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string DailyEmployeeCountReferenceId, 
                    string LocationOfWork, 
                    System.Nullable<System.DateTime> ReportDate, 
                    string Comment, 
                    System.Nullable<int> SeismicPersonnelCount, 
                    System.Nullable<int> MarinePersonnelCount, 
                    System.Nullable<int> ThirdPartyPersonnelCount, 
                    System.Nullable<int> OfficePersonnelCount, 
                    System.Nullable<int> ClientPersonnelCount, 
                    string DailyEmployeeCountComment, 
                    System.Nullable<int> CetaceansCount, 
                    string CetaceansCountComment, 
                    System.Nullable<int> CrewBoatActivitiesCount, 
                    string CrewBoatActivitiesCountComment, 
                    System.Nullable<int> MaritimeIcidentAndIllnessCount, 
                    string MaritimeIcidentAndIllnessCountComment, 
                    System.Nullable<int> OwnIncidentAndIllnessCount, 
                    string OwnIncidentAndIllnessCountComment, 
                    System.Nullable<int> HIPCardUnsafeActsCount, 
                    string HIPCardUnsafeActsCountComment, 
                    System.Nullable<int> HIPCardNearMissesCount, 
                    string HIPCardNearMissesCountComment, 
                    System.Nullable<int> CrewSafetyMeetingsCount, 
                    string CrewSafetyMeetingsCountComment, 
                    System.Nullable<int> ToolboxMeetingsCount, 
                    string ToolboxMeetingsCountComment, 
                    System.Nullable<int> SafetyDrillsCount, 
                    string SafetyDrillsCountComment, 
                    System.Nullable<int> SOPDepartmentalInspectionsCount, 
                    string SOPDepartmentalInspectionsCountComment, 
                    System.Nullable<int> SOPCrossDepartmentalInspectionsCount, 
                    string SOPCrossDepartmentalInspectionsCountComment, 
                    System.Nullable<int> SOPPartyChiefInspectionsCount, 
                    string SOPPartyChiefInspectionsCountComment, 
                    string AOBComment, 
                    System.Nullable<int> ManHours, 
                    System.Nullable<int> ProjectManHours, 
                    System.Nullable<int> YesNoSafetyEventListsRowId, 
                    System.Nullable<System.Guid> rowguid, 
                    System.Nullable<int> MasterRowId, 
                    System.Nullable<System.DateTime> DateCreated, 
                    System.Nullable<int> CreatedBy, 
                    System.Nullable<System.DateTime> DateChanged, 
                    System.Nullable<int> ChangedBy, 
                    System.Nullable<System.DateTime> DateDeleted, 
                    System.Nullable<int> DeletedBy, 
                    System.Nullable<bool> SwitchFree1, 
                    System.Nullable<bool> SwitchFree2, 
                    System.Nullable<bool> SwitchFree3, 
                    System.Nullable<System.DateTime> DateTimeFree1, 
                    System.Nullable<System.DateTime> DateTimeFree2, 
                    System.Nullable<System.DateTime> DateTimeFree3, 
                    string TextFree1, 
                    string TextFree2, 
                    string TextFree3, 
                    System.Nullable<int> IntFree1, 
                    System.Nullable<int> IntFree2, 
                    System.Nullable<int> IntFree3, 
                    string nTextFree1, 
                    string nTextFree2, 
                    string nTextFree3) {
            if ((DailyEmployeeCountReferenceId == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DailyEmployeeCountReferenceId));
            }
            if ((LocationOfWork == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LocationOfWork));
            }
            if ((ReportDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(ReportDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Comment == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Comment));
            }
            if ((SeismicPersonnelCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(SeismicPersonnelCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((MarinePersonnelCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(MarinePersonnelCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((ThirdPartyPersonnelCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(ThirdPartyPersonnelCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((OfficePersonnelCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(OfficePersonnelCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((ClientPersonnelCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(ClientPersonnelCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((DailyEmployeeCountComment == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(DailyEmployeeCountComment));
            }
            if ((CetaceansCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(CetaceansCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((CetaceansCountComment == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(CetaceansCountComment));
            }
            if ((CrewBoatActivitiesCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(CrewBoatActivitiesCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((CrewBoatActivitiesCountComment == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(CrewBoatActivitiesCountComment));
            }
            if ((MaritimeIcidentAndIllnessCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(MaritimeIcidentAndIllnessCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((MaritimeIcidentAndIllnessCountComment == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(MaritimeIcidentAndIllnessCountComment));
            }
            if ((OwnIncidentAndIllnessCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(OwnIncidentAndIllnessCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((OwnIncidentAndIllnessCountComment == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(OwnIncidentAndIllnessCountComment));
            }
            if ((HIPCardUnsafeActsCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(HIPCardUnsafeActsCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((HIPCardUnsafeActsCountComment == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(HIPCardUnsafeActsCountComment));
            }
            if ((HIPCardNearMissesCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(HIPCardNearMissesCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((HIPCardNearMissesCountComment == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(HIPCardNearMissesCountComment));
            }
            if ((CrewSafetyMeetingsCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(CrewSafetyMeetingsCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((CrewSafetyMeetingsCountComment == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(CrewSafetyMeetingsCountComment));
            }
            if ((ToolboxMeetingsCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(ToolboxMeetingsCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((ToolboxMeetingsCountComment == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(ToolboxMeetingsCountComment));
            }
            if ((SafetyDrillsCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(SafetyDrillsCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((SafetyDrillsCountComment == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(SafetyDrillsCountComment));
            }
            if ((SOPDepartmentalInspectionsCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(SOPDepartmentalInspectionsCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((SOPDepartmentalInspectionsCountComment == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(SOPDepartmentalInspectionsCountComment));
            }
            if ((SOPCrossDepartmentalInspectionsCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((int)(SOPCrossDepartmentalInspectionsCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((SOPCrossDepartmentalInspectionsCountComment == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(SOPCrossDepartmentalInspectionsCountComment));
            }
            if ((SOPPartyChiefInspectionsCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((int)(SOPPartyChiefInspectionsCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((SOPPartyChiefInspectionsCountComment == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(SOPPartyChiefInspectionsCountComment));
            }
            if ((AOBComment == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(AOBComment));
            }
            if ((ManHours.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(ManHours.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((ProjectManHours.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(ProjectManHours.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((YesNoSafetyEventListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((int)(YesNoSafetyEventListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((rowguid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((System.Guid)(rowguid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = System.DBNull.Value;
            }
            if ((MasterRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((int)(MasterRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = System.DBNull.Value;
            }
            if ((DateCreated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = System.DBNull.Value;
            }
            if ((CreatedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((int)(CreatedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = System.DBNull.Value;
            }
            if ((DateChanged.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((System.DateTime)(DateChanged.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = System.DBNull.Value;
            }
            if ((ChangedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((int)(ChangedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = System.DBNull.Value;
            }
            if ((DateDeleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((System.DateTime)(DateDeleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = System.DBNull.Value;
            }
            if ((DeletedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((int)(DeletedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = System.DBNull.Value;
            }
            if ((SwitchFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(SwitchFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = System.DBNull.Value;
            }
            if ((SwitchFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((bool)(SwitchFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = System.DBNull.Value;
            }
            if ((SwitchFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((bool)(SwitchFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = System.DBNull.Value;
            }
            if ((DateTimeFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((System.DateTime)(DateTimeFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = System.DBNull.Value;
            }
            if ((DateTimeFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((System.DateTime)(DateTimeFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = System.DBNull.Value;
            }
            if ((DateTimeFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((System.DateTime)(DateTimeFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = System.DBNull.Value;
            }
            if ((TextFree1 == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(TextFree1));
            }
            if ((TextFree2 == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(TextFree2));
            }
            if ((TextFree3 == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(TextFree3));
            }
            if ((IntFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((int)(IntFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = System.DBNull.Value;
            }
            if ((IntFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((int)(IntFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = System.DBNull.Value;
            }
            if ((IntFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((int)(IntFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = System.DBNull.Value;
            }
            if ((nTextFree1 == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(nTextFree1));
            }
            if ((nTextFree2 == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(nTextFree2));
            }
            if ((nTextFree3 == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(nTextFree3));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DailyEmployeeCountReferenceId, 
                    string LocationOfWork, 
                    System.Nullable<System.DateTime> ReportDate, 
                    string Comment, 
                    System.Nullable<int> SeismicPersonnelCount, 
                    System.Nullable<int> MarinePersonnelCount, 
                    System.Nullable<int> ThirdPartyPersonnelCount, 
                    System.Nullable<int> OfficePersonnelCount, 
                    System.Nullable<int> ClientPersonnelCount, 
                    string DailyEmployeeCountComment, 
                    System.Nullable<int> CetaceansCount, 
                    string CetaceansCountComment, 
                    System.Nullable<int> CrewBoatActivitiesCount, 
                    string CrewBoatActivitiesCountComment, 
                    System.Nullable<int> MaritimeIcidentAndIllnessCount, 
                    string MaritimeIcidentAndIllnessCountComment, 
                    System.Nullable<int> OwnIncidentAndIllnessCount, 
                    string OwnIncidentAndIllnessCountComment, 
                    System.Nullable<int> HIPCardUnsafeActsCount, 
                    string HIPCardUnsafeActsCountComment, 
                    System.Nullable<int> HIPCardNearMissesCount, 
                    string HIPCardNearMissesCountComment, 
                    System.Nullable<int> CrewSafetyMeetingsCount, 
                    string CrewSafetyMeetingsCountComment, 
                    System.Nullable<int> ToolboxMeetingsCount, 
                    string ToolboxMeetingsCountComment, 
                    System.Nullable<int> SafetyDrillsCount, 
                    string SafetyDrillsCountComment, 
                    System.Nullable<int> SOPDepartmentalInspectionsCount, 
                    string SOPDepartmentalInspectionsCountComment, 
                    System.Nullable<int> SOPCrossDepartmentalInspectionsCount, 
                    string SOPCrossDepartmentalInspectionsCountComment, 
                    System.Nullable<int> SOPPartyChiefInspectionsCount, 
                    string SOPPartyChiefInspectionsCountComment, 
                    string AOBComment, 
                    System.Nullable<int> ManHours, 
                    System.Nullable<int> ProjectManHours, 
                    System.Nullable<int> YesNoSafetyEventListsRowId, 
                    System.Nullable<System.Guid> rowguid, 
                    System.Nullable<int> MasterRowId, 
                    System.Nullable<System.DateTime> DateCreated, 
                    System.Nullable<int> CreatedBy, 
                    System.Nullable<System.DateTime> DateChanged, 
                    System.Nullable<int> ChangedBy, 
                    System.Nullable<System.DateTime> DateDeleted, 
                    System.Nullable<int> DeletedBy, 
                    System.Nullable<bool> SwitchFree1, 
                    System.Nullable<bool> SwitchFree2, 
                    System.Nullable<bool> SwitchFree3, 
                    System.Nullable<System.DateTime> DateTimeFree1, 
                    System.Nullable<System.DateTime> DateTimeFree2, 
                    System.Nullable<System.DateTime> DateTimeFree3, 
                    string TextFree1, 
                    string TextFree2, 
                    string TextFree3, 
                    System.Nullable<int> IntFree1, 
                    System.Nullable<int> IntFree2, 
                    System.Nullable<int> IntFree3, 
                    string nTextFree1, 
                    string nTextFree2, 
                    string nTextFree3, 
                    int Original_DailyEmployeeCountRowId, 
                    string Original_DailyEmployeeCountReferenceId, 
                    string Original_LocationOfWork, 
                    System.Nullable<System.DateTime> Original_ReportDate, 
                    System.Nullable<int> Original_SeismicPersonnelCount, 
                    System.Nullable<int> Original_MarinePersonnelCount, 
                    System.Nullable<int> Original_ThirdPartyPersonnelCount, 
                    System.Nullable<int> Original_OfficePersonnelCount, 
                    System.Nullable<int> Original_ClientPersonnelCount, 
                    System.Nullable<int> Original_CetaceansCount, 
                    System.Nullable<int> Original_CrewBoatActivitiesCount, 
                    System.Nullable<int> Original_MaritimeIcidentAndIllnessCount, 
                    System.Nullable<int> Original_OwnIncidentAndIllnessCount, 
                    System.Nullable<int> Original_HIPCardUnsafeActsCount, 
                    System.Nullable<int> Original_HIPCardNearMissesCount, 
                    System.Nullable<int> Original_CrewSafetyMeetingsCount, 
                    System.Nullable<int> Original_ToolboxMeetingsCount, 
                    System.Nullable<int> Original_SafetyDrillsCount, 
                    System.Nullable<int> Original_SOPDepartmentalInspectionsCount, 
                    System.Nullable<int> Original_SOPCrossDepartmentalInspectionsCount, 
                    System.Nullable<int> Original_SOPPartyChiefInspectionsCount, 
                    System.Nullable<int> Original_ManHours, 
                    System.Nullable<int> Original_ProjectManHours, 
                    System.Nullable<int> Original_YesNoSafetyEventListsRowId, 
                    System.Nullable<System.Guid> Original_rowguid, 
                    System.Nullable<int> Original_MasterRowId, 
                    System.Nullable<System.DateTime> Original_DateCreated, 
                    System.Nullable<int> Original_CreatedBy, 
                    System.Nullable<System.DateTime> Original_DateChanged, 
                    System.Nullable<int> Original_ChangedBy, 
                    System.Nullable<System.DateTime> Original_DateDeleted, 
                    System.Nullable<int> Original_DeletedBy, 
                    System.Nullable<bool> Original_SwitchFree1, 
                    System.Nullable<bool> Original_SwitchFree2, 
                    System.Nullable<bool> Original_SwitchFree3, 
                    System.Nullable<System.DateTime> Original_DateTimeFree1, 
                    System.Nullable<System.DateTime> Original_DateTimeFree2, 
                    System.Nullable<System.DateTime> Original_DateTimeFree3, 
                    string Original_TextFree1, 
                    string Original_TextFree2, 
                    string Original_TextFree3, 
                    System.Nullable<int> Original_IntFree1, 
                    System.Nullable<int> Original_IntFree2, 
                    System.Nullable<int> Original_IntFree3, 
                    int DailyEmployeeCountRowId) {
            if ((DailyEmployeeCountReferenceId == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DailyEmployeeCountReferenceId));
            }
            if ((LocationOfWork == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LocationOfWork));
            }
            if ((ReportDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(ReportDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Comment == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Comment));
            }
            if ((SeismicPersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(SeismicPersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((MarinePersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(MarinePersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((ThirdPartyPersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(ThirdPartyPersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((OfficePersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(OfficePersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((ClientPersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(ClientPersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((DailyEmployeeCountComment == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(DailyEmployeeCountComment));
            }
            if ((CetaceansCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(CetaceansCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((CetaceansCountComment == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(CetaceansCountComment));
            }
            if ((CrewBoatActivitiesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(CrewBoatActivitiesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((CrewBoatActivitiesCountComment == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(CrewBoatActivitiesCountComment));
            }
            if ((MaritimeIcidentAndIllnessCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(MaritimeIcidentAndIllnessCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((MaritimeIcidentAndIllnessCountComment == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(MaritimeIcidentAndIllnessCountComment));
            }
            if ((OwnIncidentAndIllnessCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(OwnIncidentAndIllnessCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((OwnIncidentAndIllnessCountComment == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(OwnIncidentAndIllnessCountComment));
            }
            if ((HIPCardUnsafeActsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(HIPCardUnsafeActsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((HIPCardUnsafeActsCountComment == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(HIPCardUnsafeActsCountComment));
            }
            if ((HIPCardNearMissesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(HIPCardNearMissesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((HIPCardNearMissesCountComment == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(HIPCardNearMissesCountComment));
            }
            if ((CrewSafetyMeetingsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(CrewSafetyMeetingsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((CrewSafetyMeetingsCountComment == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(CrewSafetyMeetingsCountComment));
            }
            if ((ToolboxMeetingsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(ToolboxMeetingsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((ToolboxMeetingsCountComment == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(ToolboxMeetingsCountComment));
            }
            if ((SafetyDrillsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(SafetyDrillsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((SafetyDrillsCountComment == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(SafetyDrillsCountComment));
            }
            if ((SOPDepartmentalInspectionsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(SOPDepartmentalInspectionsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((SOPDepartmentalInspectionsCountComment == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(SOPDepartmentalInspectionsCountComment));
            }
            if ((SOPCrossDepartmentalInspectionsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(SOPCrossDepartmentalInspectionsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((SOPCrossDepartmentalInspectionsCountComment == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(SOPCrossDepartmentalInspectionsCountComment));
            }
            if ((SOPPartyChiefInspectionsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(SOPPartyChiefInspectionsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((SOPPartyChiefInspectionsCountComment == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(SOPPartyChiefInspectionsCountComment));
            }
            if ((AOBComment == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(AOBComment));
            }
            if ((ManHours.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(ManHours.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((ProjectManHours.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(ProjectManHours.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((YesNoSafetyEventListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(YesNoSafetyEventListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((rowguid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((System.Guid)(rowguid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = System.DBNull.Value;
            }
            if ((MasterRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(MasterRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = System.DBNull.Value;
            }
            if ((DateCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = System.DBNull.Value;
            }
            if ((CreatedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(CreatedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = System.DBNull.Value;
            }
            if ((DateChanged.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(DateChanged.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = System.DBNull.Value;
            }
            if ((ChangedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(ChangedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = System.DBNull.Value;
            }
            if ((DateDeleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(DateDeleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = System.DBNull.Value;
            }
            if ((DeletedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(DeletedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = System.DBNull.Value;
            }
            if ((SwitchFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(SwitchFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = System.DBNull.Value;
            }
            if ((SwitchFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(SwitchFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = System.DBNull.Value;
            }
            if ((SwitchFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((bool)(SwitchFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = System.DBNull.Value;
            }
            if ((DateTimeFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(DateTimeFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = System.DBNull.Value;
            }
            if ((DateTimeFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((System.DateTime)(DateTimeFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = System.DBNull.Value;
            }
            if ((DateTimeFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(DateTimeFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = System.DBNull.Value;
            }
            if ((TextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(TextFree1));
            }
            if ((TextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(TextFree2));
            }
            if ((TextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(TextFree3));
            }
            if ((IntFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(IntFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = System.DBNull.Value;
            }
            if ((IntFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(IntFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = System.DBNull.Value;
            }
            if ((IntFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(IntFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = System.DBNull.Value;
            }
            if ((nTextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(nTextFree1));
            }
            if ((nTextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(nTextFree2));
            }
            if ((nTextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(nTextFree3));
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(Original_DailyEmployeeCountRowId));
            if ((Original_DailyEmployeeCountReferenceId == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_DailyEmployeeCountReferenceId));
            }
            if ((Original_LocationOfWork == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_LocationOfWork));
            }
            if ((Original_ReportDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((System.DateTime)(Original_ReportDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = System.DBNull.Value;
            }
            if ((Original_SeismicPersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(Original_SeismicPersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = System.DBNull.Value;
            }
            if ((Original_MarinePersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(Original_MarinePersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = System.DBNull.Value;
            }
            if ((Original_ThirdPartyPersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((int)(Original_ThirdPartyPersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = System.DBNull.Value;
            }
            if ((Original_OfficePersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_OfficePersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = System.DBNull.Value;
            }
            if ((Original_ClientPersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((int)(Original_ClientPersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = System.DBNull.Value;
            }
            if ((Original_CetaceansCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(Original_CetaceansCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = System.DBNull.Value;
            }
            if ((Original_CrewBoatActivitiesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(Original_CrewBoatActivitiesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = System.DBNull.Value;
            }
            if ((Original_MaritimeIcidentAndIllnessCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((int)(Original_MaritimeIcidentAndIllnessCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = System.DBNull.Value;
            }
            if ((Original_OwnIncidentAndIllnessCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((int)(Original_OwnIncidentAndIllnessCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = System.DBNull.Value;
            }
            if ((Original_HIPCardUnsafeActsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((int)(Original_HIPCardUnsafeActsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = System.DBNull.Value;
            }
            if ((Original_HIPCardNearMissesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((int)(Original_HIPCardNearMissesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = System.DBNull.Value;
            }
            if ((Original_CrewSafetyMeetingsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(Original_CrewSafetyMeetingsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = System.DBNull.Value;
            }
            if ((Original_ToolboxMeetingsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((int)(Original_ToolboxMeetingsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = System.DBNull.Value;
            }
            if ((Original_SafetyDrillsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((int)(Original_SafetyDrillsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = System.DBNull.Value;
            }
            if ((Original_SOPDepartmentalInspectionsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((int)(Original_SOPDepartmentalInspectionsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = System.DBNull.Value;
            }
            if ((Original_SOPCrossDepartmentalInspectionsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((int)(Original_SOPCrossDepartmentalInspectionsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = System.DBNull.Value;
            }
            if ((Original_SOPPartyChiefInspectionsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((int)(Original_SOPPartyChiefInspectionsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = System.DBNull.Value;
            }
            if ((Original_ManHours.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((int)(Original_ManHours.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = System.DBNull.Value;
            }
            if ((Original_ProjectManHours.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((int)(Original_ProjectManHours.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = System.DBNull.Value;
            }
            if ((Original_YesNoSafetyEventListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((int)(Original_YesNoSafetyEventListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = System.DBNull.Value;
            }
            if ((Original_rowguid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((System.Guid)(Original_rowguid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = System.DBNull.Value;
            }
            if ((Original_MasterRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((int)(Original_MasterRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = System.DBNull.Value;
            }
            if ((Original_DateCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((System.DateTime)(Original_DateCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = System.DBNull.Value;
            }
            if ((Original_CreatedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((int)(Original_CreatedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = System.DBNull.Value;
            }
            if ((Original_DateChanged.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((System.DateTime)(Original_DateChanged.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = System.DBNull.Value;
            }
            if ((Original_ChangedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((int)(Original_ChangedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = System.DBNull.Value;
            }
            if ((Original_DateDeleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((System.DateTime)(Original_DateDeleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = System.DBNull.Value;
            }
            if ((Original_DeletedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((int)(Original_DeletedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((bool)(Original_SwitchFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((bool)(Original_SwitchFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((bool)(Original_SwitchFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((System.DateTime)(Original_DateTimeFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((System.DateTime)(Original_DateTimeFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((System.DateTime)(Original_DateTimeFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = System.DBNull.Value;
            }
            if ((Original_TextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[136].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[136].Value = ((string)(Original_TextFree1));
            }
            if ((Original_TextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((string)(Original_TextFree2));
            }
            if ((Original_TextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[140].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[140].Value = ((string)(Original_TextFree3));
            }
            if ((Original_IntFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[142].Value = ((int)(Original_IntFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[142].Value = System.DBNull.Value;
            }
            if ((Original_IntFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((int)(Original_IntFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = System.DBNull.Value;
            }
            if ((Original_IntFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[146].Value = ((int)(Original_IntFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[146].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[147].Value = ((int)(DailyEmployeeCountRowId));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591