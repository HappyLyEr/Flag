//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace GASystem.DataModel.View {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class ReportView : DataSet {
        partial class GACrisisCheckListDataTable
        {
        }
        
        private GAActionDataTable tableGAAction;
        
        private GAMeetingDataTable tableGAMeeting;
        
        private GAIncidentReportDataTable tableGAIncidentReport;
        
        private GAInjuredPartyDataTable tableGAInjuredParty;
        
        private GAHazardIdentificationDataTable tableGAHazardIdentification;
        
        private GAEquipmentDamageReportDataTable tableGAEquipmentDamageReport;
        
        private GAMeetingPersonListDataTable tableGAMeetingPersonList;
        
        private GAMeansOfContactDataTable tableGAMeansOfContact;
        
        private GAPersonnelDataTable tableGAPersonnel;
        
        private GAEmploymentDataTable tableGAEmployment;
        
        private GACourseDataTable tableGACourse;
        
        private GACourse_CoursePersonListViewDataTable tableGACourse_CoursePersonListView;
        
        private GANextOfKinDataTable tableGANextOfKin;
        
        private GACertificateDataTable tableGACertificate;
        
        private GAIncidentReportViewDataTable tableGAIncidentReportView;
        
        private GAIncidentReport_InjuredPartyViewDataTable tableGAIncidentReport_InjuredPartyView;
        
        private GASafetyObservationDataTable tableGASafetyObservation;
        
        private GADailyEmployeeCountViewDataTable tableGADailyEmployeeCountView;
        
        private GAIncidentReportCountViewDataTable tableGAIncidentReportCountView;
        
        private GAIncidentReportDailyEmployeeCountViewDataTable tableGAIncidentReportDailyEmployeeCountView;
        
        private GAMeetingTextDataTable tableGAMeetingText;
        
        private GArxtReportDataTable tableGArxtReport;
        
        private GAAuditDataTable tableGAAudit;
        
        private GAFileDataTable tableGAFile;
        
        private GAManageChangeDataTable tableGAManageChange;
        
        private GATextItemDataTable tableGATextItem;
        
        private GAControlDataTable tableGAControl;
        
        private GARiskDataTable tableGARisk;
        
        private GARiskControlDataTable tableGARiskControl;
        
        private GAProcedureReferenceDataTable tableGAProcedureReference;
        
        private GAOpportunityDataTable tableGAOpportunity;
        
        private GADaysReportDataTable tableGADaysReport;
        
        public ReportView() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected ReportView(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["GAAction"] != null)) {
                    this.Tables.Add(new GAActionDataTable(ds.Tables["GAAction"]));
                }
                if ((ds.Tables["GAMeeting"] != null)) {
                    this.Tables.Add(new GAMeetingDataTable(ds.Tables["GAMeeting"]));
                }
                if ((ds.Tables["GAIncidentReport"] != null)) {
                    this.Tables.Add(new GAIncidentReportDataTable(ds.Tables["GAIncidentReport"]));
                }
                if ((ds.Tables["GAInjuredParty"] != null)) {
                    this.Tables.Add(new GAInjuredPartyDataTable(ds.Tables["GAInjuredParty"]));
                }
                if ((ds.Tables["GAHazardIdentification"] != null)) {
                    this.Tables.Add(new GAHazardIdentificationDataTable(ds.Tables["GAHazardIdentification"]));
                }
                if ((ds.Tables["GAEquipmentDamageReport"] != null)) {
                    this.Tables.Add(new GAEquipmentDamageReportDataTable(ds.Tables["GAEquipmentDamageReport"]));
                }
                if ((ds.Tables["GAMeetingPersonList"] != null)) {
                    this.Tables.Add(new GAMeetingPersonListDataTable(ds.Tables["GAMeetingPersonList"]));
                }
                if ((ds.Tables["GAMeansOfContact"] != null)) {
                    this.Tables.Add(new GAMeansOfContactDataTable(ds.Tables["GAMeansOfContact"]));
                }
                if ((ds.Tables["GAPersonnel"] != null)) {
                    this.Tables.Add(new GAPersonnelDataTable(ds.Tables["GAPersonnel"]));
                }
                if ((ds.Tables["GAEmployment"] != null)) {
                    this.Tables.Add(new GAEmploymentDataTable(ds.Tables["GAEmployment"]));
                }
                if ((ds.Tables["GACourse"] != null)) {
                    this.Tables.Add(new GACourseDataTable(ds.Tables["GACourse"]));
                }
                if ((ds.Tables["GACourse_CoursePersonListView"] != null)) {
                    this.Tables.Add(new GACourse_CoursePersonListViewDataTable(ds.Tables["GACourse_CoursePersonListView"]));
                }
                if ((ds.Tables["GANextOfKin"] != null)) {
                    this.Tables.Add(new GANextOfKinDataTable(ds.Tables["GANextOfKin"]));
                }
                if ((ds.Tables["GACertificate"] != null)) {
                    this.Tables.Add(new GACertificateDataTable(ds.Tables["GACertificate"]));
                }
                if ((ds.Tables["GAIncidentReportView"] != null)) {
                    this.Tables.Add(new GAIncidentReportViewDataTable(ds.Tables["GAIncidentReportView"]));
                }
                if ((ds.Tables["GAIncidentReport_InjuredPartyView"] != null)) {
                    this.Tables.Add(new GAIncidentReport_InjuredPartyViewDataTable(ds.Tables["GAIncidentReport_InjuredPartyView"]));
                }
                if ((ds.Tables["GASafetyObservation"] != null)) {
                    this.Tables.Add(new GASafetyObservationDataTable(ds.Tables["GASafetyObservation"]));
                }
                if ((ds.Tables["GADailyEmployeeCountView"] != null)) {
                    this.Tables.Add(new GADailyEmployeeCountViewDataTable(ds.Tables["GADailyEmployeeCountView"]));
                }
                if ((ds.Tables["GAIncidentReportCountView"] != null)) {
                    this.Tables.Add(new GAIncidentReportCountViewDataTable(ds.Tables["GAIncidentReportCountView"]));
                }
                if ((ds.Tables["GAIncidentReportDailyEmployeeCountView"] != null)) {
                    this.Tables.Add(new GAIncidentReportDailyEmployeeCountViewDataTable(ds.Tables["GAIncidentReportDailyEmployeeCountView"]));
                }
                if ((ds.Tables["GAMeetingText"] != null)) {
                    this.Tables.Add(new GAMeetingTextDataTable(ds.Tables["GAMeetingText"]));
                }
                if ((ds.Tables["GArxtReport"] != null)) {
                    this.Tables.Add(new GArxtReportDataTable(ds.Tables["GArxtReport"]));
                }
                if ((ds.Tables["GAAudit"] != null)) {
                    this.Tables.Add(new GAAuditDataTable(ds.Tables["GAAudit"]));
                }
                if ((ds.Tables["GAFile"] != null)) {
                    this.Tables.Add(new GAFileDataTable(ds.Tables["GAFile"]));
                }
                if ((ds.Tables["GAManageChange"] != null)) {
                    this.Tables.Add(new GAManageChangeDataTable(ds.Tables["GAManageChange"]));
                }
                if ((ds.Tables["GATextItem"] != null)) {
                    this.Tables.Add(new GATextItemDataTable(ds.Tables["GATextItem"]));
                }
                if ((ds.Tables["GAControl"] != null)) {
                    this.Tables.Add(new GAControlDataTable(ds.Tables["GAControl"]));
                }
                if ((ds.Tables["GARisk"] != null)) {
                    this.Tables.Add(new GARiskDataTable(ds.Tables["GARisk"]));
                }
                if ((ds.Tables["GARiskControl"] != null)) {
                    this.Tables.Add(new GARiskControlDataTable(ds.Tables["GARiskControl"]));
                }
                if ((ds.Tables["GAProcedureReference"] != null)) {
                    this.Tables.Add(new GAProcedureReferenceDataTable(ds.Tables["GAProcedureReference"]));
                }
                if ((ds.Tables["GAOpportunity"] != null)) {
                    this.Tables.Add(new GAOpportunityDataTable(ds.Tables["GAOpportunity"]));
                }
                if ((ds.Tables["GADaysReport"] != null)) {
                    this.Tables.Add(new GADaysReportDataTable(ds.Tables["GADaysReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAActionDataTable GAAction {
            get {
                return this.tableGAAction;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAMeetingDataTable GAMeeting {
            get {
                return this.tableGAMeeting;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAIncidentReportDataTable GAIncidentReport {
            get {
                return this.tableGAIncidentReport;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAInjuredPartyDataTable GAInjuredParty {
            get {
                return this.tableGAInjuredParty;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAHazardIdentificationDataTable GAHazardIdentification {
            get {
                return this.tableGAHazardIdentification;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAEquipmentDamageReportDataTable GAEquipmentDamageReport {
            get {
                return this.tableGAEquipmentDamageReport;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAMeetingPersonListDataTable GAMeetingPersonList {
            get {
                return this.tableGAMeetingPersonList;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAMeansOfContactDataTable GAMeansOfContact {
            get {
                return this.tableGAMeansOfContact;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAPersonnelDataTable GAPersonnel {
            get {
                return this.tableGAPersonnel;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAEmploymentDataTable GAEmployment {
            get {
                return this.tableGAEmployment;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GACourseDataTable GACourse {
            get {
                return this.tableGACourse;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GACourse_CoursePersonListViewDataTable GACourse_CoursePersonListView {
            get {
                return this.tableGACourse_CoursePersonListView;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GANextOfKinDataTable GANextOfKin {
            get {
                return this.tableGANextOfKin;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GACertificateDataTable GACertificate {
            get {
                return this.tableGACertificate;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAIncidentReportViewDataTable GAIncidentReportView {
            get {
                return this.tableGAIncidentReportView;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAIncidentReport_InjuredPartyViewDataTable GAIncidentReport_InjuredPartyView {
            get {
                return this.tableGAIncidentReport_InjuredPartyView;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GASafetyObservationDataTable GASafetyObservation {
            get {
                return this.tableGASafetyObservation;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GADailyEmployeeCountViewDataTable GADailyEmployeeCountView {
            get {
                return this.tableGADailyEmployeeCountView;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAIncidentReportCountViewDataTable GAIncidentReportCountView {
            get {
                return this.tableGAIncidentReportCountView;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAIncidentReportDailyEmployeeCountViewDataTable GAIncidentReportDailyEmployeeCountView {
            get {
                return this.tableGAIncidentReportDailyEmployeeCountView;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAMeetingTextDataTable GAMeetingText {
            get {
                return this.tableGAMeetingText;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GArxtReportDataTable GArxtReport {
            get {
                return this.tableGArxtReport;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAAuditDataTable GAAudit {
            get {
                return this.tableGAAudit;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAFileDataTable GAFile {
            get {
                return this.tableGAFile;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAManageChangeDataTable GAManageChange {
            get {
                return this.tableGAManageChange;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GATextItemDataTable GATextItem {
            get {
                return this.tableGATextItem;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAControlDataTable GAControl {
            get {
                return this.tableGAControl;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GARiskDataTable GARisk {
            get {
                return this.tableGARisk;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GARiskControlDataTable GARiskControl {
            get {
                return this.tableGARiskControl;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAProcedureReferenceDataTable GAProcedureReference {
            get {
                return this.tableGAProcedureReference;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAOpportunityDataTable GAOpportunity {
            get {
                return this.tableGAOpportunity;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GADaysReportDataTable GADaysReport {
            get {
                return this.tableGADaysReport;
            }
        }
        
        public override DataSet Clone() {
            ReportView cln = ((ReportView)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["GAAction"] != null)) {
                this.Tables.Add(new GAActionDataTable(ds.Tables["GAAction"]));
            }
            if ((ds.Tables["GAMeeting"] != null)) {
                this.Tables.Add(new GAMeetingDataTable(ds.Tables["GAMeeting"]));
            }
            if ((ds.Tables["GAIncidentReport"] != null)) {
                this.Tables.Add(new GAIncidentReportDataTable(ds.Tables["GAIncidentReport"]));
            }
            if ((ds.Tables["GAInjuredParty"] != null)) {
                this.Tables.Add(new GAInjuredPartyDataTable(ds.Tables["GAInjuredParty"]));
            }
            if ((ds.Tables["GAHazardIdentification"] != null)) {
                this.Tables.Add(new GAHazardIdentificationDataTable(ds.Tables["GAHazardIdentification"]));
            }
            if ((ds.Tables["GAEquipmentDamageReport"] != null)) {
                this.Tables.Add(new GAEquipmentDamageReportDataTable(ds.Tables["GAEquipmentDamageReport"]));
            }
            if ((ds.Tables["GAMeetingPersonList"] != null)) {
                this.Tables.Add(new GAMeetingPersonListDataTable(ds.Tables["GAMeetingPersonList"]));
            }
            if ((ds.Tables["GAMeansOfContact"] != null)) {
                this.Tables.Add(new GAMeansOfContactDataTable(ds.Tables["GAMeansOfContact"]));
            }
            if ((ds.Tables["GAPersonnel"] != null)) {
                this.Tables.Add(new GAPersonnelDataTable(ds.Tables["GAPersonnel"]));
            }
            if ((ds.Tables["GAEmployment"] != null)) {
                this.Tables.Add(new GAEmploymentDataTable(ds.Tables["GAEmployment"]));
            }
            if ((ds.Tables["GACourse"] != null)) {
                this.Tables.Add(new GACourseDataTable(ds.Tables["GACourse"]));
            }
            if ((ds.Tables["GACourse_CoursePersonListView"] != null)) {
                this.Tables.Add(new GACourse_CoursePersonListViewDataTable(ds.Tables["GACourse_CoursePersonListView"]));
            }
            if ((ds.Tables["GANextOfKin"] != null)) {
                this.Tables.Add(new GANextOfKinDataTable(ds.Tables["GANextOfKin"]));
            }
            if ((ds.Tables["GACertificate"] != null)) {
                this.Tables.Add(new GACertificateDataTable(ds.Tables["GACertificate"]));
            }
            if ((ds.Tables["GAIncidentReportView"] != null)) {
                this.Tables.Add(new GAIncidentReportViewDataTable(ds.Tables["GAIncidentReportView"]));
            }
            if ((ds.Tables["GAIncidentReport_InjuredPartyView"] != null)) {
                this.Tables.Add(new GAIncidentReport_InjuredPartyViewDataTable(ds.Tables["GAIncidentReport_InjuredPartyView"]));
            }
            if ((ds.Tables["GASafetyObservation"] != null)) {
                this.Tables.Add(new GASafetyObservationDataTable(ds.Tables["GASafetyObservation"]));
            }
            if ((ds.Tables["GADailyEmployeeCountView"] != null)) {
                this.Tables.Add(new GADailyEmployeeCountViewDataTable(ds.Tables["GADailyEmployeeCountView"]));
            }
            if ((ds.Tables["GAIncidentReportCountView"] != null)) {
                this.Tables.Add(new GAIncidentReportCountViewDataTable(ds.Tables["GAIncidentReportCountView"]));
            }
            if ((ds.Tables["GAIncidentReportDailyEmployeeCountView"] != null)) {
                this.Tables.Add(new GAIncidentReportDailyEmployeeCountViewDataTable(ds.Tables["GAIncidentReportDailyEmployeeCountView"]));
            }
            if ((ds.Tables["GAMeetingText"] != null)) {
                this.Tables.Add(new GAMeetingTextDataTable(ds.Tables["GAMeetingText"]));
            }
            if ((ds.Tables["GArxtReport"] != null)) {
                this.Tables.Add(new GArxtReportDataTable(ds.Tables["GArxtReport"]));
            }
            if ((ds.Tables["GAAudit"] != null)) {
                this.Tables.Add(new GAAuditDataTable(ds.Tables["GAAudit"]));
            }
            if ((ds.Tables["GAFile"] != null)) {
                this.Tables.Add(new GAFileDataTable(ds.Tables["GAFile"]));
            }
            if ((ds.Tables["GAManageChange"] != null)) {
                this.Tables.Add(new GAManageChangeDataTable(ds.Tables["GAManageChange"]));
            }
            if ((ds.Tables["GATextItem"] != null)) {
                this.Tables.Add(new GATextItemDataTable(ds.Tables["GATextItem"]));
            }
            if ((ds.Tables["GAControl"] != null)) {
                this.Tables.Add(new GAControlDataTable(ds.Tables["GAControl"]));
            }
            if ((ds.Tables["GARisk"] != null)) {
                this.Tables.Add(new GARiskDataTable(ds.Tables["GARisk"]));
            }
            if ((ds.Tables["GARiskControl"] != null)) {
                this.Tables.Add(new GARiskControlDataTable(ds.Tables["GARiskControl"]));
            }
            if ((ds.Tables["GAProcedureReference"] != null)) {
                this.Tables.Add(new GAProcedureReferenceDataTable(ds.Tables["GAProcedureReference"]));
            }
            if ((ds.Tables["GAOpportunity"] != null)) {
                this.Tables.Add(new GAOpportunityDataTable(ds.Tables["GAOpportunity"]));
            }
            if ((ds.Tables["GADaysReport"] != null)) {
                this.Tables.Add(new GADaysReportDataTable(ds.Tables["GADaysReport"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableGAAction = ((GAActionDataTable)(this.Tables["GAAction"]));
            if ((this.tableGAAction != null)) {
                this.tableGAAction.InitVars();
            }
            this.tableGAMeeting = ((GAMeetingDataTable)(this.Tables["GAMeeting"]));
            if ((this.tableGAMeeting != null)) {
                this.tableGAMeeting.InitVars();
            }
            this.tableGAIncidentReport = ((GAIncidentReportDataTable)(this.Tables["GAIncidentReport"]));
            if ((this.tableGAIncidentReport != null)) {
                this.tableGAIncidentReport.InitVars();
            }
            this.tableGAInjuredParty = ((GAInjuredPartyDataTable)(this.Tables["GAInjuredParty"]));
            if ((this.tableGAInjuredParty != null)) {
                this.tableGAInjuredParty.InitVars();
            }
            this.tableGAHazardIdentification = ((GAHazardIdentificationDataTable)(this.Tables["GAHazardIdentification"]));
            if ((this.tableGAHazardIdentification != null)) {
                this.tableGAHazardIdentification.InitVars();
            }
            this.tableGAEquipmentDamageReport = ((GAEquipmentDamageReportDataTable)(this.Tables["GAEquipmentDamageReport"]));
            if ((this.tableGAEquipmentDamageReport != null)) {
                this.tableGAEquipmentDamageReport.InitVars();
            }
            this.tableGAMeetingPersonList = ((GAMeetingPersonListDataTable)(this.Tables["GAMeetingPersonList"]));
            if ((this.tableGAMeetingPersonList != null)) {
                this.tableGAMeetingPersonList.InitVars();
            }
            this.tableGAMeansOfContact = ((GAMeansOfContactDataTable)(this.Tables["GAMeansOfContact"]));
            if ((this.tableGAMeansOfContact != null)) {
                this.tableGAMeansOfContact.InitVars();
            }
            this.tableGAPersonnel = ((GAPersonnelDataTable)(this.Tables["GAPersonnel"]));
            if ((this.tableGAPersonnel != null)) {
                this.tableGAPersonnel.InitVars();
            }
            this.tableGAEmployment = ((GAEmploymentDataTable)(this.Tables["GAEmployment"]));
            if ((this.tableGAEmployment != null)) {
                this.tableGAEmployment.InitVars();
            }
            this.tableGACourse = ((GACourseDataTable)(this.Tables["GACourse"]));
            if ((this.tableGACourse != null)) {
                this.tableGACourse.InitVars();
            }
            this.tableGACourse_CoursePersonListView = ((GACourse_CoursePersonListViewDataTable)(this.Tables["GACourse_CoursePersonListView"]));
            if ((this.tableGACourse_CoursePersonListView != null)) {
                this.tableGACourse_CoursePersonListView.InitVars();
            }
            this.tableGANextOfKin = ((GANextOfKinDataTable)(this.Tables["GANextOfKin"]));
            if ((this.tableGANextOfKin != null)) {
                this.tableGANextOfKin.InitVars();
            }
            this.tableGACertificate = ((GACertificateDataTable)(this.Tables["GACertificate"]));
            if ((this.tableGACertificate != null)) {
                this.tableGACertificate.InitVars();
            }
            this.tableGAIncidentReportView = ((GAIncidentReportViewDataTable)(this.Tables["GAIncidentReportView"]));
            if ((this.tableGAIncidentReportView != null)) {
                this.tableGAIncidentReportView.InitVars();
            }
            this.tableGAIncidentReport_InjuredPartyView = ((GAIncidentReport_InjuredPartyViewDataTable)(this.Tables["GAIncidentReport_InjuredPartyView"]));
            if ((this.tableGAIncidentReport_InjuredPartyView != null)) {
                this.tableGAIncidentReport_InjuredPartyView.InitVars();
            }
            this.tableGASafetyObservation = ((GASafetyObservationDataTable)(this.Tables["GASafetyObservation"]));
            if ((this.tableGASafetyObservation != null)) {
                this.tableGASafetyObservation.InitVars();
            }
            this.tableGADailyEmployeeCountView = ((GADailyEmployeeCountViewDataTable)(this.Tables["GADailyEmployeeCountView"]));
            if ((this.tableGADailyEmployeeCountView != null)) {
                this.tableGADailyEmployeeCountView.InitVars();
            }
            this.tableGAIncidentReportCountView = ((GAIncidentReportCountViewDataTable)(this.Tables["GAIncidentReportCountView"]));
            if ((this.tableGAIncidentReportCountView != null)) {
                this.tableGAIncidentReportCountView.InitVars();
            }
            this.tableGAIncidentReportDailyEmployeeCountView = ((GAIncidentReportDailyEmployeeCountViewDataTable)(this.Tables["GAIncidentReportDailyEmployeeCountView"]));
            if ((this.tableGAIncidentReportDailyEmployeeCountView != null)) {
                this.tableGAIncidentReportDailyEmployeeCountView.InitVars();
            }
            this.tableGAMeetingText = ((GAMeetingTextDataTable)(this.Tables["GAMeetingText"]));
            if ((this.tableGAMeetingText != null)) {
                this.tableGAMeetingText.InitVars();
            }
            this.tableGArxtReport = ((GArxtReportDataTable)(this.Tables["GArxtReport"]));
            if ((this.tableGArxtReport != null)) {
                this.tableGArxtReport.InitVars();
            }
            this.tableGAAudit = ((GAAuditDataTable)(this.Tables["GAAudit"]));
            if ((this.tableGAAudit != null)) {
                this.tableGAAudit.InitVars();
            }
            this.tableGAFile = ((GAFileDataTable)(this.Tables["GAFile"]));
            if ((this.tableGAFile != null)) {
                this.tableGAFile.InitVars();
            }
            this.tableGAManageChange = ((GAManageChangeDataTable)(this.Tables["GAManageChange"]));
            if ((this.tableGAManageChange != null)) {
                this.tableGAManageChange.InitVars();
            }
            this.tableGATextItem = ((GATextItemDataTable)(this.Tables["GATextItem"]));
            if ((this.tableGATextItem != null)) {
                this.tableGATextItem.InitVars();
            }
            this.tableGAControl = ((GAControlDataTable)(this.Tables["GAControl"]));
            if ((this.tableGAControl != null)) {
                this.tableGAControl.InitVars();
            }
            this.tableGARisk = ((GARiskDataTable)(this.Tables["GARisk"]));
            if ((this.tableGARisk != null)) {
                this.tableGARisk.InitVars();
            }
            this.tableGARiskControl = ((GARiskControlDataTable)(this.Tables["GARiskControl"]));
            if ((this.tableGARiskControl != null)) {
                this.tableGARiskControl.InitVars();
            }
            this.tableGAProcedureReference = ((GAProcedureReferenceDataTable)(this.Tables["GAProcedureReference"]));
            if ((this.tableGAProcedureReference != null)) {
                this.tableGAProcedureReference.InitVars();
            }
            this.tableGAOpportunity = ((GAOpportunityDataTable)(this.Tables["GAOpportunity"]));
            if ((this.tableGAOpportunity != null)) {
                this.tableGAOpportunity.InitVars();
            }
            this.tableGADaysReport = ((GADaysReportDataTable)(this.Tables["GADaysReport"]));
            if ((this.tableGADaysReport != null)) {
                this.tableGADaysReport.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "ReportView";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ReportView.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableGAAction = new GAActionDataTable();
            this.Tables.Add(this.tableGAAction);
            this.tableGAMeeting = new GAMeetingDataTable();
            this.Tables.Add(this.tableGAMeeting);
            this.tableGAIncidentReport = new GAIncidentReportDataTable();
            this.Tables.Add(this.tableGAIncidentReport);
            this.tableGAInjuredParty = new GAInjuredPartyDataTable();
            this.Tables.Add(this.tableGAInjuredParty);
            this.tableGAHazardIdentification = new GAHazardIdentificationDataTable();
            this.Tables.Add(this.tableGAHazardIdentification);
            this.tableGAEquipmentDamageReport = new GAEquipmentDamageReportDataTable();
            this.Tables.Add(this.tableGAEquipmentDamageReport);
            this.tableGAMeetingPersonList = new GAMeetingPersonListDataTable();
            this.Tables.Add(this.tableGAMeetingPersonList);
            this.tableGAMeansOfContact = new GAMeansOfContactDataTable();
            this.Tables.Add(this.tableGAMeansOfContact);
            this.tableGAPersonnel = new GAPersonnelDataTable();
            this.Tables.Add(this.tableGAPersonnel);
            this.tableGAEmployment = new GAEmploymentDataTable();
            this.Tables.Add(this.tableGAEmployment);
            this.tableGACourse = new GACourseDataTable();
            this.Tables.Add(this.tableGACourse);
            this.tableGACourse_CoursePersonListView = new GACourse_CoursePersonListViewDataTable();
            this.Tables.Add(this.tableGACourse_CoursePersonListView);
            this.tableGANextOfKin = new GANextOfKinDataTable();
            this.Tables.Add(this.tableGANextOfKin);
            this.tableGACertificate = new GACertificateDataTable();
            this.Tables.Add(this.tableGACertificate);
            this.tableGAIncidentReportView = new GAIncidentReportViewDataTable();
            this.Tables.Add(this.tableGAIncidentReportView);
            this.tableGAIncidentReport_InjuredPartyView = new GAIncidentReport_InjuredPartyViewDataTable();
            this.Tables.Add(this.tableGAIncidentReport_InjuredPartyView);
            this.tableGASafetyObservation = new GASafetyObservationDataTable();
            this.Tables.Add(this.tableGASafetyObservation);
            this.tableGADailyEmployeeCountView = new GADailyEmployeeCountViewDataTable();
            this.Tables.Add(this.tableGADailyEmployeeCountView);
            this.tableGAIncidentReportCountView = new GAIncidentReportCountViewDataTable();
            this.Tables.Add(this.tableGAIncidentReportCountView);
            this.tableGAIncidentReportDailyEmployeeCountView = new GAIncidentReportDailyEmployeeCountViewDataTable();
            this.Tables.Add(this.tableGAIncidentReportDailyEmployeeCountView);
            this.tableGAMeetingText = new GAMeetingTextDataTable();
            this.Tables.Add(this.tableGAMeetingText);
            this.tableGArxtReport = new GArxtReportDataTable();
            this.Tables.Add(this.tableGArxtReport);
            this.tableGAAudit = new GAAuditDataTable();
            this.Tables.Add(this.tableGAAudit);
            this.tableGAFile = new GAFileDataTable();
            this.Tables.Add(this.tableGAFile);
            this.tableGAManageChange = new GAManageChangeDataTable();
            this.Tables.Add(this.tableGAManageChange);
            this.tableGATextItem = new GATextItemDataTable();
            this.Tables.Add(this.tableGATextItem);
            this.tableGAControl = new GAControlDataTable();
            this.Tables.Add(this.tableGAControl);
            this.tableGARisk = new GARiskDataTable();
            this.Tables.Add(this.tableGARisk);
            this.tableGARiskControl = new GARiskControlDataTable();
            this.Tables.Add(this.tableGARiskControl);
            this.tableGAProcedureReference = new GAProcedureReferenceDataTable();
            this.Tables.Add(this.tableGAProcedureReference);
            this.tableGAOpportunity = new GAOpportunityDataTable();
            this.Tables.Add(this.tableGAOpportunity);
            this.tableGADaysReport = new GADaysReportDataTable();
            this.Tables.Add(this.tableGADaysReport);
        }
        
        private bool ShouldSerializeGAAction() {
            return false;
        }
        
        private bool ShouldSerializeGAMeeting() {
            return false;
        }
        
        private bool ShouldSerializeGAIncidentReport() {
            return false;
        }
        
        private bool ShouldSerializeGAInjuredParty() {
            return false;
        }
        
        private bool ShouldSerializeGAHazardIdentification() {
            return false;
        }
        
        private bool ShouldSerializeGAEquipmentDamageReport() {
            return false;
        }
        
        private bool ShouldSerializeGAMeetingPersonList() {
            return false;
        }
        
        private bool ShouldSerializeGAMeansOfContact() {
            return false;
        }
        
        private bool ShouldSerializeGAPersonnel() {
            return false;
        }
        
        private bool ShouldSerializeGAEmployment() {
            return false;
        }
        
        private bool ShouldSerializeGACourse() {
            return false;
        }
        
        private bool ShouldSerializeGACourse_CoursePersonListView() {
            return false;
        }
        
        private bool ShouldSerializeGANextOfKin() {
            return false;
        }
        
        private bool ShouldSerializeGACertificate() {
            return false;
        }
        
        private bool ShouldSerializeGAIncidentReportView() {
            return false;
        }
        
        private bool ShouldSerializeGAIncidentReport_InjuredPartyView() {
            return false;
        }
        
        private bool ShouldSerializeGASafetyObservation() {
            return false;
        }
        
        private bool ShouldSerializeGADailyEmployeeCountView() {
            return false;
        }
        
        private bool ShouldSerializeGAIncidentReportCountView() {
            return false;
        }
        
        private bool ShouldSerializeGAIncidentReportDailyEmployeeCountView() {
            return false;
        }
        
        private bool ShouldSerializeGAMeetingText() {
            return false;
        }
        
        private bool ShouldSerializeGArxtReport() {
            return false;
        }
        
        private bool ShouldSerializeGAAudit() {
            return false;
        }
        
        private bool ShouldSerializeGAFile() {
            return false;
        }
        
        private bool ShouldSerializeGAManageChange() {
            return false;
        }
        
        private bool ShouldSerializeGATextItem() {
            return false;
        }
        
        private bool ShouldSerializeGAControl() {
            return false;
        }
        
        private bool ShouldSerializeGARisk() {
            return false;
        }
        
        private bool ShouldSerializeGARiskControl() {
            return false;
        }
        
        private bool ShouldSerializeGAProcedureReference() {
            return false;
        }
        
        private bool ShouldSerializeGAOpportunity() {
            return false;
        }
        
        private bool ShouldSerializeGADaysReport() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void GAActionRowChangeEventHandler(object sender, GAActionRowChangeEvent e);
        
        public delegate void GAMeetingRowChangeEventHandler(object sender, GAMeetingRowChangeEvent e);
        
        public delegate void GAIncidentReportRowChangeEventHandler(object sender, GAIncidentReportRowChangeEvent e);
        
        public delegate void GAInjuredPartyRowChangeEventHandler(object sender, GAInjuredPartyRowChangeEvent e);
        
        public delegate void GAHazardIdentificationRowChangeEventHandler(object sender, GAHazardIdentificationRowChangeEvent e);
        
        public delegate void GAEquipmentDamageReportRowChangeEventHandler(object sender, GAEquipmentDamageReportRowChangeEvent e);
        
        public delegate void GAMeetingPersonListRowChangeEventHandler(object sender, GAMeetingPersonListRowChangeEvent e);
        
        public delegate void GAMeansOfContactRowChangeEventHandler(object sender, GAMeansOfContactRowChangeEvent e);
        
        public delegate void GAPersonnelRowChangeEventHandler(object sender, GAPersonnelRowChangeEvent e);
        
        public delegate void GAEmploymentRowChangeEventHandler(object sender, GAEmploymentRowChangeEvent e);
        
        public delegate void GACourseRowChangeEventHandler(object sender, GACourseRowChangeEvent e);
        
        public delegate void GACourse_CoursePersonListViewRowChangeEventHandler(object sender, GACourse_CoursePersonListViewRowChangeEvent e);
        
        public delegate void GANextOfKinRowChangeEventHandler(object sender, GANextOfKinRowChangeEvent e);
        
        public delegate void GACertificateRowChangeEventHandler(object sender, GACertificateRowChangeEvent e);
        
        public delegate void GAIncidentReportViewRowChangeEventHandler(object sender, GAIncidentReportViewRowChangeEvent e);
        
        public delegate void GAIncidentReport_InjuredPartyViewRowChangeEventHandler(object sender, GAIncidentReport_InjuredPartyViewRowChangeEvent e);
        
        public delegate void GASafetyObservationRowChangeEventHandler(object sender, GASafetyObservationRowChangeEvent e);
        
        public delegate void GADailyEmployeeCountViewRowChangeEventHandler(object sender, GADailyEmployeeCountViewRowChangeEvent e);
        
        public delegate void GAIncidentReportCountViewRowChangeEventHandler(object sender, GAIncidentReportCountViewRowChangeEvent e);
        
        public delegate void GAIncidentReportDailyEmployeeCountViewRowChangeEventHandler(object sender, GAIncidentReportDailyEmployeeCountViewRowChangeEvent e);
        
        public delegate void GAMeetingTextRowChangeEventHandler(object sender, GAMeetingTextRowChangeEvent e);
        
        public delegate void GArxtReportRowChangeEventHandler(object sender, GArxtReportRowChangeEvent e);
        
        public delegate void GAAuditRowChangeEventHandler(object sender, GAAuditRowChangeEvent e);
        
        public delegate void GAFileRowChangeEventHandler(object sender, GAFileRowChangeEvent e);
        
        public delegate void GAManageChangeRowChangeEventHandler(object sender, GAManageChangeRowChangeEvent e);
        
        public delegate void GATextItemRowChangeEventHandler(object sender, GATextItemRowChangeEvent e);
        
        public delegate void GAControlRowChangeEventHandler(object sender, GAControlRowChangeEvent e);
        
        public delegate void GARiskRowChangeEventHandler(object sender, GARiskRowChangeEvent e);
        
        public delegate void GARiskControlRowChangeEventHandler(object sender, GARiskControlRowChangeEvent e);
        
        public delegate void GAProcedureReferenceRowChangeEventHandler(object sender, GAProcedureReferenceRowChangeEvent e);
        
        public delegate void GAOpportunityRowChangeEventHandler(object sender, GAOpportunityRowChangeEvent e);
        
        public delegate void GADaysReportRowChangeEventHandler(object sender, GADaysReportRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAActionDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnActionRowId;
            
            private DataColumn columnActionReferenceId;
            
            private DataColumn columnActionName;
            
            private DataColumn columnWorkflowId;
            
            private DataColumn columnResponsible;
            
            private DataColumn columnDescription;
            
            private DataColumn columnNoteInstructions;
            
            private DataColumn columnReportDate;
            
            private DataColumn columnDateEndEstimated;
            
            private DataColumn columnDateEndActual;
            
            private DataColumn columnProcedureId;
            
            private DataColumn columnWorkflowname;
            
            private DataColumn columnSubject;
            
            private DataColumn columnName;
            
            private DataColumn columnActionStatusListsRowId;
            
            private DataColumn columnPriorityListsRowId;
            
            private DataColumn columnResponsibleRoleListsRowId;
            
            private DataColumn columnProcedureRowId;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GAActionDataTable() : 
                    base("GAAction") {
                this.InitClass();
            }
            
            internal GAActionDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ActionRowIdColumn {
                get {
                    return this.columnActionRowId;
                }
            }
            
            internal DataColumn ActionReferenceIdColumn {
                get {
                    return this.columnActionReferenceId;
                }
            }
            
            internal DataColumn ActionNameColumn {
                get {
                    return this.columnActionName;
                }
            }
            
            internal DataColumn WorkflowIdColumn {
                get {
                    return this.columnWorkflowId;
                }
            }
            
            internal DataColumn ResponsibleColumn {
                get {
                    return this.columnResponsible;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn NoteInstructionsColumn {
                get {
                    return this.columnNoteInstructions;
                }
            }
            
            internal DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            internal DataColumn DateEndEstimatedColumn {
                get {
                    return this.columnDateEndEstimated;
                }
            }
            
            internal DataColumn DateEndActualColumn {
                get {
                    return this.columnDateEndActual;
                }
            }
            
            internal DataColumn ProcedureIdColumn {
                get {
                    return this.columnProcedureId;
                }
            }
            
            internal DataColumn WorkflownameColumn {
                get {
                    return this.columnWorkflowname;
                }
            }
            
            internal DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn ActionStatusListsRowIdColumn {
                get {
                    return this.columnActionStatusListsRowId;
                }
            }
            
            internal DataColumn PriorityListsRowIdColumn {
                get {
                    return this.columnPriorityListsRowId;
                }
            }
            
            internal DataColumn ResponsibleRoleListsRowIdColumn {
                get {
                    return this.columnResponsibleRoleListsRowId;
                }
            }
            
            internal DataColumn ProcedureRowIdColumn {
                get {
                    return this.columnProcedureRowId;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GAActionRow this[int index] {
                get {
                    return ((GAActionRow)(this.Rows[index]));
                }
            }
            
            public event GAActionRowChangeEventHandler GAActionRowChanged;
            
            public event GAActionRowChangeEventHandler GAActionRowChanging;
            
            public event GAActionRowChangeEventHandler GAActionRowDeleted;
            
            public event GAActionRowChangeEventHandler GAActionRowDeleting;
            
            public void AddGAActionRow(GAActionRow row) {
                this.Rows.Add(row);
            }
            
            public GAActionRow AddGAActionRow(
                        string ActionReferenceId, 
                        string ActionName, 
                        string WorkflowId, 
                        string Responsible, 
                        string Description, 
                        string NoteInstructions, 
                        System.DateTime ReportDate, 
                        System.DateTime DateEndEstimated, 
                        System.DateTime DateEndActual, 
                        string ProcedureId, 
                        string Workflowname, 
                        string Subject, 
                        string Name, 
                        string ActionStatusListsRowId, 
                        string PriorityListsRowId, 
                        string ResponsibleRoleListsRowId, 
                        string ProcedureRowId, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAActionRow rowGAActionRow = ((GAActionRow)(this.NewRow()));
                rowGAActionRow.ItemArray = new object[] {
                        null,
                        ActionReferenceId,
                        ActionName,
                        WorkflowId,
                        Responsible,
                        Description,
                        NoteInstructions,
                        ReportDate,
                        DateEndEstimated,
                        DateEndActual,
                        ProcedureId,
                        Workflowname,
                        Subject,
                        Name,
                        ActionStatusListsRowId,
                        PriorityListsRowId,
                        ResponsibleRoleListsRowId,
                        ProcedureRowId,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAActionRow);
                return rowGAActionRow;
            }
            
            public GAActionRow FindByActionRowId(int ActionRowId) {
                return ((GAActionRow)(this.Rows.Find(new object[] {
                            ActionRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAActionDataTable cln = ((GAActionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAActionDataTable();
            }
            
            internal void InitVars() {
                this.columnActionRowId = this.Columns["ActionRowId"];
                this.columnActionReferenceId = this.Columns["ActionReferenceId"];
                this.columnActionName = this.Columns["ActionName"];
                this.columnWorkflowId = this.Columns["WorkflowId"];
                this.columnResponsible = this.Columns["Responsible"];
                this.columnDescription = this.Columns["Description"];
                this.columnNoteInstructions = this.Columns["NoteInstructions"];
                this.columnReportDate = this.Columns["ReportDate"];
                this.columnDateEndEstimated = this.Columns["DateEndEstimated"];
                this.columnDateEndActual = this.Columns["DateEndActual"];
                this.columnProcedureId = this.Columns["ProcedureId"];
                this.columnWorkflowname = this.Columns["Workflowname"];
                this.columnSubject = this.Columns["Subject"];
                this.columnName = this.Columns["Name"];
                this.columnActionStatusListsRowId = this.Columns["ActionStatusListsRowId"];
                this.columnPriorityListsRowId = this.Columns["PriorityListsRowId"];
                this.columnResponsibleRoleListsRowId = this.Columns["ResponsibleRoleListsRowId"];
                this.columnProcedureRowId = this.Columns["ProcedureRowId"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnActionRowId = new DataColumn("ActionRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActionRowId);
                this.columnActionReferenceId = new DataColumn("ActionReferenceId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActionReferenceId);
                this.columnActionName = new DataColumn("ActionName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActionName);
                this.columnWorkflowId = new DataColumn("WorkflowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWorkflowId);
                this.columnResponsible = new DataColumn("Responsible", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResponsible);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnNoteInstructions = new DataColumn("NoteInstructions", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNoteInstructions);
                this.columnReportDate = new DataColumn("ReportDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReportDate);
                this.columnDateEndEstimated = new DataColumn("DateEndEstimated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateEndEstimated);
                this.columnDateEndActual = new DataColumn("DateEndActual", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateEndActual);
                this.columnProcedureId = new DataColumn("ProcedureId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProcedureId);
                this.columnWorkflowname = new DataColumn("Workflowname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWorkflowname);
                this.columnSubject = new DataColumn("Subject", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSubject);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnActionStatusListsRowId = new DataColumn("ActionStatusListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActionStatusListsRowId);
                this.columnPriorityListsRowId = new DataColumn("PriorityListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPriorityListsRowId);
                this.columnResponsibleRoleListsRowId = new DataColumn("ResponsibleRoleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResponsibleRoleListsRowId);
                this.columnProcedureRowId = new DataColumn("ProcedureRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProcedureRowId);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey1", new DataColumn[] {
                                this.columnActionRowId}, true));
                this.columnActionRowId.AutoIncrement = true;
                this.columnActionRowId.AllowDBNull = false;
                this.columnActionRowId.ReadOnly = true;
                this.columnActionRowId.Unique = true;
            }
            
            public GAActionRow NewGAActionRow() {
                return ((GAActionRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAActionRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAActionRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAActionRowChanged != null)) {
                    this.GAActionRowChanged(this, new GAActionRowChangeEvent(((GAActionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAActionRowChanging != null)) {
                    this.GAActionRowChanging(this, new GAActionRowChangeEvent(((GAActionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAActionRowDeleted != null)) {
                    this.GAActionRowDeleted(this, new GAActionRowChangeEvent(((GAActionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAActionRowDeleting != null)) {
                    this.GAActionRowDeleting(this, new GAActionRowChangeEvent(((GAActionRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAActionRow(GAActionRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAActionRow : DataRow {
            
            private GAActionDataTable tableGAAction;
            
            internal GAActionRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAAction = ((GAActionDataTable)(this.Table));
            }
            
            public int ActionRowId {
                get {
                    return ((int)(this[this.tableGAAction.ActionRowIdColumn]));
                }
                set {
                    this[this.tableGAAction.ActionRowIdColumn] = value;
                }
            }
            
            public string ActionReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.ActionReferenceIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.ActionReferenceIdColumn] = value;
                }
            }
            
            public string ActionName {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.ActionNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.ActionNameColumn] = value;
                }
            }
            
            public string WorkflowId {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.WorkflowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.WorkflowIdColumn] = value;
                }
            }
            
            public string Responsible {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.ResponsibleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.ResponsibleColumn] = value;
                }
            }
            
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.DescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.DescriptionColumn] = value;
                }
            }
            
            public string NoteInstructions {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.NoteInstructionsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.NoteInstructionsColumn] = value;
                }
            }
            
            public System.DateTime ReportDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAAction.ReportDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.ReportDateColumn] = value;
                }
            }
            
            public System.DateTime DateEndEstimated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAAction.DateEndEstimatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.DateEndEstimatedColumn] = value;
                }
            }
            
            public System.DateTime DateEndActual {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAAction.DateEndActualColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.DateEndActualColumn] = value;
                }
            }
            
            public string ProcedureId {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.ProcedureIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.ProcedureIdColumn] = value;
                }
            }
            
            public string Workflowname {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.WorkflownameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.WorkflownameColumn] = value;
                }
            }
            
            public string Subject {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.SubjectColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.SubjectColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.NameColumn] = value;
                }
            }
            
            public string ActionStatusListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.ActionStatusListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.ActionStatusListsRowIdColumn] = value;
                }
            }
            
            public string PriorityListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.PriorityListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.PriorityListsRowIdColumn] = value;
                }
            }
            
            public string ResponsibleRoleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.ResponsibleRoleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.ResponsibleRoleListsRowIdColumn] = value;
                }
            }
            
            public string ProcedureRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.ProcedureRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.ProcedureRowIdColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAAction.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAAction.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAAction.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAAction.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAAction.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAAction.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAAction.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAAction.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAAction.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAAction.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAAction.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAAction.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAAction.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAAction.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAAction.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAAction.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAAction.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAction.IntFree3Column] = value;
                }
            }
            
            public bool IsActionReferenceIdNull() {
                return this.IsNull(this.tableGAAction.ActionReferenceIdColumn);
            }
            
            public void SetActionReferenceIdNull() {
                this[this.tableGAAction.ActionReferenceIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsActionNameNull() {
                return this.IsNull(this.tableGAAction.ActionNameColumn);
            }
            
            public void SetActionNameNull() {
                this[this.tableGAAction.ActionNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsWorkflowIdNull() {
                return this.IsNull(this.tableGAAction.WorkflowIdColumn);
            }
            
            public void SetWorkflowIdNull() {
                this[this.tableGAAction.WorkflowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsResponsibleNull() {
                return this.IsNull(this.tableGAAction.ResponsibleColumn);
            }
            
            public void SetResponsibleNull() {
                this[this.tableGAAction.ResponsibleColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGAAction.DescriptionColumn);
            }
            
            public void SetDescriptionNull() {
                this[this.tableGAAction.DescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsNoteInstructionsNull() {
                return this.IsNull(this.tableGAAction.NoteInstructionsColumn);
            }
            
            public void SetNoteInstructionsNull() {
                this[this.tableGAAction.NoteInstructionsColumn] = System.Convert.DBNull;
            }
            
            public bool IsReportDateNull() {
                return this.IsNull(this.tableGAAction.ReportDateColumn);
            }
            
            public void SetReportDateNull() {
                this[this.tableGAAction.ReportDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateEndEstimatedNull() {
                return this.IsNull(this.tableGAAction.DateEndEstimatedColumn);
            }
            
            public void SetDateEndEstimatedNull() {
                this[this.tableGAAction.DateEndEstimatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateEndActualNull() {
                return this.IsNull(this.tableGAAction.DateEndActualColumn);
            }
            
            public void SetDateEndActualNull() {
                this[this.tableGAAction.DateEndActualColumn] = System.Convert.DBNull;
            }
            
            public bool IsProcedureIdNull() {
                return this.IsNull(this.tableGAAction.ProcedureIdColumn);
            }
            
            public void SetProcedureIdNull() {
                this[this.tableGAAction.ProcedureIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsWorkflownameNull() {
                return this.IsNull(this.tableGAAction.WorkflownameColumn);
            }
            
            public void SetWorkflownameNull() {
                this[this.tableGAAction.WorkflownameColumn] = System.Convert.DBNull;
            }
            
            public bool IsSubjectNull() {
                return this.IsNull(this.tableGAAction.SubjectColumn);
            }
            
            public void SetSubjectNull() {
                this[this.tableGAAction.SubjectColumn] = System.Convert.DBNull;
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tableGAAction.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tableGAAction.NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsActionStatusListsRowIdNull() {
                return this.IsNull(this.tableGAAction.ActionStatusListsRowIdColumn);
            }
            
            public void SetActionStatusListsRowIdNull() {
                this[this.tableGAAction.ActionStatusListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsPriorityListsRowIdNull() {
                return this.IsNull(this.tableGAAction.PriorityListsRowIdColumn);
            }
            
            public void SetPriorityListsRowIdNull() {
                this[this.tableGAAction.PriorityListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsResponsibleRoleListsRowIdNull() {
                return this.IsNull(this.tableGAAction.ResponsibleRoleListsRowIdColumn);
            }
            
            public void SetResponsibleRoleListsRowIdNull() {
                this[this.tableGAAction.ResponsibleRoleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsProcedureRowIdNull() {
                return this.IsNull(this.tableGAAction.ProcedureRowIdColumn);
            }
            
            public void SetProcedureRowIdNull() {
                this[this.tableGAAction.ProcedureRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAAction.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGAAction.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAAction.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGAAction.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAAction.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGAAction.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAAction.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGAAction.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAAction.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGAAction.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAAction.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGAAction.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAAction.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGAAction.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAAction.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGAAction.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAAction.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGAAction.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAAction.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGAAction.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAAction.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGAAction.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAAction.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGAAction.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAAction.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGAAction.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAAction.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGAAction.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAAction.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGAAction.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAAction.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGAAction.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAAction.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGAAction.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAAction.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGAAction.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAAction.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGAAction.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAActionRowChangeEvent : EventArgs {
            
            private GAActionRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAActionRowChangeEvent(GAActionRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAActionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAMeetingDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnMeetingReferenceId;
            
            private DataColumn columnMeetingRowId;
            
            private DataColumn columnName;
            
            private DataColumn columnPlace;
            
            private DataColumn columnInvolvedPersonnelCount;
            
            private DataColumn columnDateOfMeeting;
            
            private DataColumn columnTimeStart;
            
            private DataColumn columnTimeEnd;
            
            private DataColumn columnAgenda;
            
            private DataColumn columnPurpose;
            
            private DataColumn columnReporter;
            
            private DataColumn columnConductor;
            
            private DataColumn columnMeetingOwner;
            
            private DataColumn columnReporterPersonnelRowId;
            
            private DataColumn columnConductorPersonnelRowId;
            
            private DataColumn columnMeetingOwnerPersonnelRowId;
            
            private DataColumn columnDateAndTimeNextMeeting;
            
            private DataColumn columnTypeOfMeetingListsRowId;
            
            private DataColumn columnReferenceIdPrefix;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GAMeetingDataTable() : 
                    base("GAMeeting") {
                this.InitClass();
            }
            
            internal GAMeetingDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn MeetingReferenceIdColumn {
                get {
                    return this.columnMeetingReferenceId;
                }
            }
            
            internal DataColumn MeetingRowIdColumn {
                get {
                    return this.columnMeetingRowId;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn PlaceColumn {
                get {
                    return this.columnPlace;
                }
            }
            
            internal DataColumn InvolvedPersonnelCountColumn {
                get {
                    return this.columnInvolvedPersonnelCount;
                }
            }
            
            internal DataColumn DateOfMeetingColumn {
                get {
                    return this.columnDateOfMeeting;
                }
            }
            
            internal DataColumn TimeStartColumn {
                get {
                    return this.columnTimeStart;
                }
            }
            
            internal DataColumn TimeEndColumn {
                get {
                    return this.columnTimeEnd;
                }
            }
            
            internal DataColumn AgendaColumn {
                get {
                    return this.columnAgenda;
                }
            }
            
            internal DataColumn PurposeColumn {
                get {
                    return this.columnPurpose;
                }
            }
            
            internal DataColumn ReporterColumn {
                get {
                    return this.columnReporter;
                }
            }
            
            internal DataColumn ConductorColumn {
                get {
                    return this.columnConductor;
                }
            }
            
            internal DataColumn MeetingOwnerColumn {
                get {
                    return this.columnMeetingOwner;
                }
            }
            
            internal DataColumn ReporterPersonnelRowIdColumn {
                get {
                    return this.columnReporterPersonnelRowId;
                }
            }
            
            internal DataColumn ConductorPersonnelRowIdColumn {
                get {
                    return this.columnConductorPersonnelRowId;
                }
            }
            
            internal DataColumn MeetingOwnerPersonnelRowIdColumn {
                get {
                    return this.columnMeetingOwnerPersonnelRowId;
                }
            }
            
            internal DataColumn DateAndTimeNextMeetingColumn {
                get {
                    return this.columnDateAndTimeNextMeeting;
                }
            }
            
            internal DataColumn TypeOfMeetingListsRowIdColumn {
                get {
                    return this.columnTypeOfMeetingListsRowId;
                }
            }
            
            internal DataColumn ReferenceIdPrefixColumn {
                get {
                    return this.columnReferenceIdPrefix;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GAMeetingRow this[int index] {
                get {
                    return ((GAMeetingRow)(this.Rows[index]));
                }
            }
            
            public event GAMeetingRowChangeEventHandler GAMeetingRowChanged;
            
            public event GAMeetingRowChangeEventHandler GAMeetingRowChanging;
            
            public event GAMeetingRowChangeEventHandler GAMeetingRowDeleted;
            
            public event GAMeetingRowChangeEventHandler GAMeetingRowDeleting;
            
            public void AddGAMeetingRow(GAMeetingRow row) {
                this.Rows.Add(row);
            }
            
            public GAMeetingRow AddGAMeetingRow(
                        string MeetingReferenceId, 
                        string Name, 
                        string Place, 
                        int InvolvedPersonnelCount, 
                        System.DateTime DateOfMeeting, 
                        System.DateTime TimeStart, 
                        System.DateTime TimeEnd, 
                        string Agenda, 
                        string Purpose, 
                        string Reporter, 
                        string Conductor, 
                        string MeetingOwner, 
                        string ReporterPersonnelRowId, 
                        string ConductorPersonnelRowId, 
                        string MeetingOwnerPersonnelRowId, 
                        System.DateTime DateAndTimeNextMeeting, 
                        string TypeOfMeetingListsRowId, 
                        string ReferenceIdPrefix, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAMeetingRow rowGAMeetingRow = ((GAMeetingRow)(this.NewRow()));
                rowGAMeetingRow.ItemArray = new object[] {
                        MeetingReferenceId,
                        null,
                        Name,
                        Place,
                        InvolvedPersonnelCount,
                        DateOfMeeting,
                        TimeStart,
                        TimeEnd,
                        Agenda,
                        Purpose,
                        Reporter,
                        Conductor,
                        MeetingOwner,
                        ReporterPersonnelRowId,
                        ConductorPersonnelRowId,
                        MeetingOwnerPersonnelRowId,
                        DateAndTimeNextMeeting,
                        TypeOfMeetingListsRowId,
                        ReferenceIdPrefix,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAMeetingRow);
                return rowGAMeetingRow;
            }
            
            public GAMeetingRow FindByMeetingRowId(int MeetingRowId) {
                return ((GAMeetingRow)(this.Rows.Find(new object[] {
                            MeetingRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAMeetingDataTable cln = ((GAMeetingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAMeetingDataTable();
            }
            
            internal void InitVars() {
                this.columnMeetingReferenceId = this.Columns["MeetingReferenceId"];
                this.columnMeetingRowId = this.Columns["MeetingRowId"];
                this.columnName = this.Columns["Name"];
                this.columnPlace = this.Columns["Place"];
                this.columnInvolvedPersonnelCount = this.Columns["InvolvedPersonnelCount"];
                this.columnDateOfMeeting = this.Columns["DateOfMeeting"];
                this.columnTimeStart = this.Columns["TimeStart"];
                this.columnTimeEnd = this.Columns["TimeEnd"];
                this.columnAgenda = this.Columns["Agenda"];
                this.columnPurpose = this.Columns["Purpose"];
                this.columnReporter = this.Columns["Reporter"];
                this.columnConductor = this.Columns["Conductor"];
                this.columnMeetingOwner = this.Columns["MeetingOwner"];
                this.columnReporterPersonnelRowId = this.Columns["ReporterPersonnelRowId"];
                this.columnConductorPersonnelRowId = this.Columns["ConductorPersonnelRowId"];
                this.columnMeetingOwnerPersonnelRowId = this.Columns["MeetingOwnerPersonnelRowId"];
                this.columnDateAndTimeNextMeeting = this.Columns["DateAndTimeNextMeeting"];
                this.columnTypeOfMeetingListsRowId = this.Columns["TypeOfMeetingListsRowId"];
                this.columnReferenceIdPrefix = this.Columns["ReferenceIdPrefix"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnMeetingReferenceId = new DataColumn("MeetingReferenceId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMeetingReferenceId);
                this.columnMeetingRowId = new DataColumn("MeetingRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMeetingRowId);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnPlace = new DataColumn("Place", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPlace);
                this.columnInvolvedPersonnelCount = new DataColumn("InvolvedPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnInvolvedPersonnelCount);
                this.columnDateOfMeeting = new DataColumn("DateOfMeeting", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateOfMeeting);
                this.columnTimeStart = new DataColumn("TimeStart", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTimeStart);
                this.columnTimeEnd = new DataColumn("TimeEnd", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTimeEnd);
                this.columnAgenda = new DataColumn("Agenda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAgenda);
                this.columnPurpose = new DataColumn("Purpose", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPurpose);
                this.columnReporter = new DataColumn("Reporter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReporter);
                this.columnConductor = new DataColumn("Conductor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnConductor);
                this.columnMeetingOwner = new DataColumn("MeetingOwner", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMeetingOwner);
                this.columnReporterPersonnelRowId = new DataColumn("ReporterPersonnelRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReporterPersonnelRowId);
                this.columnConductorPersonnelRowId = new DataColumn("ConductorPersonnelRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnConductorPersonnelRowId);
                this.columnMeetingOwnerPersonnelRowId = new DataColumn("MeetingOwnerPersonnelRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMeetingOwnerPersonnelRowId);
                this.columnDateAndTimeNextMeeting = new DataColumn("DateAndTimeNextMeeting", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateAndTimeNextMeeting);
                this.columnTypeOfMeetingListsRowId = new DataColumn("TypeOfMeetingListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTypeOfMeetingListsRowId);
                this.columnReferenceIdPrefix = new DataColumn("ReferenceIdPrefix", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReferenceIdPrefix);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey2", new DataColumn[] {
                                this.columnMeetingRowId}, true));
                this.columnMeetingRowId.AutoIncrement = true;
                this.columnMeetingRowId.AllowDBNull = false;
                this.columnMeetingRowId.ReadOnly = true;
                this.columnMeetingRowId.Unique = true;
            }
            
            public GAMeetingRow NewGAMeetingRow() {
                return ((GAMeetingRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAMeetingRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAMeetingRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAMeetingRowChanged != null)) {
                    this.GAMeetingRowChanged(this, new GAMeetingRowChangeEvent(((GAMeetingRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAMeetingRowChanging != null)) {
                    this.GAMeetingRowChanging(this, new GAMeetingRowChangeEvent(((GAMeetingRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAMeetingRowDeleted != null)) {
                    this.GAMeetingRowDeleted(this, new GAMeetingRowChangeEvent(((GAMeetingRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAMeetingRowDeleting != null)) {
                    this.GAMeetingRowDeleting(this, new GAMeetingRowChangeEvent(((GAMeetingRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAMeetingRow(GAMeetingRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAMeetingRow : DataRow {
            
            private GAMeetingDataTable tableGAMeeting;
            
            internal GAMeetingRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAMeeting = ((GAMeetingDataTable)(this.Table));
            }
            
            public string MeetingReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGAMeeting.MeetingReferenceIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.MeetingReferenceIdColumn] = value;
                }
            }
            
            public int MeetingRowId {
                get {
                    return ((int)(this[this.tableGAMeeting.MeetingRowIdColumn]));
                }
                set {
                    this[this.tableGAMeeting.MeetingRowIdColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGAMeeting.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.NameColumn] = value;
                }
            }
            
            public string Place {
                get {
                    try {
                        return ((string)(this[this.tableGAMeeting.PlaceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.PlaceColumn] = value;
                }
            }
            
            public int InvolvedPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGAMeeting.InvolvedPersonnelCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.InvolvedPersonnelCountColumn] = value;
                }
            }
            
            public System.DateTime DateOfMeeting {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeeting.DateOfMeetingColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.DateOfMeetingColumn] = value;
                }
            }
            
            public System.DateTime TimeStart {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeeting.TimeStartColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.TimeStartColumn] = value;
                }
            }
            
            public System.DateTime TimeEnd {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeeting.TimeEndColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.TimeEndColumn] = value;
                }
            }
            
            public string Agenda {
                get {
                    try {
                        return ((string)(this[this.tableGAMeeting.AgendaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.AgendaColumn] = value;
                }
            }
            
            public string Purpose {
                get {
                    try {
                        return ((string)(this[this.tableGAMeeting.PurposeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.PurposeColumn] = value;
                }
            }
            
            public string Reporter {
                get {
                    try {
                        return ((string)(this[this.tableGAMeeting.ReporterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.ReporterColumn] = value;
                }
            }
            
            public string Conductor {
                get {
                    try {
                        return ((string)(this[this.tableGAMeeting.ConductorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.ConductorColumn] = value;
                }
            }
            
            public string MeetingOwner {
                get {
                    try {
                        return ((string)(this[this.tableGAMeeting.MeetingOwnerColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.MeetingOwnerColumn] = value;
                }
            }
            
            public string ReporterPersonnelRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAMeeting.ReporterPersonnelRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.ReporterPersonnelRowIdColumn] = value;
                }
            }
            
            public string ConductorPersonnelRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAMeeting.ConductorPersonnelRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.ConductorPersonnelRowIdColumn] = value;
                }
            }
            
            public string MeetingOwnerPersonnelRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAMeeting.MeetingOwnerPersonnelRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.MeetingOwnerPersonnelRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateAndTimeNextMeeting {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeeting.DateAndTimeNextMeetingColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.DateAndTimeNextMeetingColumn] = value;
                }
            }
            
            public string TypeOfMeetingListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAMeeting.TypeOfMeetingListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.TypeOfMeetingListsRowIdColumn] = value;
                }
            }
            
            public string ReferenceIdPrefix {
                get {
                    try {
                        return ((string)(this[this.tableGAMeeting.ReferenceIdPrefixColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.ReferenceIdPrefixColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMeeting.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeeting.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMeeting.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeeting.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMeeting.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeeting.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMeeting.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeeting.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeeting.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeeting.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeeting.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeeting.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeeting.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeeting.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeeting.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeeting.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAMeeting.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAMeeting.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAMeeting.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeeting.IntFree3Column] = value;
                }
            }
            
            public bool IsMeetingReferenceIdNull() {
                return this.IsNull(this.tableGAMeeting.MeetingReferenceIdColumn);
            }
            
            public void SetMeetingReferenceIdNull() {
                this[this.tableGAMeeting.MeetingReferenceIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tableGAMeeting.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tableGAMeeting.NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsPlaceNull() {
                return this.IsNull(this.tableGAMeeting.PlaceColumn);
            }
            
            public void SetPlaceNull() {
                this[this.tableGAMeeting.PlaceColumn] = System.Convert.DBNull;
            }
            
            public bool IsInvolvedPersonnelCountNull() {
                return this.IsNull(this.tableGAMeeting.InvolvedPersonnelCountColumn);
            }
            
            public void SetInvolvedPersonnelCountNull() {
                this[this.tableGAMeeting.InvolvedPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateOfMeetingNull() {
                return this.IsNull(this.tableGAMeeting.DateOfMeetingColumn);
            }
            
            public void SetDateOfMeetingNull() {
                this[this.tableGAMeeting.DateOfMeetingColumn] = System.Convert.DBNull;
            }
            
            public bool IsTimeStartNull() {
                return this.IsNull(this.tableGAMeeting.TimeStartColumn);
            }
            
            public void SetTimeStartNull() {
                this[this.tableGAMeeting.TimeStartColumn] = System.Convert.DBNull;
            }
            
            public bool IsTimeEndNull() {
                return this.IsNull(this.tableGAMeeting.TimeEndColumn);
            }
            
            public void SetTimeEndNull() {
                this[this.tableGAMeeting.TimeEndColumn] = System.Convert.DBNull;
            }
            
            public bool IsAgendaNull() {
                return this.IsNull(this.tableGAMeeting.AgendaColumn);
            }
            
            public void SetAgendaNull() {
                this[this.tableGAMeeting.AgendaColumn] = System.Convert.DBNull;
            }
            
            public bool IsPurposeNull() {
                return this.IsNull(this.tableGAMeeting.PurposeColumn);
            }
            
            public void SetPurposeNull() {
                this[this.tableGAMeeting.PurposeColumn] = System.Convert.DBNull;
            }
            
            public bool IsReporterNull() {
                return this.IsNull(this.tableGAMeeting.ReporterColumn);
            }
            
            public void SetReporterNull() {
                this[this.tableGAMeeting.ReporterColumn] = System.Convert.DBNull;
            }
            
            public bool IsConductorNull() {
                return this.IsNull(this.tableGAMeeting.ConductorColumn);
            }
            
            public void SetConductorNull() {
                this[this.tableGAMeeting.ConductorColumn] = System.Convert.DBNull;
            }
            
            public bool IsMeetingOwnerNull() {
                return this.IsNull(this.tableGAMeeting.MeetingOwnerColumn);
            }
            
            public void SetMeetingOwnerNull() {
                this[this.tableGAMeeting.MeetingOwnerColumn] = System.Convert.DBNull;
            }
            
            public bool IsReporterPersonnelRowIdNull() {
                return this.IsNull(this.tableGAMeeting.ReporterPersonnelRowIdColumn);
            }
            
            public void SetReporterPersonnelRowIdNull() {
                this[this.tableGAMeeting.ReporterPersonnelRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsConductorPersonnelRowIdNull() {
                return this.IsNull(this.tableGAMeeting.ConductorPersonnelRowIdColumn);
            }
            
            public void SetConductorPersonnelRowIdNull() {
                this[this.tableGAMeeting.ConductorPersonnelRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsMeetingOwnerPersonnelRowIdNull() {
                return this.IsNull(this.tableGAMeeting.MeetingOwnerPersonnelRowIdColumn);
            }
            
            public void SetMeetingOwnerPersonnelRowIdNull() {
                this[this.tableGAMeeting.MeetingOwnerPersonnelRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateAndTimeNextMeetingNull() {
                return this.IsNull(this.tableGAMeeting.DateAndTimeNextMeetingColumn);
            }
            
            public void SetDateAndTimeNextMeetingNull() {
                this[this.tableGAMeeting.DateAndTimeNextMeetingColumn] = System.Convert.DBNull;
            }
            
            public bool IsTypeOfMeetingListsRowIdNull() {
                return this.IsNull(this.tableGAMeeting.TypeOfMeetingListsRowIdColumn);
            }
            
            public void SetTypeOfMeetingListsRowIdNull() {
                this[this.tableGAMeeting.TypeOfMeetingListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsReferenceIdPrefixNull() {
                return this.IsNull(this.tableGAMeeting.ReferenceIdPrefixColumn);
            }
            
            public void SetReferenceIdPrefixNull() {
                this[this.tableGAMeeting.ReferenceIdPrefixColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAMeeting.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGAMeeting.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAMeeting.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGAMeeting.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAMeeting.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGAMeeting.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAMeeting.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGAMeeting.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAMeeting.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGAMeeting.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAMeeting.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGAMeeting.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAMeeting.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGAMeeting.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAMeeting.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGAMeeting.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAMeeting.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGAMeeting.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAMeeting.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGAMeeting.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAMeeting.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGAMeeting.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAMeeting.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGAMeeting.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAMeeting.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGAMeeting.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAMeeting.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGAMeeting.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAMeeting.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGAMeeting.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAMeeting.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGAMeeting.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAMeeting.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGAMeeting.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAMeeting.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGAMeeting.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAMeeting.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGAMeeting.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAMeetingRowChangeEvent : EventArgs {
            
            private GAMeetingRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAMeetingRowChangeEvent(GAMeetingRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAMeetingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAIncidentReportDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIncidentReportRowId;
            
            private DataColumn columnIncidentId;
            
            private DataColumn columnTitle;
            
            private DataColumn columnIncidentReporter;
            
            private DataColumn columnName;
            
            private DataColumn columnDateAndTimeOfIncident;
            
            private DataColumn columnShortDescription;
            
            private DataColumn columnWitness;
            
            private DataColumn columnHasMaritimeReport;
            
            private DataColumn columnReportDate;
            
            private DataColumn columnImmediateActions;
            
            private DataColumn columnReporter;
            
            private DataColumn columnTaskStatus;
            
            private DataColumn columnWitnessPersonnelRowId;
            
            private DataColumn columnSequenceOfTheIncident;
            
            private DataColumn columnContributionFactorToTheIncident;
            
            private DataColumn columnClassificationListsRowId;
            
            private DataColumn columnReporterJobTitleListsRowId;
            
            private DataColumn columnStatusListsRowId;
            
            private DataColumn columnTypeOfIncidentListsRowId;
            
            private DataColumn columnWorkAreaListsRowId;
            
            private DataColumn columnReferenceIdPrefix;
            
            private DataColumn columnEyeWitness;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GAIncidentReportDataTable() : 
                    base("GAIncidentReport") {
                this.InitClass();
            }
            
            internal GAIncidentReportDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IncidentReportRowIdColumn {
                get {
                    return this.columnIncidentReportRowId;
                }
            }
            
            internal DataColumn IncidentIdColumn {
                get {
                    return this.columnIncidentId;
                }
            }
            
            internal DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            internal DataColumn IncidentReporterColumn {
                get {
                    return this.columnIncidentReporter;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn DateAndTimeOfIncidentColumn {
                get {
                    return this.columnDateAndTimeOfIncident;
                }
            }
            
            internal DataColumn ShortDescriptionColumn {
                get {
                    return this.columnShortDescription;
                }
            }
            
            internal DataColumn WitnessColumn {
                get {
                    return this.columnWitness;
                }
            }
            
            internal DataColumn HasMaritimeReportColumn {
                get {
                    return this.columnHasMaritimeReport;
                }
            }
            
            internal DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            internal DataColumn ImmediateActionsColumn {
                get {
                    return this.columnImmediateActions;
                }
            }
            
            internal DataColumn ReporterColumn {
                get {
                    return this.columnReporter;
                }
            }
            
            internal DataColumn TaskStatusColumn {
                get {
                    return this.columnTaskStatus;
                }
            }
            
            internal DataColumn WitnessPersonnelRowIdColumn {
                get {
                    return this.columnWitnessPersonnelRowId;
                }
            }
            
            internal DataColumn SequenceOfTheIncidentColumn {
                get {
                    return this.columnSequenceOfTheIncident;
                }
            }
            
            internal DataColumn ContributionFactorToTheIncidentColumn {
                get {
                    return this.columnContributionFactorToTheIncident;
                }
            }
            
            internal DataColumn ClassificationListsRowIdColumn {
                get {
                    return this.columnClassificationListsRowId;
                }
            }
            
            internal DataColumn ReporterJobTitleListsRowIdColumn {
                get {
                    return this.columnReporterJobTitleListsRowId;
                }
            }
            
            internal DataColumn StatusListsRowIdColumn {
                get {
                    return this.columnStatusListsRowId;
                }
            }
            
            internal DataColumn TypeOfIncidentListsRowIdColumn {
                get {
                    return this.columnTypeOfIncidentListsRowId;
                }
            }
            
            internal DataColumn WorkAreaListsRowIdColumn {
                get {
                    return this.columnWorkAreaListsRowId;
                }
            }
            
            internal DataColumn ReferenceIdPrefixColumn {
                get {
                    return this.columnReferenceIdPrefix;
                }
            }
            
            internal DataColumn EyeWitnessColumn {
                get {
                    return this.columnEyeWitness;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GAIncidentReportRow this[int index] {
                get {
                    return ((GAIncidentReportRow)(this.Rows[index]));
                }
            }
            
            public event GAIncidentReportRowChangeEventHandler GAIncidentReportRowChanged;
            
            public event GAIncidentReportRowChangeEventHandler GAIncidentReportRowChanging;
            
            public event GAIncidentReportRowChangeEventHandler GAIncidentReportRowDeleted;
            
            public event GAIncidentReportRowChangeEventHandler GAIncidentReportRowDeleting;
            
            public void AddGAIncidentReportRow(GAIncidentReportRow row) {
                this.Rows.Add(row);
            }
            
            public GAIncidentReportRow AddGAIncidentReportRow(
                        string IncidentId, 
                        string Title, 
                        string IncidentReporter, 
                        string Name, 
                        System.DateTime DateAndTimeOfIncident, 
                        string ShortDescription, 
                        string Witness, 
                        bool HasMaritimeReport, 
                        System.DateTime ReportDate, 
                        string ImmediateActions, 
                        string Reporter, 
                        string TaskStatus, 
                        string WitnessPersonnelRowId, 
                        string SequenceOfTheIncident, 
                        string ContributionFactorToTheIncident, 
                        string ClassificationListsRowId, 
                        string ReporterJobTitleListsRowId, 
                        string StatusListsRowId, 
                        string TypeOfIncidentListsRowId, 
                        string WorkAreaListsRowId, 
                        string ReferenceIdPrefix, 
                        string EyeWitness, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAIncidentReportRow rowGAIncidentReportRow = ((GAIncidentReportRow)(this.NewRow()));
                rowGAIncidentReportRow.ItemArray = new object[] {
                        null,
                        IncidentId,
                        Title,
                        IncidentReporter,
                        Name,
                        DateAndTimeOfIncident,
                        ShortDescription,
                        Witness,
                        HasMaritimeReport,
                        ReportDate,
                        ImmediateActions,
                        Reporter,
                        TaskStatus,
                        WitnessPersonnelRowId,
                        SequenceOfTheIncident,
                        ContributionFactorToTheIncident,
                        ClassificationListsRowId,
                        ReporterJobTitleListsRowId,
                        StatusListsRowId,
                        TypeOfIncidentListsRowId,
                        WorkAreaListsRowId,
                        ReferenceIdPrefix,
                        EyeWitness,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAIncidentReportRow);
                return rowGAIncidentReportRow;
            }
            
            public GAIncidentReportRow FindByIncidentReportRowId(int IncidentReportRowId) {
                return ((GAIncidentReportRow)(this.Rows.Find(new object[] {
                            IncidentReportRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAIncidentReportDataTable cln = ((GAIncidentReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAIncidentReportDataTable();
            }
            
            internal void InitVars() {
                this.columnIncidentReportRowId = this.Columns["IncidentReportRowId"];
                this.columnIncidentId = this.Columns["IncidentId"];
                this.columnTitle = this.Columns["Title"];
                this.columnIncidentReporter = this.Columns["IncidentReporter"];
                this.columnName = this.Columns["Name"];
                this.columnDateAndTimeOfIncident = this.Columns["DateAndTimeOfIncident"];
                this.columnShortDescription = this.Columns["ShortDescription"];
                this.columnWitness = this.Columns["Witness"];
                this.columnHasMaritimeReport = this.Columns["HasMaritimeReport"];
                this.columnReportDate = this.Columns["ReportDate"];
                this.columnImmediateActions = this.Columns["ImmediateActions"];
                this.columnReporter = this.Columns["Reporter"];
                this.columnTaskStatus = this.Columns["TaskStatus"];
                this.columnWitnessPersonnelRowId = this.Columns["WitnessPersonnelRowId"];
                this.columnSequenceOfTheIncident = this.Columns["SequenceOfTheIncident"];
                this.columnContributionFactorToTheIncident = this.Columns["ContributionFactorToTheIncident"];
                this.columnClassificationListsRowId = this.Columns["ClassificationListsRowId"];
                this.columnReporterJobTitleListsRowId = this.Columns["ReporterJobTitleListsRowId"];
                this.columnStatusListsRowId = this.Columns["StatusListsRowId"];
                this.columnTypeOfIncidentListsRowId = this.Columns["TypeOfIncidentListsRowId"];
                this.columnWorkAreaListsRowId = this.Columns["WorkAreaListsRowId"];
                this.columnReferenceIdPrefix = this.Columns["ReferenceIdPrefix"];
                this.columnEyeWitness = this.Columns["EyeWitness"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnIncidentReportRowId = new DataColumn("IncidentReportRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIncidentReportRowId);
                this.columnIncidentId = new DataColumn("IncidentId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIncidentId);
                this.columnTitle = new DataColumn("Title", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTitle);
                this.columnIncidentReporter = new DataColumn("IncidentReporter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIncidentReporter);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnDateAndTimeOfIncident = new DataColumn("DateAndTimeOfIncident", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateAndTimeOfIncident);
                this.columnShortDescription = new DataColumn("ShortDescription", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShortDescription);
                this.columnWitness = new DataColumn("Witness", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWitness);
                this.columnHasMaritimeReport = new DataColumn("HasMaritimeReport", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHasMaritimeReport);
                this.columnReportDate = new DataColumn("ReportDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReportDate);
                this.columnImmediateActions = new DataColumn("ImmediateActions", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImmediateActions);
                this.columnReporter = new DataColumn("Reporter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReporter);
                this.columnTaskStatus = new DataColumn("TaskStatus", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTaskStatus);
                this.columnWitnessPersonnelRowId = new DataColumn("WitnessPersonnelRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWitnessPersonnelRowId);
                this.columnSequenceOfTheIncident = new DataColumn("SequenceOfTheIncident", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSequenceOfTheIncident);
                this.columnContributionFactorToTheIncident = new DataColumn("ContributionFactorToTheIncident", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContributionFactorToTheIncident);
                this.columnClassificationListsRowId = new DataColumn("ClassificationListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClassificationListsRowId);
                this.columnReporterJobTitleListsRowId = new DataColumn("ReporterJobTitleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReporterJobTitleListsRowId);
                this.columnStatusListsRowId = new DataColumn("StatusListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatusListsRowId);
                this.columnTypeOfIncidentListsRowId = new DataColumn("TypeOfIncidentListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTypeOfIncidentListsRowId);
                this.columnWorkAreaListsRowId = new DataColumn("WorkAreaListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWorkAreaListsRowId);
                this.columnReferenceIdPrefix = new DataColumn("ReferenceIdPrefix", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReferenceIdPrefix);
                this.columnEyeWitness = new DataColumn("EyeWitness", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEyeWitness);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey3", new DataColumn[] {
                                this.columnIncidentReportRowId}, true));
                this.columnIncidentReportRowId.AutoIncrement = true;
                this.columnIncidentReportRowId.AllowDBNull = false;
                this.columnIncidentReportRowId.ReadOnly = true;
                this.columnIncidentReportRowId.Unique = true;
            }
            
            public GAIncidentReportRow NewGAIncidentReportRow() {
                return ((GAIncidentReportRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAIncidentReportRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAIncidentReportRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAIncidentReportRowChanged != null)) {
                    this.GAIncidentReportRowChanged(this, new GAIncidentReportRowChangeEvent(((GAIncidentReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAIncidentReportRowChanging != null)) {
                    this.GAIncidentReportRowChanging(this, new GAIncidentReportRowChangeEvent(((GAIncidentReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAIncidentReportRowDeleted != null)) {
                    this.GAIncidentReportRowDeleted(this, new GAIncidentReportRowChangeEvent(((GAIncidentReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAIncidentReportRowDeleting != null)) {
                    this.GAIncidentReportRowDeleting(this, new GAIncidentReportRowChangeEvent(((GAIncidentReportRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAIncidentReportRow(GAIncidentReportRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAIncidentReportRow : DataRow {
            
            private GAIncidentReportDataTable tableGAIncidentReport;
            
            internal GAIncidentReportRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAIncidentReport = ((GAIncidentReportDataTable)(this.Table));
            }
            
            public int IncidentReportRowId {
                get {
                    return ((int)(this[this.tableGAIncidentReport.IncidentReportRowIdColumn]));
                }
                set {
                    this[this.tableGAIncidentReport.IncidentReportRowIdColumn] = value;
                }
            }
            
            public string IncidentId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.IncidentIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.IncidentIdColumn] = value;
                }
            }
            
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.TitleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.TitleColumn] = value;
                }
            }
            
            public string IncidentReporter {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.IncidentReporterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.IncidentReporterColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.NameColumn] = value;
                }
            }
            
            public System.DateTime DateAndTimeOfIncident {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAIncidentReport.DateAndTimeOfIncidentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.DateAndTimeOfIncidentColumn] = value;
                }
            }
            
            public string ShortDescription {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.ShortDescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.ShortDescriptionColumn] = value;
                }
            }
            
            public string Witness {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.WitnessColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.WitnessColumn] = value;
                }
            }
            
            public bool HasMaritimeReport {
                get {
                    try {
                        return ((bool)(this[this.tableGAIncidentReport.HasMaritimeReportColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.HasMaritimeReportColumn] = value;
                }
            }
            
            public System.DateTime ReportDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAIncidentReport.ReportDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.ReportDateColumn] = value;
                }
            }
            
            public string ImmediateActions {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.ImmediateActionsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.ImmediateActionsColumn] = value;
                }
            }
            
            public string Reporter {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.ReporterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.ReporterColumn] = value;
                }
            }
            
            public string TaskStatus {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.TaskStatusColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.TaskStatusColumn] = value;
                }
            }
            
            public string WitnessPersonnelRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.WitnessPersonnelRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.WitnessPersonnelRowIdColumn] = value;
                }
            }
            
            public string SequenceOfTheIncident {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.SequenceOfTheIncidentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.SequenceOfTheIncidentColumn] = value;
                }
            }
            
            public string ContributionFactorToTheIncident {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.ContributionFactorToTheIncidentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.ContributionFactorToTheIncidentColumn] = value;
                }
            }
            
            public string ClassificationListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.ClassificationListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.ClassificationListsRowIdColumn] = value;
                }
            }
            
            public string ReporterJobTitleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.ReporterJobTitleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.ReporterJobTitleListsRowIdColumn] = value;
                }
            }
            
            public string StatusListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.StatusListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.StatusListsRowIdColumn] = value;
                }
            }
            
            public string TypeOfIncidentListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.TypeOfIncidentListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.TypeOfIncidentListsRowIdColumn] = value;
                }
            }
            
            public string WorkAreaListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.WorkAreaListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.WorkAreaListsRowIdColumn] = value;
                }
            }
            
            public string ReferenceIdPrefix {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.ReferenceIdPrefixColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.ReferenceIdPrefixColumn] = value;
                }
            }
            
            public string EyeWitness {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.EyeWitnessColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.EyeWitnessColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReport.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAIncidentReport.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReport.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAIncidentReport.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReport.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAIncidentReport.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReport.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAIncidentReport.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAIncidentReport.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAIncidentReport.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAIncidentReport.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAIncidentReport.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAIncidentReport.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReport.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReport.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReport.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport.IntFree3Column] = value;
                }
            }
            
            public bool IsIncidentIdNull() {
                return this.IsNull(this.tableGAIncidentReport.IncidentIdColumn);
            }
            
            public void SetIncidentIdNull() {
                this[this.tableGAIncidentReport.IncidentIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTitleNull() {
                return this.IsNull(this.tableGAIncidentReport.TitleColumn);
            }
            
            public void SetTitleNull() {
                this[this.tableGAIncidentReport.TitleColumn] = System.Convert.DBNull;
            }
            
            public bool IsIncidentReporterNull() {
                return this.IsNull(this.tableGAIncidentReport.IncidentReporterColumn);
            }
            
            public void SetIncidentReporterNull() {
                this[this.tableGAIncidentReport.IncidentReporterColumn] = System.Convert.DBNull;
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tableGAIncidentReport.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tableGAIncidentReport.NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateAndTimeOfIncidentNull() {
                return this.IsNull(this.tableGAIncidentReport.DateAndTimeOfIncidentColumn);
            }
            
            public void SetDateAndTimeOfIncidentNull() {
                this[this.tableGAIncidentReport.DateAndTimeOfIncidentColumn] = System.Convert.DBNull;
            }
            
            public bool IsShortDescriptionNull() {
                return this.IsNull(this.tableGAIncidentReport.ShortDescriptionColumn);
            }
            
            public void SetShortDescriptionNull() {
                this[this.tableGAIncidentReport.ShortDescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsWitnessNull() {
                return this.IsNull(this.tableGAIncidentReport.WitnessColumn);
            }
            
            public void SetWitnessNull() {
                this[this.tableGAIncidentReport.WitnessColumn] = System.Convert.DBNull;
            }
            
            public bool IsHasMaritimeReportNull() {
                return this.IsNull(this.tableGAIncidentReport.HasMaritimeReportColumn);
            }
            
            public void SetHasMaritimeReportNull() {
                this[this.tableGAIncidentReport.HasMaritimeReportColumn] = System.Convert.DBNull;
            }
            
            public bool IsReportDateNull() {
                return this.IsNull(this.tableGAIncidentReport.ReportDateColumn);
            }
            
            public void SetReportDateNull() {
                this[this.tableGAIncidentReport.ReportDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsImmediateActionsNull() {
                return this.IsNull(this.tableGAIncidentReport.ImmediateActionsColumn);
            }
            
            public void SetImmediateActionsNull() {
                this[this.tableGAIncidentReport.ImmediateActionsColumn] = System.Convert.DBNull;
            }
            
            public bool IsReporterNull() {
                return this.IsNull(this.tableGAIncidentReport.ReporterColumn);
            }
            
            public void SetReporterNull() {
                this[this.tableGAIncidentReport.ReporterColumn] = System.Convert.DBNull;
            }
            
            public bool IsTaskStatusNull() {
                return this.IsNull(this.tableGAIncidentReport.TaskStatusColumn);
            }
            
            public void SetTaskStatusNull() {
                this[this.tableGAIncidentReport.TaskStatusColumn] = System.Convert.DBNull;
            }
            
            public bool IsWitnessPersonnelRowIdNull() {
                return this.IsNull(this.tableGAIncidentReport.WitnessPersonnelRowIdColumn);
            }
            
            public void SetWitnessPersonnelRowIdNull() {
                this[this.tableGAIncidentReport.WitnessPersonnelRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSequenceOfTheIncidentNull() {
                return this.IsNull(this.tableGAIncidentReport.SequenceOfTheIncidentColumn);
            }
            
            public void SetSequenceOfTheIncidentNull() {
                this[this.tableGAIncidentReport.SequenceOfTheIncidentColumn] = System.Convert.DBNull;
            }
            
            public bool IsContributionFactorToTheIncidentNull() {
                return this.IsNull(this.tableGAIncidentReport.ContributionFactorToTheIncidentColumn);
            }
            
            public void SetContributionFactorToTheIncidentNull() {
                this[this.tableGAIncidentReport.ContributionFactorToTheIncidentColumn] = System.Convert.DBNull;
            }
            
            public bool IsClassificationListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReport.ClassificationListsRowIdColumn);
            }
            
            public void SetClassificationListsRowIdNull() {
                this[this.tableGAIncidentReport.ClassificationListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsReporterJobTitleListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReport.ReporterJobTitleListsRowIdColumn);
            }
            
            public void SetReporterJobTitleListsRowIdNull() {
                this[this.tableGAIncidentReport.ReporterJobTitleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsStatusListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReport.StatusListsRowIdColumn);
            }
            
            public void SetStatusListsRowIdNull() {
                this[this.tableGAIncidentReport.StatusListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTypeOfIncidentListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReport.TypeOfIncidentListsRowIdColumn);
            }
            
            public void SetTypeOfIncidentListsRowIdNull() {
                this[this.tableGAIncidentReport.TypeOfIncidentListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsWorkAreaListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReport.WorkAreaListsRowIdColumn);
            }
            
            public void SetWorkAreaListsRowIdNull() {
                this[this.tableGAIncidentReport.WorkAreaListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsReferenceIdPrefixNull() {
                return this.IsNull(this.tableGAIncidentReport.ReferenceIdPrefixColumn);
            }
            
            public void SetReferenceIdPrefixNull() {
                this[this.tableGAIncidentReport.ReferenceIdPrefixColumn] = System.Convert.DBNull;
            }
            
            public bool IsEyeWitnessNull() {
                return this.IsNull(this.tableGAIncidentReport.EyeWitnessColumn);
            }
            
            public void SetEyeWitnessNull() {
                this[this.tableGAIncidentReport.EyeWitnessColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAIncidentReport.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGAIncidentReport.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAIncidentReport.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGAIncidentReport.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAIncidentReport.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGAIncidentReport.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAIncidentReport.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGAIncidentReport.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAIncidentReport.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGAIncidentReport.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAIncidentReport.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGAIncidentReport.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAIncidentReport.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGAIncidentReport.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAIncidentReport.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGAIncidentReport.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAIncidentReport.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGAIncidentReport.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAIncidentReport.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGAIncidentReport.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAIncidentReport.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGAIncidentReport.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAIncidentReport.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGAIncidentReport.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAIncidentReport.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGAIncidentReport.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAIncidentReport.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGAIncidentReport.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAIncidentReport.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGAIncidentReport.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAIncidentReport.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGAIncidentReport.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAIncidentReport.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGAIncidentReport.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAIncidentReport.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGAIncidentReport.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAIncidentReport.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGAIncidentReport.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAIncidentReportRowChangeEvent : EventArgs {
            
            private GAIncidentReportRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAIncidentReportRowChangeEvent(GAIncidentReportRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAIncidentReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAInjuredPartyDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnInjuredPartyRowId;
            
            private DataColumn columnPersonnelRowId;
            
            private DataColumn columnCause;
            
            private DataColumn columnDescription;
            
            private DataColumn columnContributingFactors;
            
            private DataColumn columnYearsOffshoreEx;
            
            private DataColumn columnMonthsOffshoreEx;
            
            private DataColumn columnYearsWorked;
            
            private DataColumn columnMonthsWorked;
            
            private DataColumn columnDaysWorkedOnTheShift;
            
            private DataColumn columnHoursWorkedOnTheDay;
            
            private DataColumn columnNumberOfDaysLost;
            
            private DataColumn columnMedicalTreatmentDescription;
            
            private DataColumn columnSummaryOfTreatment;
            
            private DataColumn columnWorkExperience;
            
            private DataColumn columnInjuredPersonnel;
            
            private DataColumn columnName;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GAInjuredPartyDataTable() : 
                    base("GAInjuredParty") {
                this.InitClass();
            }
            
            internal GAInjuredPartyDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn InjuredPartyRowIdColumn {
                get {
                    return this.columnInjuredPartyRowId;
                }
            }
            
            internal DataColumn PersonnelRowIdColumn {
                get {
                    return this.columnPersonnelRowId;
                }
            }
            
            internal DataColumn CauseColumn {
                get {
                    return this.columnCause;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn ContributingFactorsColumn {
                get {
                    return this.columnContributingFactors;
                }
            }
            
            internal DataColumn YearsOffshoreExColumn {
                get {
                    return this.columnYearsOffshoreEx;
                }
            }
            
            internal DataColumn MonthsOffshoreExColumn {
                get {
                    return this.columnMonthsOffshoreEx;
                }
            }
            
            internal DataColumn YearsWorkedColumn {
                get {
                    return this.columnYearsWorked;
                }
            }
            
            internal DataColumn MonthsWorkedColumn {
                get {
                    return this.columnMonthsWorked;
                }
            }
            
            internal DataColumn DaysWorkedOnTheShiftColumn {
                get {
                    return this.columnDaysWorkedOnTheShift;
                }
            }
            
            internal DataColumn HoursWorkedOnTheDayColumn {
                get {
                    return this.columnHoursWorkedOnTheDay;
                }
            }
            
            internal DataColumn NumberOfDaysLostColumn {
                get {
                    return this.columnNumberOfDaysLost;
                }
            }
            
            internal DataColumn MedicalTreatmentDescriptionColumn {
                get {
                    return this.columnMedicalTreatmentDescription;
                }
            }
            
            internal DataColumn SummaryOfTreatmentColumn {
                get {
                    return this.columnSummaryOfTreatment;
                }
            }
            
            internal DataColumn WorkExperienceColumn {
                get {
                    return this.columnWorkExperience;
                }
            }
            
            internal DataColumn InjuredPersonnelColumn {
                get {
                    return this.columnInjuredPersonnel;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GAInjuredPartyRow this[int index] {
                get {
                    return ((GAInjuredPartyRow)(this.Rows[index]));
                }
            }
            
            public event GAInjuredPartyRowChangeEventHandler GAInjuredPartyRowChanged;
            
            public event GAInjuredPartyRowChangeEventHandler GAInjuredPartyRowChanging;
            
            public event GAInjuredPartyRowChangeEventHandler GAInjuredPartyRowDeleted;
            
            public event GAInjuredPartyRowChangeEventHandler GAInjuredPartyRowDeleting;
            
            public void AddGAInjuredPartyRow(GAInjuredPartyRow row) {
                this.Rows.Add(row);
            }
            
            public GAInjuredPartyRow AddGAInjuredPartyRow(
                        string PersonnelRowId, 
                        string Cause, 
                        string Description, 
                        string ContributingFactors, 
                        int YearsOffshoreEx, 
                        int MonthsOffshoreEx, 
                        int YearsWorked, 
                        int MonthsWorked, 
                        int DaysWorkedOnTheShift, 
                        int HoursWorkedOnTheDay, 
                        int NumberOfDaysLost, 
                        string MedicalTreatmentDescription, 
                        string SummaryOfTreatment, 
                        string WorkExperience, 
                        string InjuredPersonnel, 
                        string Name, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAInjuredPartyRow rowGAInjuredPartyRow = ((GAInjuredPartyRow)(this.NewRow()));
                rowGAInjuredPartyRow.ItemArray = new object[] {
                        null,
                        PersonnelRowId,
                        Cause,
                        Description,
                        ContributingFactors,
                        YearsOffshoreEx,
                        MonthsOffshoreEx,
                        YearsWorked,
                        MonthsWorked,
                        DaysWorkedOnTheShift,
                        HoursWorkedOnTheDay,
                        NumberOfDaysLost,
                        MedicalTreatmentDescription,
                        SummaryOfTreatment,
                        WorkExperience,
                        InjuredPersonnel,
                        Name,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAInjuredPartyRow);
                return rowGAInjuredPartyRow;
            }
            
            public GAInjuredPartyRow FindByInjuredPartyRowId(int InjuredPartyRowId) {
                return ((GAInjuredPartyRow)(this.Rows.Find(new object[] {
                            InjuredPartyRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAInjuredPartyDataTable cln = ((GAInjuredPartyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAInjuredPartyDataTable();
            }
            
            internal void InitVars() {
                this.columnInjuredPartyRowId = this.Columns["InjuredPartyRowId"];
                this.columnPersonnelRowId = this.Columns["PersonnelRowId"];
                this.columnCause = this.Columns["Cause"];
                this.columnDescription = this.Columns["Description"];
                this.columnContributingFactors = this.Columns["ContributingFactors"];
                this.columnYearsOffshoreEx = this.Columns["YearsOffshoreEx"];
                this.columnMonthsOffshoreEx = this.Columns["MonthsOffshoreEx"];
                this.columnYearsWorked = this.Columns["YearsWorked"];
                this.columnMonthsWorked = this.Columns["MonthsWorked"];
                this.columnDaysWorkedOnTheShift = this.Columns["DaysWorkedOnTheShift"];
                this.columnHoursWorkedOnTheDay = this.Columns["HoursWorkedOnTheDay"];
                this.columnNumberOfDaysLost = this.Columns["NumberOfDaysLost"];
                this.columnMedicalTreatmentDescription = this.Columns["MedicalTreatmentDescription"];
                this.columnSummaryOfTreatment = this.Columns["SummaryOfTreatment"];
                this.columnWorkExperience = this.Columns["WorkExperience"];
                this.columnInjuredPersonnel = this.Columns["InjuredPersonnel"];
                this.columnName = this.Columns["Name"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnInjuredPartyRowId = new DataColumn("InjuredPartyRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnInjuredPartyRowId);
                this.columnPersonnelRowId = new DataColumn("PersonnelRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPersonnelRowId);
                this.columnCause = new DataColumn("Cause", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCause);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnContributingFactors = new DataColumn("ContributingFactors", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContributingFactors);
                this.columnYearsOffshoreEx = new DataColumn("YearsOffshoreEx", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnYearsOffshoreEx);
                this.columnMonthsOffshoreEx = new DataColumn("MonthsOffshoreEx", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMonthsOffshoreEx);
                this.columnYearsWorked = new DataColumn("YearsWorked", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnYearsWorked);
                this.columnMonthsWorked = new DataColumn("MonthsWorked", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMonthsWorked);
                this.columnDaysWorkedOnTheShift = new DataColumn("DaysWorkedOnTheShift", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDaysWorkedOnTheShift);
                this.columnHoursWorkedOnTheDay = new DataColumn("HoursWorkedOnTheDay", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHoursWorkedOnTheDay);
                this.columnNumberOfDaysLost = new DataColumn("NumberOfDaysLost", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumberOfDaysLost);
                this.columnMedicalTreatmentDescription = new DataColumn("MedicalTreatmentDescription", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMedicalTreatmentDescription);
                this.columnSummaryOfTreatment = new DataColumn("SummaryOfTreatment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSummaryOfTreatment);
                this.columnWorkExperience = new DataColumn("WorkExperience", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWorkExperience);
                this.columnInjuredPersonnel = new DataColumn("InjuredPersonnel", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnInjuredPersonnel);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey4", new DataColumn[] {
                                this.columnInjuredPartyRowId}, true));
                this.columnInjuredPartyRowId.AutoIncrement = true;
                this.columnInjuredPartyRowId.AllowDBNull = false;
                this.columnInjuredPartyRowId.ReadOnly = true;
                this.columnInjuredPartyRowId.Unique = true;
            }
            
            public GAInjuredPartyRow NewGAInjuredPartyRow() {
                return ((GAInjuredPartyRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAInjuredPartyRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAInjuredPartyRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAInjuredPartyRowChanged != null)) {
                    this.GAInjuredPartyRowChanged(this, new GAInjuredPartyRowChangeEvent(((GAInjuredPartyRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAInjuredPartyRowChanging != null)) {
                    this.GAInjuredPartyRowChanging(this, new GAInjuredPartyRowChangeEvent(((GAInjuredPartyRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAInjuredPartyRowDeleted != null)) {
                    this.GAInjuredPartyRowDeleted(this, new GAInjuredPartyRowChangeEvent(((GAInjuredPartyRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAInjuredPartyRowDeleting != null)) {
                    this.GAInjuredPartyRowDeleting(this, new GAInjuredPartyRowChangeEvent(((GAInjuredPartyRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAInjuredPartyRow(GAInjuredPartyRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAInjuredPartyRow : DataRow {
            
            private GAInjuredPartyDataTable tableGAInjuredParty;
            
            internal GAInjuredPartyRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAInjuredParty = ((GAInjuredPartyDataTable)(this.Table));
            }
            
            public int InjuredPartyRowId {
                get {
                    return ((int)(this[this.tableGAInjuredParty.InjuredPartyRowIdColumn]));
                }
                set {
                    this[this.tableGAInjuredParty.InjuredPartyRowIdColumn] = value;
                }
            }
            
            public string PersonnelRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAInjuredParty.PersonnelRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.PersonnelRowIdColumn] = value;
                }
            }
            
            public string Cause {
                get {
                    try {
                        return ((string)(this[this.tableGAInjuredParty.CauseColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.CauseColumn] = value;
                }
            }
            
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGAInjuredParty.DescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.DescriptionColumn] = value;
                }
            }
            
            public string ContributingFactors {
                get {
                    try {
                        return ((string)(this[this.tableGAInjuredParty.ContributingFactorsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.ContributingFactorsColumn] = value;
                }
            }
            
            public int YearsOffshoreEx {
                get {
                    try {
                        return ((int)(this[this.tableGAInjuredParty.YearsOffshoreExColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.YearsOffshoreExColumn] = value;
                }
            }
            
            public int MonthsOffshoreEx {
                get {
                    try {
                        return ((int)(this[this.tableGAInjuredParty.MonthsOffshoreExColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.MonthsOffshoreExColumn] = value;
                }
            }
            
            public int YearsWorked {
                get {
                    try {
                        return ((int)(this[this.tableGAInjuredParty.YearsWorkedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.YearsWorkedColumn] = value;
                }
            }
            
            public int MonthsWorked {
                get {
                    try {
                        return ((int)(this[this.tableGAInjuredParty.MonthsWorkedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.MonthsWorkedColumn] = value;
                }
            }
            
            public int DaysWorkedOnTheShift {
                get {
                    try {
                        return ((int)(this[this.tableGAInjuredParty.DaysWorkedOnTheShiftColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.DaysWorkedOnTheShiftColumn] = value;
                }
            }
            
            public int HoursWorkedOnTheDay {
                get {
                    try {
                        return ((int)(this[this.tableGAInjuredParty.HoursWorkedOnTheDayColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.HoursWorkedOnTheDayColumn] = value;
                }
            }
            
            public int NumberOfDaysLost {
                get {
                    try {
                        return ((int)(this[this.tableGAInjuredParty.NumberOfDaysLostColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.NumberOfDaysLostColumn] = value;
                }
            }
            
            public string MedicalTreatmentDescription {
                get {
                    try {
                        return ((string)(this[this.tableGAInjuredParty.MedicalTreatmentDescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.MedicalTreatmentDescriptionColumn] = value;
                }
            }
            
            public string SummaryOfTreatment {
                get {
                    try {
                        return ((string)(this[this.tableGAInjuredParty.SummaryOfTreatmentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.SummaryOfTreatmentColumn] = value;
                }
            }
            
            public string WorkExperience {
                get {
                    try {
                        return ((string)(this[this.tableGAInjuredParty.WorkExperienceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.WorkExperienceColumn] = value;
                }
            }
            
            public string InjuredPersonnel {
                get {
                    try {
                        return ((string)(this[this.tableGAInjuredParty.InjuredPersonnelColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.InjuredPersonnelColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGAInjuredParty.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.NameColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAInjuredParty.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAInjuredParty.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAInjuredParty.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAInjuredParty.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAInjuredParty.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAInjuredParty.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAInjuredParty.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAInjuredParty.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAInjuredParty.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAInjuredParty.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAInjuredParty.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAInjuredParty.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAInjuredParty.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAInjuredParty.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAInjuredParty.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAInjuredParty.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAInjuredParty.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAInjuredParty.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAInjuredParty.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAInjuredParty.IntFree3Column] = value;
                }
            }
            
            public bool IsPersonnelRowIdNull() {
                return this.IsNull(this.tableGAInjuredParty.PersonnelRowIdColumn);
            }
            
            public void SetPersonnelRowIdNull() {
                this[this.tableGAInjuredParty.PersonnelRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsCauseNull() {
                return this.IsNull(this.tableGAInjuredParty.CauseColumn);
            }
            
            public void SetCauseNull() {
                this[this.tableGAInjuredParty.CauseColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGAInjuredParty.DescriptionColumn);
            }
            
            public void SetDescriptionNull() {
                this[this.tableGAInjuredParty.DescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsContributingFactorsNull() {
                return this.IsNull(this.tableGAInjuredParty.ContributingFactorsColumn);
            }
            
            public void SetContributingFactorsNull() {
                this[this.tableGAInjuredParty.ContributingFactorsColumn] = System.Convert.DBNull;
            }
            
            public bool IsYearsOffshoreExNull() {
                return this.IsNull(this.tableGAInjuredParty.YearsOffshoreExColumn);
            }
            
            public void SetYearsOffshoreExNull() {
                this[this.tableGAInjuredParty.YearsOffshoreExColumn] = System.Convert.DBNull;
            }
            
            public bool IsMonthsOffshoreExNull() {
                return this.IsNull(this.tableGAInjuredParty.MonthsOffshoreExColumn);
            }
            
            public void SetMonthsOffshoreExNull() {
                this[this.tableGAInjuredParty.MonthsOffshoreExColumn] = System.Convert.DBNull;
            }
            
            public bool IsYearsWorkedNull() {
                return this.IsNull(this.tableGAInjuredParty.YearsWorkedColumn);
            }
            
            public void SetYearsWorkedNull() {
                this[this.tableGAInjuredParty.YearsWorkedColumn] = System.Convert.DBNull;
            }
            
            public bool IsMonthsWorkedNull() {
                return this.IsNull(this.tableGAInjuredParty.MonthsWorkedColumn);
            }
            
            public void SetMonthsWorkedNull() {
                this[this.tableGAInjuredParty.MonthsWorkedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDaysWorkedOnTheShiftNull() {
                return this.IsNull(this.tableGAInjuredParty.DaysWorkedOnTheShiftColumn);
            }
            
            public void SetDaysWorkedOnTheShiftNull() {
                this[this.tableGAInjuredParty.DaysWorkedOnTheShiftColumn] = System.Convert.DBNull;
            }
            
            public bool IsHoursWorkedOnTheDayNull() {
                return this.IsNull(this.tableGAInjuredParty.HoursWorkedOnTheDayColumn);
            }
            
            public void SetHoursWorkedOnTheDayNull() {
                this[this.tableGAInjuredParty.HoursWorkedOnTheDayColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumberOfDaysLostNull() {
                return this.IsNull(this.tableGAInjuredParty.NumberOfDaysLostColumn);
            }
            
            public void SetNumberOfDaysLostNull() {
                this[this.tableGAInjuredParty.NumberOfDaysLostColumn] = System.Convert.DBNull;
            }
            
            public bool IsMedicalTreatmentDescriptionNull() {
                return this.IsNull(this.tableGAInjuredParty.MedicalTreatmentDescriptionColumn);
            }
            
            public void SetMedicalTreatmentDescriptionNull() {
                this[this.tableGAInjuredParty.MedicalTreatmentDescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsSummaryOfTreatmentNull() {
                return this.IsNull(this.tableGAInjuredParty.SummaryOfTreatmentColumn);
            }
            
            public void SetSummaryOfTreatmentNull() {
                this[this.tableGAInjuredParty.SummaryOfTreatmentColumn] = System.Convert.DBNull;
            }
            
            public bool IsWorkExperienceNull() {
                return this.IsNull(this.tableGAInjuredParty.WorkExperienceColumn);
            }
            
            public void SetWorkExperienceNull() {
                this[this.tableGAInjuredParty.WorkExperienceColumn] = System.Convert.DBNull;
            }
            
            public bool IsInjuredPersonnelNull() {
                return this.IsNull(this.tableGAInjuredParty.InjuredPersonnelColumn);
            }
            
            public void SetInjuredPersonnelNull() {
                this[this.tableGAInjuredParty.InjuredPersonnelColumn] = System.Convert.DBNull;
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tableGAInjuredParty.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tableGAInjuredParty.NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAInjuredParty.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGAInjuredParty.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAInjuredParty.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGAInjuredParty.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAInjuredParty.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGAInjuredParty.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAInjuredParty.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGAInjuredParty.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAInjuredParty.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGAInjuredParty.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAInjuredParty.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGAInjuredParty.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAInjuredParty.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGAInjuredParty.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAInjuredParty.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGAInjuredParty.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAInjuredParty.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGAInjuredParty.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAInjuredParty.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGAInjuredParty.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAInjuredParty.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGAInjuredParty.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAInjuredParty.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGAInjuredParty.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAInjuredParty.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGAInjuredParty.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAInjuredParty.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGAInjuredParty.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAInjuredParty.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGAInjuredParty.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAInjuredParty.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGAInjuredParty.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAInjuredParty.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGAInjuredParty.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAInjuredParty.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGAInjuredParty.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAInjuredParty.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGAInjuredParty.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAInjuredPartyRowChangeEvent : EventArgs {
            
            private GAInjuredPartyRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAInjuredPartyRowChangeEvent(GAInjuredPartyRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAInjuredPartyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAHazardIdentificationDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnHazardReferenceId;
            
            private DataColumn columnHazardIdentificationRowId;
            
            private DataColumn columnLocationOfWork;
            
            private DataColumn columnIdentifiedDate;
            
            private DataColumn columnDescription;
            
            private DataColumn columnImmediateAction;
            
            private DataColumn columnRiskEvaluation;
            
            private DataColumn columnPossibleConsequence;
            
            private DataColumn columnSuggestedFurtherAction;
            
            private DataColumn columnReporter;
            
            private DataColumn columnRisk;
            
            private DataColumn columnDepartmentListsRowId;
            
            private DataColumn columnPotentialListsRowId;
            
            private DataColumn columnReporterJobTitleListsRowId;
            
            private DataColumn columnSeverityListsRowId;
            
            private DataColumn columnSeverityAssetsListsRowId;
            
            private DataColumn columnSeverityEnvironmentListsRowId;
            
            private DataColumn columnSeverityPeopleListsRowId;
            
            private DataColumn columnTypeOfHIPListsRowId;
            
            private DataColumn columnWorkAreaListsRowId;
            
            private DataColumn columnName;
            
            private DataColumn columnReferenceIdPrefix;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GAHazardIdentificationDataTable() : 
                    base("GAHazardIdentification") {
                this.InitClass();
            }
            
            internal GAHazardIdentificationDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn HazardReferenceIdColumn {
                get {
                    return this.columnHazardReferenceId;
                }
            }
            
            internal DataColumn HazardIdentificationRowIdColumn {
                get {
                    return this.columnHazardIdentificationRowId;
                }
            }
            
            internal DataColumn LocationOfWorkColumn {
                get {
                    return this.columnLocationOfWork;
                }
            }
            
            internal DataColumn IdentifiedDateColumn {
                get {
                    return this.columnIdentifiedDate;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn ImmediateActionColumn {
                get {
                    return this.columnImmediateAction;
                }
            }
            
            internal DataColumn RiskEvaluationColumn {
                get {
                    return this.columnRiskEvaluation;
                }
            }
            
            internal DataColumn PossibleConsequenceColumn {
                get {
                    return this.columnPossibleConsequence;
                }
            }
            
            internal DataColumn SuggestedFurtherActionColumn {
                get {
                    return this.columnSuggestedFurtherAction;
                }
            }
            
            internal DataColumn ReporterColumn {
                get {
                    return this.columnReporter;
                }
            }
            
            internal DataColumn RiskColumn {
                get {
                    return this.columnRisk;
                }
            }
            
            internal DataColumn DepartmentListsRowIdColumn {
                get {
                    return this.columnDepartmentListsRowId;
                }
            }
            
            internal DataColumn PotentialListsRowIdColumn {
                get {
                    return this.columnPotentialListsRowId;
                }
            }
            
            internal DataColumn ReporterJobTitleListsRowIdColumn {
                get {
                    return this.columnReporterJobTitleListsRowId;
                }
            }
            
            internal DataColumn SeverityListsRowIdColumn {
                get {
                    return this.columnSeverityListsRowId;
                }
            }
            
            internal DataColumn SeverityAssetsListsRowIdColumn {
                get {
                    return this.columnSeverityAssetsListsRowId;
                }
            }
            
            internal DataColumn SeverityEnvironmentListsRowIdColumn {
                get {
                    return this.columnSeverityEnvironmentListsRowId;
                }
            }
            
            internal DataColumn SeverityPeopleListsRowIdColumn {
                get {
                    return this.columnSeverityPeopleListsRowId;
                }
            }
            
            internal DataColumn TypeOfHIPListsRowIdColumn {
                get {
                    return this.columnTypeOfHIPListsRowId;
                }
            }
            
            internal DataColumn WorkAreaListsRowIdColumn {
                get {
                    return this.columnWorkAreaListsRowId;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn ReferenceIdPrefixColumn {
                get {
                    return this.columnReferenceIdPrefix;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GAHazardIdentificationRow this[int index] {
                get {
                    return ((GAHazardIdentificationRow)(this.Rows[index]));
                }
            }
            
            public event GAHazardIdentificationRowChangeEventHandler GAHazardIdentificationRowChanged;
            
            public event GAHazardIdentificationRowChangeEventHandler GAHazardIdentificationRowChanging;
            
            public event GAHazardIdentificationRowChangeEventHandler GAHazardIdentificationRowDeleted;
            
            public event GAHazardIdentificationRowChangeEventHandler GAHazardIdentificationRowDeleting;
            
            public void AddGAHazardIdentificationRow(GAHazardIdentificationRow row) {
                this.Rows.Add(row);
            }
            
            public GAHazardIdentificationRow AddGAHazardIdentificationRow(
                        string HazardReferenceId, 
                        string LocationOfWork, 
                        System.DateTime IdentifiedDate, 
                        string Description, 
                        string ImmediateAction, 
                        string RiskEvaluation, 
                        string PossibleConsequence, 
                        string SuggestedFurtherAction, 
                        string Reporter, 
                        string Risk, 
                        string DepartmentListsRowId, 
                        string PotentialListsRowId, 
                        string ReporterJobTitleListsRowId, 
                        string SeverityListsRowId, 
                        string SeverityAssetsListsRowId, 
                        string SeverityEnvironmentListsRowId, 
                        string SeverityPeopleListsRowId, 
                        string TypeOfHIPListsRowId, 
                        string WorkAreaListsRowId, 
                        string Name, 
                        string ReferenceIdPrefix, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAHazardIdentificationRow rowGAHazardIdentificationRow = ((GAHazardIdentificationRow)(this.NewRow()));
                rowGAHazardIdentificationRow.ItemArray = new object[] {
                        HazardReferenceId,
                        null,
                        LocationOfWork,
                        IdentifiedDate,
                        Description,
                        ImmediateAction,
                        RiskEvaluation,
                        PossibleConsequence,
                        SuggestedFurtherAction,
                        Reporter,
                        Risk,
                        DepartmentListsRowId,
                        PotentialListsRowId,
                        ReporterJobTitleListsRowId,
                        SeverityListsRowId,
                        SeverityAssetsListsRowId,
                        SeverityEnvironmentListsRowId,
                        SeverityPeopleListsRowId,
                        TypeOfHIPListsRowId,
                        WorkAreaListsRowId,
                        Name,
                        ReferenceIdPrefix,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAHazardIdentificationRow);
                return rowGAHazardIdentificationRow;
            }
            
            public GAHazardIdentificationRow FindByHazardIdentificationRowId(int HazardIdentificationRowId) {
                return ((GAHazardIdentificationRow)(this.Rows.Find(new object[] {
                            HazardIdentificationRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAHazardIdentificationDataTable cln = ((GAHazardIdentificationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAHazardIdentificationDataTable();
            }
            
            internal void InitVars() {
                this.columnHazardReferenceId = this.Columns["HazardReferenceId"];
                this.columnHazardIdentificationRowId = this.Columns["HazardIdentificationRowId"];
                this.columnLocationOfWork = this.Columns["LocationOfWork"];
                this.columnIdentifiedDate = this.Columns["IdentifiedDate"];
                this.columnDescription = this.Columns["Description"];
                this.columnImmediateAction = this.Columns["ImmediateAction"];
                this.columnRiskEvaluation = this.Columns["RiskEvaluation"];
                this.columnPossibleConsequence = this.Columns["PossibleConsequence"];
                this.columnSuggestedFurtherAction = this.Columns["SuggestedFurtherAction"];
                this.columnReporter = this.Columns["Reporter"];
                this.columnRisk = this.Columns["Risk"];
                this.columnDepartmentListsRowId = this.Columns["DepartmentListsRowId"];
                this.columnPotentialListsRowId = this.Columns["PotentialListsRowId"];
                this.columnReporterJobTitleListsRowId = this.Columns["ReporterJobTitleListsRowId"];
                this.columnSeverityListsRowId = this.Columns["SeverityListsRowId"];
                this.columnSeverityAssetsListsRowId = this.Columns["SeverityAssetsListsRowId"];
                this.columnSeverityEnvironmentListsRowId = this.Columns["SeverityEnvironmentListsRowId"];
                this.columnSeverityPeopleListsRowId = this.Columns["SeverityPeopleListsRowId"];
                this.columnTypeOfHIPListsRowId = this.Columns["TypeOfHIPListsRowId"];
                this.columnWorkAreaListsRowId = this.Columns["WorkAreaListsRowId"];
                this.columnName = this.Columns["Name"];
                this.columnReferenceIdPrefix = this.Columns["ReferenceIdPrefix"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnHazardReferenceId = new DataColumn("HazardReferenceId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHazardReferenceId);
                this.columnHazardIdentificationRowId = new DataColumn("HazardIdentificationRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHazardIdentificationRowId);
                this.columnLocationOfWork = new DataColumn("LocationOfWork", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLocationOfWork);
                this.columnIdentifiedDate = new DataColumn("IdentifiedDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdentifiedDate);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnImmediateAction = new DataColumn("ImmediateAction", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImmediateAction);
                this.columnRiskEvaluation = new DataColumn("RiskEvaluation", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRiskEvaluation);
                this.columnPossibleConsequence = new DataColumn("PossibleConsequence", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPossibleConsequence);
                this.columnSuggestedFurtherAction = new DataColumn("SuggestedFurtherAction", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSuggestedFurtherAction);
                this.columnReporter = new DataColumn("Reporter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReporter);
                this.columnRisk = new DataColumn("Risk", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRisk);
                this.columnDepartmentListsRowId = new DataColumn("DepartmentListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDepartmentListsRowId);
                this.columnPotentialListsRowId = new DataColumn("PotentialListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPotentialListsRowId);
                this.columnReporterJobTitleListsRowId = new DataColumn("ReporterJobTitleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReporterJobTitleListsRowId);
                this.columnSeverityListsRowId = new DataColumn("SeverityListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSeverityListsRowId);
                this.columnSeverityAssetsListsRowId = new DataColumn("SeverityAssetsListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSeverityAssetsListsRowId);
                this.columnSeverityEnvironmentListsRowId = new DataColumn("SeverityEnvironmentListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSeverityEnvironmentListsRowId);
                this.columnSeverityPeopleListsRowId = new DataColumn("SeverityPeopleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSeverityPeopleListsRowId);
                this.columnTypeOfHIPListsRowId = new DataColumn("TypeOfHIPListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTypeOfHIPListsRowId);
                this.columnWorkAreaListsRowId = new DataColumn("WorkAreaListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWorkAreaListsRowId);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnReferenceIdPrefix = new DataColumn("ReferenceIdPrefix", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReferenceIdPrefix);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey5", new DataColumn[] {
                                this.columnHazardIdentificationRowId}, true));
                this.columnHazardIdentificationRowId.AutoIncrement = true;
                this.columnHazardIdentificationRowId.AllowDBNull = false;
                this.columnHazardIdentificationRowId.ReadOnly = true;
                this.columnHazardIdentificationRowId.Unique = true;
            }
            
            public GAHazardIdentificationRow NewGAHazardIdentificationRow() {
                return ((GAHazardIdentificationRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAHazardIdentificationRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAHazardIdentificationRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAHazardIdentificationRowChanged != null)) {
                    this.GAHazardIdentificationRowChanged(this, new GAHazardIdentificationRowChangeEvent(((GAHazardIdentificationRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAHazardIdentificationRowChanging != null)) {
                    this.GAHazardIdentificationRowChanging(this, new GAHazardIdentificationRowChangeEvent(((GAHazardIdentificationRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAHazardIdentificationRowDeleted != null)) {
                    this.GAHazardIdentificationRowDeleted(this, new GAHazardIdentificationRowChangeEvent(((GAHazardIdentificationRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAHazardIdentificationRowDeleting != null)) {
                    this.GAHazardIdentificationRowDeleting(this, new GAHazardIdentificationRowChangeEvent(((GAHazardIdentificationRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAHazardIdentificationRow(GAHazardIdentificationRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAHazardIdentificationRow : DataRow {
            
            private GAHazardIdentificationDataTable tableGAHazardIdentification;
            
            internal GAHazardIdentificationRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAHazardIdentification = ((GAHazardIdentificationDataTable)(this.Table));
            }
            
            public string HazardReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.HazardReferenceIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.HazardReferenceIdColumn] = value;
                }
            }
            
            public int HazardIdentificationRowId {
                get {
                    return ((int)(this[this.tableGAHazardIdentification.HazardIdentificationRowIdColumn]));
                }
                set {
                    this[this.tableGAHazardIdentification.HazardIdentificationRowIdColumn] = value;
                }
            }
            
            public string LocationOfWork {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.LocationOfWorkColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.LocationOfWorkColumn] = value;
                }
            }
            
            public System.DateTime IdentifiedDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAHazardIdentification.IdentifiedDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.IdentifiedDateColumn] = value;
                }
            }
            
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.DescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.DescriptionColumn] = value;
                }
            }
            
            public string ImmediateAction {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.ImmediateActionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.ImmediateActionColumn] = value;
                }
            }
            
            public string RiskEvaluation {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.RiskEvaluationColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.RiskEvaluationColumn] = value;
                }
            }
            
            public string PossibleConsequence {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.PossibleConsequenceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.PossibleConsequenceColumn] = value;
                }
            }
            
            public string SuggestedFurtherAction {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.SuggestedFurtherActionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.SuggestedFurtherActionColumn] = value;
                }
            }
            
            public string Reporter {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.ReporterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.ReporterColumn] = value;
                }
            }
            
            public string Risk {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.RiskColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.RiskColumn] = value;
                }
            }
            
            public string DepartmentListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.DepartmentListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.DepartmentListsRowIdColumn] = value;
                }
            }
            
            public string PotentialListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.PotentialListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.PotentialListsRowIdColumn] = value;
                }
            }
            
            public string ReporterJobTitleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.ReporterJobTitleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.ReporterJobTitleListsRowIdColumn] = value;
                }
            }
            
            public string SeverityListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.SeverityListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.SeverityListsRowIdColumn] = value;
                }
            }
            
            public string SeverityAssetsListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.SeverityAssetsListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.SeverityAssetsListsRowIdColumn] = value;
                }
            }
            
            public string SeverityEnvironmentListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.SeverityEnvironmentListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.SeverityEnvironmentListsRowIdColumn] = value;
                }
            }
            
            public string SeverityPeopleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.SeverityPeopleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.SeverityPeopleListsRowIdColumn] = value;
                }
            }
            
            public string TypeOfHIPListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.TypeOfHIPListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.TypeOfHIPListsRowIdColumn] = value;
                }
            }
            
            public string WorkAreaListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.WorkAreaListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.WorkAreaListsRowIdColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.NameColumn] = value;
                }
            }
            
            public string ReferenceIdPrefix {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.ReferenceIdPrefixColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.ReferenceIdPrefixColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAHazardIdentification.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAHazardIdentification.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAHazardIdentification.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAHazardIdentification.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAHazardIdentification.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAHazardIdentification.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAHazardIdentification.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAHazardIdentification.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAHazardIdentification.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAHazardIdentification.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAHazardIdentification.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAHazardIdentification.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAHazardIdentification.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAHazardIdentification.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAHazardIdentification.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAHazardIdentification.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAHazardIdentification.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAHazardIdentification.IntFree3Column] = value;
                }
            }
            
            public bool IsHazardReferenceIdNull() {
                return this.IsNull(this.tableGAHazardIdentification.HazardReferenceIdColumn);
            }
            
            public void SetHazardReferenceIdNull() {
                this[this.tableGAHazardIdentification.HazardReferenceIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsLocationOfWorkNull() {
                return this.IsNull(this.tableGAHazardIdentification.LocationOfWorkColumn);
            }
            
            public void SetLocationOfWorkNull() {
                this[this.tableGAHazardIdentification.LocationOfWorkColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdentifiedDateNull() {
                return this.IsNull(this.tableGAHazardIdentification.IdentifiedDateColumn);
            }
            
            public void SetIdentifiedDateNull() {
                this[this.tableGAHazardIdentification.IdentifiedDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGAHazardIdentification.DescriptionColumn);
            }
            
            public void SetDescriptionNull() {
                this[this.tableGAHazardIdentification.DescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsImmediateActionNull() {
                return this.IsNull(this.tableGAHazardIdentification.ImmediateActionColumn);
            }
            
            public void SetImmediateActionNull() {
                this[this.tableGAHazardIdentification.ImmediateActionColumn] = System.Convert.DBNull;
            }
            
            public bool IsRiskEvaluationNull() {
                return this.IsNull(this.tableGAHazardIdentification.RiskEvaluationColumn);
            }
            
            public void SetRiskEvaluationNull() {
                this[this.tableGAHazardIdentification.RiskEvaluationColumn] = System.Convert.DBNull;
            }
            
            public bool IsPossibleConsequenceNull() {
                return this.IsNull(this.tableGAHazardIdentification.PossibleConsequenceColumn);
            }
            
            public void SetPossibleConsequenceNull() {
                this[this.tableGAHazardIdentification.PossibleConsequenceColumn] = System.Convert.DBNull;
            }
            
            public bool IsSuggestedFurtherActionNull() {
                return this.IsNull(this.tableGAHazardIdentification.SuggestedFurtherActionColumn);
            }
            
            public void SetSuggestedFurtherActionNull() {
                this[this.tableGAHazardIdentification.SuggestedFurtherActionColumn] = System.Convert.DBNull;
            }
            
            public bool IsReporterNull() {
                return this.IsNull(this.tableGAHazardIdentification.ReporterColumn);
            }
            
            public void SetReporterNull() {
                this[this.tableGAHazardIdentification.ReporterColumn] = System.Convert.DBNull;
            }
            
            public bool IsRiskNull() {
                return this.IsNull(this.tableGAHazardIdentification.RiskColumn);
            }
            
            public void SetRiskNull() {
                this[this.tableGAHazardIdentification.RiskColumn] = System.Convert.DBNull;
            }
            
            public bool IsDepartmentListsRowIdNull() {
                return this.IsNull(this.tableGAHazardIdentification.DepartmentListsRowIdColumn);
            }
            
            public void SetDepartmentListsRowIdNull() {
                this[this.tableGAHazardIdentification.DepartmentListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsPotentialListsRowIdNull() {
                return this.IsNull(this.tableGAHazardIdentification.PotentialListsRowIdColumn);
            }
            
            public void SetPotentialListsRowIdNull() {
                this[this.tableGAHazardIdentification.PotentialListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsReporterJobTitleListsRowIdNull() {
                return this.IsNull(this.tableGAHazardIdentification.ReporterJobTitleListsRowIdColumn);
            }
            
            public void SetReporterJobTitleListsRowIdNull() {
                this[this.tableGAHazardIdentification.ReporterJobTitleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSeverityListsRowIdNull() {
                return this.IsNull(this.tableGAHazardIdentification.SeverityListsRowIdColumn);
            }
            
            public void SetSeverityListsRowIdNull() {
                this[this.tableGAHazardIdentification.SeverityListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSeverityAssetsListsRowIdNull() {
                return this.IsNull(this.tableGAHazardIdentification.SeverityAssetsListsRowIdColumn);
            }
            
            public void SetSeverityAssetsListsRowIdNull() {
                this[this.tableGAHazardIdentification.SeverityAssetsListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSeverityEnvironmentListsRowIdNull() {
                return this.IsNull(this.tableGAHazardIdentification.SeverityEnvironmentListsRowIdColumn);
            }
            
            public void SetSeverityEnvironmentListsRowIdNull() {
                this[this.tableGAHazardIdentification.SeverityEnvironmentListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSeverityPeopleListsRowIdNull() {
                return this.IsNull(this.tableGAHazardIdentification.SeverityPeopleListsRowIdColumn);
            }
            
            public void SetSeverityPeopleListsRowIdNull() {
                this[this.tableGAHazardIdentification.SeverityPeopleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTypeOfHIPListsRowIdNull() {
                return this.IsNull(this.tableGAHazardIdentification.TypeOfHIPListsRowIdColumn);
            }
            
            public void SetTypeOfHIPListsRowIdNull() {
                this[this.tableGAHazardIdentification.TypeOfHIPListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsWorkAreaListsRowIdNull() {
                return this.IsNull(this.tableGAHazardIdentification.WorkAreaListsRowIdColumn);
            }
            
            public void SetWorkAreaListsRowIdNull() {
                this[this.tableGAHazardIdentification.WorkAreaListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tableGAHazardIdentification.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tableGAHazardIdentification.NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsReferenceIdPrefixNull() {
                return this.IsNull(this.tableGAHazardIdentification.ReferenceIdPrefixColumn);
            }
            
            public void SetReferenceIdPrefixNull() {
                this[this.tableGAHazardIdentification.ReferenceIdPrefixColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAHazardIdentification.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGAHazardIdentification.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAHazardIdentification.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGAHazardIdentification.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAHazardIdentification.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGAHazardIdentification.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAHazardIdentification.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGAHazardIdentification.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAHazardIdentification.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGAHazardIdentification.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAHazardIdentification.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGAHazardIdentification.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAHazardIdentification.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGAHazardIdentification.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAHazardIdentification.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGAHazardIdentification.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAHazardIdentification.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGAHazardIdentification.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAHazardIdentification.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGAHazardIdentification.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAHazardIdentification.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGAHazardIdentification.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAHazardIdentification.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGAHazardIdentification.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAHazardIdentification.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGAHazardIdentification.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAHazardIdentification.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGAHazardIdentification.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAHazardIdentification.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGAHazardIdentification.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAHazardIdentification.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGAHazardIdentification.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAHazardIdentification.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGAHazardIdentification.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAHazardIdentification.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGAHazardIdentification.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAHazardIdentification.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGAHazardIdentification.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAHazardIdentificationRowChangeEvent : EventArgs {
            
            private GAHazardIdentificationRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAHazardIdentificationRowChangeEvent(GAHazardIdentificationRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAHazardIdentificationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAEquipmentDamageReportDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnEquipmentDamageReportRowId;
            
            private DataColumn columnReferenceId;
            
            private DataColumn columnDateAndTimeOfDamage;
            
            private DataColumn columnDepartmentRowId;
            
            private DataColumn columnReporter;
            
            private DataColumn columnName;
            
            private DataColumn columnShortDescription;
            
            private DataColumn columnWitness;
            
            private DataColumn columnReportDate;
            
            private DataColumn columnSuggestedCorrectiveAction;
            
            private DataColumn columnDamagedEquipment;
            
            private DataColumn columnTypeOfDamageListsRowId;
            
            private DataColumn columnWorkAreaListsRowId;
            
            private DataColumn columnReferenceIdPrefix;
            
            private DataColumn columnEyeWitness;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GAEquipmentDamageReportDataTable() : 
                    base("GAEquipmentDamageReport") {
                this.InitClass();
            }
            
            internal GAEquipmentDamageReportDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn EquipmentDamageReportRowIdColumn {
                get {
                    return this.columnEquipmentDamageReportRowId;
                }
            }
            
            internal DataColumn ReferenceIdColumn {
                get {
                    return this.columnReferenceId;
                }
            }
            
            internal DataColumn DateAndTimeOfDamageColumn {
                get {
                    return this.columnDateAndTimeOfDamage;
                }
            }
            
            internal DataColumn DepartmentRowIdColumn {
                get {
                    return this.columnDepartmentRowId;
                }
            }
            
            internal DataColumn ReporterColumn {
                get {
                    return this.columnReporter;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn ShortDescriptionColumn {
                get {
                    return this.columnShortDescription;
                }
            }
            
            internal DataColumn WitnessColumn {
                get {
                    return this.columnWitness;
                }
            }
            
            internal DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            internal DataColumn SuggestedCorrectiveActionColumn {
                get {
                    return this.columnSuggestedCorrectiveAction;
                }
            }
            
            internal DataColumn DamagedEquipmentColumn {
                get {
                    return this.columnDamagedEquipment;
                }
            }
            
            internal DataColumn TypeOfDamageListsRowIdColumn {
                get {
                    return this.columnTypeOfDamageListsRowId;
                }
            }
            
            internal DataColumn WorkAreaListsRowIdColumn {
                get {
                    return this.columnWorkAreaListsRowId;
                }
            }
            
            internal DataColumn ReferenceIdPrefixColumn {
                get {
                    return this.columnReferenceIdPrefix;
                }
            }
            
            internal DataColumn EyeWitnessColumn {
                get {
                    return this.columnEyeWitness;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GAEquipmentDamageReportRow this[int index] {
                get {
                    return ((GAEquipmentDamageReportRow)(this.Rows[index]));
                }
            }
            
            public event GAEquipmentDamageReportRowChangeEventHandler GAEquipmentDamageReportRowChanged;
            
            public event GAEquipmentDamageReportRowChangeEventHandler GAEquipmentDamageReportRowChanging;
            
            public event GAEquipmentDamageReportRowChangeEventHandler GAEquipmentDamageReportRowDeleted;
            
            public event GAEquipmentDamageReportRowChangeEventHandler GAEquipmentDamageReportRowDeleting;
            
            public void AddGAEquipmentDamageReportRow(GAEquipmentDamageReportRow row) {
                this.Rows.Add(row);
            }
            
            public GAEquipmentDamageReportRow AddGAEquipmentDamageReportRow(
                        string ReferenceId, 
                        System.DateTime DateAndTimeOfDamage, 
                        string DepartmentRowId, 
                        string Reporter, 
                        string Name, 
                        string ShortDescription, 
                        string Witness, 
                        System.DateTime ReportDate, 
                        string SuggestedCorrectiveAction, 
                        string DamagedEquipment, 
                        string TypeOfDamageListsRowId, 
                        string WorkAreaListsRowId, 
                        string ReferenceIdPrefix, 
                        string EyeWitness, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAEquipmentDamageReportRow rowGAEquipmentDamageReportRow = ((GAEquipmentDamageReportRow)(this.NewRow()));
                rowGAEquipmentDamageReportRow.ItemArray = new object[] {
                        null,
                        ReferenceId,
                        DateAndTimeOfDamage,
                        DepartmentRowId,
                        Reporter,
                        Name,
                        ShortDescription,
                        Witness,
                        ReportDate,
                        SuggestedCorrectiveAction,
                        DamagedEquipment,
                        TypeOfDamageListsRowId,
                        WorkAreaListsRowId,
                        ReferenceIdPrefix,
                        EyeWitness,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAEquipmentDamageReportRow);
                return rowGAEquipmentDamageReportRow;
            }
            
            public GAEquipmentDamageReportRow FindByEquipmentDamageReportRowId(int EquipmentDamageReportRowId) {
                return ((GAEquipmentDamageReportRow)(this.Rows.Find(new object[] {
                            EquipmentDamageReportRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAEquipmentDamageReportDataTable cln = ((GAEquipmentDamageReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAEquipmentDamageReportDataTable();
            }
            
            internal void InitVars() {
                this.columnEquipmentDamageReportRowId = this.Columns["EquipmentDamageReportRowId"];
                this.columnReferenceId = this.Columns["ReferenceId"];
                this.columnDateAndTimeOfDamage = this.Columns["DateAndTimeOfDamage"];
                this.columnDepartmentRowId = this.Columns["DepartmentRowId"];
                this.columnReporter = this.Columns["Reporter"];
                this.columnName = this.Columns["Name"];
                this.columnShortDescription = this.Columns["ShortDescription"];
                this.columnWitness = this.Columns["Witness"];
                this.columnReportDate = this.Columns["ReportDate"];
                this.columnSuggestedCorrectiveAction = this.Columns["SuggestedCorrectiveAction"];
                this.columnDamagedEquipment = this.Columns["DamagedEquipment"];
                this.columnTypeOfDamageListsRowId = this.Columns["TypeOfDamageListsRowId"];
                this.columnWorkAreaListsRowId = this.Columns["WorkAreaListsRowId"];
                this.columnReferenceIdPrefix = this.Columns["ReferenceIdPrefix"];
                this.columnEyeWitness = this.Columns["EyeWitness"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnEquipmentDamageReportRowId = new DataColumn("EquipmentDamageReportRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEquipmentDamageReportRowId);
                this.columnReferenceId = new DataColumn("ReferenceId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReferenceId);
                this.columnDateAndTimeOfDamage = new DataColumn("DateAndTimeOfDamage", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateAndTimeOfDamage);
                this.columnDepartmentRowId = new DataColumn("DepartmentRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDepartmentRowId);
                this.columnReporter = new DataColumn("Reporter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReporter);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnShortDescription = new DataColumn("ShortDescription", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShortDescription);
                this.columnWitness = new DataColumn("Witness", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWitness);
                this.columnReportDate = new DataColumn("ReportDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReportDate);
                this.columnSuggestedCorrectiveAction = new DataColumn("SuggestedCorrectiveAction", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSuggestedCorrectiveAction);
                this.columnDamagedEquipment = new DataColumn("DamagedEquipment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDamagedEquipment);
                this.columnTypeOfDamageListsRowId = new DataColumn("TypeOfDamageListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTypeOfDamageListsRowId);
                this.columnWorkAreaListsRowId = new DataColumn("WorkAreaListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWorkAreaListsRowId);
                this.columnReferenceIdPrefix = new DataColumn("ReferenceIdPrefix", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReferenceIdPrefix);
                this.columnEyeWitness = new DataColumn("EyeWitness", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEyeWitness);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey6", new DataColumn[] {
                                this.columnEquipmentDamageReportRowId}, true));
                this.columnEquipmentDamageReportRowId.AutoIncrement = true;
                this.columnEquipmentDamageReportRowId.AllowDBNull = false;
                this.columnEquipmentDamageReportRowId.ReadOnly = true;
                this.columnEquipmentDamageReportRowId.Unique = true;
            }
            
            public GAEquipmentDamageReportRow NewGAEquipmentDamageReportRow() {
                return ((GAEquipmentDamageReportRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAEquipmentDamageReportRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAEquipmentDamageReportRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAEquipmentDamageReportRowChanged != null)) {
                    this.GAEquipmentDamageReportRowChanged(this, new GAEquipmentDamageReportRowChangeEvent(((GAEquipmentDamageReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAEquipmentDamageReportRowChanging != null)) {
                    this.GAEquipmentDamageReportRowChanging(this, new GAEquipmentDamageReportRowChangeEvent(((GAEquipmentDamageReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAEquipmentDamageReportRowDeleted != null)) {
                    this.GAEquipmentDamageReportRowDeleted(this, new GAEquipmentDamageReportRowChangeEvent(((GAEquipmentDamageReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAEquipmentDamageReportRowDeleting != null)) {
                    this.GAEquipmentDamageReportRowDeleting(this, new GAEquipmentDamageReportRowChangeEvent(((GAEquipmentDamageReportRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAEquipmentDamageReportRow(GAEquipmentDamageReportRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAEquipmentDamageReportRow : DataRow {
            
            private GAEquipmentDamageReportDataTable tableGAEquipmentDamageReport;
            
            internal GAEquipmentDamageReportRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAEquipmentDamageReport = ((GAEquipmentDamageReportDataTable)(this.Table));
            }
            
            public int EquipmentDamageReportRowId {
                get {
                    return ((int)(this[this.tableGAEquipmentDamageReport.EquipmentDamageReportRowIdColumn]));
                }
                set {
                    this[this.tableGAEquipmentDamageReport.EquipmentDamageReportRowIdColumn] = value;
                }
            }
            
            public string ReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGAEquipmentDamageReport.ReferenceIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.ReferenceIdColumn] = value;
                }
            }
            
            public System.DateTime DateAndTimeOfDamage {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEquipmentDamageReport.DateAndTimeOfDamageColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.DateAndTimeOfDamageColumn] = value;
                }
            }
            
            public string DepartmentRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAEquipmentDamageReport.DepartmentRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.DepartmentRowIdColumn] = value;
                }
            }
            
            public string Reporter {
                get {
                    try {
                        return ((string)(this[this.tableGAEquipmentDamageReport.ReporterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.ReporterColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGAEquipmentDamageReport.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.NameColumn] = value;
                }
            }
            
            public string ShortDescription {
                get {
                    try {
                        return ((string)(this[this.tableGAEquipmentDamageReport.ShortDescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.ShortDescriptionColumn] = value;
                }
            }
            
            public string Witness {
                get {
                    try {
                        return ((string)(this[this.tableGAEquipmentDamageReport.WitnessColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.WitnessColumn] = value;
                }
            }
            
            public System.DateTime ReportDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEquipmentDamageReport.ReportDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.ReportDateColumn] = value;
                }
            }
            
            public string SuggestedCorrectiveAction {
                get {
                    try {
                        return ((string)(this[this.tableGAEquipmentDamageReport.SuggestedCorrectiveActionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.SuggestedCorrectiveActionColumn] = value;
                }
            }
            
            public string DamagedEquipment {
                get {
                    try {
                        return ((string)(this[this.tableGAEquipmentDamageReport.DamagedEquipmentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.DamagedEquipmentColumn] = value;
                }
            }
            
            public string TypeOfDamageListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAEquipmentDamageReport.TypeOfDamageListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.TypeOfDamageListsRowIdColumn] = value;
                }
            }
            
            public string WorkAreaListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAEquipmentDamageReport.WorkAreaListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.WorkAreaListsRowIdColumn] = value;
                }
            }
            
            public string ReferenceIdPrefix {
                get {
                    try {
                        return ((string)(this[this.tableGAEquipmentDamageReport.ReferenceIdPrefixColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.ReferenceIdPrefixColumn] = value;
                }
            }
            
            public string EyeWitness {
                get {
                    try {
                        return ((string)(this[this.tableGAEquipmentDamageReport.EyeWitnessColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.EyeWitnessColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEquipmentDamageReport.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEquipmentDamageReport.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAEquipmentDamageReport.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEquipmentDamageReport.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAEquipmentDamageReport.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEquipmentDamageReport.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAEquipmentDamageReport.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAEquipmentDamageReport.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAEquipmentDamageReport.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAEquipmentDamageReport.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEquipmentDamageReport.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEquipmentDamageReport.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEquipmentDamageReport.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAEquipmentDamageReport.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAEquipmentDamageReport.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAEquipmentDamageReport.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAEquipmentDamageReport.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAEquipmentDamageReport.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAEquipmentDamageReport.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEquipmentDamageReport.IntFree3Column] = value;
                }
            }
            
            public bool IsReferenceIdNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.ReferenceIdColumn);
            }
            
            public void SetReferenceIdNull() {
                this[this.tableGAEquipmentDamageReport.ReferenceIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateAndTimeOfDamageNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.DateAndTimeOfDamageColumn);
            }
            
            public void SetDateAndTimeOfDamageNull() {
                this[this.tableGAEquipmentDamageReport.DateAndTimeOfDamageColumn] = System.Convert.DBNull;
            }
            
            public bool IsDepartmentRowIdNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.DepartmentRowIdColumn);
            }
            
            public void SetDepartmentRowIdNull() {
                this[this.tableGAEquipmentDamageReport.DepartmentRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsReporterNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.ReporterColumn);
            }
            
            public void SetReporterNull() {
                this[this.tableGAEquipmentDamageReport.ReporterColumn] = System.Convert.DBNull;
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tableGAEquipmentDamageReport.NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsShortDescriptionNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.ShortDescriptionColumn);
            }
            
            public void SetShortDescriptionNull() {
                this[this.tableGAEquipmentDamageReport.ShortDescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsWitnessNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.WitnessColumn);
            }
            
            public void SetWitnessNull() {
                this[this.tableGAEquipmentDamageReport.WitnessColumn] = System.Convert.DBNull;
            }
            
            public bool IsReportDateNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.ReportDateColumn);
            }
            
            public void SetReportDateNull() {
                this[this.tableGAEquipmentDamageReport.ReportDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsSuggestedCorrectiveActionNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.SuggestedCorrectiveActionColumn);
            }
            
            public void SetSuggestedCorrectiveActionNull() {
                this[this.tableGAEquipmentDamageReport.SuggestedCorrectiveActionColumn] = System.Convert.DBNull;
            }
            
            public bool IsDamagedEquipmentNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.DamagedEquipmentColumn);
            }
            
            public void SetDamagedEquipmentNull() {
                this[this.tableGAEquipmentDamageReport.DamagedEquipmentColumn] = System.Convert.DBNull;
            }
            
            public bool IsTypeOfDamageListsRowIdNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.TypeOfDamageListsRowIdColumn);
            }
            
            public void SetTypeOfDamageListsRowIdNull() {
                this[this.tableGAEquipmentDamageReport.TypeOfDamageListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsWorkAreaListsRowIdNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.WorkAreaListsRowIdColumn);
            }
            
            public void SetWorkAreaListsRowIdNull() {
                this[this.tableGAEquipmentDamageReport.WorkAreaListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsReferenceIdPrefixNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.ReferenceIdPrefixColumn);
            }
            
            public void SetReferenceIdPrefixNull() {
                this[this.tableGAEquipmentDamageReport.ReferenceIdPrefixColumn] = System.Convert.DBNull;
            }
            
            public bool IsEyeWitnessNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.EyeWitnessColumn);
            }
            
            public void SetEyeWitnessNull() {
                this[this.tableGAEquipmentDamageReport.EyeWitnessColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGAEquipmentDamageReport.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGAEquipmentDamageReport.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGAEquipmentDamageReport.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGAEquipmentDamageReport.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGAEquipmentDamageReport.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGAEquipmentDamageReport.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAEquipmentDamageReport.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGAEquipmentDamageReport.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAEquipmentDamageReport.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGAEquipmentDamageReport.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAEquipmentDamageReport.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGAEquipmentDamageReport.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAEquipmentDamageReport.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGAEquipmentDamageReport.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAEquipmentDamageReport.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGAEquipmentDamageReport.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAEquipmentDamageReport.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGAEquipmentDamageReport.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAEquipmentDamageReport.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGAEquipmentDamageReport.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAEquipmentDamageReport.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGAEquipmentDamageReport.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAEquipmentDamageReport.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGAEquipmentDamageReport.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAEquipmentDamageReport.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGAEquipmentDamageReport.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAEquipmentDamageReport.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGAEquipmentDamageReport.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAEquipmentDamageReport.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGAEquipmentDamageReport.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAEquipmentDamageReport.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGAEquipmentDamageReport.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAEquipmentDamageReportRowChangeEvent : EventArgs {
            
            private GAEquipmentDamageReportRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAEquipmentDamageReportRowChangeEvent(GAEquipmentDamageReportRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAEquipmentDamageReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAMeetingPersonListDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnMeetingPersonListRowId;
            
            private DataColumn columnMeetingRowId;
            
            private DataColumn columnPersonId;
            
            private DataColumn columnDistributionTo;
            
            private DataColumn columnDistributionCC;
            
            private DataColumn columnDistributionBCC;
            
            private DataColumn columnParticipant;
            
            private DataColumn columnAbsent;
            
            private DataColumn columnReporter;
            
            private DataColumn columnComment;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GAMeetingPersonListDataTable() : 
                    base("GAMeetingPersonList") {
                this.InitClass();
            }
            
            internal GAMeetingPersonListDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn MeetingPersonListRowIdColumn {
                get {
                    return this.columnMeetingPersonListRowId;
                }
            }
            
            internal DataColumn MeetingRowIdColumn {
                get {
                    return this.columnMeetingRowId;
                }
            }
            
            internal DataColumn PersonIdColumn {
                get {
                    return this.columnPersonId;
                }
            }
            
            internal DataColumn DistributionToColumn {
                get {
                    return this.columnDistributionTo;
                }
            }
            
            internal DataColumn DistributionCCColumn {
                get {
                    return this.columnDistributionCC;
                }
            }
            
            internal DataColumn DistributionBCCColumn {
                get {
                    return this.columnDistributionBCC;
                }
            }
            
            internal DataColumn ParticipantColumn {
                get {
                    return this.columnParticipant;
                }
            }
            
            internal DataColumn AbsentColumn {
                get {
                    return this.columnAbsent;
                }
            }
            
            internal DataColumn ReporterColumn {
                get {
                    return this.columnReporter;
                }
            }
            
            internal DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GAMeetingPersonListRow this[int index] {
                get {
                    return ((GAMeetingPersonListRow)(this.Rows[index]));
                }
            }
            
            public event GAMeetingPersonListRowChangeEventHandler GAMeetingPersonListRowChanged;
            
            public event GAMeetingPersonListRowChangeEventHandler GAMeetingPersonListRowChanging;
            
            public event GAMeetingPersonListRowChangeEventHandler GAMeetingPersonListRowDeleted;
            
            public event GAMeetingPersonListRowChangeEventHandler GAMeetingPersonListRowDeleting;
            
            public void AddGAMeetingPersonListRow(GAMeetingPersonListRow row) {
                this.Rows.Add(row);
            }
            
            public GAMeetingPersonListRow AddGAMeetingPersonListRow(
                        int MeetingRowId, 
                        string PersonId, 
                        bool DistributionTo, 
                        bool DistributionCC, 
                        bool DistributionBCC, 
                        bool Participant, 
                        bool Absent, 
                        bool Reporter, 
                        string Comment, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAMeetingPersonListRow rowGAMeetingPersonListRow = ((GAMeetingPersonListRow)(this.NewRow()));
                rowGAMeetingPersonListRow.ItemArray = new object[] {
                        null,
                        MeetingRowId,
                        PersonId,
                        DistributionTo,
                        DistributionCC,
                        DistributionBCC,
                        Participant,
                        Absent,
                        Reporter,
                        Comment,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAMeetingPersonListRow);
                return rowGAMeetingPersonListRow;
            }
            
            public GAMeetingPersonListRow FindByMeetingPersonListRowId(int MeetingPersonListRowId) {
                return ((GAMeetingPersonListRow)(this.Rows.Find(new object[] {
                            MeetingPersonListRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAMeetingPersonListDataTable cln = ((GAMeetingPersonListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAMeetingPersonListDataTable();
            }
            
            internal void InitVars() {
                this.columnMeetingPersonListRowId = this.Columns["MeetingPersonListRowId"];
                this.columnMeetingRowId = this.Columns["MeetingRowId"];
                this.columnPersonId = this.Columns["PersonId"];
                this.columnDistributionTo = this.Columns["DistributionTo"];
                this.columnDistributionCC = this.Columns["DistributionCC"];
                this.columnDistributionBCC = this.Columns["DistributionBCC"];
                this.columnParticipant = this.Columns["Participant"];
                this.columnAbsent = this.Columns["Absent"];
                this.columnReporter = this.Columns["Reporter"];
                this.columnComment = this.Columns["Comment"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnMeetingPersonListRowId = new DataColumn("MeetingPersonListRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMeetingPersonListRowId);
                this.columnMeetingRowId = new DataColumn("MeetingRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMeetingRowId);
                this.columnPersonId = new DataColumn("PersonId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPersonId);
                this.columnDistributionTo = new DataColumn("DistributionTo", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDistributionTo);
                this.columnDistributionCC = new DataColumn("DistributionCC", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDistributionCC);
                this.columnDistributionBCC = new DataColumn("DistributionBCC", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDistributionBCC);
                this.columnParticipant = new DataColumn("Participant", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnParticipant);
                this.columnAbsent = new DataColumn("Absent", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAbsent);
                this.columnReporter = new DataColumn("Reporter", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReporter);
                this.columnComment = new DataColumn("Comment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComment);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey7", new DataColumn[] {
                                this.columnMeetingPersonListRowId}, true));
                this.columnMeetingPersonListRowId.AutoIncrement = true;
                this.columnMeetingPersonListRowId.AllowDBNull = false;
                this.columnMeetingPersonListRowId.ReadOnly = true;
                this.columnMeetingPersonListRowId.Unique = true;
            }
            
            public GAMeetingPersonListRow NewGAMeetingPersonListRow() {
                return ((GAMeetingPersonListRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAMeetingPersonListRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAMeetingPersonListRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAMeetingPersonListRowChanged != null)) {
                    this.GAMeetingPersonListRowChanged(this, new GAMeetingPersonListRowChangeEvent(((GAMeetingPersonListRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAMeetingPersonListRowChanging != null)) {
                    this.GAMeetingPersonListRowChanging(this, new GAMeetingPersonListRowChangeEvent(((GAMeetingPersonListRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAMeetingPersonListRowDeleted != null)) {
                    this.GAMeetingPersonListRowDeleted(this, new GAMeetingPersonListRowChangeEvent(((GAMeetingPersonListRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAMeetingPersonListRowDeleting != null)) {
                    this.GAMeetingPersonListRowDeleting(this, new GAMeetingPersonListRowChangeEvent(((GAMeetingPersonListRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAMeetingPersonListRow(GAMeetingPersonListRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAMeetingPersonListRow : DataRow {
            
            private GAMeetingPersonListDataTable tableGAMeetingPersonList;
            
            internal GAMeetingPersonListRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAMeetingPersonList = ((GAMeetingPersonListDataTable)(this.Table));
            }
            
            public int MeetingPersonListRowId {
                get {
                    return ((int)(this[this.tableGAMeetingPersonList.MeetingPersonListRowIdColumn]));
                }
                set {
                    this[this.tableGAMeetingPersonList.MeetingPersonListRowIdColumn] = value;
                }
            }
            
            public int MeetingRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingPersonList.MeetingRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.MeetingRowIdColumn] = value;
                }
            }
            
            public string PersonId {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingPersonList.PersonIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.PersonIdColumn] = value;
                }
            }
            
            public bool DistributionTo {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingPersonList.DistributionToColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.DistributionToColumn] = value;
                }
            }
            
            public bool DistributionCC {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingPersonList.DistributionCCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.DistributionCCColumn] = value;
                }
            }
            
            public bool DistributionBCC {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingPersonList.DistributionBCCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.DistributionBCCColumn] = value;
                }
            }
            
            public bool Participant {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingPersonList.ParticipantColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.ParticipantColumn] = value;
                }
            }
            
            public bool Absent {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingPersonList.AbsentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.AbsentColumn] = value;
                }
            }
            
            public bool Reporter {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingPersonList.ReporterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.ReporterColumn] = value;
                }
            }
            
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingPersonList.CommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.CommentColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingPersonList.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeetingPersonList.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingPersonList.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeetingPersonList.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingPersonList.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeetingPersonList.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingPersonList.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingPersonList.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingPersonList.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingPersonList.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeetingPersonList.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeetingPersonList.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeetingPersonList.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingPersonList.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingPersonList.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingPersonList.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingPersonList.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingPersonList.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingPersonList.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingPersonList.IntFree3Column] = value;
                }
            }
            
            public bool IsMeetingRowIdNull() {
                return this.IsNull(this.tableGAMeetingPersonList.MeetingRowIdColumn);
            }
            
            public void SetMeetingRowIdNull() {
                this[this.tableGAMeetingPersonList.MeetingRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsPersonIdNull() {
                return this.IsNull(this.tableGAMeetingPersonList.PersonIdColumn);
            }
            
            public void SetPersonIdNull() {
                this[this.tableGAMeetingPersonList.PersonIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDistributionToNull() {
                return this.IsNull(this.tableGAMeetingPersonList.DistributionToColumn);
            }
            
            public void SetDistributionToNull() {
                this[this.tableGAMeetingPersonList.DistributionToColumn] = System.Convert.DBNull;
            }
            
            public bool IsDistributionCCNull() {
                return this.IsNull(this.tableGAMeetingPersonList.DistributionCCColumn);
            }
            
            public void SetDistributionCCNull() {
                this[this.tableGAMeetingPersonList.DistributionCCColumn] = System.Convert.DBNull;
            }
            
            public bool IsDistributionBCCNull() {
                return this.IsNull(this.tableGAMeetingPersonList.DistributionBCCColumn);
            }
            
            public void SetDistributionBCCNull() {
                this[this.tableGAMeetingPersonList.DistributionBCCColumn] = System.Convert.DBNull;
            }
            
            public bool IsParticipantNull() {
                return this.IsNull(this.tableGAMeetingPersonList.ParticipantColumn);
            }
            
            public void SetParticipantNull() {
                this[this.tableGAMeetingPersonList.ParticipantColumn] = System.Convert.DBNull;
            }
            
            public bool IsAbsentNull() {
                return this.IsNull(this.tableGAMeetingPersonList.AbsentColumn);
            }
            
            public void SetAbsentNull() {
                this[this.tableGAMeetingPersonList.AbsentColumn] = System.Convert.DBNull;
            }
            
            public bool IsReporterNull() {
                return this.IsNull(this.tableGAMeetingPersonList.ReporterColumn);
            }
            
            public void SetReporterNull() {
                this[this.tableGAMeetingPersonList.ReporterColumn] = System.Convert.DBNull;
            }
            
            public bool IsCommentNull() {
                return this.IsNull(this.tableGAMeetingPersonList.CommentColumn);
            }
            
            public void SetCommentNull() {
                this[this.tableGAMeetingPersonList.CommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAMeetingPersonList.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGAMeetingPersonList.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAMeetingPersonList.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGAMeetingPersonList.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAMeetingPersonList.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGAMeetingPersonList.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAMeetingPersonList.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGAMeetingPersonList.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAMeetingPersonList.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGAMeetingPersonList.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAMeetingPersonList.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGAMeetingPersonList.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAMeetingPersonList.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGAMeetingPersonList.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAMeetingPersonList.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGAMeetingPersonList.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAMeetingPersonList.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGAMeetingPersonList.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAMeetingPersonList.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGAMeetingPersonList.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAMeetingPersonList.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGAMeetingPersonList.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAMeetingPersonList.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGAMeetingPersonList.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAMeetingPersonList.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGAMeetingPersonList.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAMeetingPersonList.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGAMeetingPersonList.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAMeetingPersonList.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGAMeetingPersonList.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAMeetingPersonList.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGAMeetingPersonList.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAMeetingPersonList.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGAMeetingPersonList.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAMeetingPersonList.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGAMeetingPersonList.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAMeetingPersonList.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGAMeetingPersonList.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAMeetingPersonListRowChangeEvent : EventArgs {
            
            private GAMeetingPersonListRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAMeetingPersonListRowChangeEvent(GAMeetingPersonListRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAMeetingPersonListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAMeansOfContactDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnMeansOfContactRowId;
            
            private DataColumn columnPersonnelRowId;
            
            private DataColumn columnContactDeviceAddress;
            
            private DataColumn columnContactDeviceTypeListsRowId;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GAMeansOfContactDataTable() : 
                    base("GAMeansOfContact") {
                this.InitClass();
            }
            
            internal GAMeansOfContactDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn MeansOfContactRowIdColumn {
                get {
                    return this.columnMeansOfContactRowId;
                }
            }
            
            internal DataColumn PersonnelRowIdColumn {
                get {
                    return this.columnPersonnelRowId;
                }
            }
            
            internal DataColumn ContactDeviceAddressColumn {
                get {
                    return this.columnContactDeviceAddress;
                }
            }
            
            internal DataColumn ContactDeviceTypeListsRowIdColumn {
                get {
                    return this.columnContactDeviceTypeListsRowId;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GAMeansOfContactRow this[int index] {
                get {
                    return ((GAMeansOfContactRow)(this.Rows[index]));
                }
            }
            
            public event GAMeansOfContactRowChangeEventHandler GAMeansOfContactRowChanged;
            
            public event GAMeansOfContactRowChangeEventHandler GAMeansOfContactRowChanging;
            
            public event GAMeansOfContactRowChangeEventHandler GAMeansOfContactRowDeleted;
            
            public event GAMeansOfContactRowChangeEventHandler GAMeansOfContactRowDeleting;
            
            public void AddGAMeansOfContactRow(GAMeansOfContactRow row) {
                this.Rows.Add(row);
            }
            
            public GAMeansOfContactRow AddGAMeansOfContactRow(
                        string PersonnelRowId, 
                        string ContactDeviceAddress, 
                        string ContactDeviceTypeListsRowId, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAMeansOfContactRow rowGAMeansOfContactRow = ((GAMeansOfContactRow)(this.NewRow()));
                rowGAMeansOfContactRow.ItemArray = new object[] {
                        null,
                        PersonnelRowId,
                        ContactDeviceAddress,
                        ContactDeviceTypeListsRowId,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAMeansOfContactRow);
                return rowGAMeansOfContactRow;
            }
            
            public GAMeansOfContactRow FindByMeansOfContactRowId(int MeansOfContactRowId) {
                return ((GAMeansOfContactRow)(this.Rows.Find(new object[] {
                            MeansOfContactRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAMeansOfContactDataTable cln = ((GAMeansOfContactDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAMeansOfContactDataTable();
            }
            
            internal void InitVars() {
                this.columnMeansOfContactRowId = this.Columns["MeansOfContactRowId"];
                this.columnPersonnelRowId = this.Columns["PersonnelRowId"];
                this.columnContactDeviceAddress = this.Columns["ContactDeviceAddress"];
                this.columnContactDeviceTypeListsRowId = this.Columns["ContactDeviceTypeListsRowId"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnMeansOfContactRowId = new DataColumn("MeansOfContactRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMeansOfContactRowId);
                this.columnPersonnelRowId = new DataColumn("PersonnelRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPersonnelRowId);
                this.columnContactDeviceAddress = new DataColumn("ContactDeviceAddress", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContactDeviceAddress);
                this.columnContactDeviceTypeListsRowId = new DataColumn("ContactDeviceTypeListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContactDeviceTypeListsRowId);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey8", new DataColumn[] {
                                this.columnMeansOfContactRowId}, true));
                this.columnMeansOfContactRowId.AutoIncrement = true;
                this.columnMeansOfContactRowId.AllowDBNull = false;
                this.columnMeansOfContactRowId.ReadOnly = true;
                this.columnMeansOfContactRowId.Unique = true;
            }
            
            public GAMeansOfContactRow NewGAMeansOfContactRow() {
                return ((GAMeansOfContactRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAMeansOfContactRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAMeansOfContactRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAMeansOfContactRowChanged != null)) {
                    this.GAMeansOfContactRowChanged(this, new GAMeansOfContactRowChangeEvent(((GAMeansOfContactRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAMeansOfContactRowChanging != null)) {
                    this.GAMeansOfContactRowChanging(this, new GAMeansOfContactRowChangeEvent(((GAMeansOfContactRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAMeansOfContactRowDeleted != null)) {
                    this.GAMeansOfContactRowDeleted(this, new GAMeansOfContactRowChangeEvent(((GAMeansOfContactRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAMeansOfContactRowDeleting != null)) {
                    this.GAMeansOfContactRowDeleting(this, new GAMeansOfContactRowChangeEvent(((GAMeansOfContactRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAMeansOfContactRow(GAMeansOfContactRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAMeansOfContactRow : DataRow {
            
            private GAMeansOfContactDataTable tableGAMeansOfContact;
            
            internal GAMeansOfContactRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAMeansOfContact = ((GAMeansOfContactDataTable)(this.Table));
            }
            
            public int MeansOfContactRowId {
                get {
                    return ((int)(this[this.tableGAMeansOfContact.MeansOfContactRowIdColumn]));
                }
                set {
                    this[this.tableGAMeansOfContact.MeansOfContactRowIdColumn] = value;
                }
            }
            
            public string PersonnelRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAMeansOfContact.PersonnelRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.PersonnelRowIdColumn] = value;
                }
            }
            
            public string ContactDeviceAddress {
                get {
                    try {
                        return ((string)(this[this.tableGAMeansOfContact.ContactDeviceAddressColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.ContactDeviceAddressColumn] = value;
                }
            }
            
            public string ContactDeviceTypeListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAMeansOfContact.ContactDeviceTypeListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.ContactDeviceTypeListsRowIdColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMeansOfContact.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeansOfContact.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMeansOfContact.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeansOfContact.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMeansOfContact.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeansOfContact.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMeansOfContact.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeansOfContact.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeansOfContact.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeansOfContact.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeansOfContact.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeansOfContact.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeansOfContact.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeansOfContact.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeansOfContact.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeansOfContact.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAMeansOfContact.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAMeansOfContact.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAMeansOfContact.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeansOfContact.IntFree3Column] = value;
                }
            }
            
            public bool IsPersonnelRowIdNull() {
                return this.IsNull(this.tableGAMeansOfContact.PersonnelRowIdColumn);
            }
            
            public void SetPersonnelRowIdNull() {
                this[this.tableGAMeansOfContact.PersonnelRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsContactDeviceAddressNull() {
                return this.IsNull(this.tableGAMeansOfContact.ContactDeviceAddressColumn);
            }
            
            public void SetContactDeviceAddressNull() {
                this[this.tableGAMeansOfContact.ContactDeviceAddressColumn] = System.Convert.DBNull;
            }
            
            public bool IsContactDeviceTypeListsRowIdNull() {
                return this.IsNull(this.tableGAMeansOfContact.ContactDeviceTypeListsRowIdColumn);
            }
            
            public void SetContactDeviceTypeListsRowIdNull() {
                this[this.tableGAMeansOfContact.ContactDeviceTypeListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAMeansOfContact.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGAMeansOfContact.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAMeansOfContact.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGAMeansOfContact.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAMeansOfContact.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGAMeansOfContact.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAMeansOfContact.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGAMeansOfContact.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAMeansOfContact.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGAMeansOfContact.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAMeansOfContact.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGAMeansOfContact.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAMeansOfContact.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGAMeansOfContact.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAMeansOfContact.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGAMeansOfContact.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAMeansOfContact.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGAMeansOfContact.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAMeansOfContact.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGAMeansOfContact.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAMeansOfContact.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGAMeansOfContact.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAMeansOfContact.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGAMeansOfContact.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAMeansOfContact.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGAMeansOfContact.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAMeansOfContact.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGAMeansOfContact.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAMeansOfContact.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGAMeansOfContact.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAMeansOfContact.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGAMeansOfContact.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAMeansOfContact.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGAMeansOfContact.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAMeansOfContact.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGAMeansOfContact.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAMeansOfContact.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGAMeansOfContact.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAMeansOfContactRowChangeEvent : EventArgs {
            
            private GAMeansOfContactRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAMeansOfContactRowChangeEvent(GAMeansOfContactRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAMeansOfContactRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAPersonnelDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnPersonnelRowId;
            
            private DataColumn columnDepartmentRowId;
            
            private DataColumn columnPersonnelType;
            
            private DataColumn columnTitle;
            
            private DataColumn columnInitials;
            
            private DataColumn columnGivenName;
            
            private DataColumn columnFamilyName;
            
            private DataColumn columnAddress;
            
            private DataColumn columnDateOfBirth;
            
            private DataColumn columnNationalOrSecurityNumber;
            
            private DataColumn columnBloodType;
            
            private DataColumn columnComment;
            
            private DataColumn columnName;
            
            private DataColumn columnMaritalStatusListsRowId;
            
            private DataColumn columnNationalityListsRowId;
            
            private DataColumn columnSexListsRowId;
            
            private DataColumn columnWorkExperienceFromDate;
            
            private DataColumn columnOffshoreExperienceFromDate;
            
            private DataColumn columnrowguid;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GAPersonnelDataTable() : 
                    base("GAPersonnel") {
                this.InitClass();
            }
            
            internal GAPersonnelDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn PersonnelRowIdColumn {
                get {
                    return this.columnPersonnelRowId;
                }
            }
            
            internal DataColumn DepartmentRowIdColumn {
                get {
                    return this.columnDepartmentRowId;
                }
            }
            
            internal DataColumn PersonnelTypeColumn {
                get {
                    return this.columnPersonnelType;
                }
            }
            
            internal DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            internal DataColumn InitialsColumn {
                get {
                    return this.columnInitials;
                }
            }
            
            internal DataColumn GivenNameColumn {
                get {
                    return this.columnGivenName;
                }
            }
            
            internal DataColumn FamilyNameColumn {
                get {
                    return this.columnFamilyName;
                }
            }
            
            internal DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            internal DataColumn DateOfBirthColumn {
                get {
                    return this.columnDateOfBirth;
                }
            }
            
            internal DataColumn NationalOrSecurityNumberColumn {
                get {
                    return this.columnNationalOrSecurityNumber;
                }
            }
            
            internal DataColumn BloodTypeColumn {
                get {
                    return this.columnBloodType;
                }
            }
            
            internal DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn MaritalStatusListsRowIdColumn {
                get {
                    return this.columnMaritalStatusListsRowId;
                }
            }
            
            internal DataColumn NationalityListsRowIdColumn {
                get {
                    return this.columnNationalityListsRowId;
                }
            }
            
            internal DataColumn SexListsRowIdColumn {
                get {
                    return this.columnSexListsRowId;
                }
            }
            
            internal DataColumn WorkExperienceFromDateColumn {
                get {
                    return this.columnWorkExperienceFromDate;
                }
            }
            
            internal DataColumn OffshoreExperienceFromDateColumn {
                get {
                    return this.columnOffshoreExperienceFromDate;
                }
            }
            
            internal DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GAPersonnelRow this[int index] {
                get {
                    return ((GAPersonnelRow)(this.Rows[index]));
                }
            }
            
            public event GAPersonnelRowChangeEventHandler GAPersonnelRowChanged;
            
            public event GAPersonnelRowChangeEventHandler GAPersonnelRowChanging;
            
            public event GAPersonnelRowChangeEventHandler GAPersonnelRowDeleted;
            
            public event GAPersonnelRowChangeEventHandler GAPersonnelRowDeleting;
            
            public void AddGAPersonnelRow(GAPersonnelRow row) {
                this.Rows.Add(row);
            }
            
            public GAPersonnelRow AddGAPersonnelRow(
                        string DepartmentRowId, 
                        string PersonnelType, 
                        string Title, 
                        string Initials, 
                        string GivenName, 
                        string FamilyName, 
                        string Address, 
                        System.DateTime DateOfBirth, 
                        string NationalOrSecurityNumber, 
                        string BloodType, 
                        string Comment, 
                        string Name, 
                        string MaritalStatusListsRowId, 
                        string NationalityListsRowId, 
                        string SexListsRowId, 
                        System.DateTime WorkExperienceFromDate, 
                        System.DateTime OffshoreExperienceFromDate, 
                        System.Guid rowguid, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAPersonnelRow rowGAPersonnelRow = ((GAPersonnelRow)(this.NewRow()));
                rowGAPersonnelRow.ItemArray = new object[] {
                        null,
                        DepartmentRowId,
                        PersonnelType,
                        Title,
                        Initials,
                        GivenName,
                        FamilyName,
                        Address,
                        DateOfBirth,
                        NationalOrSecurityNumber,
                        BloodType,
                        Comment,
                        Name,
                        MaritalStatusListsRowId,
                        NationalityListsRowId,
                        SexListsRowId,
                        WorkExperienceFromDate,
                        OffshoreExperienceFromDate,
                        rowguid,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAPersonnelRow);
                return rowGAPersonnelRow;
            }
            
            public GAPersonnelRow FindByPersonnelRowId(int PersonnelRowId) {
                return ((GAPersonnelRow)(this.Rows.Find(new object[] {
                            PersonnelRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAPersonnelDataTable cln = ((GAPersonnelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAPersonnelDataTable();
            }
            
            internal void InitVars() {
                this.columnPersonnelRowId = this.Columns["PersonnelRowId"];
                this.columnDepartmentRowId = this.Columns["DepartmentRowId"];
                this.columnPersonnelType = this.Columns["PersonnelType"];
                this.columnTitle = this.Columns["Title"];
                this.columnInitials = this.Columns["Initials"];
                this.columnGivenName = this.Columns["GivenName"];
                this.columnFamilyName = this.Columns["FamilyName"];
                this.columnAddress = this.Columns["Address"];
                this.columnDateOfBirth = this.Columns["DateOfBirth"];
                this.columnNationalOrSecurityNumber = this.Columns["NationalOrSecurityNumber"];
                this.columnBloodType = this.Columns["BloodType"];
                this.columnComment = this.Columns["Comment"];
                this.columnName = this.Columns["Name"];
                this.columnMaritalStatusListsRowId = this.Columns["MaritalStatusListsRowId"];
                this.columnNationalityListsRowId = this.Columns["NationalityListsRowId"];
                this.columnSexListsRowId = this.Columns["SexListsRowId"];
                this.columnWorkExperienceFromDate = this.Columns["WorkExperienceFromDate"];
                this.columnOffshoreExperienceFromDate = this.Columns["OffshoreExperienceFromDate"];
                this.columnrowguid = this.Columns["rowguid"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnPersonnelRowId = new DataColumn("PersonnelRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPersonnelRowId);
                this.columnDepartmentRowId = new DataColumn("DepartmentRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDepartmentRowId);
                this.columnPersonnelType = new DataColumn("PersonnelType", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPersonnelType);
                this.columnTitle = new DataColumn("Title", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTitle);
                this.columnInitials = new DataColumn("Initials", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnInitials);
                this.columnGivenName = new DataColumn("GivenName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGivenName);
                this.columnFamilyName = new DataColumn("FamilyName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFamilyName);
                this.columnAddress = new DataColumn("Address", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAddress);
                this.columnDateOfBirth = new DataColumn("DateOfBirth", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateOfBirth);
                this.columnNationalOrSecurityNumber = new DataColumn("NationalOrSecurityNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNationalOrSecurityNumber);
                this.columnBloodType = new DataColumn("BloodType", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBloodType);
                this.columnComment = new DataColumn("Comment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComment);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnMaritalStatusListsRowId = new DataColumn("MaritalStatusListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaritalStatusListsRowId);
                this.columnNationalityListsRowId = new DataColumn("NationalityListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNationalityListsRowId);
                this.columnSexListsRowId = new DataColumn("SexListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSexListsRowId);
                this.columnWorkExperienceFromDate = new DataColumn("WorkExperienceFromDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWorkExperienceFromDate);
                this.columnOffshoreExperienceFromDate = new DataColumn("OffshoreExperienceFromDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOffshoreExperienceFromDate);
                this.columnrowguid = new DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnrowguid);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey9", new DataColumn[] {
                                this.columnPersonnelRowId}, true));
                this.columnPersonnelRowId.AutoIncrement = true;
                this.columnPersonnelRowId.AllowDBNull = false;
                this.columnPersonnelRowId.ReadOnly = true;
                this.columnPersonnelRowId.Unique = true;
            }
            
            public GAPersonnelRow NewGAPersonnelRow() {
                return ((GAPersonnelRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAPersonnelRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAPersonnelRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAPersonnelRowChanged != null)) {
                    this.GAPersonnelRowChanged(this, new GAPersonnelRowChangeEvent(((GAPersonnelRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAPersonnelRowChanging != null)) {
                    this.GAPersonnelRowChanging(this, new GAPersonnelRowChangeEvent(((GAPersonnelRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAPersonnelRowDeleted != null)) {
                    this.GAPersonnelRowDeleted(this, new GAPersonnelRowChangeEvent(((GAPersonnelRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAPersonnelRowDeleting != null)) {
                    this.GAPersonnelRowDeleting(this, new GAPersonnelRowChangeEvent(((GAPersonnelRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAPersonnelRow(GAPersonnelRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAPersonnelRow : DataRow {
            
            private GAPersonnelDataTable tableGAPersonnel;
            
            internal GAPersonnelRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAPersonnel = ((GAPersonnelDataTable)(this.Table));
            }
            
            public int PersonnelRowId {
                get {
                    return ((int)(this[this.tableGAPersonnel.PersonnelRowIdColumn]));
                }
                set {
                    this[this.tableGAPersonnel.PersonnelRowIdColumn] = value;
                }
            }
            
            public string DepartmentRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.DepartmentRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.DepartmentRowIdColumn] = value;
                }
            }
            
            public string PersonnelType {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.PersonnelTypeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.PersonnelTypeColumn] = value;
                }
            }
            
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.TitleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.TitleColumn] = value;
                }
            }
            
            public string Initials {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.InitialsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.InitialsColumn] = value;
                }
            }
            
            public string GivenName {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.GivenNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.GivenNameColumn] = value;
                }
            }
            
            public string FamilyName {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.FamilyNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.FamilyNameColumn] = value;
                }
            }
            
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.AddressColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.AddressColumn] = value;
                }
            }
            
            public System.DateTime DateOfBirth {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAPersonnel.DateOfBirthColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.DateOfBirthColumn] = value;
                }
            }
            
            public string NationalOrSecurityNumber {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.NationalOrSecurityNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.NationalOrSecurityNumberColumn] = value;
                }
            }
            
            public string BloodType {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.BloodTypeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.BloodTypeColumn] = value;
                }
            }
            
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.CommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.CommentColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.NameColumn] = value;
                }
            }
            
            public string MaritalStatusListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.MaritalStatusListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.MaritalStatusListsRowIdColumn] = value;
                }
            }
            
            public string NationalityListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.NationalityListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.NationalityListsRowIdColumn] = value;
                }
            }
            
            public string SexListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.SexListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.SexListsRowIdColumn] = value;
                }
            }
            
            public System.DateTime WorkExperienceFromDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAPersonnel.WorkExperienceFromDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.WorkExperienceFromDateColumn] = value;
                }
            }
            
            public System.DateTime OffshoreExperienceFromDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAPersonnel.OffshoreExperienceFromDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.OffshoreExperienceFromDateColumn] = value;
                }
            }
            
            public System.Guid rowguid {
                get {
                    try {
                        return ((System.Guid)(this[this.tableGAPersonnel.rowguidColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.rowguidColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAPersonnel.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAPersonnel.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAPersonnel.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAPersonnel.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAPersonnel.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAPersonnel.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAPersonnel.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAPersonnel.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAPersonnel.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAPersonnel.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAPersonnel.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAPersonnel.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAPersonnel.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAPersonnel.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAPersonnel.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAPersonnel.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAPersonnel.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAPersonnel.IntFree3Column] = value;
                }
            }
            
            public bool IsDepartmentRowIdNull() {
                return this.IsNull(this.tableGAPersonnel.DepartmentRowIdColumn);
            }
            
            public void SetDepartmentRowIdNull() {
                this[this.tableGAPersonnel.DepartmentRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsPersonnelTypeNull() {
                return this.IsNull(this.tableGAPersonnel.PersonnelTypeColumn);
            }
            
            public void SetPersonnelTypeNull() {
                this[this.tableGAPersonnel.PersonnelTypeColumn] = System.Convert.DBNull;
            }
            
            public bool IsTitleNull() {
                return this.IsNull(this.tableGAPersonnel.TitleColumn);
            }
            
            public void SetTitleNull() {
                this[this.tableGAPersonnel.TitleColumn] = System.Convert.DBNull;
            }
            
            public bool IsInitialsNull() {
                return this.IsNull(this.tableGAPersonnel.InitialsColumn);
            }
            
            public void SetInitialsNull() {
                this[this.tableGAPersonnel.InitialsColumn] = System.Convert.DBNull;
            }
            
            public bool IsGivenNameNull() {
                return this.IsNull(this.tableGAPersonnel.GivenNameColumn);
            }
            
            public void SetGivenNameNull() {
                this[this.tableGAPersonnel.GivenNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsFamilyNameNull() {
                return this.IsNull(this.tableGAPersonnel.FamilyNameColumn);
            }
            
            public void SetFamilyNameNull() {
                this[this.tableGAPersonnel.FamilyNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsAddressNull() {
                return this.IsNull(this.tableGAPersonnel.AddressColumn);
            }
            
            public void SetAddressNull() {
                this[this.tableGAPersonnel.AddressColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateOfBirthNull() {
                return this.IsNull(this.tableGAPersonnel.DateOfBirthColumn);
            }
            
            public void SetDateOfBirthNull() {
                this[this.tableGAPersonnel.DateOfBirthColumn] = System.Convert.DBNull;
            }
            
            public bool IsNationalOrSecurityNumberNull() {
                return this.IsNull(this.tableGAPersonnel.NationalOrSecurityNumberColumn);
            }
            
            public void SetNationalOrSecurityNumberNull() {
                this[this.tableGAPersonnel.NationalOrSecurityNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsBloodTypeNull() {
                return this.IsNull(this.tableGAPersonnel.BloodTypeColumn);
            }
            
            public void SetBloodTypeNull() {
                this[this.tableGAPersonnel.BloodTypeColumn] = System.Convert.DBNull;
            }
            
            public bool IsCommentNull() {
                return this.IsNull(this.tableGAPersonnel.CommentColumn);
            }
            
            public void SetCommentNull() {
                this[this.tableGAPersonnel.CommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tableGAPersonnel.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tableGAPersonnel.NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsMaritalStatusListsRowIdNull() {
                return this.IsNull(this.tableGAPersonnel.MaritalStatusListsRowIdColumn);
            }
            
            public void SetMaritalStatusListsRowIdNull() {
                this[this.tableGAPersonnel.MaritalStatusListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsNationalityListsRowIdNull() {
                return this.IsNull(this.tableGAPersonnel.NationalityListsRowIdColumn);
            }
            
            public void SetNationalityListsRowIdNull() {
                this[this.tableGAPersonnel.NationalityListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSexListsRowIdNull() {
                return this.IsNull(this.tableGAPersonnel.SexListsRowIdColumn);
            }
            
            public void SetSexListsRowIdNull() {
                this[this.tableGAPersonnel.SexListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsWorkExperienceFromDateNull() {
                return this.IsNull(this.tableGAPersonnel.WorkExperienceFromDateColumn);
            }
            
            public void SetWorkExperienceFromDateNull() {
                this[this.tableGAPersonnel.WorkExperienceFromDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsOffshoreExperienceFromDateNull() {
                return this.IsNull(this.tableGAPersonnel.OffshoreExperienceFromDateColumn);
            }
            
            public void SetOffshoreExperienceFromDateNull() {
                this[this.tableGAPersonnel.OffshoreExperienceFromDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGAPersonnel.rowguidColumn);
            }
            
            public void SetrowguidNull() {
                this[this.tableGAPersonnel.rowguidColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAPersonnel.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGAPersonnel.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAPersonnel.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGAPersonnel.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAPersonnel.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGAPersonnel.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAPersonnel.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGAPersonnel.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAPersonnel.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGAPersonnel.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAPersonnel.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGAPersonnel.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAPersonnel.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGAPersonnel.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAPersonnel.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGAPersonnel.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAPersonnel.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGAPersonnel.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAPersonnel.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGAPersonnel.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAPersonnel.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGAPersonnel.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAPersonnel.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGAPersonnel.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAPersonnel.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGAPersonnel.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAPersonnel.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGAPersonnel.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAPersonnel.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGAPersonnel.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAPersonnel.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGAPersonnel.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAPersonnel.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGAPersonnel.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAPersonnel.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGAPersonnel.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAPersonnel.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGAPersonnel.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAPersonnelRowChangeEvent : EventArgs {
            
            private GAPersonnelRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAPersonnelRowChangeEvent(GAPersonnelRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAPersonnelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAEmploymentDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnEmploymentRowId;
            
            private DataColumn columnContractNumber;
            
            private DataColumn columnWorkLocation;
            
            private DataColumn columnPersonnel;
            
            private DataColumn columnFromDate;
            
            private DataColumn columnToDate;
            
            private DataColumn columnCompanyRowId;
            
            private DataColumn columnDepartmentListsRowId;
            
            private DataColumn columnEmploymentCategoryListsRowId;
            
            private DataColumn columnJobTitleListsRowId;
            
            private DataColumn columnRoleListsRowId;
            
            private DataColumn columnrowguid;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GAEmploymentDataTable() : 
                    base("GAEmployment") {
                this.InitClass();
            }
            
            internal GAEmploymentDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn EmploymentRowIdColumn {
                get {
                    return this.columnEmploymentRowId;
                }
            }
            
            internal DataColumn ContractNumberColumn {
                get {
                    return this.columnContractNumber;
                }
            }
            
            internal DataColumn WorkLocationColumn {
                get {
                    return this.columnWorkLocation;
                }
            }
            
            internal DataColumn PersonnelColumn {
                get {
                    return this.columnPersonnel;
                }
            }
            
            internal DataColumn FromDateColumn {
                get {
                    return this.columnFromDate;
                }
            }
            
            internal DataColumn ToDateColumn {
                get {
                    return this.columnToDate;
                }
            }
            
            internal DataColumn CompanyRowIdColumn {
                get {
                    return this.columnCompanyRowId;
                }
            }
            
            internal DataColumn DepartmentListsRowIdColumn {
                get {
                    return this.columnDepartmentListsRowId;
                }
            }
            
            internal DataColumn EmploymentCategoryListsRowIdColumn {
                get {
                    return this.columnEmploymentCategoryListsRowId;
                }
            }
            
            internal DataColumn JobTitleListsRowIdColumn {
                get {
                    return this.columnJobTitleListsRowId;
                }
            }
            
            internal DataColumn RoleListsRowIdColumn {
                get {
                    return this.columnRoleListsRowId;
                }
            }
            
            internal DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GAEmploymentRow this[int index] {
                get {
                    return ((GAEmploymentRow)(this.Rows[index]));
                }
            }
            
            public event GAEmploymentRowChangeEventHandler GAEmploymentRowChanged;
            
            public event GAEmploymentRowChangeEventHandler GAEmploymentRowChanging;
            
            public event GAEmploymentRowChangeEventHandler GAEmploymentRowDeleted;
            
            public event GAEmploymentRowChangeEventHandler GAEmploymentRowDeleting;
            
            public void AddGAEmploymentRow(GAEmploymentRow row) {
                this.Rows.Add(row);
            }
            
            public GAEmploymentRow AddGAEmploymentRow(
                        string ContractNumber, 
                        string WorkLocation, 
                        string Personnel, 
                        System.DateTime FromDate, 
                        System.DateTime ToDate, 
                        string CompanyRowId, 
                        string DepartmentListsRowId, 
                        string EmploymentCategoryListsRowId, 
                        string JobTitleListsRowId, 
                        string RoleListsRowId, 
                        System.Guid rowguid, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAEmploymentRow rowGAEmploymentRow = ((GAEmploymentRow)(this.NewRow()));
                rowGAEmploymentRow.ItemArray = new object[] {
                        null,
                        ContractNumber,
                        WorkLocation,
                        Personnel,
                        FromDate,
                        ToDate,
                        CompanyRowId,
                        DepartmentListsRowId,
                        EmploymentCategoryListsRowId,
                        JobTitleListsRowId,
                        RoleListsRowId,
                        rowguid,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAEmploymentRow);
                return rowGAEmploymentRow;
            }
            
            public GAEmploymentRow FindByEmploymentRowId(int EmploymentRowId) {
                return ((GAEmploymentRow)(this.Rows.Find(new object[] {
                            EmploymentRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAEmploymentDataTable cln = ((GAEmploymentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAEmploymentDataTable();
            }
            
            internal void InitVars() {
                this.columnEmploymentRowId = this.Columns["EmploymentRowId"];
                this.columnContractNumber = this.Columns["ContractNumber"];
                this.columnWorkLocation = this.Columns["WorkLocation"];
                this.columnPersonnel = this.Columns["Personnel"];
                this.columnFromDate = this.Columns["FromDate"];
                this.columnToDate = this.Columns["ToDate"];
                this.columnCompanyRowId = this.Columns["CompanyRowId"];
                this.columnDepartmentListsRowId = this.Columns["DepartmentListsRowId"];
                this.columnEmploymentCategoryListsRowId = this.Columns["EmploymentCategoryListsRowId"];
                this.columnJobTitleListsRowId = this.Columns["JobTitleListsRowId"];
                this.columnRoleListsRowId = this.Columns["RoleListsRowId"];
                this.columnrowguid = this.Columns["rowguid"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnEmploymentRowId = new DataColumn("EmploymentRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEmploymentRowId);
                this.columnContractNumber = new DataColumn("ContractNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContractNumber);
                this.columnWorkLocation = new DataColumn("WorkLocation", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWorkLocation);
                this.columnPersonnel = new DataColumn("Personnel", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPersonnel);
                this.columnFromDate = new DataColumn("FromDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFromDate);
                this.columnToDate = new DataColumn("ToDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnToDate);
                this.columnCompanyRowId = new DataColumn("CompanyRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCompanyRowId);
                this.columnDepartmentListsRowId = new DataColumn("DepartmentListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDepartmentListsRowId);
                this.columnEmploymentCategoryListsRowId = new DataColumn("EmploymentCategoryListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEmploymentCategoryListsRowId);
                this.columnJobTitleListsRowId = new DataColumn("JobTitleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnJobTitleListsRowId);
                this.columnRoleListsRowId = new DataColumn("RoleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRoleListsRowId);
                this.columnrowguid = new DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnrowguid);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey10", new DataColumn[] {
                                this.columnEmploymentRowId}, true));
                this.columnEmploymentRowId.AutoIncrement = true;
                this.columnEmploymentRowId.AllowDBNull = false;
                this.columnEmploymentRowId.ReadOnly = true;
                this.columnEmploymentRowId.Unique = true;
            }
            
            public GAEmploymentRow NewGAEmploymentRow() {
                return ((GAEmploymentRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAEmploymentRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAEmploymentRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAEmploymentRowChanged != null)) {
                    this.GAEmploymentRowChanged(this, new GAEmploymentRowChangeEvent(((GAEmploymentRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAEmploymentRowChanging != null)) {
                    this.GAEmploymentRowChanging(this, new GAEmploymentRowChangeEvent(((GAEmploymentRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAEmploymentRowDeleted != null)) {
                    this.GAEmploymentRowDeleted(this, new GAEmploymentRowChangeEvent(((GAEmploymentRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAEmploymentRowDeleting != null)) {
                    this.GAEmploymentRowDeleting(this, new GAEmploymentRowChangeEvent(((GAEmploymentRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAEmploymentRow(GAEmploymentRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAEmploymentRow : DataRow {
            
            private GAEmploymentDataTable tableGAEmployment;
            
            internal GAEmploymentRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAEmployment = ((GAEmploymentDataTable)(this.Table));
            }
            
            public int EmploymentRowId {
                get {
                    return ((int)(this[this.tableGAEmployment.EmploymentRowIdColumn]));
                }
                set {
                    this[this.tableGAEmployment.EmploymentRowIdColumn] = value;
                }
            }
            
            public string ContractNumber {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployment.ContractNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.ContractNumberColumn] = value;
                }
            }
            
            public string WorkLocation {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployment.WorkLocationColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.WorkLocationColumn] = value;
                }
            }
            
            public string Personnel {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployment.PersonnelColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.PersonnelColumn] = value;
                }
            }
            
            public System.DateTime FromDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEmployment.FromDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.FromDateColumn] = value;
                }
            }
            
            public System.DateTime ToDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEmployment.ToDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.ToDateColumn] = value;
                }
            }
            
            public string CompanyRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployment.CompanyRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.CompanyRowIdColumn] = value;
                }
            }
            
            public string DepartmentListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployment.DepartmentListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.DepartmentListsRowIdColumn] = value;
                }
            }
            
            public string EmploymentCategoryListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployment.EmploymentCategoryListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.EmploymentCategoryListsRowIdColumn] = value;
                }
            }
            
            public string JobTitleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployment.JobTitleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.JobTitleListsRowIdColumn] = value;
                }
            }
            
            public string RoleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployment.RoleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.RoleListsRowIdColumn] = value;
                }
            }
            
            public System.Guid rowguid {
                get {
                    try {
                        return ((System.Guid)(this[this.tableGAEmployment.rowguidColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.rowguidColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployment.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEmployment.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployment.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEmployment.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployment.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEmployment.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployment.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAEmployment.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAEmployment.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAEmployment.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEmployment.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEmployment.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAEmployment.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployment.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployment.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployment.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployment.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployment.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployment.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployment.IntFree3Column] = value;
                }
            }
            
            public bool IsContractNumberNull() {
                return this.IsNull(this.tableGAEmployment.ContractNumberColumn);
            }
            
            public void SetContractNumberNull() {
                this[this.tableGAEmployment.ContractNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsWorkLocationNull() {
                return this.IsNull(this.tableGAEmployment.WorkLocationColumn);
            }
            
            public void SetWorkLocationNull() {
                this[this.tableGAEmployment.WorkLocationColumn] = System.Convert.DBNull;
            }
            
            public bool IsPersonnelNull() {
                return this.IsNull(this.tableGAEmployment.PersonnelColumn);
            }
            
            public void SetPersonnelNull() {
                this[this.tableGAEmployment.PersonnelColumn] = System.Convert.DBNull;
            }
            
            public bool IsFromDateNull() {
                return this.IsNull(this.tableGAEmployment.FromDateColumn);
            }
            
            public void SetFromDateNull() {
                this[this.tableGAEmployment.FromDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsToDateNull() {
                return this.IsNull(this.tableGAEmployment.ToDateColumn);
            }
            
            public void SetToDateNull() {
                this[this.tableGAEmployment.ToDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsCompanyRowIdNull() {
                return this.IsNull(this.tableGAEmployment.CompanyRowIdColumn);
            }
            
            public void SetCompanyRowIdNull() {
                this[this.tableGAEmployment.CompanyRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDepartmentListsRowIdNull() {
                return this.IsNull(this.tableGAEmployment.DepartmentListsRowIdColumn);
            }
            
            public void SetDepartmentListsRowIdNull() {
                this[this.tableGAEmployment.DepartmentListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsEmploymentCategoryListsRowIdNull() {
                return this.IsNull(this.tableGAEmployment.EmploymentCategoryListsRowIdColumn);
            }
            
            public void SetEmploymentCategoryListsRowIdNull() {
                this[this.tableGAEmployment.EmploymentCategoryListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsJobTitleListsRowIdNull() {
                return this.IsNull(this.tableGAEmployment.JobTitleListsRowIdColumn);
            }
            
            public void SetJobTitleListsRowIdNull() {
                this[this.tableGAEmployment.JobTitleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsRoleListsRowIdNull() {
                return this.IsNull(this.tableGAEmployment.RoleListsRowIdColumn);
            }
            
            public void SetRoleListsRowIdNull() {
                this[this.tableGAEmployment.RoleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGAEmployment.rowguidColumn);
            }
            
            public void SetrowguidNull() {
                this[this.tableGAEmployment.rowguidColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAEmployment.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGAEmployment.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAEmployment.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGAEmployment.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAEmployment.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGAEmployment.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAEmployment.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGAEmployment.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAEmployment.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGAEmployment.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAEmployment.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGAEmployment.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAEmployment.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGAEmployment.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAEmployment.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGAEmployment.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAEmployment.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGAEmployment.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAEmployment.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGAEmployment.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAEmployment.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGAEmployment.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAEmployment.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGAEmployment.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAEmployment.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGAEmployment.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAEmployment.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGAEmployment.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAEmployment.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGAEmployment.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAEmployment.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGAEmployment.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAEmployment.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGAEmployment.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAEmployment.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGAEmployment.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAEmployment.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGAEmployment.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAEmploymentRowChangeEvent : EventArgs {
            
            private GAEmploymentRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAEmploymentRowChangeEvent(GAEmploymentRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAEmploymentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GACourseDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCourseReferenceId;
            
            private DataColumn columnCourseRowId;
            
            private DataColumn columnInvolvedPersonnelCount;
            
            private DataColumn columnDateOfCourse;
            
            private DataColumn columnCourseLeader;
            
            private DataColumn columnLocationOfWork;
            
            private DataColumn columnName;
            
            private DataColumn columnPlace;
            
            private DataColumn columnTypeOfCourseListsRowId;
            
            private DataColumn columnrowguid;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GACourseDataTable() : 
                    base("GACourse") {
                this.InitClass();
            }
            
            internal GACourseDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CourseReferenceIdColumn {
                get {
                    return this.columnCourseReferenceId;
                }
            }
            
            internal DataColumn CourseRowIdColumn {
                get {
                    return this.columnCourseRowId;
                }
            }
            
            internal DataColumn InvolvedPersonnelCountColumn {
                get {
                    return this.columnInvolvedPersonnelCount;
                }
            }
            
            internal DataColumn DateOfCourseColumn {
                get {
                    return this.columnDateOfCourse;
                }
            }
            
            internal DataColumn CourseLeaderColumn {
                get {
                    return this.columnCourseLeader;
                }
            }
            
            internal DataColumn LocationOfWorkColumn {
                get {
                    return this.columnLocationOfWork;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn PlaceColumn {
                get {
                    return this.columnPlace;
                }
            }
            
            internal DataColumn TypeOfCourseListsRowIdColumn {
                get {
                    return this.columnTypeOfCourseListsRowId;
                }
            }
            
            internal DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GACourseRow this[int index] {
                get {
                    return ((GACourseRow)(this.Rows[index]));
                }
            }
            
            public event GACourseRowChangeEventHandler GACourseRowChanged;
            
            public event GACourseRowChangeEventHandler GACourseRowChanging;
            
            public event GACourseRowChangeEventHandler GACourseRowDeleted;
            
            public event GACourseRowChangeEventHandler GACourseRowDeleting;
            
            public void AddGACourseRow(GACourseRow row) {
                this.Rows.Add(row);
            }
            
            public GACourseRow AddGACourseRow(
                        string CourseReferenceId, 
                        int InvolvedPersonnelCount, 
                        System.DateTime DateOfCourse, 
                        string CourseLeader, 
                        string LocationOfWork, 
                        string Name, 
                        string Place, 
                        string TypeOfCourseListsRowId, 
                        System.Guid rowguid, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GACourseRow rowGACourseRow = ((GACourseRow)(this.NewRow()));
                rowGACourseRow.ItemArray = new object[] {
                        CourseReferenceId,
                        null,
                        InvolvedPersonnelCount,
                        DateOfCourse,
                        CourseLeader,
                        LocationOfWork,
                        Name,
                        Place,
                        TypeOfCourseListsRowId,
                        rowguid,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGACourseRow);
                return rowGACourseRow;
            }
            
            public GACourseRow FindByCourseRowId(int CourseRowId) {
                return ((GACourseRow)(this.Rows.Find(new object[] {
                            CourseRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GACourseDataTable cln = ((GACourseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GACourseDataTable();
            }
            
            internal void InitVars() {
                this.columnCourseReferenceId = this.Columns["CourseReferenceId"];
                this.columnCourseRowId = this.Columns["CourseRowId"];
                this.columnInvolvedPersonnelCount = this.Columns["InvolvedPersonnelCount"];
                this.columnDateOfCourse = this.Columns["DateOfCourse"];
                this.columnCourseLeader = this.Columns["CourseLeader"];
                this.columnLocationOfWork = this.Columns["LocationOfWork"];
                this.columnName = this.Columns["Name"];
                this.columnPlace = this.Columns["Place"];
                this.columnTypeOfCourseListsRowId = this.Columns["TypeOfCourseListsRowId"];
                this.columnrowguid = this.Columns["rowguid"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnCourseReferenceId = new DataColumn("CourseReferenceId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCourseReferenceId);
                this.columnCourseRowId = new DataColumn("CourseRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCourseRowId);
                this.columnInvolvedPersonnelCount = new DataColumn("InvolvedPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnInvolvedPersonnelCount);
                this.columnDateOfCourse = new DataColumn("DateOfCourse", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateOfCourse);
                this.columnCourseLeader = new DataColumn("CourseLeader", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCourseLeader);
                this.columnLocationOfWork = new DataColumn("LocationOfWork", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLocationOfWork);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnPlace = new DataColumn("Place", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPlace);
                this.columnTypeOfCourseListsRowId = new DataColumn("TypeOfCourseListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTypeOfCourseListsRowId);
                this.columnrowguid = new DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnrowguid);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey11", new DataColumn[] {
                                this.columnCourseRowId}, true));
                this.columnCourseRowId.AutoIncrement = true;
                this.columnCourseRowId.AllowDBNull = false;
                this.columnCourseRowId.ReadOnly = true;
                this.columnCourseRowId.Unique = true;
            }
            
            public GACourseRow NewGACourseRow() {
                return ((GACourseRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GACourseRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GACourseRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GACourseRowChanged != null)) {
                    this.GACourseRowChanged(this, new GACourseRowChangeEvent(((GACourseRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GACourseRowChanging != null)) {
                    this.GACourseRowChanging(this, new GACourseRowChangeEvent(((GACourseRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GACourseRowDeleted != null)) {
                    this.GACourseRowDeleted(this, new GACourseRowChangeEvent(((GACourseRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GACourseRowDeleting != null)) {
                    this.GACourseRowDeleting(this, new GACourseRowChangeEvent(((GACourseRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGACourseRow(GACourseRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GACourseRow : DataRow {
            
            private GACourseDataTable tableGACourse;
            
            internal GACourseRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGACourse = ((GACourseDataTable)(this.Table));
            }
            
            public string CourseReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGACourse.CourseReferenceIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.CourseReferenceIdColumn] = value;
                }
            }
            
            public int CourseRowId {
                get {
                    return ((int)(this[this.tableGACourse.CourseRowIdColumn]));
                }
                set {
                    this[this.tableGACourse.CourseRowIdColumn] = value;
                }
            }
            
            public int InvolvedPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGACourse.InvolvedPersonnelCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.InvolvedPersonnelCountColumn] = value;
                }
            }
            
            public System.DateTime DateOfCourse {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACourse.DateOfCourseColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.DateOfCourseColumn] = value;
                }
            }
            
            public string CourseLeader {
                get {
                    try {
                        return ((string)(this[this.tableGACourse.CourseLeaderColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.CourseLeaderColumn] = value;
                }
            }
            
            public string LocationOfWork {
                get {
                    try {
                        return ((string)(this[this.tableGACourse.LocationOfWorkColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.LocationOfWorkColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGACourse.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.NameColumn] = value;
                }
            }
            
            public string Place {
                get {
                    try {
                        return ((string)(this[this.tableGACourse.PlaceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.PlaceColumn] = value;
                }
            }
            
            public string TypeOfCourseListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGACourse.TypeOfCourseListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.TypeOfCourseListsRowIdColumn] = value;
                }
            }
            
            public System.Guid rowguid {
                get {
                    try {
                        return ((System.Guid)(this[this.tableGACourse.rowguidColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.rowguidColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGACourse.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACourse.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGACourse.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACourse.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGACourse.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACourse.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGACourse.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGACourse.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGACourse.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGACourse.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACourse.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACourse.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACourse.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGACourse.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGACourse.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGACourse.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGACourse.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGACourse.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGACourse.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse.IntFree3Column] = value;
                }
            }
            
            public bool IsCourseReferenceIdNull() {
                return this.IsNull(this.tableGACourse.CourseReferenceIdColumn);
            }
            
            public void SetCourseReferenceIdNull() {
                this[this.tableGACourse.CourseReferenceIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsInvolvedPersonnelCountNull() {
                return this.IsNull(this.tableGACourse.InvolvedPersonnelCountColumn);
            }
            
            public void SetInvolvedPersonnelCountNull() {
                this[this.tableGACourse.InvolvedPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateOfCourseNull() {
                return this.IsNull(this.tableGACourse.DateOfCourseColumn);
            }
            
            public void SetDateOfCourseNull() {
                this[this.tableGACourse.DateOfCourseColumn] = System.Convert.DBNull;
            }
            
            public bool IsCourseLeaderNull() {
                return this.IsNull(this.tableGACourse.CourseLeaderColumn);
            }
            
            public void SetCourseLeaderNull() {
                this[this.tableGACourse.CourseLeaderColumn] = System.Convert.DBNull;
            }
            
            public bool IsLocationOfWorkNull() {
                return this.IsNull(this.tableGACourse.LocationOfWorkColumn);
            }
            
            public void SetLocationOfWorkNull() {
                this[this.tableGACourse.LocationOfWorkColumn] = System.Convert.DBNull;
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tableGACourse.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tableGACourse.NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsPlaceNull() {
                return this.IsNull(this.tableGACourse.PlaceColumn);
            }
            
            public void SetPlaceNull() {
                this[this.tableGACourse.PlaceColumn] = System.Convert.DBNull;
            }
            
            public bool IsTypeOfCourseListsRowIdNull() {
                return this.IsNull(this.tableGACourse.TypeOfCourseListsRowIdColumn);
            }
            
            public void SetTypeOfCourseListsRowIdNull() {
                this[this.tableGACourse.TypeOfCourseListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGACourse.rowguidColumn);
            }
            
            public void SetrowguidNull() {
                this[this.tableGACourse.rowguidColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGACourse.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGACourse.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGACourse.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGACourse.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGACourse.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGACourse.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGACourse.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGACourse.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGACourse.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGACourse.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGACourse.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGACourse.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGACourse.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGACourse.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGACourse.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGACourse.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGACourse.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGACourse.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGACourse.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGACourse.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGACourse.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGACourse.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGACourse.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGACourse.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGACourse.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGACourse.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGACourse.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGACourse.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGACourse.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGACourse.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGACourse.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGACourse.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGACourse.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGACourse.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGACourse.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGACourse.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGACourse.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGACourse.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GACourseRowChangeEvent : EventArgs {
            
            private GACourseRow eventRow;
            
            private DataRowAction eventAction;
            
            public GACourseRowChangeEvent(GACourseRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GACourseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GACourse_CoursePersonListViewDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCourseRowId;
            
            private DataColumn columnInvolvedPersonnelCount;
            
            private DataColumn columnDateOfCourse;
            
            private DataColumn columnLocationOfWork;
            
            private DataColumn columnCourseLeader;
            
            private DataColumn columnName;
            
            private DataColumn columnPlace;
            
            private DataColumn columnTypeOfCourseListsRowId;
            
            private DataColumn columnCoursePersonListRowId;
            
            private DataColumn columnPersonId;
            
            private DataColumn columnComment;
            
            private DataColumn columnPath;
            
            private DataColumn columnOwnerClass;
            
            private DataColumn columnOwnerClassRowId;
            
            internal GACourse_CoursePersonListViewDataTable() : 
                    base("GACourse_CoursePersonListView") {
                this.InitClass();
            }
            
            internal GACourse_CoursePersonListViewDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CourseRowIdColumn {
                get {
                    return this.columnCourseRowId;
                }
            }
            
            internal DataColumn InvolvedPersonnelCountColumn {
                get {
                    return this.columnInvolvedPersonnelCount;
                }
            }
            
            internal DataColumn DateOfCourseColumn {
                get {
                    return this.columnDateOfCourse;
                }
            }
            
            internal DataColumn LocationOfWorkColumn {
                get {
                    return this.columnLocationOfWork;
                }
            }
            
            internal DataColumn CourseLeaderColumn {
                get {
                    return this.columnCourseLeader;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn PlaceColumn {
                get {
                    return this.columnPlace;
                }
            }
            
            internal DataColumn TypeOfCourseListsRowIdColumn {
                get {
                    return this.columnTypeOfCourseListsRowId;
                }
            }
            
            internal DataColumn CoursePersonListRowIdColumn {
                get {
                    return this.columnCoursePersonListRowId;
                }
            }
            
            internal DataColumn PersonIdColumn {
                get {
                    return this.columnPersonId;
                }
            }
            
            internal DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            internal DataColumn PathColumn {
                get {
                    return this.columnPath;
                }
            }
            
            internal DataColumn OwnerClassColumn {
                get {
                    return this.columnOwnerClass;
                }
            }
            
            internal DataColumn OwnerClassRowIdColumn {
                get {
                    return this.columnOwnerClassRowId;
                }
            }
            
            public GACourse_CoursePersonListViewRow this[int index] {
                get {
                    return ((GACourse_CoursePersonListViewRow)(this.Rows[index]));
                }
            }
            
            public event GACourse_CoursePersonListViewRowChangeEventHandler GACourse_CoursePersonListViewRowChanged;
            
            public event GACourse_CoursePersonListViewRowChangeEventHandler GACourse_CoursePersonListViewRowChanging;
            
            public event GACourse_CoursePersonListViewRowChangeEventHandler GACourse_CoursePersonListViewRowDeleted;
            
            public event GACourse_CoursePersonListViewRowChangeEventHandler GACourse_CoursePersonListViewRowDeleting;
            
            public void AddGACourse_CoursePersonListViewRow(GACourse_CoursePersonListViewRow row) {
                this.Rows.Add(row);
            }
            
            public GACourse_CoursePersonListViewRow AddGACourse_CoursePersonListViewRow(int InvolvedPersonnelCount, System.DateTime DateOfCourse, string LocationOfWork, string CourseLeader, string Name, string Place, string TypeOfCourseListsRowId, string PersonId, string Comment, string Path, string OwnerClass, int OwnerClassRowId) {
                GACourse_CoursePersonListViewRow rowGACourse_CoursePersonListViewRow = ((GACourse_CoursePersonListViewRow)(this.NewRow()));
                rowGACourse_CoursePersonListViewRow.ItemArray = new object[] {
                        null,
                        InvolvedPersonnelCount,
                        DateOfCourse,
                        LocationOfWork,
                        CourseLeader,
                        Name,
                        Place,
                        TypeOfCourseListsRowId,
                        null,
                        PersonId,
                        Comment,
                        Path,
                        OwnerClass,
                        OwnerClassRowId};
                this.Rows.Add(rowGACourse_CoursePersonListViewRow);
                return rowGACourse_CoursePersonListViewRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GACourse_CoursePersonListViewDataTable cln = ((GACourse_CoursePersonListViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GACourse_CoursePersonListViewDataTable();
            }
            
            internal void InitVars() {
                this.columnCourseRowId = this.Columns["CourseRowId"];
                this.columnInvolvedPersonnelCount = this.Columns["InvolvedPersonnelCount"];
                this.columnDateOfCourse = this.Columns["DateOfCourse"];
                this.columnLocationOfWork = this.Columns["LocationOfWork"];
                this.columnCourseLeader = this.Columns["CourseLeader"];
                this.columnName = this.Columns["Name"];
                this.columnPlace = this.Columns["Place"];
                this.columnTypeOfCourseListsRowId = this.Columns["TypeOfCourseListsRowId"];
                this.columnCoursePersonListRowId = this.Columns["CoursePersonListRowId"];
                this.columnPersonId = this.Columns["PersonId"];
                this.columnComment = this.Columns["Comment"];
                this.columnPath = this.Columns["Path"];
                this.columnOwnerClass = this.Columns["OwnerClass"];
                this.columnOwnerClassRowId = this.Columns["OwnerClassRowId"];
            }
            
            private void InitClass() {
                this.columnCourseRowId = new DataColumn("CourseRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCourseRowId);
                this.columnInvolvedPersonnelCount = new DataColumn("InvolvedPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnInvolvedPersonnelCount);
                this.columnDateOfCourse = new DataColumn("DateOfCourse", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateOfCourse);
                this.columnLocationOfWork = new DataColumn("LocationOfWork", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLocationOfWork);
                this.columnCourseLeader = new DataColumn("CourseLeader", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCourseLeader);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnPlace = new DataColumn("Place", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPlace);
                this.columnTypeOfCourseListsRowId = new DataColumn("TypeOfCourseListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTypeOfCourseListsRowId);
                this.columnCoursePersonListRowId = new DataColumn("CoursePersonListRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoursePersonListRowId);
                this.columnPersonId = new DataColumn("PersonId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPersonId);
                this.columnComment = new DataColumn("Comment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComment);
                this.columnPath = new DataColumn("Path", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPath);
                this.columnOwnerClass = new DataColumn("OwnerClass", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOwnerClass);
                this.columnOwnerClassRowId = new DataColumn("OwnerClassRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOwnerClassRowId);
                this.columnCourseRowId.AutoIncrement = true;
                this.columnCourseRowId.AllowDBNull = false;
                this.columnCourseRowId.ReadOnly = true;
                this.columnCoursePersonListRowId.AutoIncrement = true;
                this.columnCoursePersonListRowId.ReadOnly = true;
            }
            
            public GACourse_CoursePersonListViewRow NewGACourse_CoursePersonListViewRow() {
                return ((GACourse_CoursePersonListViewRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GACourse_CoursePersonListViewRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GACourse_CoursePersonListViewRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GACourse_CoursePersonListViewRowChanged != null)) {
                    this.GACourse_CoursePersonListViewRowChanged(this, new GACourse_CoursePersonListViewRowChangeEvent(((GACourse_CoursePersonListViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GACourse_CoursePersonListViewRowChanging != null)) {
                    this.GACourse_CoursePersonListViewRowChanging(this, new GACourse_CoursePersonListViewRowChangeEvent(((GACourse_CoursePersonListViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GACourse_CoursePersonListViewRowDeleted != null)) {
                    this.GACourse_CoursePersonListViewRowDeleted(this, new GACourse_CoursePersonListViewRowChangeEvent(((GACourse_CoursePersonListViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GACourse_CoursePersonListViewRowDeleting != null)) {
                    this.GACourse_CoursePersonListViewRowDeleting(this, new GACourse_CoursePersonListViewRowChangeEvent(((GACourse_CoursePersonListViewRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGACourse_CoursePersonListViewRow(GACourse_CoursePersonListViewRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GACourse_CoursePersonListViewRow : DataRow {
            
            private GACourse_CoursePersonListViewDataTable tableGACourse_CoursePersonListView;
            
            internal GACourse_CoursePersonListViewRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGACourse_CoursePersonListView = ((GACourse_CoursePersonListViewDataTable)(this.Table));
            }
            
            public int CourseRowId {
                get {
                    return ((int)(this[this.tableGACourse_CoursePersonListView.CourseRowIdColumn]));
                }
                set {
                    this[this.tableGACourse_CoursePersonListView.CourseRowIdColumn] = value;
                }
            }
            
            public int InvolvedPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGACourse_CoursePersonListView.InvolvedPersonnelCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse_CoursePersonListView.InvolvedPersonnelCountColumn] = value;
                }
            }
            
            public System.DateTime DateOfCourse {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACourse_CoursePersonListView.DateOfCourseColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse_CoursePersonListView.DateOfCourseColumn] = value;
                }
            }
            
            public string LocationOfWork {
                get {
                    try {
                        return ((string)(this[this.tableGACourse_CoursePersonListView.LocationOfWorkColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse_CoursePersonListView.LocationOfWorkColumn] = value;
                }
            }
            
            public string CourseLeader {
                get {
                    try {
                        return ((string)(this[this.tableGACourse_CoursePersonListView.CourseLeaderColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse_CoursePersonListView.CourseLeaderColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGACourse_CoursePersonListView.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse_CoursePersonListView.NameColumn] = value;
                }
            }
            
            public string Place {
                get {
                    try {
                        return ((string)(this[this.tableGACourse_CoursePersonListView.PlaceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse_CoursePersonListView.PlaceColumn] = value;
                }
            }
            
            public string TypeOfCourseListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGACourse_CoursePersonListView.TypeOfCourseListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse_CoursePersonListView.TypeOfCourseListsRowIdColumn] = value;
                }
            }
            
            public int CoursePersonListRowId {
                get {
                    try {
                        return ((int)(this[this.tableGACourse_CoursePersonListView.CoursePersonListRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse_CoursePersonListView.CoursePersonListRowIdColumn] = value;
                }
            }
            
            public string PersonId {
                get {
                    try {
                        return ((string)(this[this.tableGACourse_CoursePersonListView.PersonIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse_CoursePersonListView.PersonIdColumn] = value;
                }
            }
            
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGACourse_CoursePersonListView.CommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse_CoursePersonListView.CommentColumn] = value;
                }
            }
            
            public string Path {
                get {
                    try {
                        return ((string)(this[this.tableGACourse_CoursePersonListView.PathColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse_CoursePersonListView.PathColumn] = value;
                }
            }
            
            public string OwnerClass {
                get {
                    try {
                        return ((string)(this[this.tableGACourse_CoursePersonListView.OwnerClassColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse_CoursePersonListView.OwnerClassColumn] = value;
                }
            }
            
            public int OwnerClassRowId {
                get {
                    try {
                        return ((int)(this[this.tableGACourse_CoursePersonListView.OwnerClassRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACourse_CoursePersonListView.OwnerClassRowIdColumn] = value;
                }
            }
            
            public bool IsInvolvedPersonnelCountNull() {
                return this.IsNull(this.tableGACourse_CoursePersonListView.InvolvedPersonnelCountColumn);
            }
            
            public void SetInvolvedPersonnelCountNull() {
                this[this.tableGACourse_CoursePersonListView.InvolvedPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateOfCourseNull() {
                return this.IsNull(this.tableGACourse_CoursePersonListView.DateOfCourseColumn);
            }
            
            public void SetDateOfCourseNull() {
                this[this.tableGACourse_CoursePersonListView.DateOfCourseColumn] = System.Convert.DBNull;
            }
            
            public bool IsLocationOfWorkNull() {
                return this.IsNull(this.tableGACourse_CoursePersonListView.LocationOfWorkColumn);
            }
            
            public void SetLocationOfWorkNull() {
                this[this.tableGACourse_CoursePersonListView.LocationOfWorkColumn] = System.Convert.DBNull;
            }
            
            public bool IsCourseLeaderNull() {
                return this.IsNull(this.tableGACourse_CoursePersonListView.CourseLeaderColumn);
            }
            
            public void SetCourseLeaderNull() {
                this[this.tableGACourse_CoursePersonListView.CourseLeaderColumn] = System.Convert.DBNull;
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tableGACourse_CoursePersonListView.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tableGACourse_CoursePersonListView.NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsPlaceNull() {
                return this.IsNull(this.tableGACourse_CoursePersonListView.PlaceColumn);
            }
            
            public void SetPlaceNull() {
                this[this.tableGACourse_CoursePersonListView.PlaceColumn] = System.Convert.DBNull;
            }
            
            public bool IsTypeOfCourseListsRowIdNull() {
                return this.IsNull(this.tableGACourse_CoursePersonListView.TypeOfCourseListsRowIdColumn);
            }
            
            public void SetTypeOfCourseListsRowIdNull() {
                this[this.tableGACourse_CoursePersonListView.TypeOfCourseListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoursePersonListRowIdNull() {
                return this.IsNull(this.tableGACourse_CoursePersonListView.CoursePersonListRowIdColumn);
            }
            
            public void SetCoursePersonListRowIdNull() {
                this[this.tableGACourse_CoursePersonListView.CoursePersonListRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsPersonIdNull() {
                return this.IsNull(this.tableGACourse_CoursePersonListView.PersonIdColumn);
            }
            
            public void SetPersonIdNull() {
                this[this.tableGACourse_CoursePersonListView.PersonIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsCommentNull() {
                return this.IsNull(this.tableGACourse_CoursePersonListView.CommentColumn);
            }
            
            public void SetCommentNull() {
                this[this.tableGACourse_CoursePersonListView.CommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsPathNull() {
                return this.IsNull(this.tableGACourse_CoursePersonListView.PathColumn);
            }
            
            public void SetPathNull() {
                this[this.tableGACourse_CoursePersonListView.PathColumn] = System.Convert.DBNull;
            }
            
            public bool IsOwnerClassNull() {
                return this.IsNull(this.tableGACourse_CoursePersonListView.OwnerClassColumn);
            }
            
            public void SetOwnerClassNull() {
                this[this.tableGACourse_CoursePersonListView.OwnerClassColumn] = System.Convert.DBNull;
            }
            
            public bool IsOwnerClassRowIdNull() {
                return this.IsNull(this.tableGACourse_CoursePersonListView.OwnerClassRowIdColumn);
            }
            
            public void SetOwnerClassRowIdNull() {
                this[this.tableGACourse_CoursePersonListView.OwnerClassRowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GACourse_CoursePersonListViewRowChangeEvent : EventArgs {
            
            private GACourse_CoursePersonListViewRow eventRow;
            
            private DataRowAction eventAction;
            
            public GACourse_CoursePersonListViewRowChangeEvent(GACourse_CoursePersonListViewRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GACourse_CoursePersonListViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GANextOfKinDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnNextOfKinRowId;
            
            private DataColumn columnName;
            
            private DataColumn columnAddress;
            
            private DataColumn columnPhoneNumber;
            
            private DataColumn columnComment;
            
            private DataColumn columnCountryCodeListsRowId;
            
            private DataColumn columnTypeOfKinListsRowId;
            
            private DataColumn columnPriority;
            
            private DataColumn columnrowguid;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GANextOfKinDataTable() : 
                    base("GANextOfKin") {
                this.InitClass();
            }
            
            internal GANextOfKinDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn NextOfKinRowIdColumn {
                get {
                    return this.columnNextOfKinRowId;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            internal DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            internal DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            internal DataColumn CountryCodeListsRowIdColumn {
                get {
                    return this.columnCountryCodeListsRowId;
                }
            }
            
            internal DataColumn TypeOfKinListsRowIdColumn {
                get {
                    return this.columnTypeOfKinListsRowId;
                }
            }
            
            internal DataColumn PriorityColumn {
                get {
                    return this.columnPriority;
                }
            }
            
            internal DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GANextOfKinRow this[int index] {
                get {
                    return ((GANextOfKinRow)(this.Rows[index]));
                }
            }
            
            public event GANextOfKinRowChangeEventHandler GANextOfKinRowChanged;
            
            public event GANextOfKinRowChangeEventHandler GANextOfKinRowChanging;
            
            public event GANextOfKinRowChangeEventHandler GANextOfKinRowDeleted;
            
            public event GANextOfKinRowChangeEventHandler GANextOfKinRowDeleting;
            
            public void AddGANextOfKinRow(GANextOfKinRow row) {
                this.Rows.Add(row);
            }
            
            public GANextOfKinRow AddGANextOfKinRow(
                        string Name, 
                        string Address, 
                        string PhoneNumber, 
                        string Comment, 
                        string CountryCodeListsRowId, 
                        string TypeOfKinListsRowId, 
                        string Priority, 
                        System.Guid rowguid, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GANextOfKinRow rowGANextOfKinRow = ((GANextOfKinRow)(this.NewRow()));
                rowGANextOfKinRow.ItemArray = new object[] {
                        null,
                        Name,
                        Address,
                        PhoneNumber,
                        Comment,
                        CountryCodeListsRowId,
                        TypeOfKinListsRowId,
                        Priority,
                        rowguid,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGANextOfKinRow);
                return rowGANextOfKinRow;
            }
            
            public GANextOfKinRow FindByNextOfKinRowId(int NextOfKinRowId) {
                return ((GANextOfKinRow)(this.Rows.Find(new object[] {
                            NextOfKinRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GANextOfKinDataTable cln = ((GANextOfKinDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GANextOfKinDataTable();
            }
            
            internal void InitVars() {
                this.columnNextOfKinRowId = this.Columns["NextOfKinRowId"];
                this.columnName = this.Columns["Name"];
                this.columnAddress = this.Columns["Address"];
                this.columnPhoneNumber = this.Columns["PhoneNumber"];
                this.columnComment = this.Columns["Comment"];
                this.columnCountryCodeListsRowId = this.Columns["CountryCodeListsRowId"];
                this.columnTypeOfKinListsRowId = this.Columns["TypeOfKinListsRowId"];
                this.columnPriority = this.Columns["Priority"];
                this.columnrowguid = this.Columns["rowguid"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnNextOfKinRowId = new DataColumn("NextOfKinRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNextOfKinRowId);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnAddress = new DataColumn("Address", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAddress);
                this.columnPhoneNumber = new DataColumn("PhoneNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPhoneNumber);
                this.columnComment = new DataColumn("Comment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComment);
                this.columnCountryCodeListsRowId = new DataColumn("CountryCodeListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCountryCodeListsRowId);
                this.columnTypeOfKinListsRowId = new DataColumn("TypeOfKinListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTypeOfKinListsRowId);
                this.columnPriority = new DataColumn("Priority", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPriority);
                this.columnrowguid = new DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnrowguid);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey12", new DataColumn[] {
                                this.columnNextOfKinRowId}, true));
                this.columnNextOfKinRowId.AutoIncrement = true;
                this.columnNextOfKinRowId.AllowDBNull = false;
                this.columnNextOfKinRowId.ReadOnly = true;
                this.columnNextOfKinRowId.Unique = true;
            }
            
            public GANextOfKinRow NewGANextOfKinRow() {
                return ((GANextOfKinRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GANextOfKinRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GANextOfKinRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GANextOfKinRowChanged != null)) {
                    this.GANextOfKinRowChanged(this, new GANextOfKinRowChangeEvent(((GANextOfKinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GANextOfKinRowChanging != null)) {
                    this.GANextOfKinRowChanging(this, new GANextOfKinRowChangeEvent(((GANextOfKinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GANextOfKinRowDeleted != null)) {
                    this.GANextOfKinRowDeleted(this, new GANextOfKinRowChangeEvent(((GANextOfKinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GANextOfKinRowDeleting != null)) {
                    this.GANextOfKinRowDeleting(this, new GANextOfKinRowChangeEvent(((GANextOfKinRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGANextOfKinRow(GANextOfKinRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GANextOfKinRow : DataRow {
            
            private GANextOfKinDataTable tableGANextOfKin;
            
            internal GANextOfKinRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGANextOfKin = ((GANextOfKinDataTable)(this.Table));
            }
            
            public int NextOfKinRowId {
                get {
                    return ((int)(this[this.tableGANextOfKin.NextOfKinRowIdColumn]));
                }
                set {
                    this[this.tableGANextOfKin.NextOfKinRowIdColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGANextOfKin.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.NameColumn] = value;
                }
            }
            
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableGANextOfKin.AddressColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.AddressColumn] = value;
                }
            }
            
            public string PhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tableGANextOfKin.PhoneNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.PhoneNumberColumn] = value;
                }
            }
            
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGANextOfKin.CommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.CommentColumn] = value;
                }
            }
            
            public string CountryCodeListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGANextOfKin.CountryCodeListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.CountryCodeListsRowIdColumn] = value;
                }
            }
            
            public string TypeOfKinListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGANextOfKin.TypeOfKinListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.TypeOfKinListsRowIdColumn] = value;
                }
            }
            
            public string Priority {
                get {
                    try {
                        return ((string)(this[this.tableGANextOfKin.PriorityColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.PriorityColumn] = value;
                }
            }
            
            public System.Guid rowguid {
                get {
                    try {
                        return ((System.Guid)(this[this.tableGANextOfKin.rowguidColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.rowguidColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGANextOfKin.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGANextOfKin.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGANextOfKin.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGANextOfKin.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGANextOfKin.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGANextOfKin.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGANextOfKin.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGANextOfKin.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGANextOfKin.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGANextOfKin.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGANextOfKin.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGANextOfKin.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGANextOfKin.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGANextOfKin.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGANextOfKin.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGANextOfKin.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGANextOfKin.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGANextOfKin.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGANextOfKin.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGANextOfKin.IntFree3Column] = value;
                }
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tableGANextOfKin.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tableGANextOfKin.NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsAddressNull() {
                return this.IsNull(this.tableGANextOfKin.AddressColumn);
            }
            
            public void SetAddressNull() {
                this[this.tableGANextOfKin.AddressColumn] = System.Convert.DBNull;
            }
            
            public bool IsPhoneNumberNull() {
                return this.IsNull(this.tableGANextOfKin.PhoneNumberColumn);
            }
            
            public void SetPhoneNumberNull() {
                this[this.tableGANextOfKin.PhoneNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsCommentNull() {
                return this.IsNull(this.tableGANextOfKin.CommentColumn);
            }
            
            public void SetCommentNull() {
                this[this.tableGANextOfKin.CommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsCountryCodeListsRowIdNull() {
                return this.IsNull(this.tableGANextOfKin.CountryCodeListsRowIdColumn);
            }
            
            public void SetCountryCodeListsRowIdNull() {
                this[this.tableGANextOfKin.CountryCodeListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTypeOfKinListsRowIdNull() {
                return this.IsNull(this.tableGANextOfKin.TypeOfKinListsRowIdColumn);
            }
            
            public void SetTypeOfKinListsRowIdNull() {
                this[this.tableGANextOfKin.TypeOfKinListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsPriorityNull() {
                return this.IsNull(this.tableGANextOfKin.PriorityColumn);
            }
            
            public void SetPriorityNull() {
                this[this.tableGANextOfKin.PriorityColumn] = System.Convert.DBNull;
            }
            
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGANextOfKin.rowguidColumn);
            }
            
            public void SetrowguidNull() {
                this[this.tableGANextOfKin.rowguidColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGANextOfKin.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGANextOfKin.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGANextOfKin.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGANextOfKin.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGANextOfKin.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGANextOfKin.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGANextOfKin.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGANextOfKin.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGANextOfKin.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGANextOfKin.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGANextOfKin.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGANextOfKin.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGANextOfKin.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGANextOfKin.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGANextOfKin.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGANextOfKin.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGANextOfKin.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGANextOfKin.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGANextOfKin.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGANextOfKin.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGANextOfKin.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGANextOfKin.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGANextOfKin.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGANextOfKin.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGANextOfKin.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGANextOfKin.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGANextOfKin.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGANextOfKin.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGANextOfKin.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGANextOfKin.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGANextOfKin.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGANextOfKin.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGANextOfKin.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGANextOfKin.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGANextOfKin.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGANextOfKin.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGANextOfKin.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGANextOfKin.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GANextOfKinRowChangeEvent : EventArgs {
            
            private GANextOfKinRow eventRow;
            
            private DataRowAction eventAction;
            
            public GANextOfKinRowChangeEvent(GANextOfKinRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GANextOfKinRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GACertificateDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCertificateRowId;
            
            private DataColumn columnCertificateId;
            
            private DataColumn columnDateFrom;
            
            private DataColumn columnDateExpire;
            
            private DataColumn columnComment;
            
            private DataColumn columnTypeOfCertificateListsRowId;
            
            private DataColumn columnrowguid;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GACertificateDataTable() : 
                    base("GACertificate") {
                this.InitClass();
            }
            
            internal GACertificateDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CertificateRowIdColumn {
                get {
                    return this.columnCertificateRowId;
                }
            }
            
            internal DataColumn CertificateIdColumn {
                get {
                    return this.columnCertificateId;
                }
            }
            
            internal DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            internal DataColumn DateExpireColumn {
                get {
                    return this.columnDateExpire;
                }
            }
            
            internal DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            internal DataColumn TypeOfCertificateListsRowIdColumn {
                get {
                    return this.columnTypeOfCertificateListsRowId;
                }
            }
            
            internal DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GACertificateRow this[int index] {
                get {
                    return ((GACertificateRow)(this.Rows[index]));
                }
            }
            
            public event GACertificateRowChangeEventHandler GACertificateRowChanged;
            
            public event GACertificateRowChangeEventHandler GACertificateRowChanging;
            
            public event GACertificateRowChangeEventHandler GACertificateRowDeleted;
            
            public event GACertificateRowChangeEventHandler GACertificateRowDeleting;
            
            public void AddGACertificateRow(GACertificateRow row) {
                this.Rows.Add(row);
            }
            
            public GACertificateRow AddGACertificateRow(
                        string CertificateId, 
                        System.DateTime DateFrom, 
                        System.DateTime DateExpire, 
                        string Comment, 
                        string TypeOfCertificateListsRowId, 
                        System.Guid rowguid, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GACertificateRow rowGACertificateRow = ((GACertificateRow)(this.NewRow()));
                rowGACertificateRow.ItemArray = new object[] {
                        null,
                        CertificateId,
                        DateFrom,
                        DateExpire,
                        Comment,
                        TypeOfCertificateListsRowId,
                        rowguid,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGACertificateRow);
                return rowGACertificateRow;
            }
            
            public GACertificateRow FindByCertificateRowId(int CertificateRowId) {
                return ((GACertificateRow)(this.Rows.Find(new object[] {
                            CertificateRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GACertificateDataTable cln = ((GACertificateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GACertificateDataTable();
            }
            
            internal void InitVars() {
                this.columnCertificateRowId = this.Columns["CertificateRowId"];
                this.columnCertificateId = this.Columns["CertificateId"];
                this.columnDateFrom = this.Columns["DateFrom"];
                this.columnDateExpire = this.Columns["DateExpire"];
                this.columnComment = this.Columns["Comment"];
                this.columnTypeOfCertificateListsRowId = this.Columns["TypeOfCertificateListsRowId"];
                this.columnrowguid = this.Columns["rowguid"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnCertificateRowId = new DataColumn("CertificateRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCertificateRowId);
                this.columnCertificateId = new DataColumn("CertificateId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCertificateId);
                this.columnDateFrom = new DataColumn("DateFrom", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateFrom);
                this.columnDateExpire = new DataColumn("DateExpire", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateExpire);
                this.columnComment = new DataColumn("Comment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComment);
                this.columnTypeOfCertificateListsRowId = new DataColumn("TypeOfCertificateListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTypeOfCertificateListsRowId);
                this.columnrowguid = new DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnrowguid);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey13", new DataColumn[] {
                                this.columnCertificateRowId}, true));
                this.columnCertificateRowId.AutoIncrement = true;
                this.columnCertificateRowId.AllowDBNull = false;
                this.columnCertificateRowId.ReadOnly = true;
                this.columnCertificateRowId.Unique = true;
            }
            
            public GACertificateRow NewGACertificateRow() {
                return ((GACertificateRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GACertificateRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GACertificateRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GACertificateRowChanged != null)) {
                    this.GACertificateRowChanged(this, new GACertificateRowChangeEvent(((GACertificateRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GACertificateRowChanging != null)) {
                    this.GACertificateRowChanging(this, new GACertificateRowChangeEvent(((GACertificateRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GACertificateRowDeleted != null)) {
                    this.GACertificateRowDeleted(this, new GACertificateRowChangeEvent(((GACertificateRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GACertificateRowDeleting != null)) {
                    this.GACertificateRowDeleting(this, new GACertificateRowChangeEvent(((GACertificateRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGACertificateRow(GACertificateRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GACertificateRow : DataRow {
            
            private GACertificateDataTable tableGACertificate;
            
            internal GACertificateRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGACertificate = ((GACertificateDataTable)(this.Table));
            }
            
            public int CertificateRowId {
                get {
                    return ((int)(this[this.tableGACertificate.CertificateRowIdColumn]));
                }
                set {
                    this[this.tableGACertificate.CertificateRowIdColumn] = value;
                }
            }
            
            public string CertificateId {
                get {
                    try {
                        return ((string)(this[this.tableGACertificate.CertificateIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.CertificateIdColumn] = value;
                }
            }
            
            public System.DateTime DateFrom {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACertificate.DateFromColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.DateFromColumn] = value;
                }
            }
            
            public System.DateTime DateExpire {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACertificate.DateExpireColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.DateExpireColumn] = value;
                }
            }
            
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGACertificate.CommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.CommentColumn] = value;
                }
            }
            
            public string TypeOfCertificateListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGACertificate.TypeOfCertificateListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.TypeOfCertificateListsRowIdColumn] = value;
                }
            }
            
            public System.Guid rowguid {
                get {
                    try {
                        return ((System.Guid)(this[this.tableGACertificate.rowguidColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.rowguidColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGACertificate.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACertificate.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGACertificate.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACertificate.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGACertificate.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACertificate.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGACertificate.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGACertificate.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGACertificate.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGACertificate.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACertificate.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACertificate.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGACertificate.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGACertificate.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGACertificate.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGACertificate.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGACertificate.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGACertificate.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGACertificate.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGACertificate.IntFree3Column] = value;
                }
            }
            
            public bool IsCertificateIdNull() {
                return this.IsNull(this.tableGACertificate.CertificateIdColumn);
            }
            
            public void SetCertificateIdNull() {
                this[this.tableGACertificate.CertificateIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateFromNull() {
                return this.IsNull(this.tableGACertificate.DateFromColumn);
            }
            
            public void SetDateFromNull() {
                this[this.tableGACertificate.DateFromColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateExpireNull() {
                return this.IsNull(this.tableGACertificate.DateExpireColumn);
            }
            
            public void SetDateExpireNull() {
                this[this.tableGACertificate.DateExpireColumn] = System.Convert.DBNull;
            }
            
            public bool IsCommentNull() {
                return this.IsNull(this.tableGACertificate.CommentColumn);
            }
            
            public void SetCommentNull() {
                this[this.tableGACertificate.CommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsTypeOfCertificateListsRowIdNull() {
                return this.IsNull(this.tableGACertificate.TypeOfCertificateListsRowIdColumn);
            }
            
            public void SetTypeOfCertificateListsRowIdNull() {
                this[this.tableGACertificate.TypeOfCertificateListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGACertificate.rowguidColumn);
            }
            
            public void SetrowguidNull() {
                this[this.tableGACertificate.rowguidColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGACertificate.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGACertificate.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGACertificate.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGACertificate.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGACertificate.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGACertificate.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGACertificate.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGACertificate.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGACertificate.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGACertificate.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGACertificate.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGACertificate.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGACertificate.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGACertificate.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGACertificate.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGACertificate.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGACertificate.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGACertificate.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGACertificate.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGACertificate.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGACertificate.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGACertificate.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGACertificate.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGACertificate.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGACertificate.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGACertificate.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGACertificate.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGACertificate.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGACertificate.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGACertificate.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGACertificate.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGACertificate.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGACertificate.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGACertificate.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGACertificate.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGACertificate.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGACertificate.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGACertificate.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GACertificateRowChangeEvent : EventArgs {
            
            private GACertificateRow eventRow;
            
            private DataRowAction eventAction;
            
            public GACertificateRowChangeEvent(GACertificateRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GACertificateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAIncidentReportViewDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIncidentReportRowId;
            
            private DataColumn columnIncidentId;
            
            private DataColumn columnTitle;
            
            private DataColumn columnIncidentReporter;
            
            private DataColumn columnName;
            
            private DataColumn columnDateAndTimeOfIncident;
            
            private DataColumn columnWitness;
            
            private DataColumn columnShortDescription;
            
            private DataColumn columnHasMaritimeReport;
            
            private DataColumn columnReportDate;
            
            private DataColumn columnReporter;
            
            private DataColumn columnImmediateActions;
            
            private DataColumn columnTaskStatus;
            
            private DataColumn columnWitnessPersonnelRowId;
            
            private DataColumn columnSequenceOfTheIncident;
            
            private DataColumn columnContributionFactorToTheIncident;
            
            private DataColumn columnClassificationListsRowId;
            
            private DataColumn columnReporterJobTitleListsRowId;
            
            private DataColumn columnStatusListsRowId;
            
            private DataColumn columnTypeOfIncidentListsRowId;
            
            private DataColumn columnWorkAreaListsRowId;
            
            private DataColumn columnpath;
            
            private DataColumn columnownerclass;
            
            private DataColumn columnownername;
            
            private DataColumn columnOwnerClassRowId;
            
            private DataColumn columnEyeWitness;
            
            internal GAIncidentReportViewDataTable() : 
                    base("GAIncidentReportView") {
                this.InitClass();
            }
            
            internal GAIncidentReportViewDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IncidentReportRowIdColumn {
                get {
                    return this.columnIncidentReportRowId;
                }
            }
            
            internal DataColumn IncidentIdColumn {
                get {
                    return this.columnIncidentId;
                }
            }
            
            internal DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            internal DataColumn IncidentReporterColumn {
                get {
                    return this.columnIncidentReporter;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn DateAndTimeOfIncidentColumn {
                get {
                    return this.columnDateAndTimeOfIncident;
                }
            }
            
            internal DataColumn WitnessColumn {
                get {
                    return this.columnWitness;
                }
            }
            
            internal DataColumn ShortDescriptionColumn {
                get {
                    return this.columnShortDescription;
                }
            }
            
            internal DataColumn HasMaritimeReportColumn {
                get {
                    return this.columnHasMaritimeReport;
                }
            }
            
            internal DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            internal DataColumn ReporterColumn {
                get {
                    return this.columnReporter;
                }
            }
            
            internal DataColumn ImmediateActionsColumn {
                get {
                    return this.columnImmediateActions;
                }
            }
            
            internal DataColumn TaskStatusColumn {
                get {
                    return this.columnTaskStatus;
                }
            }
            
            internal DataColumn WitnessPersonnelRowIdColumn {
                get {
                    return this.columnWitnessPersonnelRowId;
                }
            }
            
            internal DataColumn SequenceOfTheIncidentColumn {
                get {
                    return this.columnSequenceOfTheIncident;
                }
            }
            
            internal DataColumn ContributionFactorToTheIncidentColumn {
                get {
                    return this.columnContributionFactorToTheIncident;
                }
            }
            
            internal DataColumn ClassificationListsRowIdColumn {
                get {
                    return this.columnClassificationListsRowId;
                }
            }
            
            internal DataColumn ReporterJobTitleListsRowIdColumn {
                get {
                    return this.columnReporterJobTitleListsRowId;
                }
            }
            
            internal DataColumn StatusListsRowIdColumn {
                get {
                    return this.columnStatusListsRowId;
                }
            }
            
            internal DataColumn TypeOfIncidentListsRowIdColumn {
                get {
                    return this.columnTypeOfIncidentListsRowId;
                }
            }
            
            internal DataColumn WorkAreaListsRowIdColumn {
                get {
                    return this.columnWorkAreaListsRowId;
                }
            }
            
            internal DataColumn pathColumn {
                get {
                    return this.columnpath;
                }
            }
            
            internal DataColumn ownerclassColumn {
                get {
                    return this.columnownerclass;
                }
            }
            
            internal DataColumn ownernameColumn {
                get {
                    return this.columnownername;
                }
            }
            
            internal DataColumn OwnerClassRowIdColumn {
                get {
                    return this.columnOwnerClassRowId;
                }
            }
            
            internal DataColumn EyeWitnessColumn {
                get {
                    return this.columnEyeWitness;
                }
            }
            
            public GAIncidentReportViewRow this[int index] {
                get {
                    return ((GAIncidentReportViewRow)(this.Rows[index]));
                }
            }
            
            public event GAIncidentReportViewRowChangeEventHandler GAIncidentReportViewRowChanged;
            
            public event GAIncidentReportViewRowChangeEventHandler GAIncidentReportViewRowChanging;
            
            public event GAIncidentReportViewRowChangeEventHandler GAIncidentReportViewRowDeleted;
            
            public event GAIncidentReportViewRowChangeEventHandler GAIncidentReportViewRowDeleting;
            
            public void AddGAIncidentReportViewRow(GAIncidentReportViewRow row) {
                this.Rows.Add(row);
            }
            
            public GAIncidentReportViewRow AddGAIncidentReportViewRow(
                        string IncidentId, 
                        string Title, 
                        string IncidentReporter, 
                        string Name, 
                        System.DateTime DateAndTimeOfIncident, 
                        string Witness, 
                        string ShortDescription, 
                        bool HasMaritimeReport, 
                        System.DateTime ReportDate, 
                        string Reporter, 
                        string ImmediateActions, 
                        string TaskStatus, 
                        string WitnessPersonnelRowId, 
                        string SequenceOfTheIncident, 
                        string ContributionFactorToTheIncident, 
                        string ClassificationListsRowId, 
                        string ReporterJobTitleListsRowId, 
                        string StatusListsRowId, 
                        string TypeOfIncidentListsRowId, 
                        string WorkAreaListsRowId, 
                        string path, 
                        string ownerclass, 
                        string ownername, 
                        int OwnerClassRowId, 
                        string EyeWitness) {
                GAIncidentReportViewRow rowGAIncidentReportViewRow = ((GAIncidentReportViewRow)(this.NewRow()));
                rowGAIncidentReportViewRow.ItemArray = new object[] {
                        null,
                        IncidentId,
                        Title,
                        IncidentReporter,
                        Name,
                        DateAndTimeOfIncident,
                        Witness,
                        ShortDescription,
                        HasMaritimeReport,
                        ReportDate,
                        Reporter,
                        ImmediateActions,
                        TaskStatus,
                        WitnessPersonnelRowId,
                        SequenceOfTheIncident,
                        ContributionFactorToTheIncident,
                        ClassificationListsRowId,
                        ReporterJobTitleListsRowId,
                        StatusListsRowId,
                        TypeOfIncidentListsRowId,
                        WorkAreaListsRowId,
                        path,
                        ownerclass,
                        ownername,
                        OwnerClassRowId,
                        EyeWitness};
                this.Rows.Add(rowGAIncidentReportViewRow);
                return rowGAIncidentReportViewRow;
            }
            
            public GAIncidentReportViewRow FindByIncidentReportRowId(int IncidentReportRowId) {
                return ((GAIncidentReportViewRow)(this.Rows.Find(new object[] {
                            IncidentReportRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAIncidentReportViewDataTable cln = ((GAIncidentReportViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAIncidentReportViewDataTable();
            }
            
            internal void InitVars() {
                this.columnIncidentReportRowId = this.Columns["IncidentReportRowId"];
                this.columnIncidentId = this.Columns["IncidentId"];
                this.columnTitle = this.Columns["Title"];
                this.columnIncidentReporter = this.Columns["IncidentReporter"];
                this.columnName = this.Columns["Name"];
                this.columnDateAndTimeOfIncident = this.Columns["DateAndTimeOfIncident"];
                this.columnWitness = this.Columns["Witness"];
                this.columnShortDescription = this.Columns["ShortDescription"];
                this.columnHasMaritimeReport = this.Columns["HasMaritimeReport"];
                this.columnReportDate = this.Columns["ReportDate"];
                this.columnReporter = this.Columns["Reporter"];
                this.columnImmediateActions = this.Columns["ImmediateActions"];
                this.columnTaskStatus = this.Columns["TaskStatus"];
                this.columnWitnessPersonnelRowId = this.Columns["WitnessPersonnelRowId"];
                this.columnSequenceOfTheIncident = this.Columns["SequenceOfTheIncident"];
                this.columnContributionFactorToTheIncident = this.Columns["ContributionFactorToTheIncident"];
                this.columnClassificationListsRowId = this.Columns["ClassificationListsRowId"];
                this.columnReporterJobTitleListsRowId = this.Columns["ReporterJobTitleListsRowId"];
                this.columnStatusListsRowId = this.Columns["StatusListsRowId"];
                this.columnTypeOfIncidentListsRowId = this.Columns["TypeOfIncidentListsRowId"];
                this.columnWorkAreaListsRowId = this.Columns["WorkAreaListsRowId"];
                this.columnpath = this.Columns["path"];
                this.columnownerclass = this.Columns["ownerclass"];
                this.columnownername = this.Columns["ownername"];
                this.columnOwnerClassRowId = this.Columns["OwnerClassRowId"];
                this.columnEyeWitness = this.Columns["EyeWitness"];
            }
            
            private void InitClass() {
                this.columnIncidentReportRowId = new DataColumn("IncidentReportRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIncidentReportRowId);
                this.columnIncidentId = new DataColumn("IncidentId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIncidentId);
                this.columnTitle = new DataColumn("Title", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTitle);
                this.columnIncidentReporter = new DataColumn("IncidentReporter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIncidentReporter);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnDateAndTimeOfIncident = new DataColumn("DateAndTimeOfIncident", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateAndTimeOfIncident);
                this.columnWitness = new DataColumn("Witness", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWitness);
                this.columnShortDescription = new DataColumn("ShortDescription", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShortDescription);
                this.columnHasMaritimeReport = new DataColumn("HasMaritimeReport", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHasMaritimeReport);
                this.columnReportDate = new DataColumn("ReportDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReportDate);
                this.columnReporter = new DataColumn("Reporter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReporter);
                this.columnImmediateActions = new DataColumn("ImmediateActions", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImmediateActions);
                this.columnTaskStatus = new DataColumn("TaskStatus", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTaskStatus);
                this.columnWitnessPersonnelRowId = new DataColumn("WitnessPersonnelRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWitnessPersonnelRowId);
                this.columnSequenceOfTheIncident = new DataColumn("SequenceOfTheIncident", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSequenceOfTheIncident);
                this.columnContributionFactorToTheIncident = new DataColumn("ContributionFactorToTheIncident", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContributionFactorToTheIncident);
                this.columnClassificationListsRowId = new DataColumn("ClassificationListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClassificationListsRowId);
                this.columnReporterJobTitleListsRowId = new DataColumn("ReporterJobTitleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReporterJobTitleListsRowId);
                this.columnStatusListsRowId = new DataColumn("StatusListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatusListsRowId);
                this.columnTypeOfIncidentListsRowId = new DataColumn("TypeOfIncidentListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTypeOfIncidentListsRowId);
                this.columnWorkAreaListsRowId = new DataColumn("WorkAreaListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWorkAreaListsRowId);
                this.columnpath = new DataColumn("path", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnpath);
                this.columnownerclass = new DataColumn("ownerclass", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnownerclass);
                this.columnownername = new DataColumn("ownername", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnownername);
                this.columnOwnerClassRowId = new DataColumn("OwnerClassRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOwnerClassRowId);
                this.columnEyeWitness = new DataColumn("EyeWitness", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEyeWitness);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey14", new DataColumn[] {
                                this.columnIncidentReportRowId}, true));
                this.columnIncidentReportRowId.AutoIncrement = true;
                this.columnIncidentReportRowId.AllowDBNull = false;
                this.columnIncidentReportRowId.ReadOnly = true;
                this.columnIncidentReportRowId.Unique = true;
            }
            
            public GAIncidentReportViewRow NewGAIncidentReportViewRow() {
                return ((GAIncidentReportViewRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAIncidentReportViewRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAIncidentReportViewRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAIncidentReportViewRowChanged != null)) {
                    this.GAIncidentReportViewRowChanged(this, new GAIncidentReportViewRowChangeEvent(((GAIncidentReportViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAIncidentReportViewRowChanging != null)) {
                    this.GAIncidentReportViewRowChanging(this, new GAIncidentReportViewRowChangeEvent(((GAIncidentReportViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAIncidentReportViewRowDeleted != null)) {
                    this.GAIncidentReportViewRowDeleted(this, new GAIncidentReportViewRowChangeEvent(((GAIncidentReportViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAIncidentReportViewRowDeleting != null)) {
                    this.GAIncidentReportViewRowDeleting(this, new GAIncidentReportViewRowChangeEvent(((GAIncidentReportViewRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAIncidentReportViewRow(GAIncidentReportViewRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAIncidentReportViewRow : DataRow {
            
            private GAIncidentReportViewDataTable tableGAIncidentReportView;
            
            internal GAIncidentReportViewRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAIncidentReportView = ((GAIncidentReportViewDataTable)(this.Table));
            }
            
            public int IncidentReportRowId {
                get {
                    return ((int)(this[this.tableGAIncidentReportView.IncidentReportRowIdColumn]));
                }
                set {
                    this[this.tableGAIncidentReportView.IncidentReportRowIdColumn] = value;
                }
            }
            
            public string IncidentId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.IncidentIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.IncidentIdColumn] = value;
                }
            }
            
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.TitleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.TitleColumn] = value;
                }
            }
            
            public string IncidentReporter {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.IncidentReporterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.IncidentReporterColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.NameColumn] = value;
                }
            }
            
            public System.DateTime DateAndTimeOfIncident {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAIncidentReportView.DateAndTimeOfIncidentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.DateAndTimeOfIncidentColumn] = value;
                }
            }
            
            public string Witness {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.WitnessColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.WitnessColumn] = value;
                }
            }
            
            public string ShortDescription {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.ShortDescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.ShortDescriptionColumn] = value;
                }
            }
            
            public bool HasMaritimeReport {
                get {
                    try {
                        return ((bool)(this[this.tableGAIncidentReportView.HasMaritimeReportColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.HasMaritimeReportColumn] = value;
                }
            }
            
            public System.DateTime ReportDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAIncidentReportView.ReportDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.ReportDateColumn] = value;
                }
            }
            
            public string Reporter {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.ReporterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.ReporterColumn] = value;
                }
            }
            
            public string ImmediateActions {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.ImmediateActionsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.ImmediateActionsColumn] = value;
                }
            }
            
            public string TaskStatus {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.TaskStatusColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.TaskStatusColumn] = value;
                }
            }
            
            public string WitnessPersonnelRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.WitnessPersonnelRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.WitnessPersonnelRowIdColumn] = value;
                }
            }
            
            public string SequenceOfTheIncident {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.SequenceOfTheIncidentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.SequenceOfTheIncidentColumn] = value;
                }
            }
            
            public string ContributionFactorToTheIncident {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.ContributionFactorToTheIncidentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.ContributionFactorToTheIncidentColumn] = value;
                }
            }
            
            public string ClassificationListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.ClassificationListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.ClassificationListsRowIdColumn] = value;
                }
            }
            
            public string ReporterJobTitleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.ReporterJobTitleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.ReporterJobTitleListsRowIdColumn] = value;
                }
            }
            
            public string StatusListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.StatusListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.StatusListsRowIdColumn] = value;
                }
            }
            
            public string TypeOfIncidentListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.TypeOfIncidentListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.TypeOfIncidentListsRowIdColumn] = value;
                }
            }
            
            public string WorkAreaListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.WorkAreaListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.WorkAreaListsRowIdColumn] = value;
                }
            }
            
            public string path {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.pathColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.pathColumn] = value;
                }
            }
            
            public string ownerclass {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.ownerclassColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.ownerclassColumn] = value;
                }
            }
            
            public string ownername {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.ownernameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.ownernameColumn] = value;
                }
            }
            
            public int OwnerClassRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportView.OwnerClassRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.OwnerClassRowIdColumn] = value;
                }
            }
            
            public string EyeWitness {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportView.EyeWitnessColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportView.EyeWitnessColumn] = value;
                }
            }
            
            public bool IsIncidentIdNull() {
                return this.IsNull(this.tableGAIncidentReportView.IncidentIdColumn);
            }
            
            public void SetIncidentIdNull() {
                this[this.tableGAIncidentReportView.IncidentIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTitleNull() {
                return this.IsNull(this.tableGAIncidentReportView.TitleColumn);
            }
            
            public void SetTitleNull() {
                this[this.tableGAIncidentReportView.TitleColumn] = System.Convert.DBNull;
            }
            
            public bool IsIncidentReporterNull() {
                return this.IsNull(this.tableGAIncidentReportView.IncidentReporterColumn);
            }
            
            public void SetIncidentReporterNull() {
                this[this.tableGAIncidentReportView.IncidentReporterColumn] = System.Convert.DBNull;
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tableGAIncidentReportView.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tableGAIncidentReportView.NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateAndTimeOfIncidentNull() {
                return this.IsNull(this.tableGAIncidentReportView.DateAndTimeOfIncidentColumn);
            }
            
            public void SetDateAndTimeOfIncidentNull() {
                this[this.tableGAIncidentReportView.DateAndTimeOfIncidentColumn] = System.Convert.DBNull;
            }
            
            public bool IsWitnessNull() {
                return this.IsNull(this.tableGAIncidentReportView.WitnessColumn);
            }
            
            public void SetWitnessNull() {
                this[this.tableGAIncidentReportView.WitnessColumn] = System.Convert.DBNull;
            }
            
            public bool IsShortDescriptionNull() {
                return this.IsNull(this.tableGAIncidentReportView.ShortDescriptionColumn);
            }
            
            public void SetShortDescriptionNull() {
                this[this.tableGAIncidentReportView.ShortDescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsHasMaritimeReportNull() {
                return this.IsNull(this.tableGAIncidentReportView.HasMaritimeReportColumn);
            }
            
            public void SetHasMaritimeReportNull() {
                this[this.tableGAIncidentReportView.HasMaritimeReportColumn] = System.Convert.DBNull;
            }
            
            public bool IsReportDateNull() {
                return this.IsNull(this.tableGAIncidentReportView.ReportDateColumn);
            }
            
            public void SetReportDateNull() {
                this[this.tableGAIncidentReportView.ReportDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsReporterNull() {
                return this.IsNull(this.tableGAIncidentReportView.ReporterColumn);
            }
            
            public void SetReporterNull() {
                this[this.tableGAIncidentReportView.ReporterColumn] = System.Convert.DBNull;
            }
            
            public bool IsImmediateActionsNull() {
                return this.IsNull(this.tableGAIncidentReportView.ImmediateActionsColumn);
            }
            
            public void SetImmediateActionsNull() {
                this[this.tableGAIncidentReportView.ImmediateActionsColumn] = System.Convert.DBNull;
            }
            
            public bool IsTaskStatusNull() {
                return this.IsNull(this.tableGAIncidentReportView.TaskStatusColumn);
            }
            
            public void SetTaskStatusNull() {
                this[this.tableGAIncidentReportView.TaskStatusColumn] = System.Convert.DBNull;
            }
            
            public bool IsWitnessPersonnelRowIdNull() {
                return this.IsNull(this.tableGAIncidentReportView.WitnessPersonnelRowIdColumn);
            }
            
            public void SetWitnessPersonnelRowIdNull() {
                this[this.tableGAIncidentReportView.WitnessPersonnelRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSequenceOfTheIncidentNull() {
                return this.IsNull(this.tableGAIncidentReportView.SequenceOfTheIncidentColumn);
            }
            
            public void SetSequenceOfTheIncidentNull() {
                this[this.tableGAIncidentReportView.SequenceOfTheIncidentColumn] = System.Convert.DBNull;
            }
            
            public bool IsContributionFactorToTheIncidentNull() {
                return this.IsNull(this.tableGAIncidentReportView.ContributionFactorToTheIncidentColumn);
            }
            
            public void SetContributionFactorToTheIncidentNull() {
                this[this.tableGAIncidentReportView.ContributionFactorToTheIncidentColumn] = System.Convert.DBNull;
            }
            
            public bool IsClassificationListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReportView.ClassificationListsRowIdColumn);
            }
            
            public void SetClassificationListsRowIdNull() {
                this[this.tableGAIncidentReportView.ClassificationListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsReporterJobTitleListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReportView.ReporterJobTitleListsRowIdColumn);
            }
            
            public void SetReporterJobTitleListsRowIdNull() {
                this[this.tableGAIncidentReportView.ReporterJobTitleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsStatusListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReportView.StatusListsRowIdColumn);
            }
            
            public void SetStatusListsRowIdNull() {
                this[this.tableGAIncidentReportView.StatusListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTypeOfIncidentListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReportView.TypeOfIncidentListsRowIdColumn);
            }
            
            public void SetTypeOfIncidentListsRowIdNull() {
                this[this.tableGAIncidentReportView.TypeOfIncidentListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsWorkAreaListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReportView.WorkAreaListsRowIdColumn);
            }
            
            public void SetWorkAreaListsRowIdNull() {
                this[this.tableGAIncidentReportView.WorkAreaListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IspathNull() {
                return this.IsNull(this.tableGAIncidentReportView.pathColumn);
            }
            
            public void SetpathNull() {
                this[this.tableGAIncidentReportView.pathColumn] = System.Convert.DBNull;
            }
            
            public bool IsownerclassNull() {
                return this.IsNull(this.tableGAIncidentReportView.ownerclassColumn);
            }
            
            public void SetownerclassNull() {
                this[this.tableGAIncidentReportView.ownerclassColumn] = System.Convert.DBNull;
            }
            
            public bool IsownernameNull() {
                return this.IsNull(this.tableGAIncidentReportView.ownernameColumn);
            }
            
            public void SetownernameNull() {
                this[this.tableGAIncidentReportView.ownernameColumn] = System.Convert.DBNull;
            }
            
            public bool IsOwnerClassRowIdNull() {
                return this.IsNull(this.tableGAIncidentReportView.OwnerClassRowIdColumn);
            }
            
            public void SetOwnerClassRowIdNull() {
                this[this.tableGAIncidentReportView.OwnerClassRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsEyeWitnessNull() {
                return this.IsNull(this.tableGAIncidentReportView.EyeWitnessColumn);
            }
            
            public void SetEyeWitnessNull() {
                this[this.tableGAIncidentReportView.EyeWitnessColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAIncidentReportViewRowChangeEvent : EventArgs {
            
            private GAIncidentReportViewRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAIncidentReportViewRowChangeEvent(GAIncidentReportViewRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAIncidentReportViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAIncidentReport_InjuredPartyViewDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIncidentReportRowId;
            
            private DataColumn columnIncidentId;
            
            private DataColumn columnTitle;
            
            private DataColumn columnIncidentReporter;
            
            private DataColumn columnName;
            
            private DataColumn columnDateAndTimeOfIncident;
            
            private DataColumn columnWitness;
            
            private DataColumn columnShortDescription;
            
            private DataColumn columnHasMaritimeReport;
            
            private DataColumn columnReportDate;
            
            private DataColumn columnReporter;
            
            private DataColumn columnImmediateActions;
            
            private DataColumn columnTaskStatus;
            
            private DataColumn columnWitnessPersonnelRowId;
            
            private DataColumn columnSequenceOfTheIncident;
            
            private DataColumn columnContributionFactorToTheIncident;
            
            private DataColumn columnClassificationListsRowId;
            
            private DataColumn columnReporterJobTitleListsRowId;
            
            private DataColumn columnStatusListsRowId;
            
            private DataColumn columnTypeOfIncidentListsRowId;
            
            private DataColumn columnWorkAreaListsRowId;
            
            private DataColumn columnpath;
            
            private DataColumn columnownerclass;
            
            private DataColumn columnownername;
            
            private DataColumn columnOwnerClassRowId;
            
            private DataColumn columnNumberOfDaysLost;
            
            internal GAIncidentReport_InjuredPartyViewDataTable() : 
                    base("GAIncidentReport_InjuredPartyView") {
                this.InitClass();
            }
            
            internal GAIncidentReport_InjuredPartyViewDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IncidentReportRowIdColumn {
                get {
                    return this.columnIncidentReportRowId;
                }
            }
            
            internal DataColumn IncidentIdColumn {
                get {
                    return this.columnIncidentId;
                }
            }
            
            internal DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            internal DataColumn IncidentReporterColumn {
                get {
                    return this.columnIncidentReporter;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn DateAndTimeOfIncidentColumn {
                get {
                    return this.columnDateAndTimeOfIncident;
                }
            }
            
            internal DataColumn WitnessColumn {
                get {
                    return this.columnWitness;
                }
            }
            
            internal DataColumn ShortDescriptionColumn {
                get {
                    return this.columnShortDescription;
                }
            }
            
            internal DataColumn HasMaritimeReportColumn {
                get {
                    return this.columnHasMaritimeReport;
                }
            }
            
            internal DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            internal DataColumn ReporterColumn {
                get {
                    return this.columnReporter;
                }
            }
            
            internal DataColumn ImmediateActionsColumn {
                get {
                    return this.columnImmediateActions;
                }
            }
            
            internal DataColumn TaskStatusColumn {
                get {
                    return this.columnTaskStatus;
                }
            }
            
            internal DataColumn WitnessPersonnelRowIdColumn {
                get {
                    return this.columnWitnessPersonnelRowId;
                }
            }
            
            internal DataColumn SequenceOfTheIncidentColumn {
                get {
                    return this.columnSequenceOfTheIncident;
                }
            }
            
            internal DataColumn ContributionFactorToTheIncidentColumn {
                get {
                    return this.columnContributionFactorToTheIncident;
                }
            }
            
            internal DataColumn ClassificationListsRowIdColumn {
                get {
                    return this.columnClassificationListsRowId;
                }
            }
            
            internal DataColumn ReporterJobTitleListsRowIdColumn {
                get {
                    return this.columnReporterJobTitleListsRowId;
                }
            }
            
            internal DataColumn StatusListsRowIdColumn {
                get {
                    return this.columnStatusListsRowId;
                }
            }
            
            internal DataColumn TypeOfIncidentListsRowIdColumn {
                get {
                    return this.columnTypeOfIncidentListsRowId;
                }
            }
            
            internal DataColumn WorkAreaListsRowIdColumn {
                get {
                    return this.columnWorkAreaListsRowId;
                }
            }
            
            internal DataColumn pathColumn {
                get {
                    return this.columnpath;
                }
            }
            
            internal DataColumn ownerclassColumn {
                get {
                    return this.columnownerclass;
                }
            }
            
            internal DataColumn ownernameColumn {
                get {
                    return this.columnownername;
                }
            }
            
            internal DataColumn OwnerClassRowIdColumn {
                get {
                    return this.columnOwnerClassRowId;
                }
            }
            
            internal DataColumn NumberOfDaysLostColumn {
                get {
                    return this.columnNumberOfDaysLost;
                }
            }
            
            public GAIncidentReport_InjuredPartyViewRow this[int index] {
                get {
                    return ((GAIncidentReport_InjuredPartyViewRow)(this.Rows[index]));
                }
            }
            
            public event GAIncidentReport_InjuredPartyViewRowChangeEventHandler GAIncidentReport_InjuredPartyViewRowChanged;
            
            public event GAIncidentReport_InjuredPartyViewRowChangeEventHandler GAIncidentReport_InjuredPartyViewRowChanging;
            
            public event GAIncidentReport_InjuredPartyViewRowChangeEventHandler GAIncidentReport_InjuredPartyViewRowDeleted;
            
            public event GAIncidentReport_InjuredPartyViewRowChangeEventHandler GAIncidentReport_InjuredPartyViewRowDeleting;
            
            public void AddGAIncidentReport_InjuredPartyViewRow(GAIncidentReport_InjuredPartyViewRow row) {
                this.Rows.Add(row);
            }
            
            public GAIncidentReport_InjuredPartyViewRow AddGAIncidentReport_InjuredPartyViewRow(
                        string IncidentId, 
                        string Title, 
                        string IncidentReporter, 
                        string Name, 
                        System.DateTime DateAndTimeOfIncident, 
                        string Witness, 
                        string ShortDescription, 
                        bool HasMaritimeReport, 
                        System.DateTime ReportDate, 
                        string Reporter, 
                        string ImmediateActions, 
                        string TaskStatus, 
                        string WitnessPersonnelRowId, 
                        string SequenceOfTheIncident, 
                        string ContributionFactorToTheIncident, 
                        string ClassificationListsRowId, 
                        string ReporterJobTitleListsRowId, 
                        string StatusListsRowId, 
                        string TypeOfIncidentListsRowId, 
                        string WorkAreaListsRowId, 
                        string path, 
                        string ownerclass, 
                        string ownername, 
                        int OwnerClassRowId, 
                        int NumberOfDaysLost) {
                GAIncidentReport_InjuredPartyViewRow rowGAIncidentReport_InjuredPartyViewRow = ((GAIncidentReport_InjuredPartyViewRow)(this.NewRow()));
                rowGAIncidentReport_InjuredPartyViewRow.ItemArray = new object[] {
                        null,
                        IncidentId,
                        Title,
                        IncidentReporter,
                        Name,
                        DateAndTimeOfIncident,
                        Witness,
                        ShortDescription,
                        HasMaritimeReport,
                        ReportDate,
                        Reporter,
                        ImmediateActions,
                        TaskStatus,
                        WitnessPersonnelRowId,
                        SequenceOfTheIncident,
                        ContributionFactorToTheIncident,
                        ClassificationListsRowId,
                        ReporterJobTitleListsRowId,
                        StatusListsRowId,
                        TypeOfIncidentListsRowId,
                        WorkAreaListsRowId,
                        path,
                        ownerclass,
                        ownername,
                        OwnerClassRowId,
                        NumberOfDaysLost};
                this.Rows.Add(rowGAIncidentReport_InjuredPartyViewRow);
                return rowGAIncidentReport_InjuredPartyViewRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAIncidentReport_InjuredPartyViewDataTable cln = ((GAIncidentReport_InjuredPartyViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAIncidentReport_InjuredPartyViewDataTable();
            }
            
            internal void InitVars() {
                this.columnIncidentReportRowId = this.Columns["IncidentReportRowId"];
                this.columnIncidentId = this.Columns["IncidentId"];
                this.columnTitle = this.Columns["Title"];
                this.columnIncidentReporter = this.Columns["IncidentReporter"];
                this.columnName = this.Columns["Name"];
                this.columnDateAndTimeOfIncident = this.Columns["DateAndTimeOfIncident"];
                this.columnWitness = this.Columns["Witness"];
                this.columnShortDescription = this.Columns["ShortDescription"];
                this.columnHasMaritimeReport = this.Columns["HasMaritimeReport"];
                this.columnReportDate = this.Columns["ReportDate"];
                this.columnReporter = this.Columns["Reporter"];
                this.columnImmediateActions = this.Columns["ImmediateActions"];
                this.columnTaskStatus = this.Columns["TaskStatus"];
                this.columnWitnessPersonnelRowId = this.Columns["WitnessPersonnelRowId"];
                this.columnSequenceOfTheIncident = this.Columns["SequenceOfTheIncident"];
                this.columnContributionFactorToTheIncident = this.Columns["ContributionFactorToTheIncident"];
                this.columnClassificationListsRowId = this.Columns["ClassificationListsRowId"];
                this.columnReporterJobTitleListsRowId = this.Columns["ReporterJobTitleListsRowId"];
                this.columnStatusListsRowId = this.Columns["StatusListsRowId"];
                this.columnTypeOfIncidentListsRowId = this.Columns["TypeOfIncidentListsRowId"];
                this.columnWorkAreaListsRowId = this.Columns["WorkAreaListsRowId"];
                this.columnpath = this.Columns["path"];
                this.columnownerclass = this.Columns["ownerclass"];
                this.columnownername = this.Columns["ownername"];
                this.columnOwnerClassRowId = this.Columns["OwnerClassRowId"];
                this.columnNumberOfDaysLost = this.Columns["NumberOfDaysLost"];
            }
            
            private void InitClass() {
                this.columnIncidentReportRowId = new DataColumn("IncidentReportRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIncidentReportRowId);
                this.columnIncidentId = new DataColumn("IncidentId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIncidentId);
                this.columnTitle = new DataColumn("Title", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTitle);
                this.columnIncidentReporter = new DataColumn("IncidentReporter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIncidentReporter);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnDateAndTimeOfIncident = new DataColumn("DateAndTimeOfIncident", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateAndTimeOfIncident);
                this.columnWitness = new DataColumn("Witness", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWitness);
                this.columnShortDescription = new DataColumn("ShortDescription", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShortDescription);
                this.columnHasMaritimeReport = new DataColumn("HasMaritimeReport", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHasMaritimeReport);
                this.columnReportDate = new DataColumn("ReportDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReportDate);
                this.columnReporter = new DataColumn("Reporter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReporter);
                this.columnImmediateActions = new DataColumn("ImmediateActions", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImmediateActions);
                this.columnTaskStatus = new DataColumn("TaskStatus", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTaskStatus);
                this.columnWitnessPersonnelRowId = new DataColumn("WitnessPersonnelRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWitnessPersonnelRowId);
                this.columnSequenceOfTheIncident = new DataColumn("SequenceOfTheIncident", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSequenceOfTheIncident);
                this.columnContributionFactorToTheIncident = new DataColumn("ContributionFactorToTheIncident", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContributionFactorToTheIncident);
                this.columnClassificationListsRowId = new DataColumn("ClassificationListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClassificationListsRowId);
                this.columnReporterJobTitleListsRowId = new DataColumn("ReporterJobTitleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReporterJobTitleListsRowId);
                this.columnStatusListsRowId = new DataColumn("StatusListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatusListsRowId);
                this.columnTypeOfIncidentListsRowId = new DataColumn("TypeOfIncidentListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTypeOfIncidentListsRowId);
                this.columnWorkAreaListsRowId = new DataColumn("WorkAreaListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWorkAreaListsRowId);
                this.columnpath = new DataColumn("path", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnpath);
                this.columnownerclass = new DataColumn("ownerclass", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnownerclass);
                this.columnownername = new DataColumn("ownername", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnownername);
                this.columnOwnerClassRowId = new DataColumn("OwnerClassRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOwnerClassRowId);
                this.columnNumberOfDaysLost = new DataColumn("NumberOfDaysLost", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumberOfDaysLost);
                this.columnIncidentReportRowId.AutoIncrement = true;
                this.columnIncidentReportRowId.AllowDBNull = false;
                this.columnIncidentReportRowId.ReadOnly = true;
            }
            
            public GAIncidentReport_InjuredPartyViewRow NewGAIncidentReport_InjuredPartyViewRow() {
                return ((GAIncidentReport_InjuredPartyViewRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAIncidentReport_InjuredPartyViewRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAIncidentReport_InjuredPartyViewRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAIncidentReport_InjuredPartyViewRowChanged != null)) {
                    this.GAIncidentReport_InjuredPartyViewRowChanged(this, new GAIncidentReport_InjuredPartyViewRowChangeEvent(((GAIncidentReport_InjuredPartyViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAIncidentReport_InjuredPartyViewRowChanging != null)) {
                    this.GAIncidentReport_InjuredPartyViewRowChanging(this, new GAIncidentReport_InjuredPartyViewRowChangeEvent(((GAIncidentReport_InjuredPartyViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAIncidentReport_InjuredPartyViewRowDeleted != null)) {
                    this.GAIncidentReport_InjuredPartyViewRowDeleted(this, new GAIncidentReport_InjuredPartyViewRowChangeEvent(((GAIncidentReport_InjuredPartyViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAIncidentReport_InjuredPartyViewRowDeleting != null)) {
                    this.GAIncidentReport_InjuredPartyViewRowDeleting(this, new GAIncidentReport_InjuredPartyViewRowChangeEvent(((GAIncidentReport_InjuredPartyViewRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAIncidentReport_InjuredPartyViewRow(GAIncidentReport_InjuredPartyViewRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAIncidentReport_InjuredPartyViewRow : DataRow {
            
            private GAIncidentReport_InjuredPartyViewDataTable tableGAIncidentReport_InjuredPartyView;
            
            internal GAIncidentReport_InjuredPartyViewRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAIncidentReport_InjuredPartyView = ((GAIncidentReport_InjuredPartyViewDataTable)(this.Table));
            }
            
            public int IncidentReportRowId {
                get {
                    return ((int)(this[this.tableGAIncidentReport_InjuredPartyView.IncidentReportRowIdColumn]));
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.IncidentReportRowIdColumn] = value;
                }
            }
            
            public string IncidentId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.IncidentIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.IncidentIdColumn] = value;
                }
            }
            
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.TitleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.TitleColumn] = value;
                }
            }
            
            public string IncidentReporter {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.IncidentReporterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.IncidentReporterColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.NameColumn] = value;
                }
            }
            
            public System.DateTime DateAndTimeOfIncident {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAIncidentReport_InjuredPartyView.DateAndTimeOfIncidentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.DateAndTimeOfIncidentColumn] = value;
                }
            }
            
            public string Witness {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.WitnessColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.WitnessColumn] = value;
                }
            }
            
            public string ShortDescription {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.ShortDescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.ShortDescriptionColumn] = value;
                }
            }
            
            public bool HasMaritimeReport {
                get {
                    try {
                        return ((bool)(this[this.tableGAIncidentReport_InjuredPartyView.HasMaritimeReportColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.HasMaritimeReportColumn] = value;
                }
            }
            
            public System.DateTime ReportDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAIncidentReport_InjuredPartyView.ReportDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.ReportDateColumn] = value;
                }
            }
            
            public string Reporter {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.ReporterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.ReporterColumn] = value;
                }
            }
            
            public string ImmediateActions {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.ImmediateActionsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.ImmediateActionsColumn] = value;
                }
            }
            
            public string TaskStatus {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.TaskStatusColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.TaskStatusColumn] = value;
                }
            }
            
            public string WitnessPersonnelRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.WitnessPersonnelRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.WitnessPersonnelRowIdColumn] = value;
                }
            }
            
            public string SequenceOfTheIncident {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.SequenceOfTheIncidentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.SequenceOfTheIncidentColumn] = value;
                }
            }
            
            public string ContributionFactorToTheIncident {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.ContributionFactorToTheIncidentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.ContributionFactorToTheIncidentColumn] = value;
                }
            }
            
            public string ClassificationListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.ClassificationListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.ClassificationListsRowIdColumn] = value;
                }
            }
            
            public string ReporterJobTitleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.ReporterJobTitleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.ReporterJobTitleListsRowIdColumn] = value;
                }
            }
            
            public string StatusListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.StatusListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.StatusListsRowIdColumn] = value;
                }
            }
            
            public string TypeOfIncidentListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.TypeOfIncidentListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.TypeOfIncidentListsRowIdColumn] = value;
                }
            }
            
            public string WorkAreaListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.WorkAreaListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.WorkAreaListsRowIdColumn] = value;
                }
            }
            
            public string path {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.pathColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.pathColumn] = value;
                }
            }
            
            public string ownerclass {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.ownerclassColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.ownerclassColumn] = value;
                }
            }
            
            public string ownername {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReport_InjuredPartyView.ownernameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.ownernameColumn] = value;
                }
            }
            
            public int OwnerClassRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReport_InjuredPartyView.OwnerClassRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.OwnerClassRowIdColumn] = value;
                }
            }
            
            public int NumberOfDaysLost {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReport_InjuredPartyView.NumberOfDaysLostColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReport_InjuredPartyView.NumberOfDaysLostColumn] = value;
                }
            }
            
            public bool IsIncidentIdNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.IncidentIdColumn);
            }
            
            public void SetIncidentIdNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.IncidentIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTitleNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.TitleColumn);
            }
            
            public void SetTitleNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.TitleColumn] = System.Convert.DBNull;
            }
            
            public bool IsIncidentReporterNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.IncidentReporterColumn);
            }
            
            public void SetIncidentReporterNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.IncidentReporterColumn] = System.Convert.DBNull;
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateAndTimeOfIncidentNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.DateAndTimeOfIncidentColumn);
            }
            
            public void SetDateAndTimeOfIncidentNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.DateAndTimeOfIncidentColumn] = System.Convert.DBNull;
            }
            
            public bool IsWitnessNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.WitnessColumn);
            }
            
            public void SetWitnessNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.WitnessColumn] = System.Convert.DBNull;
            }
            
            public bool IsShortDescriptionNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.ShortDescriptionColumn);
            }
            
            public void SetShortDescriptionNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.ShortDescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsHasMaritimeReportNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.HasMaritimeReportColumn);
            }
            
            public void SetHasMaritimeReportNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.HasMaritimeReportColumn] = System.Convert.DBNull;
            }
            
            public bool IsReportDateNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.ReportDateColumn);
            }
            
            public void SetReportDateNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.ReportDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsReporterNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.ReporterColumn);
            }
            
            public void SetReporterNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.ReporterColumn] = System.Convert.DBNull;
            }
            
            public bool IsImmediateActionsNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.ImmediateActionsColumn);
            }
            
            public void SetImmediateActionsNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.ImmediateActionsColumn] = System.Convert.DBNull;
            }
            
            public bool IsTaskStatusNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.TaskStatusColumn);
            }
            
            public void SetTaskStatusNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.TaskStatusColumn] = System.Convert.DBNull;
            }
            
            public bool IsWitnessPersonnelRowIdNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.WitnessPersonnelRowIdColumn);
            }
            
            public void SetWitnessPersonnelRowIdNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.WitnessPersonnelRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSequenceOfTheIncidentNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.SequenceOfTheIncidentColumn);
            }
            
            public void SetSequenceOfTheIncidentNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.SequenceOfTheIncidentColumn] = System.Convert.DBNull;
            }
            
            public bool IsContributionFactorToTheIncidentNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.ContributionFactorToTheIncidentColumn);
            }
            
            public void SetContributionFactorToTheIncidentNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.ContributionFactorToTheIncidentColumn] = System.Convert.DBNull;
            }
            
            public bool IsClassificationListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.ClassificationListsRowIdColumn);
            }
            
            public void SetClassificationListsRowIdNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.ClassificationListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsReporterJobTitleListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.ReporterJobTitleListsRowIdColumn);
            }
            
            public void SetReporterJobTitleListsRowIdNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.ReporterJobTitleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsStatusListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.StatusListsRowIdColumn);
            }
            
            public void SetStatusListsRowIdNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.StatusListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTypeOfIncidentListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.TypeOfIncidentListsRowIdColumn);
            }
            
            public void SetTypeOfIncidentListsRowIdNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.TypeOfIncidentListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsWorkAreaListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.WorkAreaListsRowIdColumn);
            }
            
            public void SetWorkAreaListsRowIdNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.WorkAreaListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IspathNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.pathColumn);
            }
            
            public void SetpathNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.pathColumn] = System.Convert.DBNull;
            }
            
            public bool IsownerclassNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.ownerclassColumn);
            }
            
            public void SetownerclassNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.ownerclassColumn] = System.Convert.DBNull;
            }
            
            public bool IsownernameNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.ownernameColumn);
            }
            
            public void SetownernameNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.ownernameColumn] = System.Convert.DBNull;
            }
            
            public bool IsOwnerClassRowIdNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.OwnerClassRowIdColumn);
            }
            
            public void SetOwnerClassRowIdNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.OwnerClassRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumberOfDaysLostNull() {
                return this.IsNull(this.tableGAIncidentReport_InjuredPartyView.NumberOfDaysLostColumn);
            }
            
            public void SetNumberOfDaysLostNull() {
                this[this.tableGAIncidentReport_InjuredPartyView.NumberOfDaysLostColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAIncidentReport_InjuredPartyViewRowChangeEvent : EventArgs {
            
            private GAIncidentReport_InjuredPartyViewRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAIncidentReport_InjuredPartyViewRowChangeEvent(GAIncidentReport_InjuredPartyViewRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAIncidentReport_InjuredPartyViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GASafetyObservationDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnSafetyObservationRowId;
            
            private DataColumn columnDateOfInspection;
            
            private DataColumn columnSafetyObservationReferenceId;
            
            private DataColumn columnObserver;
            
            private DataColumn columnActivityObserved;
            
            private DataColumn columnSOPProcedure;
            
            private DataColumn columnProcedureNotAvailable;
            
            private DataColumn columnNotGoodComments;
            
            private DataColumn columnSuggestionForImprovement;
            
            private DataColumn columnComment;
            
            private DataColumn columnSOPHumanFactorListsRowId;
            
            private DataColumn columnSOPLockOutListsRowId;
            
            private DataColumn columnSOPPermitToWorkListsRowId;
            
            private DataColumn columnSOPPersonalProtectiveEquipmentListsRowId;
            
            private DataColumn columnSOPProceduresAndInstructionListsRowId;
            
            private DataColumn columnSOPToolsAndEquipmentListsRowId;
            
            private DataColumn columnSOPTypeOfObservationListsRowId;
            
            private DataColumn columnWorkAreaListsRowId;
            
            private DataColumn columnrowguid;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GASafetyObservationDataTable() : 
                    base("GASafetyObservation") {
                this.InitClass();
            }
            
            internal GASafetyObservationDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn SafetyObservationRowIdColumn {
                get {
                    return this.columnSafetyObservationRowId;
                }
            }
            
            internal DataColumn DateOfInspectionColumn {
                get {
                    return this.columnDateOfInspection;
                }
            }
            
            internal DataColumn SafetyObservationReferenceIdColumn {
                get {
                    return this.columnSafetyObservationReferenceId;
                }
            }
            
            internal DataColumn ObserverColumn {
                get {
                    return this.columnObserver;
                }
            }
            
            internal DataColumn ActivityObservedColumn {
                get {
                    return this.columnActivityObserved;
                }
            }
            
            internal DataColumn SOPProcedureColumn {
                get {
                    return this.columnSOPProcedure;
                }
            }
            
            internal DataColumn ProcedureNotAvailableColumn {
                get {
                    return this.columnProcedureNotAvailable;
                }
            }
            
            internal DataColumn NotGoodCommentsColumn {
                get {
                    return this.columnNotGoodComments;
                }
            }
            
            internal DataColumn SuggestionForImprovementColumn {
                get {
                    return this.columnSuggestionForImprovement;
                }
            }
            
            internal DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            internal DataColumn SOPHumanFactorListsRowIdColumn {
                get {
                    return this.columnSOPHumanFactorListsRowId;
                }
            }
            
            internal DataColumn SOPLockOutListsRowIdColumn {
                get {
                    return this.columnSOPLockOutListsRowId;
                }
            }
            
            internal DataColumn SOPPermitToWorkListsRowIdColumn {
                get {
                    return this.columnSOPPermitToWorkListsRowId;
                }
            }
            
            internal DataColumn SOPPersonalProtectiveEquipmentListsRowIdColumn {
                get {
                    return this.columnSOPPersonalProtectiveEquipmentListsRowId;
                }
            }
            
            internal DataColumn SOPProceduresAndInstructionListsRowIdColumn {
                get {
                    return this.columnSOPProceduresAndInstructionListsRowId;
                }
            }
            
            internal DataColumn SOPToolsAndEquipmentListsRowIdColumn {
                get {
                    return this.columnSOPToolsAndEquipmentListsRowId;
                }
            }
            
            internal DataColumn SOPTypeOfObservationListsRowIdColumn {
                get {
                    return this.columnSOPTypeOfObservationListsRowId;
                }
            }
            
            internal DataColumn WorkAreaListsRowIdColumn {
                get {
                    return this.columnWorkAreaListsRowId;
                }
            }
            
            internal DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GASafetyObservationRow this[int index] {
                get {
                    return ((GASafetyObservationRow)(this.Rows[index]));
                }
            }
            
            public event GASafetyObservationRowChangeEventHandler GASafetyObservationRowChanged;
            
            public event GASafetyObservationRowChangeEventHandler GASafetyObservationRowChanging;
            
            public event GASafetyObservationRowChangeEventHandler GASafetyObservationRowDeleted;
            
            public event GASafetyObservationRowChangeEventHandler GASafetyObservationRowDeleting;
            
            public void AddGASafetyObservationRow(GASafetyObservationRow row) {
                this.Rows.Add(row);
            }
            
            public GASafetyObservationRow AddGASafetyObservationRow(
                        System.DateTime DateOfInspection, 
                        string SafetyObservationReferenceId, 
                        string Observer, 
                        string ActivityObserved, 
                        string SOPProcedure, 
                        bool ProcedureNotAvailable, 
                        string NotGoodComments, 
                        string SuggestionForImprovement, 
                        string Comment, 
                        string SOPHumanFactorListsRowId, 
                        string SOPLockOutListsRowId, 
                        string SOPPermitToWorkListsRowId, 
                        string SOPPersonalProtectiveEquipmentListsRowId, 
                        string SOPProceduresAndInstructionListsRowId, 
                        string SOPToolsAndEquipmentListsRowId, 
                        string SOPTypeOfObservationListsRowId, 
                        string WorkAreaListsRowId, 
                        System.Guid rowguid, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GASafetyObservationRow rowGASafetyObservationRow = ((GASafetyObservationRow)(this.NewRow()));
                rowGASafetyObservationRow.ItemArray = new object[] {
                        null,
                        DateOfInspection,
                        SafetyObservationReferenceId,
                        Observer,
                        ActivityObserved,
                        SOPProcedure,
                        ProcedureNotAvailable,
                        NotGoodComments,
                        SuggestionForImprovement,
                        Comment,
                        SOPHumanFactorListsRowId,
                        SOPLockOutListsRowId,
                        SOPPermitToWorkListsRowId,
                        SOPPersonalProtectiveEquipmentListsRowId,
                        SOPProceduresAndInstructionListsRowId,
                        SOPToolsAndEquipmentListsRowId,
                        SOPTypeOfObservationListsRowId,
                        WorkAreaListsRowId,
                        rowguid,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGASafetyObservationRow);
                return rowGASafetyObservationRow;
            }
            
            public GASafetyObservationRow FindBySafetyObservationRowId(int SafetyObservationRowId) {
                return ((GASafetyObservationRow)(this.Rows.Find(new object[] {
                            SafetyObservationRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GASafetyObservationDataTable cln = ((GASafetyObservationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GASafetyObservationDataTable();
            }
            
            internal void InitVars() {
                this.columnSafetyObservationRowId = this.Columns["SafetyObservationRowId"];
                this.columnDateOfInspection = this.Columns["DateOfInspection"];
                this.columnSafetyObservationReferenceId = this.Columns["SafetyObservationReferenceId"];
                this.columnObserver = this.Columns["Observer"];
                this.columnActivityObserved = this.Columns["ActivityObserved"];
                this.columnSOPProcedure = this.Columns["SOPProcedure"];
                this.columnProcedureNotAvailable = this.Columns["ProcedureNotAvailable"];
                this.columnNotGoodComments = this.Columns["NotGoodComments"];
                this.columnSuggestionForImprovement = this.Columns["SuggestionForImprovement"];
                this.columnComment = this.Columns["Comment"];
                this.columnSOPHumanFactorListsRowId = this.Columns["SOPHumanFactorListsRowId"];
                this.columnSOPLockOutListsRowId = this.Columns["SOPLockOutListsRowId"];
                this.columnSOPPermitToWorkListsRowId = this.Columns["SOPPermitToWorkListsRowId"];
                this.columnSOPPersonalProtectiveEquipmentListsRowId = this.Columns["SOPPersonalProtectiveEquipmentListsRowId"];
                this.columnSOPProceduresAndInstructionListsRowId = this.Columns["SOPProceduresAndInstructionListsRowId"];
                this.columnSOPToolsAndEquipmentListsRowId = this.Columns["SOPToolsAndEquipmentListsRowId"];
                this.columnSOPTypeOfObservationListsRowId = this.Columns["SOPTypeOfObservationListsRowId"];
                this.columnWorkAreaListsRowId = this.Columns["WorkAreaListsRowId"];
                this.columnrowguid = this.Columns["rowguid"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnSafetyObservationRowId = new DataColumn("SafetyObservationRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSafetyObservationRowId);
                this.columnDateOfInspection = new DataColumn("DateOfInspection", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateOfInspection);
                this.columnSafetyObservationReferenceId = new DataColumn("SafetyObservationReferenceId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSafetyObservationReferenceId);
                this.columnObserver = new DataColumn("Observer", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnObserver);
                this.columnActivityObserved = new DataColumn("ActivityObserved", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActivityObserved);
                this.columnSOPProcedure = new DataColumn("SOPProcedure", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPProcedure);
                this.columnProcedureNotAvailable = new DataColumn("ProcedureNotAvailable", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProcedureNotAvailable);
                this.columnNotGoodComments = new DataColumn("NotGoodComments", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNotGoodComments);
                this.columnSuggestionForImprovement = new DataColumn("SuggestionForImprovement", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSuggestionForImprovement);
                this.columnComment = new DataColumn("Comment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComment);
                this.columnSOPHumanFactorListsRowId = new DataColumn("SOPHumanFactorListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPHumanFactorListsRowId);
                this.columnSOPLockOutListsRowId = new DataColumn("SOPLockOutListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPLockOutListsRowId);
                this.columnSOPPermitToWorkListsRowId = new DataColumn("SOPPermitToWorkListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPPermitToWorkListsRowId);
                this.columnSOPPersonalProtectiveEquipmentListsRowId = new DataColumn("SOPPersonalProtectiveEquipmentListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPPersonalProtectiveEquipmentListsRowId);
                this.columnSOPProceduresAndInstructionListsRowId = new DataColumn("SOPProceduresAndInstructionListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPProceduresAndInstructionListsRowId);
                this.columnSOPToolsAndEquipmentListsRowId = new DataColumn("SOPToolsAndEquipmentListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPToolsAndEquipmentListsRowId);
                this.columnSOPTypeOfObservationListsRowId = new DataColumn("SOPTypeOfObservationListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPTypeOfObservationListsRowId);
                this.columnWorkAreaListsRowId = new DataColumn("WorkAreaListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWorkAreaListsRowId);
                this.columnrowguid = new DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnrowguid);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey15", new DataColumn[] {
                                this.columnSafetyObservationRowId}, true));
                this.columnSafetyObservationRowId.AutoIncrement = true;
                this.columnSafetyObservationRowId.AllowDBNull = false;
                this.columnSafetyObservationRowId.ReadOnly = true;
                this.columnSafetyObservationRowId.Unique = true;
            }
            
            public GASafetyObservationRow NewGASafetyObservationRow() {
                return ((GASafetyObservationRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GASafetyObservationRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GASafetyObservationRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GASafetyObservationRowChanged != null)) {
                    this.GASafetyObservationRowChanged(this, new GASafetyObservationRowChangeEvent(((GASafetyObservationRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GASafetyObservationRowChanging != null)) {
                    this.GASafetyObservationRowChanging(this, new GASafetyObservationRowChangeEvent(((GASafetyObservationRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GASafetyObservationRowDeleted != null)) {
                    this.GASafetyObservationRowDeleted(this, new GASafetyObservationRowChangeEvent(((GASafetyObservationRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GASafetyObservationRowDeleting != null)) {
                    this.GASafetyObservationRowDeleting(this, new GASafetyObservationRowChangeEvent(((GASafetyObservationRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGASafetyObservationRow(GASafetyObservationRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GASafetyObservationRow : DataRow {
            
            private GASafetyObservationDataTable tableGASafetyObservation;
            
            internal GASafetyObservationRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGASafetyObservation = ((GASafetyObservationDataTable)(this.Table));
            }
            
            public int SafetyObservationRowId {
                get {
                    return ((int)(this[this.tableGASafetyObservation.SafetyObservationRowIdColumn]));
                }
                set {
                    this[this.tableGASafetyObservation.SafetyObservationRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateOfInspection {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGASafetyObservation.DateOfInspectionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.DateOfInspectionColumn] = value;
                }
            }
            
            public string SafetyObservationReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.SafetyObservationReferenceIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SafetyObservationReferenceIdColumn] = value;
                }
            }
            
            public string Observer {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.ObserverColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.ObserverColumn] = value;
                }
            }
            
            public string ActivityObserved {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.ActivityObservedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.ActivityObservedColumn] = value;
                }
            }
            
            public string SOPProcedure {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.SOPProcedureColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPProcedureColumn] = value;
                }
            }
            
            public bool ProcedureNotAvailable {
                get {
                    try {
                        return ((bool)(this[this.tableGASafetyObservation.ProcedureNotAvailableColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.ProcedureNotAvailableColumn] = value;
                }
            }
            
            public string NotGoodComments {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.NotGoodCommentsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.NotGoodCommentsColumn] = value;
                }
            }
            
            public string SuggestionForImprovement {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.SuggestionForImprovementColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SuggestionForImprovementColumn] = value;
                }
            }
            
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.CommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.CommentColumn] = value;
                }
            }
            
            public string SOPHumanFactorListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.SOPHumanFactorListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPHumanFactorListsRowIdColumn] = value;
                }
            }
            
            public string SOPLockOutListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.SOPLockOutListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPLockOutListsRowIdColumn] = value;
                }
            }
            
            public string SOPPermitToWorkListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.SOPPermitToWorkListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPPermitToWorkListsRowIdColumn] = value;
                }
            }
            
            public string SOPPersonalProtectiveEquipmentListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.SOPPersonalProtectiveEquipmentListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPPersonalProtectiveEquipmentListsRowIdColumn] = value;
                }
            }
            
            public string SOPProceduresAndInstructionListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.SOPProceduresAndInstructionListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPProceduresAndInstructionListsRowIdColumn] = value;
                }
            }
            
            public string SOPToolsAndEquipmentListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.SOPToolsAndEquipmentListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPToolsAndEquipmentListsRowIdColumn] = value;
                }
            }
            
            public string SOPTypeOfObservationListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.SOPTypeOfObservationListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SOPTypeOfObservationListsRowIdColumn] = value;
                }
            }
            
            public string WorkAreaListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.WorkAreaListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.WorkAreaListsRowIdColumn] = value;
                }
            }
            
            public System.Guid rowguid {
                get {
                    try {
                        return ((System.Guid)(this[this.tableGASafetyObservation.rowguidColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.rowguidColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGASafetyObservation.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGASafetyObservation.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGASafetyObservation.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGASafetyObservation.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGASafetyObservation.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGASafetyObservation.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGASafetyObservation.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGASafetyObservation.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGASafetyObservation.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyObservation.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyObservation.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyObservation.IntFree3Column] = value;
                }
            }
            
            public bool IsDateOfInspectionNull() {
                return this.IsNull(this.tableGASafetyObservation.DateOfInspectionColumn);
            }
            
            public void SetDateOfInspectionNull() {
                this[this.tableGASafetyObservation.DateOfInspectionColumn] = System.Convert.DBNull;
            }
            
            public bool IsSafetyObservationReferenceIdNull() {
                return this.IsNull(this.tableGASafetyObservation.SafetyObservationReferenceIdColumn);
            }
            
            public void SetSafetyObservationReferenceIdNull() {
                this[this.tableGASafetyObservation.SafetyObservationReferenceIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsObserverNull() {
                return this.IsNull(this.tableGASafetyObservation.ObserverColumn);
            }
            
            public void SetObserverNull() {
                this[this.tableGASafetyObservation.ObserverColumn] = System.Convert.DBNull;
            }
            
            public bool IsActivityObservedNull() {
                return this.IsNull(this.tableGASafetyObservation.ActivityObservedColumn);
            }
            
            public void SetActivityObservedNull() {
                this[this.tableGASafetyObservation.ActivityObservedColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPProcedureNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPProcedureColumn);
            }
            
            public void SetSOPProcedureNull() {
                this[this.tableGASafetyObservation.SOPProcedureColumn] = System.Convert.DBNull;
            }
            
            public bool IsProcedureNotAvailableNull() {
                return this.IsNull(this.tableGASafetyObservation.ProcedureNotAvailableColumn);
            }
            
            public void SetProcedureNotAvailableNull() {
                this[this.tableGASafetyObservation.ProcedureNotAvailableColumn] = System.Convert.DBNull;
            }
            
            public bool IsNotGoodCommentsNull() {
                return this.IsNull(this.tableGASafetyObservation.NotGoodCommentsColumn);
            }
            
            public void SetNotGoodCommentsNull() {
                this[this.tableGASafetyObservation.NotGoodCommentsColumn] = System.Convert.DBNull;
            }
            
            public bool IsSuggestionForImprovementNull() {
                return this.IsNull(this.tableGASafetyObservation.SuggestionForImprovementColumn);
            }
            
            public void SetSuggestionForImprovementNull() {
                this[this.tableGASafetyObservation.SuggestionForImprovementColumn] = System.Convert.DBNull;
            }
            
            public bool IsCommentNull() {
                return this.IsNull(this.tableGASafetyObservation.CommentColumn);
            }
            
            public void SetCommentNull() {
                this[this.tableGASafetyObservation.CommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPHumanFactorListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPHumanFactorListsRowIdColumn);
            }
            
            public void SetSOPHumanFactorListsRowIdNull() {
                this[this.tableGASafetyObservation.SOPHumanFactorListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPLockOutListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPLockOutListsRowIdColumn);
            }
            
            public void SetSOPLockOutListsRowIdNull() {
                this[this.tableGASafetyObservation.SOPLockOutListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPPermitToWorkListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPPermitToWorkListsRowIdColumn);
            }
            
            public void SetSOPPermitToWorkListsRowIdNull() {
                this[this.tableGASafetyObservation.SOPPermitToWorkListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPPersonalProtectiveEquipmentListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPPersonalProtectiveEquipmentListsRowIdColumn);
            }
            
            public void SetSOPPersonalProtectiveEquipmentListsRowIdNull() {
                this[this.tableGASafetyObservation.SOPPersonalProtectiveEquipmentListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPProceduresAndInstructionListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPProceduresAndInstructionListsRowIdColumn);
            }
            
            public void SetSOPProceduresAndInstructionListsRowIdNull() {
                this[this.tableGASafetyObservation.SOPProceduresAndInstructionListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPToolsAndEquipmentListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPToolsAndEquipmentListsRowIdColumn);
            }
            
            public void SetSOPToolsAndEquipmentListsRowIdNull() {
                this[this.tableGASafetyObservation.SOPToolsAndEquipmentListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPTypeOfObservationListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.SOPTypeOfObservationListsRowIdColumn);
            }
            
            public void SetSOPTypeOfObservationListsRowIdNull() {
                this[this.tableGASafetyObservation.SOPTypeOfObservationListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsWorkAreaListsRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.WorkAreaListsRowIdColumn);
            }
            
            public void SetWorkAreaListsRowIdNull() {
                this[this.tableGASafetyObservation.WorkAreaListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGASafetyObservation.rowguidColumn);
            }
            
            public void SetrowguidNull() {
                this[this.tableGASafetyObservation.rowguidColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGASafetyObservation.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGASafetyObservation.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGASafetyObservation.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGASafetyObservation.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGASafetyObservation.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGASafetyObservation.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGASafetyObservation.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGASafetyObservation.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGASafetyObservation.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGASafetyObservation.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGASafetyObservation.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGASafetyObservation.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGASafetyObservation.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGASafetyObservation.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGASafetyObservation.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGASafetyObservation.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGASafetyObservation.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGASafetyObservation.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGASafetyObservation.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGASafetyObservation.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGASafetyObservation.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGASafetyObservation.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGASafetyObservation.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGASafetyObservation.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGASafetyObservation.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGASafetyObservation.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGASafetyObservation.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGASafetyObservation.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGASafetyObservation.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGASafetyObservation.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGASafetyObservation.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGASafetyObservation.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGASafetyObservation.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGASafetyObservation.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGASafetyObservation.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGASafetyObservation.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGASafetyObservation.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGASafetyObservation.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GASafetyObservationRowChangeEvent : EventArgs {
            
            private GASafetyObservationRow eventRow;
            
            private DataRowAction eventAction;
            
            public GASafetyObservationRowChangeEvent(GASafetyObservationRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GASafetyObservationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GADailyEmployeeCountViewDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnpath;
            
            private DataColumn columnownerclass;
            
            private DataColumn columnownername;
            
            private DataColumn columnOwnerClassRowId;
            
            private DataColumn columnDailyEmployeeCountRowId;
            
            private DataColumn columnDailyEmployeeCountReferenceId;
            
            private DataColumn columnLocationOfWork;
            
            private DataColumn columnReportDate;
            
            private DataColumn columnComment;
            
            private DataColumn columnSeismicPersonnelCount;
            
            private DataColumn columnMarinePersonnelCount;
            
            private DataColumn columnThirdPartyPersonnelCount;
            
            private DataColumn columnOfficePersonnelCount;
            
            private DataColumn columnClientPersonnelCount;
            
            private DataColumn columnDailyEmployeeCountComment;
            
            private DataColumn columnCetaceansCount;
            
            private DataColumn columnCetaceansCountComment;
            
            private DataColumn columnCrewBoatActivitiesCountComment;
            
            private DataColumn columnCrewBoatActivitiesCount;
            
            private DataColumn columnMaritimeIcidentAndIllnessCount;
            
            private DataColumn columnMaritimeIcidentAndIllnessCountComment;
            
            private DataColumn columnOwnIncidentAndIllnessCount;
            
            private DataColumn columnOwnIncidentAndIllnessCountComment;
            
            private DataColumn columnHIPCardUnsafeActsCount;
            
            private DataColumn columnHIPCardUnsafeActsCountComment;
            
            private DataColumn columnHIPCardNearMissesCount;
            
            private DataColumn columnHIPCardNearMissesCountComment;
            
            private DataColumn columnCrewSafetyMeetingsCount;
            
            private DataColumn columnCrewSafetyMeetingsCountComment;
            
            private DataColumn columnToolboxMeetingsCount;
            
            private DataColumn columnToolboxMeetingsCountComment;
            
            private DataColumn columnSafetyDrillsCountComment;
            
            private DataColumn columnSafetyDrillsCount;
            
            private DataColumn columnSOPDepartmentalInspectionsCount;
            
            private DataColumn columnSOPDepartmentalInspectionsCountComment;
            
            private DataColumn columnSOPCrossDepartmentalInspectionsCount;
            
            private DataColumn columnSOPCrossDepartmentalInspectionsCountComment;
            
            private DataColumn columnSOPPartyChiefInspectionsCount;
            
            private DataColumn columnSOPPartyChiefInspectionsCountComment;
            
            private DataColumn columnAOBComment;
            
            private DataColumn columnManHours;
            
            private DataColumn columnProjectManHours;
            
            private DataColumn columnYesNoSafetyEventListsRowId;
            
            internal GADailyEmployeeCountViewDataTable() : 
                    base("GADailyEmployeeCountView") {
                this.InitClass();
            }
            
            internal GADailyEmployeeCountViewDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn pathColumn {
                get {
                    return this.columnpath;
                }
            }
            
            internal DataColumn ownerclassColumn {
                get {
                    return this.columnownerclass;
                }
            }
            
            internal DataColumn ownernameColumn {
                get {
                    return this.columnownername;
                }
            }
            
            internal DataColumn OwnerClassRowIdColumn {
                get {
                    return this.columnOwnerClassRowId;
                }
            }
            
            internal DataColumn DailyEmployeeCountRowIdColumn {
                get {
                    return this.columnDailyEmployeeCountRowId;
                }
            }
            
            internal DataColumn DailyEmployeeCountReferenceIdColumn {
                get {
                    return this.columnDailyEmployeeCountReferenceId;
                }
            }
            
            internal DataColumn LocationOfWorkColumn {
                get {
                    return this.columnLocationOfWork;
                }
            }
            
            internal DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            internal DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            internal DataColumn SeismicPersonnelCountColumn {
                get {
                    return this.columnSeismicPersonnelCount;
                }
            }
            
            internal DataColumn MarinePersonnelCountColumn {
                get {
                    return this.columnMarinePersonnelCount;
                }
            }
            
            internal DataColumn ThirdPartyPersonnelCountColumn {
                get {
                    return this.columnThirdPartyPersonnelCount;
                }
            }
            
            internal DataColumn OfficePersonnelCountColumn {
                get {
                    return this.columnOfficePersonnelCount;
                }
            }
            
            internal DataColumn ClientPersonnelCountColumn {
                get {
                    return this.columnClientPersonnelCount;
                }
            }
            
            internal DataColumn DailyEmployeeCountCommentColumn {
                get {
                    return this.columnDailyEmployeeCountComment;
                }
            }
            
            internal DataColumn CetaceansCountColumn {
                get {
                    return this.columnCetaceansCount;
                }
            }
            
            internal DataColumn CetaceansCountCommentColumn {
                get {
                    return this.columnCetaceansCountComment;
                }
            }
            
            internal DataColumn CrewBoatActivitiesCountCommentColumn {
                get {
                    return this.columnCrewBoatActivitiesCountComment;
                }
            }
            
            internal DataColumn CrewBoatActivitiesCountColumn {
                get {
                    return this.columnCrewBoatActivitiesCount;
                }
            }
            
            internal DataColumn MaritimeIcidentAndIllnessCountColumn {
                get {
                    return this.columnMaritimeIcidentAndIllnessCount;
                }
            }
            
            internal DataColumn MaritimeIcidentAndIllnessCountCommentColumn {
                get {
                    return this.columnMaritimeIcidentAndIllnessCountComment;
                }
            }
            
            internal DataColumn OwnIncidentAndIllnessCountColumn {
                get {
                    return this.columnOwnIncidentAndIllnessCount;
                }
            }
            
            internal DataColumn OwnIncidentAndIllnessCountCommentColumn {
                get {
                    return this.columnOwnIncidentAndIllnessCountComment;
                }
            }
            
            internal DataColumn HIPCardUnsafeActsCountColumn {
                get {
                    return this.columnHIPCardUnsafeActsCount;
                }
            }
            
            internal DataColumn HIPCardUnsafeActsCountCommentColumn {
                get {
                    return this.columnHIPCardUnsafeActsCountComment;
                }
            }
            
            internal DataColumn HIPCardNearMissesCountColumn {
                get {
                    return this.columnHIPCardNearMissesCount;
                }
            }
            
            internal DataColumn HIPCardNearMissesCountCommentColumn {
                get {
                    return this.columnHIPCardNearMissesCountComment;
                }
            }
            
            internal DataColumn CrewSafetyMeetingsCountColumn {
                get {
                    return this.columnCrewSafetyMeetingsCount;
                }
            }
            
            internal DataColumn CrewSafetyMeetingsCountCommentColumn {
                get {
                    return this.columnCrewSafetyMeetingsCountComment;
                }
            }
            
            internal DataColumn ToolboxMeetingsCountColumn {
                get {
                    return this.columnToolboxMeetingsCount;
                }
            }
            
            internal DataColumn ToolboxMeetingsCountCommentColumn {
                get {
                    return this.columnToolboxMeetingsCountComment;
                }
            }
            
            internal DataColumn SafetyDrillsCountCommentColumn {
                get {
                    return this.columnSafetyDrillsCountComment;
                }
            }
            
            internal DataColumn SafetyDrillsCountColumn {
                get {
                    return this.columnSafetyDrillsCount;
                }
            }
            
            internal DataColumn SOPDepartmentalInspectionsCountColumn {
                get {
                    return this.columnSOPDepartmentalInspectionsCount;
                }
            }
            
            internal DataColumn SOPDepartmentalInspectionsCountCommentColumn {
                get {
                    return this.columnSOPDepartmentalInspectionsCountComment;
                }
            }
            
            internal DataColumn SOPCrossDepartmentalInspectionsCountColumn {
                get {
                    return this.columnSOPCrossDepartmentalInspectionsCount;
                }
            }
            
            internal DataColumn SOPCrossDepartmentalInspectionsCountCommentColumn {
                get {
                    return this.columnSOPCrossDepartmentalInspectionsCountComment;
                }
            }
            
            internal DataColumn SOPPartyChiefInspectionsCountColumn {
                get {
                    return this.columnSOPPartyChiefInspectionsCount;
                }
            }
            
            internal DataColumn SOPPartyChiefInspectionsCountCommentColumn {
                get {
                    return this.columnSOPPartyChiefInspectionsCountComment;
                }
            }
            
            internal DataColumn AOBCommentColumn {
                get {
                    return this.columnAOBComment;
                }
            }
            
            internal DataColumn ManHoursColumn {
                get {
                    return this.columnManHours;
                }
            }
            
            internal DataColumn ProjectManHoursColumn {
                get {
                    return this.columnProjectManHours;
                }
            }
            
            internal DataColumn YesNoSafetyEventListsRowIdColumn {
                get {
                    return this.columnYesNoSafetyEventListsRowId;
                }
            }
            
            public GADailyEmployeeCountViewRow this[int index] {
                get {
                    return ((GADailyEmployeeCountViewRow)(this.Rows[index]));
                }
            }
            
            public event GADailyEmployeeCountViewRowChangeEventHandler GADailyEmployeeCountViewRowChanged;
            
            public event GADailyEmployeeCountViewRowChangeEventHandler GADailyEmployeeCountViewRowChanging;
            
            public event GADailyEmployeeCountViewRowChangeEventHandler GADailyEmployeeCountViewRowDeleted;
            
            public event GADailyEmployeeCountViewRowChangeEventHandler GADailyEmployeeCountViewRowDeleting;
            
            public void AddGADailyEmployeeCountViewRow(GADailyEmployeeCountViewRow row) {
                this.Rows.Add(row);
            }
            
            public GADailyEmployeeCountViewRow AddGADailyEmployeeCountViewRow(
                        string path, 
                        string ownerclass, 
                        string ownername, 
                        int OwnerClassRowId, 
                        string DailyEmployeeCountReferenceId, 
                        string LocationOfWork, 
                        System.DateTime ReportDate, 
                        string Comment, 
                        int SeismicPersonnelCount, 
                        int MarinePersonnelCount, 
                        int ThirdPartyPersonnelCount, 
                        int OfficePersonnelCount, 
                        int ClientPersonnelCount, 
                        string DailyEmployeeCountComment, 
                        int CetaceansCount, 
                        string CetaceansCountComment, 
                        string CrewBoatActivitiesCountComment, 
                        int CrewBoatActivitiesCount, 
                        int MaritimeIcidentAndIllnessCount, 
                        string MaritimeIcidentAndIllnessCountComment, 
                        int OwnIncidentAndIllnessCount, 
                        string OwnIncidentAndIllnessCountComment, 
                        int HIPCardUnsafeActsCount, 
                        string HIPCardUnsafeActsCountComment, 
                        int HIPCardNearMissesCount, 
                        string HIPCardNearMissesCountComment, 
                        int CrewSafetyMeetingsCount, 
                        string CrewSafetyMeetingsCountComment, 
                        int ToolboxMeetingsCount, 
                        string ToolboxMeetingsCountComment, 
                        string SafetyDrillsCountComment, 
                        int SafetyDrillsCount, 
                        int SOPDepartmentalInspectionsCount, 
                        string SOPDepartmentalInspectionsCountComment, 
                        int SOPCrossDepartmentalInspectionsCount, 
                        string SOPCrossDepartmentalInspectionsCountComment, 
                        int SOPPartyChiefInspectionsCount, 
                        string SOPPartyChiefInspectionsCountComment, 
                        string AOBComment, 
                        int ManHours, 
                        int ProjectManHours, 
                        int YesNoSafetyEventListsRowId) {
                GADailyEmployeeCountViewRow rowGADailyEmployeeCountViewRow = ((GADailyEmployeeCountViewRow)(this.NewRow()));
                rowGADailyEmployeeCountViewRow.ItemArray = new object[] {
                        path,
                        ownerclass,
                        ownername,
                        OwnerClassRowId,
                        null,
                        DailyEmployeeCountReferenceId,
                        LocationOfWork,
                        ReportDate,
                        Comment,
                        SeismicPersonnelCount,
                        MarinePersonnelCount,
                        ThirdPartyPersonnelCount,
                        OfficePersonnelCount,
                        ClientPersonnelCount,
                        DailyEmployeeCountComment,
                        CetaceansCount,
                        CetaceansCountComment,
                        CrewBoatActivitiesCountComment,
                        CrewBoatActivitiesCount,
                        MaritimeIcidentAndIllnessCount,
                        MaritimeIcidentAndIllnessCountComment,
                        OwnIncidentAndIllnessCount,
                        OwnIncidentAndIllnessCountComment,
                        HIPCardUnsafeActsCount,
                        HIPCardUnsafeActsCountComment,
                        HIPCardNearMissesCount,
                        HIPCardNearMissesCountComment,
                        CrewSafetyMeetingsCount,
                        CrewSafetyMeetingsCountComment,
                        ToolboxMeetingsCount,
                        ToolboxMeetingsCountComment,
                        SafetyDrillsCountComment,
                        SafetyDrillsCount,
                        SOPDepartmentalInspectionsCount,
                        SOPDepartmentalInspectionsCountComment,
                        SOPCrossDepartmentalInspectionsCount,
                        SOPCrossDepartmentalInspectionsCountComment,
                        SOPPartyChiefInspectionsCount,
                        SOPPartyChiefInspectionsCountComment,
                        AOBComment,
                        ManHours,
                        ProjectManHours,
                        YesNoSafetyEventListsRowId};
                this.Rows.Add(rowGADailyEmployeeCountViewRow);
                return rowGADailyEmployeeCountViewRow;
            }
            
            public GADailyEmployeeCountViewRow FindByDailyEmployeeCountRowId(int DailyEmployeeCountRowId) {
                return ((GADailyEmployeeCountViewRow)(this.Rows.Find(new object[] {
                            DailyEmployeeCountRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GADailyEmployeeCountViewDataTable cln = ((GADailyEmployeeCountViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GADailyEmployeeCountViewDataTable();
            }
            
            internal void InitVars() {
                this.columnpath = this.Columns["path"];
                this.columnownerclass = this.Columns["ownerclass"];
                this.columnownername = this.Columns["ownername"];
                this.columnOwnerClassRowId = this.Columns["OwnerClassRowId"];
                this.columnDailyEmployeeCountRowId = this.Columns["DailyEmployeeCountRowId"];
                this.columnDailyEmployeeCountReferenceId = this.Columns["DailyEmployeeCountReferenceId"];
                this.columnLocationOfWork = this.Columns["LocationOfWork"];
                this.columnReportDate = this.Columns["ReportDate"];
                this.columnComment = this.Columns["Comment"];
                this.columnSeismicPersonnelCount = this.Columns["SeismicPersonnelCount"];
                this.columnMarinePersonnelCount = this.Columns["MarinePersonnelCount"];
                this.columnThirdPartyPersonnelCount = this.Columns["ThirdPartyPersonnelCount"];
                this.columnOfficePersonnelCount = this.Columns["OfficePersonnelCount"];
                this.columnClientPersonnelCount = this.Columns["ClientPersonnelCount"];
                this.columnDailyEmployeeCountComment = this.Columns["DailyEmployeeCountComment"];
                this.columnCetaceansCount = this.Columns["CetaceansCount"];
                this.columnCetaceansCountComment = this.Columns["CetaceansCountComment"];
                this.columnCrewBoatActivitiesCountComment = this.Columns["CrewBoatActivitiesCountComment"];
                this.columnCrewBoatActivitiesCount = this.Columns["CrewBoatActivitiesCount"];
                this.columnMaritimeIcidentAndIllnessCount = this.Columns["MaritimeIcidentAndIllnessCount"];
                this.columnMaritimeIcidentAndIllnessCountComment = this.Columns["MaritimeIcidentAndIllnessCountComment"];
                this.columnOwnIncidentAndIllnessCount = this.Columns["OwnIncidentAndIllnessCount"];
                this.columnOwnIncidentAndIllnessCountComment = this.Columns["OwnIncidentAndIllnessCountComment"];
                this.columnHIPCardUnsafeActsCount = this.Columns["HIPCardUnsafeActsCount"];
                this.columnHIPCardUnsafeActsCountComment = this.Columns["HIPCardUnsafeActsCountComment"];
                this.columnHIPCardNearMissesCount = this.Columns["HIPCardNearMissesCount"];
                this.columnHIPCardNearMissesCountComment = this.Columns["HIPCardNearMissesCountComment"];
                this.columnCrewSafetyMeetingsCount = this.Columns["CrewSafetyMeetingsCount"];
                this.columnCrewSafetyMeetingsCountComment = this.Columns["CrewSafetyMeetingsCountComment"];
                this.columnToolboxMeetingsCount = this.Columns["ToolboxMeetingsCount"];
                this.columnToolboxMeetingsCountComment = this.Columns["ToolboxMeetingsCountComment"];
                this.columnSafetyDrillsCountComment = this.Columns["SafetyDrillsCountComment"];
                this.columnSafetyDrillsCount = this.Columns["SafetyDrillsCount"];
                this.columnSOPDepartmentalInspectionsCount = this.Columns["SOPDepartmentalInspectionsCount"];
                this.columnSOPDepartmentalInspectionsCountComment = this.Columns["SOPDepartmentalInspectionsCountComment"];
                this.columnSOPCrossDepartmentalInspectionsCount = this.Columns["SOPCrossDepartmentalInspectionsCount"];
                this.columnSOPCrossDepartmentalInspectionsCountComment = this.Columns["SOPCrossDepartmentalInspectionsCountComment"];
                this.columnSOPPartyChiefInspectionsCount = this.Columns["SOPPartyChiefInspectionsCount"];
                this.columnSOPPartyChiefInspectionsCountComment = this.Columns["SOPPartyChiefInspectionsCountComment"];
                this.columnAOBComment = this.Columns["AOBComment"];
                this.columnManHours = this.Columns["ManHours"];
                this.columnProjectManHours = this.Columns["ProjectManHours"];
                this.columnYesNoSafetyEventListsRowId = this.Columns["YesNoSafetyEventListsRowId"];
            }
            
            private void InitClass() {
                this.columnpath = new DataColumn("path", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnpath);
                this.columnownerclass = new DataColumn("ownerclass", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnownerclass);
                this.columnownername = new DataColumn("ownername", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnownername);
                this.columnOwnerClassRowId = new DataColumn("OwnerClassRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOwnerClassRowId);
                this.columnDailyEmployeeCountRowId = new DataColumn("DailyEmployeeCountRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDailyEmployeeCountRowId);
                this.columnDailyEmployeeCountReferenceId = new DataColumn("DailyEmployeeCountReferenceId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDailyEmployeeCountReferenceId);
                this.columnLocationOfWork = new DataColumn("LocationOfWork", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLocationOfWork);
                this.columnReportDate = new DataColumn("ReportDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReportDate);
                this.columnComment = new DataColumn("Comment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComment);
                this.columnSeismicPersonnelCount = new DataColumn("SeismicPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSeismicPersonnelCount);
                this.columnMarinePersonnelCount = new DataColumn("MarinePersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMarinePersonnelCount);
                this.columnThirdPartyPersonnelCount = new DataColumn("ThirdPartyPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnThirdPartyPersonnelCount);
                this.columnOfficePersonnelCount = new DataColumn("OfficePersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOfficePersonnelCount);
                this.columnClientPersonnelCount = new DataColumn("ClientPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientPersonnelCount);
                this.columnDailyEmployeeCountComment = new DataColumn("DailyEmployeeCountComment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDailyEmployeeCountComment);
                this.columnCetaceansCount = new DataColumn("CetaceansCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCetaceansCount);
                this.columnCetaceansCountComment = new DataColumn("CetaceansCountComment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCetaceansCountComment);
                this.columnCrewBoatActivitiesCountComment = new DataColumn("CrewBoatActivitiesCountComment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCrewBoatActivitiesCountComment);
                this.columnCrewBoatActivitiesCount = new DataColumn("CrewBoatActivitiesCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCrewBoatActivitiesCount);
                this.columnMaritimeIcidentAndIllnessCount = new DataColumn("MaritimeIcidentAndIllnessCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaritimeIcidentAndIllnessCount);
                this.columnMaritimeIcidentAndIllnessCountComment = new DataColumn("MaritimeIcidentAndIllnessCountComment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaritimeIcidentAndIllnessCountComment);
                this.columnOwnIncidentAndIllnessCount = new DataColumn("OwnIncidentAndIllnessCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOwnIncidentAndIllnessCount);
                this.columnOwnIncidentAndIllnessCountComment = new DataColumn("OwnIncidentAndIllnessCountComment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOwnIncidentAndIllnessCountComment);
                this.columnHIPCardUnsafeActsCount = new DataColumn("HIPCardUnsafeActsCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHIPCardUnsafeActsCount);
                this.columnHIPCardUnsafeActsCountComment = new DataColumn("HIPCardUnsafeActsCountComment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHIPCardUnsafeActsCountComment);
                this.columnHIPCardNearMissesCount = new DataColumn("HIPCardNearMissesCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHIPCardNearMissesCount);
                this.columnHIPCardNearMissesCountComment = new DataColumn("HIPCardNearMissesCountComment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHIPCardNearMissesCountComment);
                this.columnCrewSafetyMeetingsCount = new DataColumn("CrewSafetyMeetingsCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCrewSafetyMeetingsCount);
                this.columnCrewSafetyMeetingsCountComment = new DataColumn("CrewSafetyMeetingsCountComment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCrewSafetyMeetingsCountComment);
                this.columnToolboxMeetingsCount = new DataColumn("ToolboxMeetingsCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnToolboxMeetingsCount);
                this.columnToolboxMeetingsCountComment = new DataColumn("ToolboxMeetingsCountComment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnToolboxMeetingsCountComment);
                this.columnSafetyDrillsCountComment = new DataColumn("SafetyDrillsCountComment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSafetyDrillsCountComment);
                this.columnSafetyDrillsCount = new DataColumn("SafetyDrillsCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSafetyDrillsCount);
                this.columnSOPDepartmentalInspectionsCount = new DataColumn("SOPDepartmentalInspectionsCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPDepartmentalInspectionsCount);
                this.columnSOPDepartmentalInspectionsCountComment = new DataColumn("SOPDepartmentalInspectionsCountComment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPDepartmentalInspectionsCountComment);
                this.columnSOPCrossDepartmentalInspectionsCount = new DataColumn("SOPCrossDepartmentalInspectionsCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPCrossDepartmentalInspectionsCount);
                this.columnSOPCrossDepartmentalInspectionsCountComment = new DataColumn("SOPCrossDepartmentalInspectionsCountComment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPCrossDepartmentalInspectionsCountComment);
                this.columnSOPPartyChiefInspectionsCount = new DataColumn("SOPPartyChiefInspectionsCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPPartyChiefInspectionsCount);
                this.columnSOPPartyChiefInspectionsCountComment = new DataColumn("SOPPartyChiefInspectionsCountComment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPPartyChiefInspectionsCountComment);
                this.columnAOBComment = new DataColumn("AOBComment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAOBComment);
                this.columnManHours = new DataColumn("ManHours", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnManHours);
                this.columnProjectManHours = new DataColumn("ProjectManHours", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProjectManHours);
                this.columnYesNoSafetyEventListsRowId = new DataColumn("YesNoSafetyEventListsRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnYesNoSafetyEventListsRowId);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey16", new DataColumn[] {
                                this.columnDailyEmployeeCountRowId}, true));
                this.columnDailyEmployeeCountRowId.AutoIncrement = true;
                this.columnDailyEmployeeCountRowId.AllowDBNull = false;
                this.columnDailyEmployeeCountRowId.ReadOnly = true;
                this.columnDailyEmployeeCountRowId.Unique = true;
            }
            
            public GADailyEmployeeCountViewRow NewGADailyEmployeeCountViewRow() {
                return ((GADailyEmployeeCountViewRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GADailyEmployeeCountViewRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GADailyEmployeeCountViewRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GADailyEmployeeCountViewRowChanged != null)) {
                    this.GADailyEmployeeCountViewRowChanged(this, new GADailyEmployeeCountViewRowChangeEvent(((GADailyEmployeeCountViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GADailyEmployeeCountViewRowChanging != null)) {
                    this.GADailyEmployeeCountViewRowChanging(this, new GADailyEmployeeCountViewRowChangeEvent(((GADailyEmployeeCountViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GADailyEmployeeCountViewRowDeleted != null)) {
                    this.GADailyEmployeeCountViewRowDeleted(this, new GADailyEmployeeCountViewRowChangeEvent(((GADailyEmployeeCountViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GADailyEmployeeCountViewRowDeleting != null)) {
                    this.GADailyEmployeeCountViewRowDeleting(this, new GADailyEmployeeCountViewRowChangeEvent(((GADailyEmployeeCountViewRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGADailyEmployeeCountViewRow(GADailyEmployeeCountViewRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GADailyEmployeeCountViewRow : DataRow {
            
            private GADailyEmployeeCountViewDataTable tableGADailyEmployeeCountView;
            
            internal GADailyEmployeeCountViewRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGADailyEmployeeCountView = ((GADailyEmployeeCountViewDataTable)(this.Table));
            }
            
            public string path {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.pathColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.pathColumn] = value;
                }
            }
            
            public string ownerclass {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.ownerclassColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.ownerclassColumn] = value;
                }
            }
            
            public string ownername {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.ownernameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.ownernameColumn] = value;
                }
            }
            
            public int OwnerClassRowId {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.OwnerClassRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.OwnerClassRowIdColumn] = value;
                }
            }
            
            public int DailyEmployeeCountRowId {
                get {
                    return ((int)(this[this.tableGADailyEmployeeCountView.DailyEmployeeCountRowIdColumn]));
                }
                set {
                    this[this.tableGADailyEmployeeCountView.DailyEmployeeCountRowIdColumn] = value;
                }
            }
            
            public string DailyEmployeeCountReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.DailyEmployeeCountReferenceIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.DailyEmployeeCountReferenceIdColumn] = value;
                }
            }
            
            public string LocationOfWork {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.LocationOfWorkColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.LocationOfWorkColumn] = value;
                }
            }
            
            public System.DateTime ReportDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADailyEmployeeCountView.ReportDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.ReportDateColumn] = value;
                }
            }
            
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.CommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.CommentColumn] = value;
                }
            }
            
            public int SeismicPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.SeismicPersonnelCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.SeismicPersonnelCountColumn] = value;
                }
            }
            
            public int MarinePersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.MarinePersonnelCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.MarinePersonnelCountColumn] = value;
                }
            }
            
            public int ThirdPartyPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.ThirdPartyPersonnelCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.ThirdPartyPersonnelCountColumn] = value;
                }
            }
            
            public int OfficePersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.OfficePersonnelCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.OfficePersonnelCountColumn] = value;
                }
            }
            
            public int ClientPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.ClientPersonnelCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.ClientPersonnelCountColumn] = value;
                }
            }
            
            public string DailyEmployeeCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.DailyEmployeeCountCommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.DailyEmployeeCountCommentColumn] = value;
                }
            }
            
            public int CetaceansCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.CetaceansCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.CetaceansCountColumn] = value;
                }
            }
            
            public string CetaceansCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.CetaceansCountCommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.CetaceansCountCommentColumn] = value;
                }
            }
            
            public string CrewBoatActivitiesCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.CrewBoatActivitiesCountCommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.CrewBoatActivitiesCountCommentColumn] = value;
                }
            }
            
            public int CrewBoatActivitiesCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.CrewBoatActivitiesCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.CrewBoatActivitiesCountColumn] = value;
                }
            }
            
            public int MaritimeIcidentAndIllnessCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.MaritimeIcidentAndIllnessCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.MaritimeIcidentAndIllnessCountColumn] = value;
                }
            }
            
            public string MaritimeIcidentAndIllnessCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.MaritimeIcidentAndIllnessCountCommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.MaritimeIcidentAndIllnessCountCommentColumn] = value;
                }
            }
            
            public int OwnIncidentAndIllnessCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.OwnIncidentAndIllnessCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.OwnIncidentAndIllnessCountColumn] = value;
                }
            }
            
            public string OwnIncidentAndIllnessCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.OwnIncidentAndIllnessCountCommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.OwnIncidentAndIllnessCountCommentColumn] = value;
                }
            }
            
            public int HIPCardUnsafeActsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.HIPCardUnsafeActsCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.HIPCardUnsafeActsCountColumn] = value;
                }
            }
            
            public string HIPCardUnsafeActsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.HIPCardUnsafeActsCountCommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.HIPCardUnsafeActsCountCommentColumn] = value;
                }
            }
            
            public int HIPCardNearMissesCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.HIPCardNearMissesCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.HIPCardNearMissesCountColumn] = value;
                }
            }
            
            public string HIPCardNearMissesCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.HIPCardNearMissesCountCommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.HIPCardNearMissesCountCommentColumn] = value;
                }
            }
            
            public int CrewSafetyMeetingsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.CrewSafetyMeetingsCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.CrewSafetyMeetingsCountColumn] = value;
                }
            }
            
            public string CrewSafetyMeetingsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.CrewSafetyMeetingsCountCommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.CrewSafetyMeetingsCountCommentColumn] = value;
                }
            }
            
            public int ToolboxMeetingsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.ToolboxMeetingsCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.ToolboxMeetingsCountColumn] = value;
                }
            }
            
            public string ToolboxMeetingsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.ToolboxMeetingsCountCommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.ToolboxMeetingsCountCommentColumn] = value;
                }
            }
            
            public string SafetyDrillsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.SafetyDrillsCountCommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.SafetyDrillsCountCommentColumn] = value;
                }
            }
            
            public int SafetyDrillsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.SafetyDrillsCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.SafetyDrillsCountColumn] = value;
                }
            }
            
            public int SOPDepartmentalInspectionsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.SOPDepartmentalInspectionsCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.SOPDepartmentalInspectionsCountColumn] = value;
                }
            }
            
            public string SOPDepartmentalInspectionsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.SOPDepartmentalInspectionsCountCommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.SOPDepartmentalInspectionsCountCommentColumn] = value;
                }
            }
            
            public int SOPCrossDepartmentalInspectionsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.SOPCrossDepartmentalInspectionsCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.SOPCrossDepartmentalInspectionsCountColumn] = value;
                }
            }
            
            public string SOPCrossDepartmentalInspectionsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.SOPCrossDepartmentalInspectionsCountCommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.SOPCrossDepartmentalInspectionsCountCommentColumn] = value;
                }
            }
            
            public int SOPPartyChiefInspectionsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.SOPPartyChiefInspectionsCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.SOPPartyChiefInspectionsCountColumn] = value;
                }
            }
            
            public string SOPPartyChiefInspectionsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.SOPPartyChiefInspectionsCountCommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.SOPPartyChiefInspectionsCountCommentColumn] = value;
                }
            }
            
            public string AOBComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCountView.AOBCommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.AOBCommentColumn] = value;
                }
            }
            
            public int ManHours {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.ManHoursColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.ManHoursColumn] = value;
                }
            }
            
            public int ProjectManHours {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.ProjectManHoursColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.ProjectManHoursColumn] = value;
                }
            }
            
            public int YesNoSafetyEventListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCountView.YesNoSafetyEventListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCountView.YesNoSafetyEventListsRowIdColumn] = value;
                }
            }
            
            public bool IspathNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.pathColumn);
            }
            
            public void SetpathNull() {
                this[this.tableGADailyEmployeeCountView.pathColumn] = System.Convert.DBNull;
            }
            
            public bool IsownerclassNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.ownerclassColumn);
            }
            
            public void SetownerclassNull() {
                this[this.tableGADailyEmployeeCountView.ownerclassColumn] = System.Convert.DBNull;
            }
            
            public bool IsownernameNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.ownernameColumn);
            }
            
            public void SetownernameNull() {
                this[this.tableGADailyEmployeeCountView.ownernameColumn] = System.Convert.DBNull;
            }
            
            public bool IsOwnerClassRowIdNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.OwnerClassRowIdColumn);
            }
            
            public void SetOwnerClassRowIdNull() {
                this[this.tableGADailyEmployeeCountView.OwnerClassRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDailyEmployeeCountReferenceIdNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.DailyEmployeeCountReferenceIdColumn);
            }
            
            public void SetDailyEmployeeCountReferenceIdNull() {
                this[this.tableGADailyEmployeeCountView.DailyEmployeeCountReferenceIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsLocationOfWorkNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.LocationOfWorkColumn);
            }
            
            public void SetLocationOfWorkNull() {
                this[this.tableGADailyEmployeeCountView.LocationOfWorkColumn] = System.Convert.DBNull;
            }
            
            public bool IsReportDateNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.ReportDateColumn);
            }
            
            public void SetReportDateNull() {
                this[this.tableGADailyEmployeeCountView.ReportDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.CommentColumn);
            }
            
            public void SetCommentNull() {
                this[this.tableGADailyEmployeeCountView.CommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsSeismicPersonnelCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.SeismicPersonnelCountColumn);
            }
            
            public void SetSeismicPersonnelCountNull() {
                this[this.tableGADailyEmployeeCountView.SeismicPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsMarinePersonnelCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.MarinePersonnelCountColumn);
            }
            
            public void SetMarinePersonnelCountNull() {
                this[this.tableGADailyEmployeeCountView.MarinePersonnelCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsThirdPartyPersonnelCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.ThirdPartyPersonnelCountColumn);
            }
            
            public void SetThirdPartyPersonnelCountNull() {
                this[this.tableGADailyEmployeeCountView.ThirdPartyPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsOfficePersonnelCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.OfficePersonnelCountColumn);
            }
            
            public void SetOfficePersonnelCountNull() {
                this[this.tableGADailyEmployeeCountView.OfficePersonnelCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientPersonnelCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.ClientPersonnelCountColumn);
            }
            
            public void SetClientPersonnelCountNull() {
                this[this.tableGADailyEmployeeCountView.ClientPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsDailyEmployeeCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.DailyEmployeeCountCommentColumn);
            }
            
            public void SetDailyEmployeeCountCommentNull() {
                this[this.tableGADailyEmployeeCountView.DailyEmployeeCountCommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsCetaceansCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.CetaceansCountColumn);
            }
            
            public void SetCetaceansCountNull() {
                this[this.tableGADailyEmployeeCountView.CetaceansCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsCetaceansCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.CetaceansCountCommentColumn);
            }
            
            public void SetCetaceansCountCommentNull() {
                this[this.tableGADailyEmployeeCountView.CetaceansCountCommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsCrewBoatActivitiesCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.CrewBoatActivitiesCountCommentColumn);
            }
            
            public void SetCrewBoatActivitiesCountCommentNull() {
                this[this.tableGADailyEmployeeCountView.CrewBoatActivitiesCountCommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsCrewBoatActivitiesCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.CrewBoatActivitiesCountColumn);
            }
            
            public void SetCrewBoatActivitiesCountNull() {
                this[this.tableGADailyEmployeeCountView.CrewBoatActivitiesCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsMaritimeIcidentAndIllnessCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.MaritimeIcidentAndIllnessCountColumn);
            }
            
            public void SetMaritimeIcidentAndIllnessCountNull() {
                this[this.tableGADailyEmployeeCountView.MaritimeIcidentAndIllnessCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsMaritimeIcidentAndIllnessCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.MaritimeIcidentAndIllnessCountCommentColumn);
            }
            
            public void SetMaritimeIcidentAndIllnessCountCommentNull() {
                this[this.tableGADailyEmployeeCountView.MaritimeIcidentAndIllnessCountCommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsOwnIncidentAndIllnessCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.OwnIncidentAndIllnessCountColumn);
            }
            
            public void SetOwnIncidentAndIllnessCountNull() {
                this[this.tableGADailyEmployeeCountView.OwnIncidentAndIllnessCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsOwnIncidentAndIllnessCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.OwnIncidentAndIllnessCountCommentColumn);
            }
            
            public void SetOwnIncidentAndIllnessCountCommentNull() {
                this[this.tableGADailyEmployeeCountView.OwnIncidentAndIllnessCountCommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsHIPCardUnsafeActsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.HIPCardUnsafeActsCountColumn);
            }
            
            public void SetHIPCardUnsafeActsCountNull() {
                this[this.tableGADailyEmployeeCountView.HIPCardUnsafeActsCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsHIPCardUnsafeActsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.HIPCardUnsafeActsCountCommentColumn);
            }
            
            public void SetHIPCardUnsafeActsCountCommentNull() {
                this[this.tableGADailyEmployeeCountView.HIPCardUnsafeActsCountCommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsHIPCardNearMissesCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.HIPCardNearMissesCountColumn);
            }
            
            public void SetHIPCardNearMissesCountNull() {
                this[this.tableGADailyEmployeeCountView.HIPCardNearMissesCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsHIPCardNearMissesCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.HIPCardNearMissesCountCommentColumn);
            }
            
            public void SetHIPCardNearMissesCountCommentNull() {
                this[this.tableGADailyEmployeeCountView.HIPCardNearMissesCountCommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsCrewSafetyMeetingsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.CrewSafetyMeetingsCountColumn);
            }
            
            public void SetCrewSafetyMeetingsCountNull() {
                this[this.tableGADailyEmployeeCountView.CrewSafetyMeetingsCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsCrewSafetyMeetingsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.CrewSafetyMeetingsCountCommentColumn);
            }
            
            public void SetCrewSafetyMeetingsCountCommentNull() {
                this[this.tableGADailyEmployeeCountView.CrewSafetyMeetingsCountCommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsToolboxMeetingsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.ToolboxMeetingsCountColumn);
            }
            
            public void SetToolboxMeetingsCountNull() {
                this[this.tableGADailyEmployeeCountView.ToolboxMeetingsCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsToolboxMeetingsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.ToolboxMeetingsCountCommentColumn);
            }
            
            public void SetToolboxMeetingsCountCommentNull() {
                this[this.tableGADailyEmployeeCountView.ToolboxMeetingsCountCommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsSafetyDrillsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.SafetyDrillsCountCommentColumn);
            }
            
            public void SetSafetyDrillsCountCommentNull() {
                this[this.tableGADailyEmployeeCountView.SafetyDrillsCountCommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsSafetyDrillsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.SafetyDrillsCountColumn);
            }
            
            public void SetSafetyDrillsCountNull() {
                this[this.tableGADailyEmployeeCountView.SafetyDrillsCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPDepartmentalInspectionsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.SOPDepartmentalInspectionsCountColumn);
            }
            
            public void SetSOPDepartmentalInspectionsCountNull() {
                this[this.tableGADailyEmployeeCountView.SOPDepartmentalInspectionsCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPDepartmentalInspectionsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.SOPDepartmentalInspectionsCountCommentColumn);
            }
            
            public void SetSOPDepartmentalInspectionsCountCommentNull() {
                this[this.tableGADailyEmployeeCountView.SOPDepartmentalInspectionsCountCommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPCrossDepartmentalInspectionsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.SOPCrossDepartmentalInspectionsCountColumn);
            }
            
            public void SetSOPCrossDepartmentalInspectionsCountNull() {
                this[this.tableGADailyEmployeeCountView.SOPCrossDepartmentalInspectionsCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPCrossDepartmentalInspectionsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.SOPCrossDepartmentalInspectionsCountCommentColumn);
            }
            
            public void SetSOPCrossDepartmentalInspectionsCountCommentNull() {
                this[this.tableGADailyEmployeeCountView.SOPCrossDepartmentalInspectionsCountCommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPPartyChiefInspectionsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.SOPPartyChiefInspectionsCountColumn);
            }
            
            public void SetSOPPartyChiefInspectionsCountNull() {
                this[this.tableGADailyEmployeeCountView.SOPPartyChiefInspectionsCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPPartyChiefInspectionsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.SOPPartyChiefInspectionsCountCommentColumn);
            }
            
            public void SetSOPPartyChiefInspectionsCountCommentNull() {
                this[this.tableGADailyEmployeeCountView.SOPPartyChiefInspectionsCountCommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsAOBCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.AOBCommentColumn);
            }
            
            public void SetAOBCommentNull() {
                this[this.tableGADailyEmployeeCountView.AOBCommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsManHoursNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.ManHoursColumn);
            }
            
            public void SetManHoursNull() {
                this[this.tableGADailyEmployeeCountView.ManHoursColumn] = System.Convert.DBNull;
            }
            
            public bool IsProjectManHoursNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.ProjectManHoursColumn);
            }
            
            public void SetProjectManHoursNull() {
                this[this.tableGADailyEmployeeCountView.ProjectManHoursColumn] = System.Convert.DBNull;
            }
            
            public bool IsYesNoSafetyEventListsRowIdNull() {
                return this.IsNull(this.tableGADailyEmployeeCountView.YesNoSafetyEventListsRowIdColumn);
            }
            
            public void SetYesNoSafetyEventListsRowIdNull() {
                this[this.tableGADailyEmployeeCountView.YesNoSafetyEventListsRowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GADailyEmployeeCountViewRowChangeEvent : EventArgs {
            
            private GADailyEmployeeCountViewRow eventRow;
            
            private DataRowAction eventAction;
            
            public GADailyEmployeeCountViewRowChangeEvent(GADailyEmployeeCountViewRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GADailyEmployeeCountViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAIncidentReportCountViewDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIncidentReportRowId;
            
            private DataColumn columnReportDate;
            
            private DataColumn columnDateAndTimeOfIncident;
            
            private DataColumn columnGAListValue;
            
            private DataColumn columnNM;
            
            private DataColumn columnFAC;
            
            private DataColumn columnDET;
            
            private DataColumn columnENV;
            
            private DataColumn columnFAT;
            
            private DataColumn columnFIR;
            
            private DataColumn columnLTI;
            
            private DataColumn columnMTC;
            
            private DataColumn columnNMC;
            
            private DataColumn columnPIL;
            
            private DataColumn columnPPD;
            
            private DataColumn columnPTD;
            
            private DataColumn columnRWC;
            
            private DataColumn columnClassificationListsRowId;
            
            private DataColumn columnpath;
            
            private DataColumn columnownerclass;
            
            private DataColumn columnownername;
            
            private DataColumn columnOwnerClassRowId;
            
            internal GAIncidentReportCountViewDataTable() : 
                    base("GAIncidentReportCountView") {
                this.InitClass();
            }
            
            internal GAIncidentReportCountViewDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IncidentReportRowIdColumn {
                get {
                    return this.columnIncidentReportRowId;
                }
            }
            
            internal DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            internal DataColumn DateAndTimeOfIncidentColumn {
                get {
                    return this.columnDateAndTimeOfIncident;
                }
            }
            
            internal DataColumn GAListValueColumn {
                get {
                    return this.columnGAListValue;
                }
            }
            
            internal DataColumn NMColumn {
                get {
                    return this.columnNM;
                }
            }
            
            internal DataColumn FACColumn {
                get {
                    return this.columnFAC;
                }
            }
            
            internal DataColumn DETColumn {
                get {
                    return this.columnDET;
                }
            }
            
            internal DataColumn ENVColumn {
                get {
                    return this.columnENV;
                }
            }
            
            internal DataColumn FATColumn {
                get {
                    return this.columnFAT;
                }
            }
            
            internal DataColumn FIRColumn {
                get {
                    return this.columnFIR;
                }
            }
            
            internal DataColumn LTIColumn {
                get {
                    return this.columnLTI;
                }
            }
            
            internal DataColumn MTCColumn {
                get {
                    return this.columnMTC;
                }
            }
            
            internal DataColumn NMCColumn {
                get {
                    return this.columnNMC;
                }
            }
            
            internal DataColumn PILColumn {
                get {
                    return this.columnPIL;
                }
            }
            
            internal DataColumn PPDColumn {
                get {
                    return this.columnPPD;
                }
            }
            
            internal DataColumn PTDColumn {
                get {
                    return this.columnPTD;
                }
            }
            
            internal DataColumn RWCColumn {
                get {
                    return this.columnRWC;
                }
            }
            
            internal DataColumn ClassificationListsRowIdColumn {
                get {
                    return this.columnClassificationListsRowId;
                }
            }
            
            internal DataColumn pathColumn {
                get {
                    return this.columnpath;
                }
            }
            
            internal DataColumn ownerclassColumn {
                get {
                    return this.columnownerclass;
                }
            }
            
            internal DataColumn ownernameColumn {
                get {
                    return this.columnownername;
                }
            }
            
            internal DataColumn OwnerClassRowIdColumn {
                get {
                    return this.columnOwnerClassRowId;
                }
            }
            
            public GAIncidentReportCountViewRow this[int index] {
                get {
                    return ((GAIncidentReportCountViewRow)(this.Rows[index]));
                }
            }
            
            public event GAIncidentReportCountViewRowChangeEventHandler GAIncidentReportCountViewRowChanged;
            
            public event GAIncidentReportCountViewRowChangeEventHandler GAIncidentReportCountViewRowChanging;
            
            public event GAIncidentReportCountViewRowChangeEventHandler GAIncidentReportCountViewRowDeleted;
            
            public event GAIncidentReportCountViewRowChangeEventHandler GAIncidentReportCountViewRowDeleting;
            
            public void AddGAIncidentReportCountViewRow(GAIncidentReportCountViewRow row) {
                this.Rows.Add(row);
            }
            
            public GAIncidentReportCountViewRow AddGAIncidentReportCountViewRow(
                        System.DateTime ReportDate, 
                        System.DateTime DateAndTimeOfIncident, 
                        string GAListValue, 
                        int NM, 
                        int FAC, 
                        int DET, 
                        int ENV, 
                        int FAT, 
                        int FIR, 
                        int LTI, 
                        int MTC, 
                        int NMC, 
                        int PIL, 
                        int PPD, 
                        int PTD, 
                        int RWC, 
                        int ClassificationListsRowId, 
                        string path, 
                        string ownerclass, 
                        string ownername, 
                        int OwnerClassRowId) {
                GAIncidentReportCountViewRow rowGAIncidentReportCountViewRow = ((GAIncidentReportCountViewRow)(this.NewRow()));
                rowGAIncidentReportCountViewRow.ItemArray = new object[] {
                        null,
                        ReportDate,
                        DateAndTimeOfIncident,
                        GAListValue,
                        NM,
                        FAC,
                        DET,
                        ENV,
                        FAT,
                        FIR,
                        LTI,
                        MTC,
                        NMC,
                        PIL,
                        PPD,
                        PTD,
                        RWC,
                        ClassificationListsRowId,
                        path,
                        ownerclass,
                        ownername,
                        OwnerClassRowId};
                this.Rows.Add(rowGAIncidentReportCountViewRow);
                return rowGAIncidentReportCountViewRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAIncidentReportCountViewDataTable cln = ((GAIncidentReportCountViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAIncidentReportCountViewDataTable();
            }
            
            internal void InitVars() {
                this.columnIncidentReportRowId = this.Columns["IncidentReportRowId"];
                this.columnReportDate = this.Columns["ReportDate"];
                this.columnDateAndTimeOfIncident = this.Columns["DateAndTimeOfIncident"];
                this.columnGAListValue = this.Columns["GAListValue"];
                this.columnNM = this.Columns["NM"];
                this.columnFAC = this.Columns["FAC"];
                this.columnDET = this.Columns["DET"];
                this.columnENV = this.Columns["ENV"];
                this.columnFAT = this.Columns["FAT"];
                this.columnFIR = this.Columns["FIR"];
                this.columnLTI = this.Columns["LTI"];
                this.columnMTC = this.Columns["MTC"];
                this.columnNMC = this.Columns["NMC"];
                this.columnPIL = this.Columns["PIL"];
                this.columnPPD = this.Columns["PPD"];
                this.columnPTD = this.Columns["PTD"];
                this.columnRWC = this.Columns["RWC"];
                this.columnClassificationListsRowId = this.Columns["ClassificationListsRowId"];
                this.columnpath = this.Columns["path"];
                this.columnownerclass = this.Columns["ownerclass"];
                this.columnownername = this.Columns["ownername"];
                this.columnOwnerClassRowId = this.Columns["OwnerClassRowId"];
            }
            
            private void InitClass() {
                this.columnIncidentReportRowId = new DataColumn("IncidentReportRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIncidentReportRowId);
                this.columnReportDate = new DataColumn("ReportDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReportDate);
                this.columnDateAndTimeOfIncident = new DataColumn("DateAndTimeOfIncident", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateAndTimeOfIncident);
                this.columnGAListValue = new DataColumn("GAListValue", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGAListValue);
                this.columnNM = new DataColumn("NM", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNM);
                this.columnFAC = new DataColumn("FAC", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFAC);
                this.columnDET = new DataColumn("DET", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDET);
                this.columnENV = new DataColumn("ENV", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnENV);
                this.columnFAT = new DataColumn("FAT", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFAT);
                this.columnFIR = new DataColumn("FIR", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFIR);
                this.columnLTI = new DataColumn("LTI", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLTI);
                this.columnMTC = new DataColumn("MTC", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMTC);
                this.columnNMC = new DataColumn("NMC", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNMC);
                this.columnPIL = new DataColumn("PIL", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPIL);
                this.columnPPD = new DataColumn("PPD", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPPD);
                this.columnPTD = new DataColumn("PTD", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPTD);
                this.columnRWC = new DataColumn("RWC", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRWC);
                this.columnClassificationListsRowId = new DataColumn("ClassificationListsRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClassificationListsRowId);
                this.columnpath = new DataColumn("path", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnpath);
                this.columnownerclass = new DataColumn("ownerclass", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnownerclass);
                this.columnownername = new DataColumn("ownername", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnownername);
                this.columnOwnerClassRowId = new DataColumn("OwnerClassRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOwnerClassRowId);
                this.columnIncidentReportRowId.AutoIncrement = true;
                this.columnIncidentReportRowId.AllowDBNull = false;
                this.columnIncidentReportRowId.ReadOnly = true;
                this.columnNM.ReadOnly = true;
                this.columnFAC.ReadOnly = true;
                this.columnDET.ReadOnly = true;
                this.columnENV.ReadOnly = true;
                this.columnFAT.ReadOnly = true;
                this.columnFIR.ReadOnly = true;
                this.columnLTI.ReadOnly = true;
                this.columnMTC.ReadOnly = true;
                this.columnNMC.ReadOnly = true;
                this.columnPIL.ReadOnly = true;
                this.columnPPD.ReadOnly = true;
                this.columnPTD.ReadOnly = true;
                this.columnRWC.ReadOnly = true;
            }
            
            public GAIncidentReportCountViewRow NewGAIncidentReportCountViewRow() {
                return ((GAIncidentReportCountViewRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAIncidentReportCountViewRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAIncidentReportCountViewRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAIncidentReportCountViewRowChanged != null)) {
                    this.GAIncidentReportCountViewRowChanged(this, new GAIncidentReportCountViewRowChangeEvent(((GAIncidentReportCountViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAIncidentReportCountViewRowChanging != null)) {
                    this.GAIncidentReportCountViewRowChanging(this, new GAIncidentReportCountViewRowChangeEvent(((GAIncidentReportCountViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAIncidentReportCountViewRowDeleted != null)) {
                    this.GAIncidentReportCountViewRowDeleted(this, new GAIncidentReportCountViewRowChangeEvent(((GAIncidentReportCountViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAIncidentReportCountViewRowDeleting != null)) {
                    this.GAIncidentReportCountViewRowDeleting(this, new GAIncidentReportCountViewRowChangeEvent(((GAIncidentReportCountViewRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAIncidentReportCountViewRow(GAIncidentReportCountViewRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAIncidentReportCountViewRow : DataRow {
            
            private GAIncidentReportCountViewDataTable tableGAIncidentReportCountView;
            
            internal GAIncidentReportCountViewRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAIncidentReportCountView = ((GAIncidentReportCountViewDataTable)(this.Table));
            }
            
            public int IncidentReportRowId {
                get {
                    return ((int)(this[this.tableGAIncidentReportCountView.IncidentReportRowIdColumn]));
                }
                set {
                    this[this.tableGAIncidentReportCountView.IncidentReportRowIdColumn] = value;
                }
            }
            
            public System.DateTime ReportDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAIncidentReportCountView.ReportDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.ReportDateColumn] = value;
                }
            }
            
            public System.DateTime DateAndTimeOfIncident {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAIncidentReportCountView.DateAndTimeOfIncidentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.DateAndTimeOfIncidentColumn] = value;
                }
            }
            
            public string GAListValue {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportCountView.GAListValueColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.GAListValueColumn] = value;
                }
            }
            
            public int NM {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportCountView.NMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.NMColumn] = value;
                }
            }
            
            public int FAC {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportCountView.FACColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.FACColumn] = value;
                }
            }
            
            public int DET {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportCountView.DETColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.DETColumn] = value;
                }
            }
            
            public int ENV {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportCountView.ENVColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.ENVColumn] = value;
                }
            }
            
            public int FAT {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportCountView.FATColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.FATColumn] = value;
                }
            }
            
            public int FIR {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportCountView.FIRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.FIRColumn] = value;
                }
            }
            
            public int LTI {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportCountView.LTIColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.LTIColumn] = value;
                }
            }
            
            public int MTC {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportCountView.MTCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.MTCColumn] = value;
                }
            }
            
            public int NMC {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportCountView.NMCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.NMCColumn] = value;
                }
            }
            
            public int PIL {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportCountView.PILColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.PILColumn] = value;
                }
            }
            
            public int PPD {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportCountView.PPDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.PPDColumn] = value;
                }
            }
            
            public int PTD {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportCountView.PTDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.PTDColumn] = value;
                }
            }
            
            public int RWC {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportCountView.RWCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.RWCColumn] = value;
                }
            }
            
            public int ClassificationListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportCountView.ClassificationListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.ClassificationListsRowIdColumn] = value;
                }
            }
            
            public string path {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportCountView.pathColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.pathColumn] = value;
                }
            }
            
            public string ownerclass {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportCountView.ownerclassColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.ownerclassColumn] = value;
                }
            }
            
            public string ownername {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportCountView.ownernameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.ownernameColumn] = value;
                }
            }
            
            public int OwnerClassRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportCountView.OwnerClassRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportCountView.OwnerClassRowIdColumn] = value;
                }
            }
            
            public bool IsReportDateNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.ReportDateColumn);
            }
            
            public void SetReportDateNull() {
                this[this.tableGAIncidentReportCountView.ReportDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateAndTimeOfIncidentNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.DateAndTimeOfIncidentColumn);
            }
            
            public void SetDateAndTimeOfIncidentNull() {
                this[this.tableGAIncidentReportCountView.DateAndTimeOfIncidentColumn] = System.Convert.DBNull;
            }
            
            public bool IsGAListValueNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.GAListValueColumn);
            }
            
            public void SetGAListValueNull() {
                this[this.tableGAIncidentReportCountView.GAListValueColumn] = System.Convert.DBNull;
            }
            
            public bool IsNMNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.NMColumn);
            }
            
            public void SetNMNull() {
                this[this.tableGAIncidentReportCountView.NMColumn] = System.Convert.DBNull;
            }
            
            public bool IsFACNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.FACColumn);
            }
            
            public void SetFACNull() {
                this[this.tableGAIncidentReportCountView.FACColumn] = System.Convert.DBNull;
            }
            
            public bool IsDETNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.DETColumn);
            }
            
            public void SetDETNull() {
                this[this.tableGAIncidentReportCountView.DETColumn] = System.Convert.DBNull;
            }
            
            public bool IsENVNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.ENVColumn);
            }
            
            public void SetENVNull() {
                this[this.tableGAIncidentReportCountView.ENVColumn] = System.Convert.DBNull;
            }
            
            public bool IsFATNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.FATColumn);
            }
            
            public void SetFATNull() {
                this[this.tableGAIncidentReportCountView.FATColumn] = System.Convert.DBNull;
            }
            
            public bool IsFIRNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.FIRColumn);
            }
            
            public void SetFIRNull() {
                this[this.tableGAIncidentReportCountView.FIRColumn] = System.Convert.DBNull;
            }
            
            public bool IsLTINull() {
                return this.IsNull(this.tableGAIncidentReportCountView.LTIColumn);
            }
            
            public void SetLTINull() {
                this[this.tableGAIncidentReportCountView.LTIColumn] = System.Convert.DBNull;
            }
            
            public bool IsMTCNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.MTCColumn);
            }
            
            public void SetMTCNull() {
                this[this.tableGAIncidentReportCountView.MTCColumn] = System.Convert.DBNull;
            }
            
            public bool IsNMCNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.NMCColumn);
            }
            
            public void SetNMCNull() {
                this[this.tableGAIncidentReportCountView.NMCColumn] = System.Convert.DBNull;
            }
            
            public bool IsPILNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.PILColumn);
            }
            
            public void SetPILNull() {
                this[this.tableGAIncidentReportCountView.PILColumn] = System.Convert.DBNull;
            }
            
            public bool IsPPDNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.PPDColumn);
            }
            
            public void SetPPDNull() {
                this[this.tableGAIncidentReportCountView.PPDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPTDNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.PTDColumn);
            }
            
            public void SetPTDNull() {
                this[this.tableGAIncidentReportCountView.PTDColumn] = System.Convert.DBNull;
            }
            
            public bool IsRWCNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.RWCColumn);
            }
            
            public void SetRWCNull() {
                this[this.tableGAIncidentReportCountView.RWCColumn] = System.Convert.DBNull;
            }
            
            public bool IsClassificationListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.ClassificationListsRowIdColumn);
            }
            
            public void SetClassificationListsRowIdNull() {
                this[this.tableGAIncidentReportCountView.ClassificationListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IspathNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.pathColumn);
            }
            
            public void SetpathNull() {
                this[this.tableGAIncidentReportCountView.pathColumn] = System.Convert.DBNull;
            }
            
            public bool IsownerclassNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.ownerclassColumn);
            }
            
            public void SetownerclassNull() {
                this[this.tableGAIncidentReportCountView.ownerclassColumn] = System.Convert.DBNull;
            }
            
            public bool IsownernameNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.ownernameColumn);
            }
            
            public void SetownernameNull() {
                this[this.tableGAIncidentReportCountView.ownernameColumn] = System.Convert.DBNull;
            }
            
            public bool IsOwnerClassRowIdNull() {
                return this.IsNull(this.tableGAIncidentReportCountView.OwnerClassRowIdColumn);
            }
            
            public void SetOwnerClassRowIdNull() {
                this[this.tableGAIncidentReportCountView.OwnerClassRowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAIncidentReportCountViewRowChangeEvent : EventArgs {
            
            private GAIncidentReportCountViewRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAIncidentReportCountViewRowChangeEvent(GAIncidentReportCountViewRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAIncidentReportCountViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAIncidentReportDailyEmployeeCountViewDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnrowid;
            
            private DataColumn columnReportDate;
            
            private DataColumn columnDateAndTimeOfIncident;
            
            private DataColumn columnGAListValue;
            
            private DataColumn columnNM;
            
            private DataColumn columnFAC;
            
            private DataColumn columnDET;
            
            private DataColumn columnENV;
            
            private DataColumn columnFAT;
            
            private DataColumn columnFIR;
            
            private DataColumn columnLTI;
            
            private DataColumn columnMTC;
            
            private DataColumn columnNMC;
            
            private DataColumn columnPIL;
            
            private DataColumn columnPPD;
            
            private DataColumn columnPTD;
            
            private DataColumn columnRWC;
            
            private DataColumn columnClassificationListsRowId;
            
            private DataColumn columnSeismicPersonnelCount;
            
            private DataColumn columnMarinePersonnelCount;
            
            private DataColumn columnThirdPartyPersonnelCount;
            
            private DataColumn columnpath;
            
            private DataColumn columnownerclass;
            
            private DataColumn columnownername;
            
            private DataColumn columnownerclassrowid;
            
            private DataColumn columnNumberOfDaysLost;
            
            internal GAIncidentReportDailyEmployeeCountViewDataTable() : 
                    base("GAIncidentReportDailyEmployeeCountView") {
                this.InitClass();
            }
            
            internal GAIncidentReportDailyEmployeeCountViewDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn rowidColumn {
                get {
                    return this.columnrowid;
                }
            }
            
            internal DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            internal DataColumn DateAndTimeOfIncidentColumn {
                get {
                    return this.columnDateAndTimeOfIncident;
                }
            }
            
            internal DataColumn GAListValueColumn {
                get {
                    return this.columnGAListValue;
                }
            }
            
            internal DataColumn NMColumn {
                get {
                    return this.columnNM;
                }
            }
            
            internal DataColumn FACColumn {
                get {
                    return this.columnFAC;
                }
            }
            
            internal DataColumn DETColumn {
                get {
                    return this.columnDET;
                }
            }
            
            internal DataColumn ENVColumn {
                get {
                    return this.columnENV;
                }
            }
            
            internal DataColumn FATColumn {
                get {
                    return this.columnFAT;
                }
            }
            
            internal DataColumn FIRColumn {
                get {
                    return this.columnFIR;
                }
            }
            
            internal DataColumn LTIColumn {
                get {
                    return this.columnLTI;
                }
            }
            
            internal DataColumn MTCColumn {
                get {
                    return this.columnMTC;
                }
            }
            
            internal DataColumn NMCColumn {
                get {
                    return this.columnNMC;
                }
            }
            
            internal DataColumn PILColumn {
                get {
                    return this.columnPIL;
                }
            }
            
            internal DataColumn PPDColumn {
                get {
                    return this.columnPPD;
                }
            }
            
            internal DataColumn PTDColumn {
                get {
                    return this.columnPTD;
                }
            }
            
            internal DataColumn RWCColumn {
                get {
                    return this.columnRWC;
                }
            }
            
            internal DataColumn ClassificationListsRowIdColumn {
                get {
                    return this.columnClassificationListsRowId;
                }
            }
            
            internal DataColumn SeismicPersonnelCountColumn {
                get {
                    return this.columnSeismicPersonnelCount;
                }
            }
            
            internal DataColumn MarinePersonnelCountColumn {
                get {
                    return this.columnMarinePersonnelCount;
                }
            }
            
            internal DataColumn ThirdPartyPersonnelCountColumn {
                get {
                    return this.columnThirdPartyPersonnelCount;
                }
            }
            
            internal DataColumn pathColumn {
                get {
                    return this.columnpath;
                }
            }
            
            internal DataColumn ownerclassColumn {
                get {
                    return this.columnownerclass;
                }
            }
            
            internal DataColumn ownernameColumn {
                get {
                    return this.columnownername;
                }
            }
            
            internal DataColumn ownerclassrowidColumn {
                get {
                    return this.columnownerclassrowid;
                }
            }
            
            internal DataColumn NumberOfDaysLostColumn {
                get {
                    return this.columnNumberOfDaysLost;
                }
            }
            
            public GAIncidentReportDailyEmployeeCountViewRow this[int index] {
                get {
                    return ((GAIncidentReportDailyEmployeeCountViewRow)(this.Rows[index]));
                }
            }
            
            public event GAIncidentReportDailyEmployeeCountViewRowChangeEventHandler GAIncidentReportDailyEmployeeCountViewRowChanged;
            
            public event GAIncidentReportDailyEmployeeCountViewRowChangeEventHandler GAIncidentReportDailyEmployeeCountViewRowChanging;
            
            public event GAIncidentReportDailyEmployeeCountViewRowChangeEventHandler GAIncidentReportDailyEmployeeCountViewRowDeleted;
            
            public event GAIncidentReportDailyEmployeeCountViewRowChangeEventHandler GAIncidentReportDailyEmployeeCountViewRowDeleting;
            
            public void AddGAIncidentReportDailyEmployeeCountViewRow(GAIncidentReportDailyEmployeeCountViewRow row) {
                this.Rows.Add(row);
            }
            
            public GAIncidentReportDailyEmployeeCountViewRow AddGAIncidentReportDailyEmployeeCountViewRow(
                        int rowid, 
                        System.DateTime ReportDate, 
                        System.DateTime DateAndTimeOfIncident, 
                        string GAListValue, 
                        int NM, 
                        int FAC, 
                        int DET, 
                        int ENV, 
                        int FAT, 
                        int FIR, 
                        int LTI, 
                        int MTC, 
                        int NMC, 
                        int PIL, 
                        int PPD, 
                        int PTD, 
                        int RWC, 
                        int ClassificationListsRowId, 
                        int SeismicPersonnelCount, 
                        int MarinePersonnelCount, 
                        int ThirdPartyPersonnelCount, 
                        string path, 
                        string ownerclass, 
                        string ownername, 
                        int ownerclassrowid, 
                        int NumberOfDaysLost) {
                GAIncidentReportDailyEmployeeCountViewRow rowGAIncidentReportDailyEmployeeCountViewRow = ((GAIncidentReportDailyEmployeeCountViewRow)(this.NewRow()));
                rowGAIncidentReportDailyEmployeeCountViewRow.ItemArray = new object[] {
                        rowid,
                        ReportDate,
                        DateAndTimeOfIncident,
                        GAListValue,
                        NM,
                        FAC,
                        DET,
                        ENV,
                        FAT,
                        FIR,
                        LTI,
                        MTC,
                        NMC,
                        PIL,
                        PPD,
                        PTD,
                        RWC,
                        ClassificationListsRowId,
                        SeismicPersonnelCount,
                        MarinePersonnelCount,
                        ThirdPartyPersonnelCount,
                        path,
                        ownerclass,
                        ownername,
                        ownerclassrowid,
                        NumberOfDaysLost};
                this.Rows.Add(rowGAIncidentReportDailyEmployeeCountViewRow);
                return rowGAIncidentReportDailyEmployeeCountViewRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAIncidentReportDailyEmployeeCountViewDataTable cln = ((GAIncidentReportDailyEmployeeCountViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAIncidentReportDailyEmployeeCountViewDataTable();
            }
            
            internal void InitVars() {
                this.columnrowid = this.Columns["rowid"];
                this.columnReportDate = this.Columns["ReportDate"];
                this.columnDateAndTimeOfIncident = this.Columns["DateAndTimeOfIncident"];
                this.columnGAListValue = this.Columns["GAListValue"];
                this.columnNM = this.Columns["NM"];
                this.columnFAC = this.Columns["FAC"];
                this.columnDET = this.Columns["DET"];
                this.columnENV = this.Columns["ENV"];
                this.columnFAT = this.Columns["FAT"];
                this.columnFIR = this.Columns["FIR"];
                this.columnLTI = this.Columns["LTI"];
                this.columnMTC = this.Columns["MTC"];
                this.columnNMC = this.Columns["NMC"];
                this.columnPIL = this.Columns["PIL"];
                this.columnPPD = this.Columns["PPD"];
                this.columnPTD = this.Columns["PTD"];
                this.columnRWC = this.Columns["RWC"];
                this.columnClassificationListsRowId = this.Columns["ClassificationListsRowId"];
                this.columnSeismicPersonnelCount = this.Columns["SeismicPersonnelCount"];
                this.columnMarinePersonnelCount = this.Columns["MarinePersonnelCount"];
                this.columnThirdPartyPersonnelCount = this.Columns["ThirdPartyPersonnelCount"];
                this.columnpath = this.Columns["path"];
                this.columnownerclass = this.Columns["ownerclass"];
                this.columnownername = this.Columns["ownername"];
                this.columnownerclassrowid = this.Columns["ownerclassrowid"];
                this.columnNumberOfDaysLost = this.Columns["NumberOfDaysLost"];
            }
            
            private void InitClass() {
                this.columnrowid = new DataColumn("rowid", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnrowid);
                this.columnReportDate = new DataColumn("ReportDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReportDate);
                this.columnDateAndTimeOfIncident = new DataColumn("DateAndTimeOfIncident", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateAndTimeOfIncident);
                this.columnGAListValue = new DataColumn("GAListValue", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGAListValue);
                this.columnNM = new DataColumn("NM", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNM);
                this.columnFAC = new DataColumn("FAC", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFAC);
                this.columnDET = new DataColumn("DET", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDET);
                this.columnENV = new DataColumn("ENV", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnENV);
                this.columnFAT = new DataColumn("FAT", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFAT);
                this.columnFIR = new DataColumn("FIR", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFIR);
                this.columnLTI = new DataColumn("LTI", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLTI);
                this.columnMTC = new DataColumn("MTC", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMTC);
                this.columnNMC = new DataColumn("NMC", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNMC);
                this.columnPIL = new DataColumn("PIL", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPIL);
                this.columnPPD = new DataColumn("PPD", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPPD);
                this.columnPTD = new DataColumn("PTD", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPTD);
                this.columnRWC = new DataColumn("RWC", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRWC);
                this.columnClassificationListsRowId = new DataColumn("ClassificationListsRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClassificationListsRowId);
                this.columnSeismicPersonnelCount = new DataColumn("SeismicPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSeismicPersonnelCount);
                this.columnMarinePersonnelCount = new DataColumn("MarinePersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMarinePersonnelCount);
                this.columnThirdPartyPersonnelCount = new DataColumn("ThirdPartyPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnThirdPartyPersonnelCount);
                this.columnpath = new DataColumn("path", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnpath);
                this.columnownerclass = new DataColumn("ownerclass", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnownerclass);
                this.columnownername = new DataColumn("ownername", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnownername);
                this.columnownerclassrowid = new DataColumn("ownerclassrowid", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnownerclassrowid);
                this.columnNumberOfDaysLost = new DataColumn("NumberOfDaysLost", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumberOfDaysLost);
                this.columnrowid.AllowDBNull = false;
                this.columnNM.AllowDBNull = false;
                this.columnFAC.AllowDBNull = false;
                this.columnDET.AllowDBNull = false;
                this.columnENV.AllowDBNull = false;
                this.columnFAT.AllowDBNull = false;
                this.columnFIR.AllowDBNull = false;
                this.columnLTI.AllowDBNull = false;
                this.columnMTC.AllowDBNull = false;
                this.columnNMC.AllowDBNull = false;
                this.columnPIL.AllowDBNull = false;
                this.columnPPD.AllowDBNull = false;
                this.columnPTD.AllowDBNull = false;
                this.columnRWC.AllowDBNull = false;
            }
            
            public GAIncidentReportDailyEmployeeCountViewRow NewGAIncidentReportDailyEmployeeCountViewRow() {
                return ((GAIncidentReportDailyEmployeeCountViewRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAIncidentReportDailyEmployeeCountViewRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAIncidentReportDailyEmployeeCountViewRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAIncidentReportDailyEmployeeCountViewRowChanged != null)) {
                    this.GAIncidentReportDailyEmployeeCountViewRowChanged(this, new GAIncidentReportDailyEmployeeCountViewRowChangeEvent(((GAIncidentReportDailyEmployeeCountViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAIncidentReportDailyEmployeeCountViewRowChanging != null)) {
                    this.GAIncidentReportDailyEmployeeCountViewRowChanging(this, new GAIncidentReportDailyEmployeeCountViewRowChangeEvent(((GAIncidentReportDailyEmployeeCountViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAIncidentReportDailyEmployeeCountViewRowDeleted != null)) {
                    this.GAIncidentReportDailyEmployeeCountViewRowDeleted(this, new GAIncidentReportDailyEmployeeCountViewRowChangeEvent(((GAIncidentReportDailyEmployeeCountViewRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAIncidentReportDailyEmployeeCountViewRowDeleting != null)) {
                    this.GAIncidentReportDailyEmployeeCountViewRowDeleting(this, new GAIncidentReportDailyEmployeeCountViewRowChangeEvent(((GAIncidentReportDailyEmployeeCountViewRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAIncidentReportDailyEmployeeCountViewRow(GAIncidentReportDailyEmployeeCountViewRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAIncidentReportDailyEmployeeCountViewRow : DataRow {
            
            private GAIncidentReportDailyEmployeeCountViewDataTable tableGAIncidentReportDailyEmployeeCountView;
            
            internal GAIncidentReportDailyEmployeeCountViewRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAIncidentReportDailyEmployeeCountView = ((GAIncidentReportDailyEmployeeCountViewDataTable)(this.Table));
            }
            
            public int rowid {
                get {
                    return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.rowidColumn]));
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.rowidColumn] = value;
                }
            }
            
            public System.DateTime ReportDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAIncidentReportDailyEmployeeCountView.ReportDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.ReportDateColumn] = value;
                }
            }
            
            public System.DateTime DateAndTimeOfIncident {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAIncidentReportDailyEmployeeCountView.DateAndTimeOfIncidentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.DateAndTimeOfIncidentColumn] = value;
                }
            }
            
            public string GAListValue {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportDailyEmployeeCountView.GAListValueColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.GAListValueColumn] = value;
                }
            }
            
            public int NM {
                get {
                    return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.NMColumn]));
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.NMColumn] = value;
                }
            }
            
            public int FAC {
                get {
                    return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.FACColumn]));
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.FACColumn] = value;
                }
            }
            
            public int DET {
                get {
                    return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.DETColumn]));
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.DETColumn] = value;
                }
            }
            
            public int ENV {
                get {
                    return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.ENVColumn]));
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.ENVColumn] = value;
                }
            }
            
            public int FAT {
                get {
                    return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.FATColumn]));
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.FATColumn] = value;
                }
            }
            
            public int FIR {
                get {
                    return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.FIRColumn]));
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.FIRColumn] = value;
                }
            }
            
            public int LTI {
                get {
                    return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.LTIColumn]));
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.LTIColumn] = value;
                }
            }
            
            public int MTC {
                get {
                    return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.MTCColumn]));
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.MTCColumn] = value;
                }
            }
            
            public int NMC {
                get {
                    return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.NMCColumn]));
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.NMCColumn] = value;
                }
            }
            
            public int PIL {
                get {
                    return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.PILColumn]));
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.PILColumn] = value;
                }
            }
            
            public int PPD {
                get {
                    return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.PPDColumn]));
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.PPDColumn] = value;
                }
            }
            
            public int PTD {
                get {
                    return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.PTDColumn]));
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.PTDColumn] = value;
                }
            }
            
            public int RWC {
                get {
                    return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.RWCColumn]));
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.RWCColumn] = value;
                }
            }
            
            public int ClassificationListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.ClassificationListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.ClassificationListsRowIdColumn] = value;
                }
            }
            
            public int SeismicPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.SeismicPersonnelCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.SeismicPersonnelCountColumn] = value;
                }
            }
            
            public int MarinePersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.MarinePersonnelCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.MarinePersonnelCountColumn] = value;
                }
            }
            
            public int ThirdPartyPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.ThirdPartyPersonnelCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.ThirdPartyPersonnelCountColumn] = value;
                }
            }
            
            public string path {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportDailyEmployeeCountView.pathColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.pathColumn] = value;
                }
            }
            
            public string ownerclass {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportDailyEmployeeCountView.ownerclassColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.ownerclassColumn] = value;
                }
            }
            
            public string ownername {
                get {
                    try {
                        return ((string)(this[this.tableGAIncidentReportDailyEmployeeCountView.ownernameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.ownernameColumn] = value;
                }
            }
            
            public int ownerclassrowid {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.ownerclassrowidColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.ownerclassrowidColumn] = value;
                }
            }
            
            public int NumberOfDaysLost {
                get {
                    try {
                        return ((int)(this[this.tableGAIncidentReportDailyEmployeeCountView.NumberOfDaysLostColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAIncidentReportDailyEmployeeCountView.NumberOfDaysLostColumn] = value;
                }
            }
            
            public bool IsReportDateNull() {
                return this.IsNull(this.tableGAIncidentReportDailyEmployeeCountView.ReportDateColumn);
            }
            
            public void SetReportDateNull() {
                this[this.tableGAIncidentReportDailyEmployeeCountView.ReportDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateAndTimeOfIncidentNull() {
                return this.IsNull(this.tableGAIncidentReportDailyEmployeeCountView.DateAndTimeOfIncidentColumn);
            }
            
            public void SetDateAndTimeOfIncidentNull() {
                this[this.tableGAIncidentReportDailyEmployeeCountView.DateAndTimeOfIncidentColumn] = System.Convert.DBNull;
            }
            
            public bool IsGAListValueNull() {
                return this.IsNull(this.tableGAIncidentReportDailyEmployeeCountView.GAListValueColumn);
            }
            
            public void SetGAListValueNull() {
                this[this.tableGAIncidentReportDailyEmployeeCountView.GAListValueColumn] = System.Convert.DBNull;
            }
            
            public bool IsClassificationListsRowIdNull() {
                return this.IsNull(this.tableGAIncidentReportDailyEmployeeCountView.ClassificationListsRowIdColumn);
            }
            
            public void SetClassificationListsRowIdNull() {
                this[this.tableGAIncidentReportDailyEmployeeCountView.ClassificationListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSeismicPersonnelCountNull() {
                return this.IsNull(this.tableGAIncidentReportDailyEmployeeCountView.SeismicPersonnelCountColumn);
            }
            
            public void SetSeismicPersonnelCountNull() {
                this[this.tableGAIncidentReportDailyEmployeeCountView.SeismicPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsMarinePersonnelCountNull() {
                return this.IsNull(this.tableGAIncidentReportDailyEmployeeCountView.MarinePersonnelCountColumn);
            }
            
            public void SetMarinePersonnelCountNull() {
                this[this.tableGAIncidentReportDailyEmployeeCountView.MarinePersonnelCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsThirdPartyPersonnelCountNull() {
                return this.IsNull(this.tableGAIncidentReportDailyEmployeeCountView.ThirdPartyPersonnelCountColumn);
            }
            
            public void SetThirdPartyPersonnelCountNull() {
                this[this.tableGAIncidentReportDailyEmployeeCountView.ThirdPartyPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            public bool IspathNull() {
                return this.IsNull(this.tableGAIncidentReportDailyEmployeeCountView.pathColumn);
            }
            
            public void SetpathNull() {
                this[this.tableGAIncidentReportDailyEmployeeCountView.pathColumn] = System.Convert.DBNull;
            }
            
            public bool IsownerclassNull() {
                return this.IsNull(this.tableGAIncidentReportDailyEmployeeCountView.ownerclassColumn);
            }
            
            public void SetownerclassNull() {
                this[this.tableGAIncidentReportDailyEmployeeCountView.ownerclassColumn] = System.Convert.DBNull;
            }
            
            public bool IsownernameNull() {
                return this.IsNull(this.tableGAIncidentReportDailyEmployeeCountView.ownernameColumn);
            }
            
            public void SetownernameNull() {
                this[this.tableGAIncidentReportDailyEmployeeCountView.ownernameColumn] = System.Convert.DBNull;
            }
            
            public bool IsownerclassrowidNull() {
                return this.IsNull(this.tableGAIncidentReportDailyEmployeeCountView.ownerclassrowidColumn);
            }
            
            public void SetownerclassrowidNull() {
                this[this.tableGAIncidentReportDailyEmployeeCountView.ownerclassrowidColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumberOfDaysLostNull() {
                return this.IsNull(this.tableGAIncidentReportDailyEmployeeCountView.NumberOfDaysLostColumn);
            }
            
            public void SetNumberOfDaysLostNull() {
                this[this.tableGAIncidentReportDailyEmployeeCountView.NumberOfDaysLostColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAIncidentReportDailyEmployeeCountViewRowChangeEvent : EventArgs {
            
            private GAIncidentReportDailyEmployeeCountViewRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAIncidentReportDailyEmployeeCountViewRowChangeEvent(GAIncidentReportDailyEmployeeCountViewRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAIncidentReportDailyEmployeeCountViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAMeetingTextDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnMeetingTextRowId;
            
            private DataColumn columnName;
            
            private DataColumn columnMeetingPresenter;
            
            private DataColumn columnTimeStart;
            
            private DataColumn columnTimeEnd;
            
            private DataColumn columnSequenceNo;
            
            private DataColumn columnMeetingPresenterPersonnelRowId;
            
            private DataColumn columnText;
            
            private DataColumn columnrowguid;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GAMeetingTextDataTable() : 
                    base("GAMeetingText") {
                this.InitClass();
            }
            
            internal GAMeetingTextDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn MeetingTextRowIdColumn {
                get {
                    return this.columnMeetingTextRowId;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn MeetingPresenterColumn {
                get {
                    return this.columnMeetingPresenter;
                }
            }
            
            internal DataColumn TimeStartColumn {
                get {
                    return this.columnTimeStart;
                }
            }
            
            internal DataColumn TimeEndColumn {
                get {
                    return this.columnTimeEnd;
                }
            }
            
            internal DataColumn SequenceNoColumn {
                get {
                    return this.columnSequenceNo;
                }
            }
            
            internal DataColumn MeetingPresenterPersonnelRowIdColumn {
                get {
                    return this.columnMeetingPresenterPersonnelRowId;
                }
            }
            
            internal DataColumn TextColumn {
                get {
                    return this.columnText;
                }
            }
            
            internal DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GAMeetingTextRow this[int index] {
                get {
                    return ((GAMeetingTextRow)(this.Rows[index]));
                }
            }
            
            public event GAMeetingTextRowChangeEventHandler GAMeetingTextRowChanged;
            
            public event GAMeetingTextRowChangeEventHandler GAMeetingTextRowChanging;
            
            public event GAMeetingTextRowChangeEventHandler GAMeetingTextRowDeleted;
            
            public event GAMeetingTextRowChangeEventHandler GAMeetingTextRowDeleting;
            
            public void AddGAMeetingTextRow(GAMeetingTextRow row) {
                this.Rows.Add(row);
            }
            
            public GAMeetingTextRow AddGAMeetingTextRow(
                        string Name, 
                        string MeetingPresenter, 
                        System.DateTime TimeStart, 
                        System.DateTime TimeEnd, 
                        int SequenceNo, 
                        string MeetingPresenterPersonnelRowId, 
                        string Text, 
                        System.Guid rowguid, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAMeetingTextRow rowGAMeetingTextRow = ((GAMeetingTextRow)(this.NewRow()));
                rowGAMeetingTextRow.ItemArray = new object[] {
                        null,
                        Name,
                        MeetingPresenter,
                        TimeStart,
                        TimeEnd,
                        SequenceNo,
                        MeetingPresenterPersonnelRowId,
                        Text,
                        rowguid,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAMeetingTextRow);
                return rowGAMeetingTextRow;
            }
            
            public GAMeetingTextRow FindByMeetingTextRowId(int MeetingTextRowId) {
                return ((GAMeetingTextRow)(this.Rows.Find(new object[] {
                            MeetingTextRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAMeetingTextDataTable cln = ((GAMeetingTextDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAMeetingTextDataTable();
            }
            
            internal void InitVars() {
                this.columnMeetingTextRowId = this.Columns["MeetingTextRowId"];
                this.columnName = this.Columns["Name"];
                this.columnMeetingPresenter = this.Columns["MeetingPresenter"];
                this.columnTimeStart = this.Columns["TimeStart"];
                this.columnTimeEnd = this.Columns["TimeEnd"];
                this.columnSequenceNo = this.Columns["SequenceNo"];
                this.columnMeetingPresenterPersonnelRowId = this.Columns["MeetingPresenterPersonnelRowId"];
                this.columnText = this.Columns["Text"];
                this.columnrowguid = this.Columns["rowguid"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnMeetingTextRowId = new DataColumn("MeetingTextRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMeetingTextRowId);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnMeetingPresenter = new DataColumn("MeetingPresenter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMeetingPresenter);
                this.columnTimeStart = new DataColumn("TimeStart", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTimeStart);
                this.columnTimeEnd = new DataColumn("TimeEnd", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTimeEnd);
                this.columnSequenceNo = new DataColumn("SequenceNo", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSequenceNo);
                this.columnMeetingPresenterPersonnelRowId = new DataColumn("MeetingPresenterPersonnelRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMeetingPresenterPersonnelRowId);
                this.columnText = new DataColumn("Text", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnText);
                this.columnrowguid = new DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnrowguid);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey17", new DataColumn[] {
                                this.columnMeetingTextRowId}, true));
                this.columnMeetingTextRowId.AutoIncrement = true;
                this.columnMeetingTextRowId.AllowDBNull = false;
                this.columnMeetingTextRowId.ReadOnly = true;
                this.columnMeetingTextRowId.Unique = true;
            }
            
            public GAMeetingTextRow NewGAMeetingTextRow() {
                return ((GAMeetingTextRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAMeetingTextRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAMeetingTextRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAMeetingTextRowChanged != null)) {
                    this.GAMeetingTextRowChanged(this, new GAMeetingTextRowChangeEvent(((GAMeetingTextRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAMeetingTextRowChanging != null)) {
                    this.GAMeetingTextRowChanging(this, new GAMeetingTextRowChangeEvent(((GAMeetingTextRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAMeetingTextRowDeleted != null)) {
                    this.GAMeetingTextRowDeleted(this, new GAMeetingTextRowChangeEvent(((GAMeetingTextRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAMeetingTextRowDeleting != null)) {
                    this.GAMeetingTextRowDeleting(this, new GAMeetingTextRowChangeEvent(((GAMeetingTextRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAMeetingTextRow(GAMeetingTextRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAMeetingTextRow : DataRow {
            
            private GAMeetingTextDataTable tableGAMeetingText;
            
            internal GAMeetingTextRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAMeetingText = ((GAMeetingTextDataTable)(this.Table));
            }
            
            public int MeetingTextRowId {
                get {
                    return ((int)(this[this.tableGAMeetingText.MeetingTextRowIdColumn]));
                }
                set {
                    this[this.tableGAMeetingText.MeetingTextRowIdColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingText.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.NameColumn] = value;
                }
            }
            
            public string MeetingPresenter {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingText.MeetingPresenterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.MeetingPresenterColumn] = value;
                }
            }
            
            public System.DateTime TimeStart {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeetingText.TimeStartColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.TimeStartColumn] = value;
                }
            }
            
            public System.DateTime TimeEnd {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeetingText.TimeEndColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.TimeEndColumn] = value;
                }
            }
            
            public int SequenceNo {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingText.SequenceNoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.SequenceNoColumn] = value;
                }
            }
            
            public string MeetingPresenterPersonnelRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingText.MeetingPresenterPersonnelRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.MeetingPresenterPersonnelRowIdColumn] = value;
                }
            }
            
            public string Text {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingText.TextColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.TextColumn] = value;
                }
            }
            
            public System.Guid rowguid {
                get {
                    try {
                        return ((System.Guid)(this[this.tableGAMeetingText.rowguidColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.rowguidColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingText.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeetingText.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingText.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeetingText.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingText.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeetingText.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingText.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingText.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingText.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingText.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeetingText.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeetingText.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAMeetingText.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingText.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingText.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingText.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingText.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingText.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingText.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingText.IntFree3Column] = value;
                }
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tableGAMeetingText.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tableGAMeetingText.NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsMeetingPresenterNull() {
                return this.IsNull(this.tableGAMeetingText.MeetingPresenterColumn);
            }
            
            public void SetMeetingPresenterNull() {
                this[this.tableGAMeetingText.MeetingPresenterColumn] = System.Convert.DBNull;
            }
            
            public bool IsTimeStartNull() {
                return this.IsNull(this.tableGAMeetingText.TimeStartColumn);
            }
            
            public void SetTimeStartNull() {
                this[this.tableGAMeetingText.TimeStartColumn] = System.Convert.DBNull;
            }
            
            public bool IsTimeEndNull() {
                return this.IsNull(this.tableGAMeetingText.TimeEndColumn);
            }
            
            public void SetTimeEndNull() {
                this[this.tableGAMeetingText.TimeEndColumn] = System.Convert.DBNull;
            }
            
            public bool IsSequenceNoNull() {
                return this.IsNull(this.tableGAMeetingText.SequenceNoColumn);
            }
            
            public void SetSequenceNoNull() {
                this[this.tableGAMeetingText.SequenceNoColumn] = System.Convert.DBNull;
            }
            
            public bool IsMeetingPresenterPersonnelRowIdNull() {
                return this.IsNull(this.tableGAMeetingText.MeetingPresenterPersonnelRowIdColumn);
            }
            
            public void SetMeetingPresenterPersonnelRowIdNull() {
                this[this.tableGAMeetingText.MeetingPresenterPersonnelRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTextNull() {
                return this.IsNull(this.tableGAMeetingText.TextColumn);
            }
            
            public void SetTextNull() {
                this[this.tableGAMeetingText.TextColumn] = System.Convert.DBNull;
            }
            
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGAMeetingText.rowguidColumn);
            }
            
            public void SetrowguidNull() {
                this[this.tableGAMeetingText.rowguidColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAMeetingText.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGAMeetingText.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAMeetingText.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGAMeetingText.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAMeetingText.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGAMeetingText.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAMeetingText.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGAMeetingText.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAMeetingText.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGAMeetingText.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAMeetingText.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGAMeetingText.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAMeetingText.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGAMeetingText.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAMeetingText.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGAMeetingText.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAMeetingText.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGAMeetingText.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAMeetingText.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGAMeetingText.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAMeetingText.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGAMeetingText.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAMeetingText.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGAMeetingText.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAMeetingText.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGAMeetingText.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAMeetingText.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGAMeetingText.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAMeetingText.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGAMeetingText.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAMeetingText.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGAMeetingText.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAMeetingText.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGAMeetingText.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAMeetingText.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGAMeetingText.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAMeetingText.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGAMeetingText.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAMeetingTextRowChangeEvent : EventArgs {
            
            private GAMeetingTextRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAMeetingTextRowChangeEvent(GAMeetingTextRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAMeetingTextRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GArxtReportDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnrxtReportRowId;
            
            private DataColumn columnClassificationListsRowId;
            
            private DataColumn columnContributionFactorToTheIncident;
            
            private DataColumn columnDamagedEquipment;
            
            private DataColumn columnDepartmentListsRowId;
            
            private DataColumn columnDescription;
            
            private DataColumn columnEyeWitness;
            
            private DataColumn columnImmediateAction;
            
            private DataColumn columnNumberOfDaysLost;
            
            private DataColumn columnPossibleConsequence;
            
            private DataColumn columnPotentialListsRowId;
            
            private DataColumn columnReferenceIdPrefix;
            
            private DataColumn columnReporter;
            
            private DataColumn columnReporterJobTitleListsRowId;
            
            private DataColumn columnRiskEvaluation;
            
            private DataColumn columnSequenceOfTheIncident;
            
            private DataColumn columnSeverityAssetsListsRowId;
            
            private DataColumn columnSeverityEnvironmentListsRowId;
            
            private DataColumn columnSeverityPeopleListsRowId;
            
            private DataColumn columnStatusListsRowId;
            
            private DataColumn columnSuggestedCorrectiveAction;
            
            private DataColumn columnTypeOfDamageListsRowId;
            
            private DataColumn columnTypeOfHIPListsRowId;
            
            private DataColumn columnTypeOfIncidentListsRowId;
            
            private DataColumn columnWorkAreaListsRowId;
            
            private DataColumn columnReportTitle;
            
            private DataColumn columnDateTime;
            
            private DataColumn columnrxtReportReferenceId;
            
            private DataColumn columnSeverityReputationListsRowId;
            
            private DataColumn columnrowguid;
            
            private DataColumn columnHasMaritimeReport;
            
            private DataColumn columnReportDate;
            
            private DataColumn columnIsIncident;
            
            private DataColumn columnIsRisk;
            
            private DataColumn columnIsEquipmentDamage;
            
            private DataColumn columnIsEnvironmentalDamage;
            
            private DataColumn columnHasInitialReport;
            
            private DataColumn columnTargetPotentialListsRowId;
            
            private DataColumn columnTargetSeverityAssetsListsRowId;
            
            private DataColumn columnTargetSeverityEnvironmentListsRowId;
            
            private DataColumn columnTargetSeverityReputationListsRowId;
            
            private DataColumn columnTargetSeverityPeopleListsRowId;
            
            private DataColumn columnDateMitigationCompleted;
            
            private DataColumn columnDateMitigationEstimated;
            
            private DataColumn columnCaptainIsInformed;
            
            private DataColumn columnClientIsInformed;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GArxtReportDataTable() : 
                    base("GArxtReport") {
                this.InitClass();
            }
            
            internal GArxtReportDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn rxtReportRowIdColumn {
                get {
                    return this.columnrxtReportRowId;
                }
            }
            
            internal DataColumn ClassificationListsRowIdColumn {
                get {
                    return this.columnClassificationListsRowId;
                }
            }
            
            internal DataColumn ContributionFactorToTheIncidentColumn {
                get {
                    return this.columnContributionFactorToTheIncident;
                }
            }
            
            internal DataColumn DamagedEquipmentColumn {
                get {
                    return this.columnDamagedEquipment;
                }
            }
            
            internal DataColumn DepartmentListsRowIdColumn {
                get {
                    return this.columnDepartmentListsRowId;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn EyeWitnessColumn {
                get {
                    return this.columnEyeWitness;
                }
            }
            
            internal DataColumn ImmediateActionColumn {
                get {
                    return this.columnImmediateAction;
                }
            }
            
            internal DataColumn NumberOfDaysLostColumn {
                get {
                    return this.columnNumberOfDaysLost;
                }
            }
            
            internal DataColumn PossibleConsequenceColumn {
                get {
                    return this.columnPossibleConsequence;
                }
            }
            
            internal DataColumn PotentialListsRowIdColumn {
                get {
                    return this.columnPotentialListsRowId;
                }
            }
            
            internal DataColumn ReferenceIdPrefixColumn {
                get {
                    return this.columnReferenceIdPrefix;
                }
            }
            
            internal DataColumn ReporterColumn {
                get {
                    return this.columnReporter;
                }
            }
            
            internal DataColumn ReporterJobTitleListsRowIdColumn {
                get {
                    return this.columnReporterJobTitleListsRowId;
                }
            }
            
            internal DataColumn RiskEvaluationColumn {
                get {
                    return this.columnRiskEvaluation;
                }
            }
            
            internal DataColumn SequenceOfTheIncidentColumn {
                get {
                    return this.columnSequenceOfTheIncident;
                }
            }
            
            internal DataColumn SeverityAssetsListsRowIdColumn {
                get {
                    return this.columnSeverityAssetsListsRowId;
                }
            }
            
            internal DataColumn SeverityEnvironmentListsRowIdColumn {
                get {
                    return this.columnSeverityEnvironmentListsRowId;
                }
            }
            
            internal DataColumn SeverityPeopleListsRowIdColumn {
                get {
                    return this.columnSeverityPeopleListsRowId;
                }
            }
            
            internal DataColumn StatusListsRowIdColumn {
                get {
                    return this.columnStatusListsRowId;
                }
            }
            
            internal DataColumn SuggestedCorrectiveActionColumn {
                get {
                    return this.columnSuggestedCorrectiveAction;
                }
            }
            
            internal DataColumn TypeOfDamageListsRowIdColumn {
                get {
                    return this.columnTypeOfDamageListsRowId;
                }
            }
            
            internal DataColumn TypeOfHIPListsRowIdColumn {
                get {
                    return this.columnTypeOfHIPListsRowId;
                }
            }
            
            internal DataColumn TypeOfIncidentListsRowIdColumn {
                get {
                    return this.columnTypeOfIncidentListsRowId;
                }
            }
            
            internal DataColumn WorkAreaListsRowIdColumn {
                get {
                    return this.columnWorkAreaListsRowId;
                }
            }
            
            internal DataColumn ReportTitleColumn {
                get {
                    return this.columnReportTitle;
                }
            }
            
            internal DataColumn DateTimeColumn {
                get {
                    return this.columnDateTime;
                }
            }
            
            internal DataColumn rxtReportReferenceIdColumn {
                get {
                    return this.columnrxtReportReferenceId;
                }
            }
            
            internal DataColumn SeverityReputationListsRowIdColumn {
                get {
                    return this.columnSeverityReputationListsRowId;
                }
            }
            
            internal DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            internal DataColumn HasMaritimeReportColumn {
                get {
                    return this.columnHasMaritimeReport;
                }
            }
            
            internal DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            internal DataColumn IsIncidentColumn {
                get {
                    return this.columnIsIncident;
                }
            }
            
            internal DataColumn IsRiskColumn {
                get {
                    return this.columnIsRisk;
                }
            }
            
            internal DataColumn IsEquipmentDamageColumn {
                get {
                    return this.columnIsEquipmentDamage;
                }
            }
            
            internal DataColumn IsEnvironmentalDamageColumn {
                get {
                    return this.columnIsEnvironmentalDamage;
                }
            }
            
            internal DataColumn HasInitialReportColumn {
                get {
                    return this.columnHasInitialReport;
                }
            }
            
            internal DataColumn TargetPotentialListsRowIdColumn {
                get {
                    return this.columnTargetPotentialListsRowId;
                }
            }
            
            internal DataColumn TargetSeverityAssetsListsRowIdColumn {
                get {
                    return this.columnTargetSeverityAssetsListsRowId;
                }
            }
            
            internal DataColumn TargetSeverityEnvironmentListsRowIdColumn {
                get {
                    return this.columnTargetSeverityEnvironmentListsRowId;
                }
            }
            
            internal DataColumn TargetSeverityReputationListsRowIdColumn {
                get {
                    return this.columnTargetSeverityReputationListsRowId;
                }
            }
            
            internal DataColumn TargetSeverityPeopleListsRowIdColumn {
                get {
                    return this.columnTargetSeverityPeopleListsRowId;
                }
            }
            
            internal DataColumn DateMitigationCompletedColumn {
                get {
                    return this.columnDateMitigationCompleted;
                }
            }
            
            internal DataColumn DateMitigationEstimatedColumn {
                get {
                    return this.columnDateMitigationEstimated;
                }
            }
            
            internal DataColumn CaptainIsInformedColumn {
                get {
                    return this.columnCaptainIsInformed;
                }
            }
            
            internal DataColumn ClientIsInformedColumn {
                get {
                    return this.columnClientIsInformed;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GArxtReportRow this[int index] {
                get {
                    return ((GArxtReportRow)(this.Rows[index]));
                }
            }
            
            public event GArxtReportRowChangeEventHandler GArxtReportRowChanged;
            
            public event GArxtReportRowChangeEventHandler GArxtReportRowChanging;
            
            public event GArxtReportRowChangeEventHandler GArxtReportRowDeleted;
            
            public event GArxtReportRowChangeEventHandler GArxtReportRowDeleting;
            
            public void AddGArxtReportRow(GArxtReportRow row) {
                this.Rows.Add(row);
            }
            
            public GArxtReportRow AddGArxtReportRow(
                        string ClassificationListsRowId, 
                        int ContributionFactorToTheIncident, 
                        string DamagedEquipment, 
                        string DepartmentListsRowId, 
                        string Description, 
                        string EyeWitness, 
                        string ImmediateAction, 
                        int NumberOfDaysLost, 
                        string PossibleConsequence, 
                        string PotentialListsRowId, 
                        string ReferenceIdPrefix, 
                        string Reporter, 
                        string ReporterJobTitleListsRowId, 
                        string RiskEvaluation, 
                        string SequenceOfTheIncident, 
                        string SeverityAssetsListsRowId, 
                        string SeverityEnvironmentListsRowId, 
                        string SeverityPeopleListsRowId, 
                        string StatusListsRowId, 
                        string SuggestedCorrectiveAction, 
                        string TypeOfDamageListsRowId, 
                        string TypeOfHIPListsRowId, 
                        string TypeOfIncidentListsRowId, 
                        string WorkAreaListsRowId, 
                        string ReportTitle, 
                        System.DateTime DateTime, 
                        string rxtReportReferenceId, 
                        string SeverityReputationListsRowId, 
                        System.Guid rowguid, 
                        bool HasMaritimeReport, 
                        System.DateTime ReportDate, 
                        bool IsIncident, 
                        bool IsRisk, 
                        bool IsEquipmentDamage, 
                        bool IsEnvironmentalDamage, 
                        bool HasInitialReport, 
                        string TargetPotentialListsRowId, 
                        string TargetSeverityAssetsListsRowId, 
                        string TargetSeverityEnvironmentListsRowId, 
                        string TargetSeverityReputationListsRowId, 
                        string TargetSeverityPeopleListsRowId, 
                        System.DateTime DateMitigationCompleted, 
                        System.DateTime DateMitigationEstimated, 
                        bool CaptainIsInformed, 
                        bool ClientIsInformed, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GArxtReportRow rowGArxtReportRow = ((GArxtReportRow)(this.NewRow()));
                rowGArxtReportRow.ItemArray = new object[] {
                        null,
                        ClassificationListsRowId,
                        ContributionFactorToTheIncident,
                        DamagedEquipment,
                        DepartmentListsRowId,
                        Description,
                        EyeWitness,
                        ImmediateAction,
                        NumberOfDaysLost,
                        PossibleConsequence,
                        PotentialListsRowId,
                        ReferenceIdPrefix,
                        Reporter,
                        ReporterJobTitleListsRowId,
                        RiskEvaluation,
                        SequenceOfTheIncident,
                        SeverityAssetsListsRowId,
                        SeverityEnvironmentListsRowId,
                        SeverityPeopleListsRowId,
                        StatusListsRowId,
                        SuggestedCorrectiveAction,
                        TypeOfDamageListsRowId,
                        TypeOfHIPListsRowId,
                        TypeOfIncidentListsRowId,
                        WorkAreaListsRowId,
                        ReportTitle,
                        DateTime,
                        rxtReportReferenceId,
                        SeverityReputationListsRowId,
                        rowguid,
                        HasMaritimeReport,
                        ReportDate,
                        IsIncident,
                        IsRisk,
                        IsEquipmentDamage,
                        IsEnvironmentalDamage,
                        HasInitialReport,
                        TargetPotentialListsRowId,
                        TargetSeverityAssetsListsRowId,
                        TargetSeverityEnvironmentListsRowId,
                        TargetSeverityReputationListsRowId,
                        TargetSeverityPeopleListsRowId,
                        DateMitigationCompleted,
                        DateMitigationEstimated,
                        CaptainIsInformed,
                        ClientIsInformed,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGArxtReportRow);
                return rowGArxtReportRow;
            }
            
            public GArxtReportRow FindByrxtReportRowId(int rxtReportRowId) {
                return ((GArxtReportRow)(this.Rows.Find(new object[] {
                            rxtReportRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GArxtReportDataTable cln = ((GArxtReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GArxtReportDataTable();
            }
            
            internal void InitVars() {
                this.columnrxtReportRowId = this.Columns["rxtReportRowId"];
                this.columnClassificationListsRowId = this.Columns["ClassificationListsRowId"];
                this.columnContributionFactorToTheIncident = this.Columns["ContributionFactorToTheIncident"];
                this.columnDamagedEquipment = this.Columns["DamagedEquipment"];
                this.columnDepartmentListsRowId = this.Columns["DepartmentListsRowId"];
                this.columnDescription = this.Columns["Description"];
                this.columnEyeWitness = this.Columns["EyeWitness"];
                this.columnImmediateAction = this.Columns["ImmediateAction"];
                this.columnNumberOfDaysLost = this.Columns["NumberOfDaysLost"];
                this.columnPossibleConsequence = this.Columns["PossibleConsequence"];
                this.columnPotentialListsRowId = this.Columns["PotentialListsRowId"];
                this.columnReferenceIdPrefix = this.Columns["ReferenceIdPrefix"];
                this.columnReporter = this.Columns["Reporter"];
                this.columnReporterJobTitleListsRowId = this.Columns["ReporterJobTitleListsRowId"];
                this.columnRiskEvaluation = this.Columns["RiskEvaluation"];
                this.columnSequenceOfTheIncident = this.Columns["SequenceOfTheIncident"];
                this.columnSeverityAssetsListsRowId = this.Columns["SeverityAssetsListsRowId"];
                this.columnSeverityEnvironmentListsRowId = this.Columns["SeverityEnvironmentListsRowId"];
                this.columnSeverityPeopleListsRowId = this.Columns["SeverityPeopleListsRowId"];
                this.columnStatusListsRowId = this.Columns["StatusListsRowId"];
                this.columnSuggestedCorrectiveAction = this.Columns["SuggestedCorrectiveAction"];
                this.columnTypeOfDamageListsRowId = this.Columns["TypeOfDamageListsRowId"];
                this.columnTypeOfHIPListsRowId = this.Columns["TypeOfHIPListsRowId"];
                this.columnTypeOfIncidentListsRowId = this.Columns["TypeOfIncidentListsRowId"];
                this.columnWorkAreaListsRowId = this.Columns["WorkAreaListsRowId"];
                this.columnReportTitle = this.Columns["ReportTitle"];
                this.columnDateTime = this.Columns["DateTime"];
                this.columnrxtReportReferenceId = this.Columns["rxtReportReferenceId"];
                this.columnSeverityReputationListsRowId = this.Columns["SeverityReputationListsRowId"];
                this.columnrowguid = this.Columns["rowguid"];
                this.columnHasMaritimeReport = this.Columns["HasMaritimeReport"];
                this.columnReportDate = this.Columns["ReportDate"];
                this.columnIsIncident = this.Columns["IsIncident"];
                this.columnIsRisk = this.Columns["IsRisk"];
                this.columnIsEquipmentDamage = this.Columns["IsEquipmentDamage"];
                this.columnIsEnvironmentalDamage = this.Columns["IsEnvironmentalDamage"];
                this.columnHasInitialReport = this.Columns["HasInitialReport"];
                this.columnTargetPotentialListsRowId = this.Columns["TargetPotentialListsRowId"];
                this.columnTargetSeverityAssetsListsRowId = this.Columns["TargetSeverityAssetsListsRowId"];
                this.columnTargetSeverityEnvironmentListsRowId = this.Columns["TargetSeverityEnvironmentListsRowId"];
                this.columnTargetSeverityReputationListsRowId = this.Columns["TargetSeverityReputationListsRowId"];
                this.columnTargetSeverityPeopleListsRowId = this.Columns["TargetSeverityPeopleListsRowId"];
                this.columnDateMitigationCompleted = this.Columns["DateMitigationCompleted"];
                this.columnDateMitigationEstimated = this.Columns["DateMitigationEstimated"];
                this.columnCaptainIsInformed = this.Columns["CaptainIsInformed"];
                this.columnClientIsInformed = this.Columns["ClientIsInformed"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnrxtReportRowId = new DataColumn("rxtReportRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnrxtReportRowId);
                this.columnClassificationListsRowId = new DataColumn("ClassificationListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClassificationListsRowId);
                this.columnContributionFactorToTheIncident = new DataColumn("ContributionFactorToTheIncident", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContributionFactorToTheIncident);
                this.columnDamagedEquipment = new DataColumn("DamagedEquipment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDamagedEquipment);
                this.columnDepartmentListsRowId = new DataColumn("DepartmentListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDepartmentListsRowId);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnEyeWitness = new DataColumn("EyeWitness", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEyeWitness);
                this.columnImmediateAction = new DataColumn("ImmediateAction", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImmediateAction);
                this.columnNumberOfDaysLost = new DataColumn("NumberOfDaysLost", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumberOfDaysLost);
                this.columnPossibleConsequence = new DataColumn("PossibleConsequence", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPossibleConsequence);
                this.columnPotentialListsRowId = new DataColumn("PotentialListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPotentialListsRowId);
                this.columnReferenceIdPrefix = new DataColumn("ReferenceIdPrefix", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReferenceIdPrefix);
                this.columnReporter = new DataColumn("Reporter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReporter);
                this.columnReporterJobTitleListsRowId = new DataColumn("ReporterJobTitleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReporterJobTitleListsRowId);
                this.columnRiskEvaluation = new DataColumn("RiskEvaluation", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRiskEvaluation);
                this.columnSequenceOfTheIncident = new DataColumn("SequenceOfTheIncident", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSequenceOfTheIncident);
                this.columnSeverityAssetsListsRowId = new DataColumn("SeverityAssetsListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSeverityAssetsListsRowId);
                this.columnSeverityEnvironmentListsRowId = new DataColumn("SeverityEnvironmentListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSeverityEnvironmentListsRowId);
                this.columnSeverityPeopleListsRowId = new DataColumn("SeverityPeopleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSeverityPeopleListsRowId);
                this.columnStatusListsRowId = new DataColumn("StatusListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatusListsRowId);
                this.columnSuggestedCorrectiveAction = new DataColumn("SuggestedCorrectiveAction", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSuggestedCorrectiveAction);
                this.columnTypeOfDamageListsRowId = new DataColumn("TypeOfDamageListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTypeOfDamageListsRowId);
                this.columnTypeOfHIPListsRowId = new DataColumn("TypeOfHIPListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTypeOfHIPListsRowId);
                this.columnTypeOfIncidentListsRowId = new DataColumn("TypeOfIncidentListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTypeOfIncidentListsRowId);
                this.columnWorkAreaListsRowId = new DataColumn("WorkAreaListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWorkAreaListsRowId);
                this.columnReportTitle = new DataColumn("ReportTitle", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReportTitle);
                this.columnDateTime = new DataColumn("DateTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTime);
                this.columnrxtReportReferenceId = new DataColumn("rxtReportReferenceId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnrxtReportReferenceId);
                this.columnSeverityReputationListsRowId = new DataColumn("SeverityReputationListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSeverityReputationListsRowId);
                this.columnrowguid = new DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnrowguid);
                this.columnHasMaritimeReport = new DataColumn("HasMaritimeReport", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHasMaritimeReport);
                this.columnReportDate = new DataColumn("ReportDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReportDate);
                this.columnIsIncident = new DataColumn("IsIncident", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsIncident);
                this.columnIsRisk = new DataColumn("IsRisk", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsRisk);
                this.columnIsEquipmentDamage = new DataColumn("IsEquipmentDamage", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsEquipmentDamage);
                this.columnIsEnvironmentalDamage = new DataColumn("IsEnvironmentalDamage", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsEnvironmentalDamage);
                this.columnHasInitialReport = new DataColumn("HasInitialReport", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHasInitialReport);
                this.columnTargetPotentialListsRowId = new DataColumn("TargetPotentialListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTargetPotentialListsRowId);
                this.columnTargetSeverityAssetsListsRowId = new DataColumn("TargetSeverityAssetsListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTargetSeverityAssetsListsRowId);
                this.columnTargetSeverityEnvironmentListsRowId = new DataColumn("TargetSeverityEnvironmentListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTargetSeverityEnvironmentListsRowId);
                this.columnTargetSeverityReputationListsRowId = new DataColumn("TargetSeverityReputationListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTargetSeverityReputationListsRowId);
                this.columnTargetSeverityPeopleListsRowId = new DataColumn("TargetSeverityPeopleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTargetSeverityPeopleListsRowId);
                this.columnDateMitigationCompleted = new DataColumn("DateMitigationCompleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateMitigationCompleted);
                this.columnDateMitigationEstimated = new DataColumn("DateMitigationEstimated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateMitigationEstimated);
                this.columnCaptainIsInformed = new DataColumn("CaptainIsInformed", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCaptainIsInformed);
                this.columnClientIsInformed = new DataColumn("ClientIsInformed", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientIsInformed);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("rxtReportDSKey1", new DataColumn[] {
                                this.columnrxtReportRowId}, true));
                this.columnrxtReportRowId.AutoIncrement = true;
                this.columnrxtReportRowId.AllowDBNull = false;
                this.columnrxtReportRowId.ReadOnly = true;
                this.columnrxtReportRowId.Unique = true;
            }
            
            public GArxtReportRow NewGArxtReportRow() {
                return ((GArxtReportRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GArxtReportRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GArxtReportRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GArxtReportRowChanged != null)) {
                    this.GArxtReportRowChanged(this, new GArxtReportRowChangeEvent(((GArxtReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GArxtReportRowChanging != null)) {
                    this.GArxtReportRowChanging(this, new GArxtReportRowChangeEvent(((GArxtReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GArxtReportRowDeleted != null)) {
                    this.GArxtReportRowDeleted(this, new GArxtReportRowChangeEvent(((GArxtReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GArxtReportRowDeleting != null)) {
                    this.GArxtReportRowDeleting(this, new GArxtReportRowChangeEvent(((GArxtReportRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGArxtReportRow(GArxtReportRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GArxtReportRow : DataRow {
            
            private GArxtReportDataTable tableGArxtReport;
            
            internal GArxtReportRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGArxtReport = ((GArxtReportDataTable)(this.Table));
            }
            
            public int rxtReportRowId {
                get {
                    return ((int)(this[this.tableGArxtReport.rxtReportRowIdColumn]));
                }
                set {
                    this[this.tableGArxtReport.rxtReportRowIdColumn] = value;
                }
            }
            
            public string ClassificationListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.ClassificationListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.ClassificationListsRowIdColumn] = value;
                }
            }
            
            public int ContributionFactorToTheIncident {
                get {
                    try {
                        return ((int)(this[this.tableGArxtReport.ContributionFactorToTheIncidentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.ContributionFactorToTheIncidentColumn] = value;
                }
            }
            
            public string DamagedEquipment {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.DamagedEquipmentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.DamagedEquipmentColumn] = value;
                }
            }
            
            public string DepartmentListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.DepartmentListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.DepartmentListsRowIdColumn] = value;
                }
            }
            
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.DescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.DescriptionColumn] = value;
                }
            }
            
            public string EyeWitness {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.EyeWitnessColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.EyeWitnessColumn] = value;
                }
            }
            
            public string ImmediateAction {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.ImmediateActionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.ImmediateActionColumn] = value;
                }
            }
            
            public int NumberOfDaysLost {
                get {
                    try {
                        return ((int)(this[this.tableGArxtReport.NumberOfDaysLostColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.NumberOfDaysLostColumn] = value;
                }
            }
            
            public string PossibleConsequence {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.PossibleConsequenceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.PossibleConsequenceColumn] = value;
                }
            }
            
            public string PotentialListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.PotentialListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.PotentialListsRowIdColumn] = value;
                }
            }
            
            public string ReferenceIdPrefix {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.ReferenceIdPrefixColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.ReferenceIdPrefixColumn] = value;
                }
            }
            
            public string Reporter {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.ReporterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.ReporterColumn] = value;
                }
            }
            
            public string ReporterJobTitleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.ReporterJobTitleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.ReporterJobTitleListsRowIdColumn] = value;
                }
            }
            
            public string RiskEvaluation {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.RiskEvaluationColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.RiskEvaluationColumn] = value;
                }
            }
            
            public string SequenceOfTheIncident {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.SequenceOfTheIncidentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.SequenceOfTheIncidentColumn] = value;
                }
            }
            
            public string SeverityAssetsListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.SeverityAssetsListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.SeverityAssetsListsRowIdColumn] = value;
                }
            }
            
            public string SeverityEnvironmentListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.SeverityEnvironmentListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.SeverityEnvironmentListsRowIdColumn] = value;
                }
            }
            
            public string SeverityPeopleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.SeverityPeopleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.SeverityPeopleListsRowIdColumn] = value;
                }
            }
            
            public string StatusListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.StatusListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.StatusListsRowIdColumn] = value;
                }
            }
            
            public string SuggestedCorrectiveAction {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.SuggestedCorrectiveActionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.SuggestedCorrectiveActionColumn] = value;
                }
            }
            
            public string TypeOfDamageListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.TypeOfDamageListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.TypeOfDamageListsRowIdColumn] = value;
                }
            }
            
            public string TypeOfHIPListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.TypeOfHIPListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.TypeOfHIPListsRowIdColumn] = value;
                }
            }
            
            public string TypeOfIncidentListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.TypeOfIncidentListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.TypeOfIncidentListsRowIdColumn] = value;
                }
            }
            
            public string WorkAreaListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.WorkAreaListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.WorkAreaListsRowIdColumn] = value;
                }
            }
            
            public string ReportTitle {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.ReportTitleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.ReportTitleColumn] = value;
                }
            }
            
            public System.DateTime DateTime {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGArxtReport.DateTimeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.DateTimeColumn] = value;
                }
            }
            
            public string rxtReportReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.rxtReportReferenceIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.rxtReportReferenceIdColumn] = value;
                }
            }
            
            public string SeverityReputationListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.SeverityReputationListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.SeverityReputationListsRowIdColumn] = value;
                }
            }
            
            public System.Guid rowguid {
                get {
                    try {
                        return ((System.Guid)(this[this.tableGArxtReport.rowguidColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.rowguidColumn] = value;
                }
            }
            
            public bool HasMaritimeReport {
                get {
                    try {
                        return ((bool)(this[this.tableGArxtReport.HasMaritimeReportColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.HasMaritimeReportColumn] = value;
                }
            }
            
            public System.DateTime ReportDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGArxtReport.ReportDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.ReportDateColumn] = value;
                }
            }
            
            public bool IsIncident {
                get {
                    try {
                        return ((bool)(this[this.tableGArxtReport.IsIncidentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.IsIncidentColumn] = value;
                }
            }
            
            public bool IsRisk {
                get {
                    try {
                        return ((bool)(this[this.tableGArxtReport.IsRiskColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.IsRiskColumn] = value;
                }
            }
            
            public bool IsEquipmentDamage {
                get {
                    try {
                        return ((bool)(this[this.tableGArxtReport.IsEquipmentDamageColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.IsEquipmentDamageColumn] = value;
                }
            }
            
            public bool IsEnvironmentalDamage {
                get {
                    try {
                        return ((bool)(this[this.tableGArxtReport.IsEnvironmentalDamageColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.IsEnvironmentalDamageColumn] = value;
                }
            }
            
            public bool HasInitialReport {
                get {
                    try {
                        return ((bool)(this[this.tableGArxtReport.HasInitialReportColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.HasInitialReportColumn] = value;
                }
            }
            
            public string TargetPotentialListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.TargetPotentialListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.TargetPotentialListsRowIdColumn] = value;
                }
            }
            
            public string TargetSeverityAssetsListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.TargetSeverityAssetsListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.TargetSeverityAssetsListsRowIdColumn] = value;
                }
            }
            
            public string TargetSeverityEnvironmentListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.TargetSeverityEnvironmentListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.TargetSeverityEnvironmentListsRowIdColumn] = value;
                }
            }
            
            public string TargetSeverityReputationListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.TargetSeverityReputationListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.TargetSeverityReputationListsRowIdColumn] = value;
                }
            }
            
            public string TargetSeverityPeopleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.TargetSeverityPeopleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.TargetSeverityPeopleListsRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateMitigationCompleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGArxtReport.DateMitigationCompletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.DateMitigationCompletedColumn] = value;
                }
            }
            
            public System.DateTime DateMitigationEstimated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGArxtReport.DateMitigationEstimatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.DateMitigationEstimatedColumn] = value;
                }
            }
            
            public bool CaptainIsInformed {
                get {
                    try {
                        return ((bool)(this[this.tableGArxtReport.CaptainIsInformedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.CaptainIsInformedColumn] = value;
                }
            }
            
            public bool ClientIsInformed {
                get {
                    try {
                        return ((bool)(this[this.tableGArxtReport.ClientIsInformedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.ClientIsInformedColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGArxtReport.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGArxtReport.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGArxtReport.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGArxtReport.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGArxtReport.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGArxtReport.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGArxtReport.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGArxtReport.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGArxtReport.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGArxtReport.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGArxtReport.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGArxtReport.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGArxtReport.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGArxtReport.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGArxtReport.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGArxtReport.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGArxtReport.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGArxtReport.IntFree3Column] = value;
                }
            }
            
            public bool IsClassificationListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.ClassificationListsRowIdColumn);
            }
            
            public void SetClassificationListsRowIdNull() {
                this[this.tableGArxtReport.ClassificationListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsContributionFactorToTheIncidentNull() {
                return this.IsNull(this.tableGArxtReport.ContributionFactorToTheIncidentColumn);
            }
            
            public void SetContributionFactorToTheIncidentNull() {
                this[this.tableGArxtReport.ContributionFactorToTheIncidentColumn] = System.Convert.DBNull;
            }
            
            public bool IsDamagedEquipmentNull() {
                return this.IsNull(this.tableGArxtReport.DamagedEquipmentColumn);
            }
            
            public void SetDamagedEquipmentNull() {
                this[this.tableGArxtReport.DamagedEquipmentColumn] = System.Convert.DBNull;
            }
            
            public bool IsDepartmentListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.DepartmentListsRowIdColumn);
            }
            
            public void SetDepartmentListsRowIdNull() {
                this[this.tableGArxtReport.DepartmentListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGArxtReport.DescriptionColumn);
            }
            
            public void SetDescriptionNull() {
                this[this.tableGArxtReport.DescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsEyeWitnessNull() {
                return this.IsNull(this.tableGArxtReport.EyeWitnessColumn);
            }
            
            public void SetEyeWitnessNull() {
                this[this.tableGArxtReport.EyeWitnessColumn] = System.Convert.DBNull;
            }
            
            public bool IsImmediateActionNull() {
                return this.IsNull(this.tableGArxtReport.ImmediateActionColumn);
            }
            
            public void SetImmediateActionNull() {
                this[this.tableGArxtReport.ImmediateActionColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumberOfDaysLostNull() {
                return this.IsNull(this.tableGArxtReport.NumberOfDaysLostColumn);
            }
            
            public void SetNumberOfDaysLostNull() {
                this[this.tableGArxtReport.NumberOfDaysLostColumn] = System.Convert.DBNull;
            }
            
            public bool IsPossibleConsequenceNull() {
                return this.IsNull(this.tableGArxtReport.PossibleConsequenceColumn);
            }
            
            public void SetPossibleConsequenceNull() {
                this[this.tableGArxtReport.PossibleConsequenceColumn] = System.Convert.DBNull;
            }
            
            public bool IsPotentialListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.PotentialListsRowIdColumn);
            }
            
            public void SetPotentialListsRowIdNull() {
                this[this.tableGArxtReport.PotentialListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsReferenceIdPrefixNull() {
                return this.IsNull(this.tableGArxtReport.ReferenceIdPrefixColumn);
            }
            
            public void SetReferenceIdPrefixNull() {
                this[this.tableGArxtReport.ReferenceIdPrefixColumn] = System.Convert.DBNull;
            }
            
            public bool IsReporterNull() {
                return this.IsNull(this.tableGArxtReport.ReporterColumn);
            }
            
            public void SetReporterNull() {
                this[this.tableGArxtReport.ReporterColumn] = System.Convert.DBNull;
            }
            
            public bool IsReporterJobTitleListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.ReporterJobTitleListsRowIdColumn);
            }
            
            public void SetReporterJobTitleListsRowIdNull() {
                this[this.tableGArxtReport.ReporterJobTitleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsRiskEvaluationNull() {
                return this.IsNull(this.tableGArxtReport.RiskEvaluationColumn);
            }
            
            public void SetRiskEvaluationNull() {
                this[this.tableGArxtReport.RiskEvaluationColumn] = System.Convert.DBNull;
            }
            
            public bool IsSequenceOfTheIncidentNull() {
                return this.IsNull(this.tableGArxtReport.SequenceOfTheIncidentColumn);
            }
            
            public void SetSequenceOfTheIncidentNull() {
                this[this.tableGArxtReport.SequenceOfTheIncidentColumn] = System.Convert.DBNull;
            }
            
            public bool IsSeverityAssetsListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.SeverityAssetsListsRowIdColumn);
            }
            
            public void SetSeverityAssetsListsRowIdNull() {
                this[this.tableGArxtReport.SeverityAssetsListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSeverityEnvironmentListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.SeverityEnvironmentListsRowIdColumn);
            }
            
            public void SetSeverityEnvironmentListsRowIdNull() {
                this[this.tableGArxtReport.SeverityEnvironmentListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSeverityPeopleListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.SeverityPeopleListsRowIdColumn);
            }
            
            public void SetSeverityPeopleListsRowIdNull() {
                this[this.tableGArxtReport.SeverityPeopleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsStatusListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.StatusListsRowIdColumn);
            }
            
            public void SetStatusListsRowIdNull() {
                this[this.tableGArxtReport.StatusListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSuggestedCorrectiveActionNull() {
                return this.IsNull(this.tableGArxtReport.SuggestedCorrectiveActionColumn);
            }
            
            public void SetSuggestedCorrectiveActionNull() {
                this[this.tableGArxtReport.SuggestedCorrectiveActionColumn] = System.Convert.DBNull;
            }
            
            public bool IsTypeOfDamageListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.TypeOfDamageListsRowIdColumn);
            }
            
            public void SetTypeOfDamageListsRowIdNull() {
                this[this.tableGArxtReport.TypeOfDamageListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTypeOfHIPListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.TypeOfHIPListsRowIdColumn);
            }
            
            public void SetTypeOfHIPListsRowIdNull() {
                this[this.tableGArxtReport.TypeOfHIPListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTypeOfIncidentListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.TypeOfIncidentListsRowIdColumn);
            }
            
            public void SetTypeOfIncidentListsRowIdNull() {
                this[this.tableGArxtReport.TypeOfIncidentListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsWorkAreaListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.WorkAreaListsRowIdColumn);
            }
            
            public void SetWorkAreaListsRowIdNull() {
                this[this.tableGArxtReport.WorkAreaListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsReportTitleNull() {
                return this.IsNull(this.tableGArxtReport.ReportTitleColumn);
            }
            
            public void SetReportTitleNull() {
                this[this.tableGArxtReport.ReportTitleColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeNull() {
                return this.IsNull(this.tableGArxtReport.DateTimeColumn);
            }
            
            public void SetDateTimeNull() {
                this[this.tableGArxtReport.DateTimeColumn] = System.Convert.DBNull;
            }
            
            public bool IsrxtReportReferenceIdNull() {
                return this.IsNull(this.tableGArxtReport.rxtReportReferenceIdColumn);
            }
            
            public void SetrxtReportReferenceIdNull() {
                this[this.tableGArxtReport.rxtReportReferenceIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSeverityReputationListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.SeverityReputationListsRowIdColumn);
            }
            
            public void SetSeverityReputationListsRowIdNull() {
                this[this.tableGArxtReport.SeverityReputationListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGArxtReport.rowguidColumn);
            }
            
            public void SetrowguidNull() {
                this[this.tableGArxtReport.rowguidColumn] = System.Convert.DBNull;
            }
            
            public bool IsHasMaritimeReportNull() {
                return this.IsNull(this.tableGArxtReport.HasMaritimeReportColumn);
            }
            
            public void SetHasMaritimeReportNull() {
                this[this.tableGArxtReport.HasMaritimeReportColumn] = System.Convert.DBNull;
            }
            
            public bool IsReportDateNull() {
                return this.IsNull(this.tableGArxtReport.ReportDateColumn);
            }
            
            public void SetReportDateNull() {
                this[this.tableGArxtReport.ReportDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsIncidentNull() {
                return this.IsNull(this.tableGArxtReport.IsIncidentColumn);
            }
            
            public void SetIsIncidentNull() {
                this[this.tableGArxtReport.IsIncidentColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsRiskNull() {
                return this.IsNull(this.tableGArxtReport.IsRiskColumn);
            }
            
            public void SetIsRiskNull() {
                this[this.tableGArxtReport.IsRiskColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsEquipmentDamageNull() {
                return this.IsNull(this.tableGArxtReport.IsEquipmentDamageColumn);
            }
            
            public void SetIsEquipmentDamageNull() {
                this[this.tableGArxtReport.IsEquipmentDamageColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsEnvironmentalDamageNull() {
                return this.IsNull(this.tableGArxtReport.IsEnvironmentalDamageColumn);
            }
            
            public void SetIsEnvironmentalDamageNull() {
                this[this.tableGArxtReport.IsEnvironmentalDamageColumn] = System.Convert.DBNull;
            }
            
            public bool IsHasInitialReportNull() {
                return this.IsNull(this.tableGArxtReport.HasInitialReportColumn);
            }
            
            public void SetHasInitialReportNull() {
                this[this.tableGArxtReport.HasInitialReportColumn] = System.Convert.DBNull;
            }
            
            public bool IsTargetPotentialListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.TargetPotentialListsRowIdColumn);
            }
            
            public void SetTargetPotentialListsRowIdNull() {
                this[this.tableGArxtReport.TargetPotentialListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTargetSeverityAssetsListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.TargetSeverityAssetsListsRowIdColumn);
            }
            
            public void SetTargetSeverityAssetsListsRowIdNull() {
                this[this.tableGArxtReport.TargetSeverityAssetsListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTargetSeverityEnvironmentListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.TargetSeverityEnvironmentListsRowIdColumn);
            }
            
            public void SetTargetSeverityEnvironmentListsRowIdNull() {
                this[this.tableGArxtReport.TargetSeverityEnvironmentListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTargetSeverityReputationListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.TargetSeverityReputationListsRowIdColumn);
            }
            
            public void SetTargetSeverityReputationListsRowIdNull() {
                this[this.tableGArxtReport.TargetSeverityReputationListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTargetSeverityPeopleListsRowIdNull() {
                return this.IsNull(this.tableGArxtReport.TargetSeverityPeopleListsRowIdColumn);
            }
            
            public void SetTargetSeverityPeopleListsRowIdNull() {
                this[this.tableGArxtReport.TargetSeverityPeopleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateMitigationCompletedNull() {
                return this.IsNull(this.tableGArxtReport.DateMitigationCompletedColumn);
            }
            
            public void SetDateMitigationCompletedNull() {
                this[this.tableGArxtReport.DateMitigationCompletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateMitigationEstimatedNull() {
                return this.IsNull(this.tableGArxtReport.DateMitigationEstimatedColumn);
            }
            
            public void SetDateMitigationEstimatedNull() {
                this[this.tableGArxtReport.DateMitigationEstimatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCaptainIsInformedNull() {
                return this.IsNull(this.tableGArxtReport.CaptainIsInformedColumn);
            }
            
            public void SetCaptainIsInformedNull() {
                this[this.tableGArxtReport.CaptainIsInformedColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientIsInformedNull() {
                return this.IsNull(this.tableGArxtReport.ClientIsInformedColumn);
            }
            
            public void SetClientIsInformedNull() {
                this[this.tableGArxtReport.ClientIsInformedColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGArxtReport.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGArxtReport.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGArxtReport.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGArxtReport.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGArxtReport.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGArxtReport.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGArxtReport.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGArxtReport.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGArxtReport.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGArxtReport.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGArxtReport.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGArxtReport.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGArxtReport.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGArxtReport.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGArxtReport.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGArxtReport.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGArxtReport.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGArxtReport.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGArxtReport.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGArxtReport.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGArxtReport.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGArxtReport.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGArxtReport.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGArxtReport.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGArxtReport.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGArxtReport.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGArxtReport.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGArxtReport.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGArxtReport.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGArxtReport.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGArxtReport.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGArxtReport.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGArxtReport.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGArxtReport.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGArxtReport.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGArxtReport.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGArxtReport.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGArxtReport.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GArxtReportRowChangeEvent : EventArgs {
            
            private GArxtReportRow eventRow;
            
            private DataRowAction eventAction;
            
            public GArxtReportRowChangeEvent(GArxtReportRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GArxtReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAAuditDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnAuditRowId;
            
            private DataColumn columnAuditReferenceId;
            
            private DataColumn columnAuditor;
            
            private DataColumn columnDateOfAudit;
            
            private DataColumn columnName;
            
            private DataColumn columnShortDescription;
            
            private DataColumn columnAuditStatusListsRowId;
            
            private DataColumn columnTypeOfAuditListsRowId;
            
            private DataColumn columnReferenceIdPrefix;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GAAuditDataTable() : 
                    base("GAAudit") {
                this.InitClass();
            }
            
            internal GAAuditDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn AuditRowIdColumn {
                get {
                    return this.columnAuditRowId;
                }
            }
            
            internal DataColumn AuditReferenceIdColumn {
                get {
                    return this.columnAuditReferenceId;
                }
            }
            
            internal DataColumn AuditorColumn {
                get {
                    return this.columnAuditor;
                }
            }
            
            internal DataColumn DateOfAuditColumn {
                get {
                    return this.columnDateOfAudit;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn ShortDescriptionColumn {
                get {
                    return this.columnShortDescription;
                }
            }
            
            internal DataColumn AuditStatusListsRowIdColumn {
                get {
                    return this.columnAuditStatusListsRowId;
                }
            }
            
            internal DataColumn TypeOfAuditListsRowIdColumn {
                get {
                    return this.columnTypeOfAuditListsRowId;
                }
            }
            
            internal DataColumn ReferenceIdPrefixColumn {
                get {
                    return this.columnReferenceIdPrefix;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GAAuditRow this[int index] {
                get {
                    return ((GAAuditRow)(this.Rows[index]));
                }
            }
            
            public event GAAuditRowChangeEventHandler GAAuditRowChanged;
            
            public event GAAuditRowChangeEventHandler GAAuditRowChanging;
            
            public event GAAuditRowChangeEventHandler GAAuditRowDeleted;
            
            public event GAAuditRowChangeEventHandler GAAuditRowDeleting;
            
            public void AddGAAuditRow(GAAuditRow row) {
                this.Rows.Add(row);
            }
            
            public GAAuditRow AddGAAuditRow(
                        string AuditReferenceId, 
                        string Auditor, 
                        System.DateTime DateOfAudit, 
                        string Name, 
                        string ShortDescription, 
                        string AuditStatusListsRowId, 
                        string TypeOfAuditListsRowId, 
                        string ReferenceIdPrefix, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAAuditRow rowGAAuditRow = ((GAAuditRow)(this.NewRow()));
                rowGAAuditRow.ItemArray = new object[] {
                        null,
                        AuditReferenceId,
                        Auditor,
                        DateOfAudit,
                        Name,
                        ShortDescription,
                        AuditStatusListsRowId,
                        TypeOfAuditListsRowId,
                        ReferenceIdPrefix,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAAuditRow);
                return rowGAAuditRow;
            }
            
            public GAAuditRow FindByAuditRowId(int AuditRowId) {
                return ((GAAuditRow)(this.Rows.Find(new object[] {
                            AuditRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAAuditDataTable cln = ((GAAuditDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAAuditDataTable();
            }
            
            internal void InitVars() {
                this.columnAuditRowId = this.Columns["AuditRowId"];
                this.columnAuditReferenceId = this.Columns["AuditReferenceId"];
                this.columnAuditor = this.Columns["Auditor"];
                this.columnDateOfAudit = this.Columns["DateOfAudit"];
                this.columnName = this.Columns["Name"];
                this.columnShortDescription = this.Columns["ShortDescription"];
                this.columnAuditStatusListsRowId = this.Columns["AuditStatusListsRowId"];
                this.columnTypeOfAuditListsRowId = this.Columns["TypeOfAuditListsRowId"];
                this.columnReferenceIdPrefix = this.Columns["ReferenceIdPrefix"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnAuditRowId = new DataColumn("AuditRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAuditRowId);
                this.columnAuditReferenceId = new DataColumn("AuditReferenceId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAuditReferenceId);
                this.columnAuditor = new DataColumn("Auditor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAuditor);
                this.columnDateOfAudit = new DataColumn("DateOfAudit", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateOfAudit);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnShortDescription = new DataColumn("ShortDescription", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShortDescription);
                this.columnAuditStatusListsRowId = new DataColumn("AuditStatusListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAuditStatusListsRowId);
                this.columnTypeOfAuditListsRowId = new DataColumn("TypeOfAuditListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTypeOfAuditListsRowId);
                this.columnReferenceIdPrefix = new DataColumn("ReferenceIdPrefix", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReferenceIdPrefix);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("AuditDSKey1", new DataColumn[] {
                                this.columnAuditRowId}, true));
                this.columnAuditRowId.AutoIncrement = true;
                this.columnAuditRowId.AllowDBNull = false;
                this.columnAuditRowId.ReadOnly = true;
                this.columnAuditRowId.Unique = true;
            }
            
            public GAAuditRow NewGAAuditRow() {
                return ((GAAuditRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAAuditRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAAuditRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAAuditRowChanged != null)) {
                    this.GAAuditRowChanged(this, new GAAuditRowChangeEvent(((GAAuditRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAAuditRowChanging != null)) {
                    this.GAAuditRowChanging(this, new GAAuditRowChangeEvent(((GAAuditRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAAuditRowDeleted != null)) {
                    this.GAAuditRowDeleted(this, new GAAuditRowChangeEvent(((GAAuditRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAAuditRowDeleting != null)) {
                    this.GAAuditRowDeleting(this, new GAAuditRowChangeEvent(((GAAuditRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAAuditRow(GAAuditRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAAuditRow : DataRow {
            
            private GAAuditDataTable tableGAAudit;
            
            internal GAAuditRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAAudit = ((GAAuditDataTable)(this.Table));
            }
            
            public int AuditRowId {
                get {
                    return ((int)(this[this.tableGAAudit.AuditRowIdColumn]));
                }
                set {
                    this[this.tableGAAudit.AuditRowIdColumn] = value;
                }
            }
            
            public string AuditReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGAAudit.AuditReferenceIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.AuditReferenceIdColumn] = value;
                }
            }
            
            public string Auditor {
                get {
                    try {
                        return ((string)(this[this.tableGAAudit.AuditorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.AuditorColumn] = value;
                }
            }
            
            public System.DateTime DateOfAudit {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAAudit.DateOfAuditColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.DateOfAuditColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGAAudit.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.NameColumn] = value;
                }
            }
            
            public string ShortDescription {
                get {
                    try {
                        return ((string)(this[this.tableGAAudit.ShortDescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.ShortDescriptionColumn] = value;
                }
            }
            
            public string AuditStatusListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAAudit.AuditStatusListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.AuditStatusListsRowIdColumn] = value;
                }
            }
            
            public string TypeOfAuditListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAAudit.TypeOfAuditListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.TypeOfAuditListsRowIdColumn] = value;
                }
            }
            
            public string ReferenceIdPrefix {
                get {
                    try {
                        return ((string)(this[this.tableGAAudit.ReferenceIdPrefixColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.ReferenceIdPrefixColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAAudit.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAAudit.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAAudit.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAAudit.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAAudit.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAAudit.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAAudit.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAAudit.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAAudit.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAAudit.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAAudit.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAAudit.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAAudit.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAAudit.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAAudit.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAAudit.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAAudit.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAAudit.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAAudit.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAAudit.IntFree3Column] = value;
                }
            }
            
            public bool IsAuditReferenceIdNull() {
                return this.IsNull(this.tableGAAudit.AuditReferenceIdColumn);
            }
            
            public void SetAuditReferenceIdNull() {
                this[this.tableGAAudit.AuditReferenceIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsAuditorNull() {
                return this.IsNull(this.tableGAAudit.AuditorColumn);
            }
            
            public void SetAuditorNull() {
                this[this.tableGAAudit.AuditorColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateOfAuditNull() {
                return this.IsNull(this.tableGAAudit.DateOfAuditColumn);
            }
            
            public void SetDateOfAuditNull() {
                this[this.tableGAAudit.DateOfAuditColumn] = System.Convert.DBNull;
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tableGAAudit.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tableGAAudit.NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsShortDescriptionNull() {
                return this.IsNull(this.tableGAAudit.ShortDescriptionColumn);
            }
            
            public void SetShortDescriptionNull() {
                this[this.tableGAAudit.ShortDescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsAuditStatusListsRowIdNull() {
                return this.IsNull(this.tableGAAudit.AuditStatusListsRowIdColumn);
            }
            
            public void SetAuditStatusListsRowIdNull() {
                this[this.tableGAAudit.AuditStatusListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTypeOfAuditListsRowIdNull() {
                return this.IsNull(this.tableGAAudit.TypeOfAuditListsRowIdColumn);
            }
            
            public void SetTypeOfAuditListsRowIdNull() {
                this[this.tableGAAudit.TypeOfAuditListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsReferenceIdPrefixNull() {
                return this.IsNull(this.tableGAAudit.ReferenceIdPrefixColumn);
            }
            
            public void SetReferenceIdPrefixNull() {
                this[this.tableGAAudit.ReferenceIdPrefixColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAAudit.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGAAudit.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAAudit.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGAAudit.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAAudit.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGAAudit.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAAudit.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGAAudit.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAAudit.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGAAudit.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAAudit.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGAAudit.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAAudit.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGAAudit.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAAudit.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGAAudit.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAAudit.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGAAudit.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAAudit.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGAAudit.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAAudit.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGAAudit.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAAudit.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGAAudit.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAAudit.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGAAudit.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAAudit.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGAAudit.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAAudit.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGAAudit.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAAudit.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGAAudit.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAAudit.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGAAudit.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAAudit.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGAAudit.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAAudit.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGAAudit.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAAuditRowChangeEvent : EventArgs {
            
            private GAAuditRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAAuditRowChangeEvent(GAAuditRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAAuditRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAFileDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnFileRowId;
            
            private DataColumn columnFileId;
            
            private DataColumn columnFileName;
            
            private DataColumn columnDescription;
            
            private DataColumn columnOwner;
            
            private DataColumn columnMimetype;
            
            private DataColumn columnVersion;
            
            private DataColumn columnDate;
            
            private DataColumn columnurl;
            
            private DataColumn columnDateExpire;
            
            private DataColumn columnResponsible;
            
            private DataColumn columnResponsibleRoleListsRowId;
            
            private DataColumn columnDocumentStatusListsRowId;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GAFileDataTable() : 
                    base("GAFile") {
                this.InitClass();
            }
            
            internal GAFileDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn FileRowIdColumn {
                get {
                    return this.columnFileRowId;
                }
            }
            
            internal DataColumn FileIdColumn {
                get {
                    return this.columnFileId;
                }
            }
            
            internal DataColumn FileNameColumn {
                get {
                    return this.columnFileName;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn OwnerColumn {
                get {
                    return this.columnOwner;
                }
            }
            
            internal DataColumn MimetypeColumn {
                get {
                    return this.columnMimetype;
                }
            }
            
            internal DataColumn VersionColumn {
                get {
                    return this.columnVersion;
                }
            }
            
            internal DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            internal DataColumn urlColumn {
                get {
                    return this.columnurl;
                }
            }
            
            internal DataColumn DateExpireColumn {
                get {
                    return this.columnDateExpire;
                }
            }
            
            internal DataColumn ResponsibleColumn {
                get {
                    return this.columnResponsible;
                }
            }
            
            internal DataColumn ResponsibleRoleListsRowIdColumn {
                get {
                    return this.columnResponsibleRoleListsRowId;
                }
            }
            
            internal DataColumn DocumentStatusListsRowIdColumn {
                get {
                    return this.columnDocumentStatusListsRowId;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GAFileRow this[int index] {
                get {
                    return ((GAFileRow)(this.Rows[index]));
                }
            }
            
            public event GAFileRowChangeEventHandler GAFileRowChanged;
            
            public event GAFileRowChangeEventHandler GAFileRowChanging;
            
            public event GAFileRowChangeEventHandler GAFileRowDeleted;
            
            public event GAFileRowChangeEventHandler GAFileRowDeleting;
            
            public void AddGAFileRow(GAFileRow row) {
                this.Rows.Add(row);
            }
            
            public GAFileRow AddGAFileRow(
                        string FileId, 
                        string FileName, 
                        string Description, 
                        string Owner, 
                        string Mimetype, 
                        string Version, 
                        System.DateTime Date, 
                        string url, 
                        System.DateTime DateExpire, 
                        string Responsible, 
                        string ResponsibleRoleListsRowId, 
                        string DocumentStatusListsRowId, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAFileRow rowGAFileRow = ((GAFileRow)(this.NewRow()));
                rowGAFileRow.ItemArray = new object[] {
                        null,
                        FileId,
                        FileName,
                        Description,
                        Owner,
                        Mimetype,
                        Version,
                        Date,
                        url,
                        DateExpire,
                        Responsible,
                        ResponsibleRoleListsRowId,
                        DocumentStatusListsRowId,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAFileRow);
                return rowGAFileRow;
            }
            
            public GAFileRow FindByFileRowId(int FileRowId) {
                return ((GAFileRow)(this.Rows.Find(new object[] {
                            FileRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAFileDataTable cln = ((GAFileDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAFileDataTable();
            }
            
            internal void InitVars() {
                this.columnFileRowId = this.Columns["FileRowId"];
                this.columnFileId = this.Columns["FileId"];
                this.columnFileName = this.Columns["FileName"];
                this.columnDescription = this.Columns["Description"];
                this.columnOwner = this.Columns["Owner"];
                this.columnMimetype = this.Columns["Mimetype"];
                this.columnVersion = this.Columns["Version"];
                this.columnDate = this.Columns["Date"];
                this.columnurl = this.Columns["url"];
                this.columnDateExpire = this.Columns["DateExpire"];
                this.columnResponsible = this.Columns["Responsible"];
                this.columnResponsibleRoleListsRowId = this.Columns["ResponsibleRoleListsRowId"];
                this.columnDocumentStatusListsRowId = this.Columns["DocumentStatusListsRowId"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnFileRowId = new DataColumn("FileRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFileRowId);
                this.columnFileId = new DataColumn("FileId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFileId);
                this.columnFileName = new DataColumn("FileName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFileName);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnOwner = new DataColumn("Owner", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOwner);
                this.columnMimetype = new DataColumn("Mimetype", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMimetype);
                this.columnVersion = new DataColumn("Version", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVersion);
                this.columnDate = new DataColumn("Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDate);
                this.columnurl = new DataColumn("url", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnurl);
                this.columnDateExpire = new DataColumn("DateExpire", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateExpire);
                this.columnResponsible = new DataColumn("Responsible", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResponsible);
                this.columnResponsibleRoleListsRowId = new DataColumn("ResponsibleRoleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResponsibleRoleListsRowId);
                this.columnDocumentStatusListsRowId = new DataColumn("DocumentStatusListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDocumentStatusListsRowId);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[] {
                                this.columnFileRowId}, true));
                this.columnFileRowId.AutoIncrement = true;
                this.columnFileRowId.AllowDBNull = false;
                this.columnFileRowId.ReadOnly = true;
                this.columnFileRowId.Unique = true;
            }
            
            public GAFileRow NewGAFileRow() {
                return ((GAFileRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAFileRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAFileRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAFileRowChanged != null)) {
                    this.GAFileRowChanged(this, new GAFileRowChangeEvent(((GAFileRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAFileRowChanging != null)) {
                    this.GAFileRowChanging(this, new GAFileRowChangeEvent(((GAFileRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAFileRowDeleted != null)) {
                    this.GAFileRowDeleted(this, new GAFileRowChangeEvent(((GAFileRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAFileRowDeleting != null)) {
                    this.GAFileRowDeleting(this, new GAFileRowChangeEvent(((GAFileRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAFileRow(GAFileRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAFileRow : DataRow {
            
            private GAFileDataTable tableGAFile;
            
            internal GAFileRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAFile = ((GAFileDataTable)(this.Table));
            }
            
            public int FileRowId {
                get {
                    return ((int)(this[this.tableGAFile.FileRowIdColumn]));
                }
                set {
                    this[this.tableGAFile.FileRowIdColumn] = value;
                }
            }
            
            public string FileId {
                get {
                    try {
                        return ((string)(this[this.tableGAFile.FileIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.FileIdColumn] = value;
                }
            }
            
            public string FileName {
                get {
                    try {
                        return ((string)(this[this.tableGAFile.FileNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.FileNameColumn] = value;
                }
            }
            
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGAFile.DescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.DescriptionColumn] = value;
                }
            }
            
            public string Owner {
                get {
                    try {
                        return ((string)(this[this.tableGAFile.OwnerColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.OwnerColumn] = value;
                }
            }
            
            public string Mimetype {
                get {
                    try {
                        return ((string)(this[this.tableGAFile.MimetypeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.MimetypeColumn] = value;
                }
            }
            
            public string Version {
                get {
                    try {
                        return ((string)(this[this.tableGAFile.VersionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.VersionColumn] = value;
                }
            }
            
            public System.DateTime Date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAFile.DateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.DateColumn] = value;
                }
            }
            
            public string url {
                get {
                    try {
                        return ((string)(this[this.tableGAFile.urlColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.urlColumn] = value;
                }
            }
            
            public System.DateTime DateExpire {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAFile.DateExpireColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.DateExpireColumn] = value;
                }
            }
            
            public string Responsible {
                get {
                    try {
                        return ((string)(this[this.tableGAFile.ResponsibleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.ResponsibleColumn] = value;
                }
            }
            
            public string ResponsibleRoleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAFile.ResponsibleRoleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.ResponsibleRoleListsRowIdColumn] = value;
                }
            }
            
            public string DocumentStatusListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAFile.DocumentStatusListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.DocumentStatusListsRowIdColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAFile.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAFile.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAFile.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAFile.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAFile.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAFile.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAFile.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAFile.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAFile.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAFile.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAFile.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAFile.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAFile.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAFile.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAFile.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAFile.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAFile.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAFile.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAFile.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFile.IntFree3Column] = value;
                }
            }
            
            public bool IsFileIdNull() {
                return this.IsNull(this.tableGAFile.FileIdColumn);
            }
            
            public void SetFileIdNull() {
                this[this.tableGAFile.FileIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsFileNameNull() {
                return this.IsNull(this.tableGAFile.FileNameColumn);
            }
            
            public void SetFileNameNull() {
                this[this.tableGAFile.FileNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGAFile.DescriptionColumn);
            }
            
            public void SetDescriptionNull() {
                this[this.tableGAFile.DescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsOwnerNull() {
                return this.IsNull(this.tableGAFile.OwnerColumn);
            }
            
            public void SetOwnerNull() {
                this[this.tableGAFile.OwnerColumn] = System.Convert.DBNull;
            }
            
            public bool IsMimetypeNull() {
                return this.IsNull(this.tableGAFile.MimetypeColumn);
            }
            
            public void SetMimetypeNull() {
                this[this.tableGAFile.MimetypeColumn] = System.Convert.DBNull;
            }
            
            public bool IsVersionNull() {
                return this.IsNull(this.tableGAFile.VersionColumn);
            }
            
            public void SetVersionNull() {
                this[this.tableGAFile.VersionColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateNull() {
                return this.IsNull(this.tableGAFile.DateColumn);
            }
            
            public void SetDateNull() {
                this[this.tableGAFile.DateColumn] = System.Convert.DBNull;
            }
            
            public bool IsurlNull() {
                return this.IsNull(this.tableGAFile.urlColumn);
            }
            
            public void SeturlNull() {
                this[this.tableGAFile.urlColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateExpireNull() {
                return this.IsNull(this.tableGAFile.DateExpireColumn);
            }
            
            public void SetDateExpireNull() {
                this[this.tableGAFile.DateExpireColumn] = System.Convert.DBNull;
            }
            
            public bool IsResponsibleNull() {
                return this.IsNull(this.tableGAFile.ResponsibleColumn);
            }
            
            public void SetResponsibleNull() {
                this[this.tableGAFile.ResponsibleColumn] = System.Convert.DBNull;
            }
            
            public bool IsResponsibleRoleListsRowIdNull() {
                return this.IsNull(this.tableGAFile.ResponsibleRoleListsRowIdColumn);
            }
            
            public void SetResponsibleRoleListsRowIdNull() {
                this[this.tableGAFile.ResponsibleRoleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDocumentStatusListsRowIdNull() {
                return this.IsNull(this.tableGAFile.DocumentStatusListsRowIdColumn);
            }
            
            public void SetDocumentStatusListsRowIdNull() {
                this[this.tableGAFile.DocumentStatusListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAFile.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGAFile.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAFile.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGAFile.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAFile.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGAFile.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAFile.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGAFile.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAFile.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGAFile.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAFile.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGAFile.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAFile.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGAFile.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAFile.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGAFile.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAFile.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGAFile.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAFile.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGAFile.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAFile.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGAFile.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAFile.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGAFile.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAFile.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGAFile.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAFile.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGAFile.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAFile.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGAFile.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAFile.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGAFile.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAFile.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGAFile.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAFile.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGAFile.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAFile.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGAFile.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAFileRowChangeEvent : EventArgs {
            
            private GAFileRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAFileRowChangeEvent(GAFileRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAFileRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAManageChangeDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnManageChangeRowId;
            
            private DataColumn columnProjectRowId;
            
            private DataColumn columnLocationRowId;
            
            private DataColumn columnManageChangeReferenceId;
            
            private DataColumn columnDateOfRequest;
            
            private DataColumn columnDateEffective;
            
            private DataColumn columnIsContractual;
            
            private DataColumn columnTypeOfChangeRowId;
            
            private DataColumn columnDateOfRemoval;
            
            private DataColumn columnNatureOfChange;
            
            private DataColumn columnNatureOfChangeRowId;
            
            private DataColumn columnDescriptionCurrent;
            
            private DataColumn columnDescription;
            
            private DataColumn columnResponsibleRoleListsRowId;
            
            private DataColumn columnRequestorId;
            
            private DataColumn columnEndorserId;
            
            private DataColumn columnDateOfEndorsement;
            
            private DataColumn columnJustification;
            
            private DataColumn columnOnSiteRiskAssessmentCompleted;
            
            private DataColumn columnOnshoreRiskAssessmentCompleted;
            
            private DataColumn columnOnSiteJobSafetyAnalysisCompleted;
            
            private DataColumn columnApprovedByOnshoreManagement;
            
            private DataColumn columnOnSiteWorkInstructionCompleted;
            
            private DataColumn columnPotentialConsequence;
            
            private DataColumn columnMigration;
            
            private DataColumn columnTrainingRequired;
            
            private DataColumn columnTraining;
            
            private DataColumn columnCostOfChange;
            
            private DataColumn columnIncreasedRisk;
            
            private DataColumn columnComments;
            
            private DataColumn columnProposedById;
            
            private DataColumn columnDateOfProposal;
            
            private DataColumn columnReviewedById;
            
            private DataColumn columnDateOfReview;
            
            private DataColumn columnApprovalReviewedById1;
            
            private DataColumn columnApprovalRevieweDate1;
            
            private DataColumn columnApprovalReviewedById2;
            
            private DataColumn columnApprovalRevieweDate2;
            
            private DataColumn columnApprovalEndorsedById;
            
            private DataColumn columnApprovalEndorsedDate;
            
            private DataColumn columnApprovedById;
            
            private DataColumn columnApprovedDate;
            
            private DataColumn columnLessonsLearned;
            
            private DataColumn columnChangeCommunicatedById;
            
            private DataColumn columnDateChangeCommunicated;
            
            private DataColumn columnMethodOfCommunication;
            
            private DataColumn columnDocumentationChangesById;
            
            private DataColumn columnDateDocumentationChanges;
            
            private DataColumn columnDocumentsChanged;
            
            private DataColumn columnTrainingRequriementsCompletedById;
            
            private DataColumn columnDateTrainingRequriementsCompleted;
            
            private DataColumn columnTrainingConducted;
            
            private DataColumn columnRegulatoryPermitRequirementsCompletedById;
            
            private DataColumn columnDateRegulatoryPermitRequirementsCompleted;
            
            private DataColumn columnRegulatoryPermitRequirementsCompleted;
            
            private DataColumn columnChangeRequirementsCompletedById;
            
            private DataColumn columnDateChangeRequirementsCompleted;
            
            private DataColumn columnChangeRequirementsCompletedComments;
            
            private DataColumn columnLessonsLearnedCommunicatedById;
            
            private DataColumn columnDateLessonsLearnedCommunicated;
            
            private DataColumn columnChangeReportCloseOutDocumentationById;
            
            private DataColumn columnDateChangeReportCloseOutDocumentation;
            
            private DataColumn columnApprovalForChangeReportCloseOutById;
            
            private DataColumn columnDateApprovalForChangeReportCloseOut;
            
            private DataColumn columnManageChangeStatusListsRowId;
            
            private DataColumn columnInitiationCompletedSwitch;
            
            private DataColumn columnEvaluationCompletedSwitch;
            
            private DataColumn columnApprovalsCompletedSwitch;
            
            private DataColumn columnImplementationCompletedSwitch;
            
            private DataColumn columnCloseOutCompletedSwitch;
            
            private DataColumn columnRejectedSwitch;
            
            private DataColumn columnSwitchFreeSwitch;
            
            private DataColumn columnAcceptedByMaster;
            
            private DataColumn columnComputedExposure;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GAManageChangeDataTable() : 
                    base("GAManageChange") {
                this.InitClass();
            }
            
            internal GAManageChangeDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ManageChangeRowIdColumn {
                get {
                    return this.columnManageChangeRowId;
                }
            }
            
            internal DataColumn ProjectRowIdColumn {
                get {
                    return this.columnProjectRowId;
                }
            }
            
            internal DataColumn LocationRowIdColumn {
                get {
                    return this.columnLocationRowId;
                }
            }
            
            internal DataColumn ManageChangeReferenceIdColumn {
                get {
                    return this.columnManageChangeReferenceId;
                }
            }
            
            internal DataColumn DateOfRequestColumn {
                get {
                    return this.columnDateOfRequest;
                }
            }
            
            internal DataColumn DateEffectiveColumn {
                get {
                    return this.columnDateEffective;
                }
            }
            
            internal DataColumn IsContractualColumn {
                get {
                    return this.columnIsContractual;
                }
            }
            
            internal DataColumn TypeOfChangeRowIdColumn {
                get {
                    return this.columnTypeOfChangeRowId;
                }
            }
            
            internal DataColumn DateOfRemovalColumn {
                get {
                    return this.columnDateOfRemoval;
                }
            }
            
            internal DataColumn NatureOfChangeColumn {
                get {
                    return this.columnNatureOfChange;
                }
            }
            
            internal DataColumn NatureOfChangeRowIdColumn {
                get {
                    return this.columnNatureOfChangeRowId;
                }
            }
            
            internal DataColumn DescriptionCurrentColumn {
                get {
                    return this.columnDescriptionCurrent;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn ResponsibleRoleListsRowIdColumn {
                get {
                    return this.columnResponsibleRoleListsRowId;
                }
            }
            
            internal DataColumn RequestorIdColumn {
                get {
                    return this.columnRequestorId;
                }
            }
            
            internal DataColumn EndorserIdColumn {
                get {
                    return this.columnEndorserId;
                }
            }
            
            internal DataColumn DateOfEndorsementColumn {
                get {
                    return this.columnDateOfEndorsement;
                }
            }
            
            internal DataColumn JustificationColumn {
                get {
                    return this.columnJustification;
                }
            }
            
            internal DataColumn OnSiteRiskAssessmentCompletedColumn {
                get {
                    return this.columnOnSiteRiskAssessmentCompleted;
                }
            }
            
            internal DataColumn OnshoreRiskAssessmentCompletedColumn {
                get {
                    return this.columnOnshoreRiskAssessmentCompleted;
                }
            }
            
            internal DataColumn OnSiteJobSafetyAnalysisCompletedColumn {
                get {
                    return this.columnOnSiteJobSafetyAnalysisCompleted;
                }
            }
            
            internal DataColumn ApprovedByOnshoreManagementColumn {
                get {
                    return this.columnApprovedByOnshoreManagement;
                }
            }
            
            internal DataColumn OnSiteWorkInstructionCompletedColumn {
                get {
                    return this.columnOnSiteWorkInstructionCompleted;
                }
            }
            
            internal DataColumn PotentialConsequenceColumn {
                get {
                    return this.columnPotentialConsequence;
                }
            }
            
            internal DataColumn MigrationColumn {
                get {
                    return this.columnMigration;
                }
            }
            
            internal DataColumn TrainingRequiredColumn {
                get {
                    return this.columnTrainingRequired;
                }
            }
            
            internal DataColumn TrainingColumn {
                get {
                    return this.columnTraining;
                }
            }
            
            internal DataColumn CostOfChangeColumn {
                get {
                    return this.columnCostOfChange;
                }
            }
            
            internal DataColumn IncreasedRiskColumn {
                get {
                    return this.columnIncreasedRisk;
                }
            }
            
            internal DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            internal DataColumn ProposedByIdColumn {
                get {
                    return this.columnProposedById;
                }
            }
            
            internal DataColumn DateOfProposalColumn {
                get {
                    return this.columnDateOfProposal;
                }
            }
            
            internal DataColumn ReviewedByIdColumn {
                get {
                    return this.columnReviewedById;
                }
            }
            
            internal DataColumn DateOfReviewColumn {
                get {
                    return this.columnDateOfReview;
                }
            }
            
            internal DataColumn ApprovalReviewedById1Column {
                get {
                    return this.columnApprovalReviewedById1;
                }
            }
            
            internal DataColumn ApprovalRevieweDate1Column {
                get {
                    return this.columnApprovalRevieweDate1;
                }
            }
            
            internal DataColumn ApprovalReviewedById2Column {
                get {
                    return this.columnApprovalReviewedById2;
                }
            }
            
            internal DataColumn ApprovalRevieweDate2Column {
                get {
                    return this.columnApprovalRevieweDate2;
                }
            }
            
            internal DataColumn ApprovalEndorsedByIdColumn {
                get {
                    return this.columnApprovalEndorsedById;
                }
            }
            
            internal DataColumn ApprovalEndorsedDateColumn {
                get {
                    return this.columnApprovalEndorsedDate;
                }
            }
            
            internal DataColumn ApprovedByIdColumn {
                get {
                    return this.columnApprovedById;
                }
            }
            
            internal DataColumn ApprovedDateColumn {
                get {
                    return this.columnApprovedDate;
                }
            }
            
            internal DataColumn LessonsLearnedColumn {
                get {
                    return this.columnLessonsLearned;
                }
            }
            
            internal DataColumn ChangeCommunicatedByIdColumn {
                get {
                    return this.columnChangeCommunicatedById;
                }
            }
            
            internal DataColumn DateChangeCommunicatedColumn {
                get {
                    return this.columnDateChangeCommunicated;
                }
            }
            
            internal DataColumn MethodOfCommunicationColumn {
                get {
                    return this.columnMethodOfCommunication;
                }
            }
            
            internal DataColumn DocumentationChangesByIdColumn {
                get {
                    return this.columnDocumentationChangesById;
                }
            }
            
            internal DataColumn DateDocumentationChangesColumn {
                get {
                    return this.columnDateDocumentationChanges;
                }
            }
            
            internal DataColumn DocumentsChangedColumn {
                get {
                    return this.columnDocumentsChanged;
                }
            }
            
            internal DataColumn TrainingRequriementsCompletedByIdColumn {
                get {
                    return this.columnTrainingRequriementsCompletedById;
                }
            }
            
            internal DataColumn DateTrainingRequriementsCompletedColumn {
                get {
                    return this.columnDateTrainingRequriementsCompleted;
                }
            }
            
            internal DataColumn TrainingConductedColumn {
                get {
                    return this.columnTrainingConducted;
                }
            }
            
            internal DataColumn RegulatoryPermitRequirementsCompletedByIdColumn {
                get {
                    return this.columnRegulatoryPermitRequirementsCompletedById;
                }
            }
            
            internal DataColumn DateRegulatoryPermitRequirementsCompletedColumn {
                get {
                    return this.columnDateRegulatoryPermitRequirementsCompleted;
                }
            }
            
            internal DataColumn RegulatoryPermitRequirementsCompletedColumn {
                get {
                    return this.columnRegulatoryPermitRequirementsCompleted;
                }
            }
            
            internal DataColumn ChangeRequirementsCompletedByIdColumn {
                get {
                    return this.columnChangeRequirementsCompletedById;
                }
            }
            
            internal DataColumn DateChangeRequirementsCompletedColumn {
                get {
                    return this.columnDateChangeRequirementsCompleted;
                }
            }
            
            internal DataColumn ChangeRequirementsCompletedCommentsColumn {
                get {
                    return this.columnChangeRequirementsCompletedComments;
                }
            }
            
            internal DataColumn LessonsLearnedCommunicatedByIdColumn {
                get {
                    return this.columnLessonsLearnedCommunicatedById;
                }
            }
            
            internal DataColumn DateLessonsLearnedCommunicatedColumn {
                get {
                    return this.columnDateLessonsLearnedCommunicated;
                }
            }
            
            internal DataColumn ChangeReportCloseOutDocumentationByIdColumn {
                get {
                    return this.columnChangeReportCloseOutDocumentationById;
                }
            }
            
            internal DataColumn DateChangeReportCloseOutDocumentationColumn {
                get {
                    return this.columnDateChangeReportCloseOutDocumentation;
                }
            }
            
            internal DataColumn ApprovalForChangeReportCloseOutByIdColumn {
                get {
                    return this.columnApprovalForChangeReportCloseOutById;
                }
            }
            
            internal DataColumn DateApprovalForChangeReportCloseOutColumn {
                get {
                    return this.columnDateApprovalForChangeReportCloseOut;
                }
            }
            
            internal DataColumn ManageChangeStatusListsRowIdColumn {
                get {
                    return this.columnManageChangeStatusListsRowId;
                }
            }
            
            internal DataColumn InitiationCompletedSwitchColumn {
                get {
                    return this.columnInitiationCompletedSwitch;
                }
            }
            
            internal DataColumn EvaluationCompletedSwitchColumn {
                get {
                    return this.columnEvaluationCompletedSwitch;
                }
            }
            
            internal DataColumn ApprovalsCompletedSwitchColumn {
                get {
                    return this.columnApprovalsCompletedSwitch;
                }
            }
            
            internal DataColumn ImplementationCompletedSwitchColumn {
                get {
                    return this.columnImplementationCompletedSwitch;
                }
            }
            
            internal DataColumn CloseOutCompletedSwitchColumn {
                get {
                    return this.columnCloseOutCompletedSwitch;
                }
            }
            
            internal DataColumn RejectedSwitchColumn {
                get {
                    return this.columnRejectedSwitch;
                }
            }
            
            internal DataColumn SwitchFreeSwitchColumn {
                get {
                    return this.columnSwitchFreeSwitch;
                }
            }
            
            internal DataColumn AcceptedByMasterColumn {
                get {
                    return this.columnAcceptedByMaster;
                }
            }
            
            internal DataColumn ComputedExposureColumn {
                get {
                    return this.columnComputedExposure;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GAManageChangeRow this[int index] {
                get {
                    return ((GAManageChangeRow)(this.Rows[index]));
                }
            }
            
            public event GAManageChangeRowChangeEventHandler GAManageChangeRowChanged;
            
            public event GAManageChangeRowChangeEventHandler GAManageChangeRowChanging;
            
            public event GAManageChangeRowChangeEventHandler GAManageChangeRowDeleted;
            
            public event GAManageChangeRowChangeEventHandler GAManageChangeRowDeleting;
            
            public void AddGAManageChangeRow(GAManageChangeRow row) {
                this.Rows.Add(row);
            }
            
            public GAManageChangeRow AddGAManageChangeRow(
                        string ProjectRowId, 
                        string LocationRowId, 
                        string ManageChangeReferenceId, 
                        System.DateTime DateOfRequest, 
                        System.DateTime DateEffective, 
                        bool IsContractual, 
                        string TypeOfChangeRowId, 
                        System.DateTime DateOfRemoval, 
                        string NatureOfChange, 
                        string NatureOfChangeRowId, 
                        string DescriptionCurrent, 
                        string Description, 
                        string ResponsibleRoleListsRowId, 
                        string RequestorId, 
                        string EndorserId, 
                        System.DateTime DateOfEndorsement, 
                        string Justification, 
                        bool OnSiteRiskAssessmentCompleted, 
                        bool OnshoreRiskAssessmentCompleted, 
                        bool OnSiteJobSafetyAnalysisCompleted, 
                        bool ApprovedByOnshoreManagement, 
                        bool OnSiteWorkInstructionCompleted, 
                        string PotentialConsequence, 
                        string Migration, 
                        bool TrainingRequired, 
                        string Training, 
                        string CostOfChange, 
                        bool IncreasedRisk, 
                        string Comments, 
                        string ProposedById, 
                        System.DateTime DateOfProposal, 
                        string ReviewedById, 
                        System.DateTime DateOfReview, 
                        string ApprovalReviewedById1, 
                        System.DateTime ApprovalRevieweDate1, 
                        string ApprovalReviewedById2, 
                        System.DateTime ApprovalRevieweDate2, 
                        string ApprovalEndorsedById, 
                        System.DateTime ApprovalEndorsedDate, 
                        string ApprovedById, 
                        System.DateTime ApprovedDate, 
                        string LessonsLearned, 
                        string ChangeCommunicatedById, 
                        System.DateTime DateChangeCommunicated, 
                        string MethodOfCommunication, 
                        string DocumentationChangesById, 
                        System.DateTime DateDocumentationChanges, 
                        string DocumentsChanged, 
                        string TrainingRequriementsCompletedById, 
                        System.DateTime DateTrainingRequriementsCompleted, 
                        string TrainingConducted, 
                        string RegulatoryPermitRequirementsCompletedById, 
                        System.DateTime DateRegulatoryPermitRequirementsCompleted, 
                        string RegulatoryPermitRequirementsCompleted, 
                        string ChangeRequirementsCompletedById, 
                        System.DateTime DateChangeRequirementsCompleted, 
                        string ChangeRequirementsCompletedComments, 
                        string LessonsLearnedCommunicatedById, 
                        System.DateTime DateLessonsLearnedCommunicated, 
                        string ChangeReportCloseOutDocumentationById, 
                        System.DateTime DateChangeReportCloseOutDocumentation, 
                        string ApprovalForChangeReportCloseOutById, 
                        System.DateTime DateApprovalForChangeReportCloseOut, 
                        string ManageChangeStatusListsRowId, 
                        bool InitiationCompletedSwitch, 
                        bool EvaluationCompletedSwitch, 
                        bool ApprovalsCompletedSwitch, 
                        bool ImplementationCompletedSwitch, 
                        bool CloseOutCompletedSwitch, 
                        bool RejectedSwitch, 
                        bool SwitchFreeSwitch, 
                        bool AcceptedByMaster, 
                        int ComputedExposure, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAManageChangeRow rowGAManageChangeRow = ((GAManageChangeRow)(this.NewRow()));
                rowGAManageChangeRow.ItemArray = new object[] {
                        null,
                        ProjectRowId,
                        LocationRowId,
                        ManageChangeReferenceId,
                        DateOfRequest,
                        DateEffective,
                        IsContractual,
                        TypeOfChangeRowId,
                        DateOfRemoval,
                        NatureOfChange,
                        NatureOfChangeRowId,
                        DescriptionCurrent,
                        Description,
                        ResponsibleRoleListsRowId,
                        RequestorId,
                        EndorserId,
                        DateOfEndorsement,
                        Justification,
                        OnSiteRiskAssessmentCompleted,
                        OnshoreRiskAssessmentCompleted,
                        OnSiteJobSafetyAnalysisCompleted,
                        ApprovedByOnshoreManagement,
                        OnSiteWorkInstructionCompleted,
                        PotentialConsequence,
                        Migration,
                        TrainingRequired,
                        Training,
                        CostOfChange,
                        IncreasedRisk,
                        Comments,
                        ProposedById,
                        DateOfProposal,
                        ReviewedById,
                        DateOfReview,
                        ApprovalReviewedById1,
                        ApprovalRevieweDate1,
                        ApprovalReviewedById2,
                        ApprovalRevieweDate2,
                        ApprovalEndorsedById,
                        ApprovalEndorsedDate,
                        ApprovedById,
                        ApprovedDate,
                        LessonsLearned,
                        ChangeCommunicatedById,
                        DateChangeCommunicated,
                        MethodOfCommunication,
                        DocumentationChangesById,
                        DateDocumentationChanges,
                        DocumentsChanged,
                        TrainingRequriementsCompletedById,
                        DateTrainingRequriementsCompleted,
                        TrainingConducted,
                        RegulatoryPermitRequirementsCompletedById,
                        DateRegulatoryPermitRequirementsCompleted,
                        RegulatoryPermitRequirementsCompleted,
                        ChangeRequirementsCompletedById,
                        DateChangeRequirementsCompleted,
                        ChangeRequirementsCompletedComments,
                        LessonsLearnedCommunicatedById,
                        DateLessonsLearnedCommunicated,
                        ChangeReportCloseOutDocumentationById,
                        DateChangeReportCloseOutDocumentation,
                        ApprovalForChangeReportCloseOutById,
                        DateApprovalForChangeReportCloseOut,
                        ManageChangeStatusListsRowId,
                        InitiationCompletedSwitch,
                        EvaluationCompletedSwitch,
                        ApprovalsCompletedSwitch,
                        ImplementationCompletedSwitch,
                        CloseOutCompletedSwitch,
                        RejectedSwitch,
                        SwitchFreeSwitch,
                        AcceptedByMaster,
                        ComputedExposure,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAManageChangeRow);
                return rowGAManageChangeRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAManageChangeDataTable cln = ((GAManageChangeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAManageChangeDataTable();
            }
            
            internal void InitVars() {
                this.columnManageChangeRowId = this.Columns["ManageChangeRowId"];
                this.columnProjectRowId = this.Columns["ProjectRowId"];
                this.columnLocationRowId = this.Columns["LocationRowId"];
                this.columnManageChangeReferenceId = this.Columns["ManageChangeReferenceId"];
                this.columnDateOfRequest = this.Columns["DateOfRequest"];
                this.columnDateEffective = this.Columns["DateEffective"];
                this.columnIsContractual = this.Columns["IsContractual"];
                this.columnTypeOfChangeRowId = this.Columns["TypeOfChangeRowId"];
                this.columnDateOfRemoval = this.Columns["DateOfRemoval"];
                this.columnNatureOfChange = this.Columns["NatureOfChange"];
                this.columnNatureOfChangeRowId = this.Columns["NatureOfChangeRowId"];
                this.columnDescriptionCurrent = this.Columns["DescriptionCurrent"];
                this.columnDescription = this.Columns["Description"];
                this.columnResponsibleRoleListsRowId = this.Columns["ResponsibleRoleListsRowId"];
                this.columnRequestorId = this.Columns["RequestorId"];
                this.columnEndorserId = this.Columns["EndorserId"];
                this.columnDateOfEndorsement = this.Columns["DateOfEndorsement"];
                this.columnJustification = this.Columns["Justification"];
                this.columnOnSiteRiskAssessmentCompleted = this.Columns["OnSiteRiskAssessmentCompleted"];
                this.columnOnshoreRiskAssessmentCompleted = this.Columns["OnshoreRiskAssessmentCompleted"];
                this.columnOnSiteJobSafetyAnalysisCompleted = this.Columns["OnSiteJobSafetyAnalysisCompleted"];
                this.columnApprovedByOnshoreManagement = this.Columns["ApprovedByOnshoreManagement"];
                this.columnOnSiteWorkInstructionCompleted = this.Columns["OnSiteWorkInstructionCompleted"];
                this.columnPotentialConsequence = this.Columns["PotentialConsequence"];
                this.columnMigration = this.Columns["Migration"];
                this.columnTrainingRequired = this.Columns["TrainingRequired"];
                this.columnTraining = this.Columns["Training"];
                this.columnCostOfChange = this.Columns["CostOfChange"];
                this.columnIncreasedRisk = this.Columns["IncreasedRisk"];
                this.columnComments = this.Columns["Comments"];
                this.columnProposedById = this.Columns["ProposedById"];
                this.columnDateOfProposal = this.Columns["DateOfProposal"];
                this.columnReviewedById = this.Columns["ReviewedById"];
                this.columnDateOfReview = this.Columns["DateOfReview"];
                this.columnApprovalReviewedById1 = this.Columns["ApprovalReviewedById1"];
                this.columnApprovalRevieweDate1 = this.Columns["ApprovalRevieweDate1"];
                this.columnApprovalReviewedById2 = this.Columns["ApprovalReviewedById2"];
                this.columnApprovalRevieweDate2 = this.Columns["ApprovalRevieweDate2"];
                this.columnApprovalEndorsedById = this.Columns["ApprovalEndorsedById"];
                this.columnApprovalEndorsedDate = this.Columns["ApprovalEndorsedDate"];
                this.columnApprovedById = this.Columns["ApprovedById"];
                this.columnApprovedDate = this.Columns["ApprovedDate"];
                this.columnLessonsLearned = this.Columns["LessonsLearned"];
                this.columnChangeCommunicatedById = this.Columns["ChangeCommunicatedById"];
                this.columnDateChangeCommunicated = this.Columns["DateChangeCommunicated"];
                this.columnMethodOfCommunication = this.Columns["MethodOfCommunication"];
                this.columnDocumentationChangesById = this.Columns["DocumentationChangesById"];
                this.columnDateDocumentationChanges = this.Columns["DateDocumentationChanges"];
                this.columnDocumentsChanged = this.Columns["DocumentsChanged"];
                this.columnTrainingRequriementsCompletedById = this.Columns["TrainingRequriementsCompletedById"];
                this.columnDateTrainingRequriementsCompleted = this.Columns["DateTrainingRequriementsCompleted"];
                this.columnTrainingConducted = this.Columns["TrainingConducted"];
                this.columnRegulatoryPermitRequirementsCompletedById = this.Columns["RegulatoryPermitRequirementsCompletedById"];
                this.columnDateRegulatoryPermitRequirementsCompleted = this.Columns["DateRegulatoryPermitRequirementsCompleted"];
                this.columnRegulatoryPermitRequirementsCompleted = this.Columns["RegulatoryPermitRequirementsCompleted"];
                this.columnChangeRequirementsCompletedById = this.Columns["ChangeRequirementsCompletedById"];
                this.columnDateChangeRequirementsCompleted = this.Columns["DateChangeRequirementsCompleted"];
                this.columnChangeRequirementsCompletedComments = this.Columns["ChangeRequirementsCompletedComments"];
                this.columnLessonsLearnedCommunicatedById = this.Columns["LessonsLearnedCommunicatedById"];
                this.columnDateLessonsLearnedCommunicated = this.Columns["DateLessonsLearnedCommunicated"];
                this.columnChangeReportCloseOutDocumentationById = this.Columns["ChangeReportCloseOutDocumentationById"];
                this.columnDateChangeReportCloseOutDocumentation = this.Columns["DateChangeReportCloseOutDocumentation"];
                this.columnApprovalForChangeReportCloseOutById = this.Columns["ApprovalForChangeReportCloseOutById"];
                this.columnDateApprovalForChangeReportCloseOut = this.Columns["DateApprovalForChangeReportCloseOut"];
                this.columnManageChangeStatusListsRowId = this.Columns["ManageChangeStatusListsRowId"];
                this.columnInitiationCompletedSwitch = this.Columns["InitiationCompletedSwitch"];
                this.columnEvaluationCompletedSwitch = this.Columns["EvaluationCompletedSwitch"];
                this.columnApprovalsCompletedSwitch = this.Columns["ApprovalsCompletedSwitch"];
                this.columnImplementationCompletedSwitch = this.Columns["ImplementationCompletedSwitch"];
                this.columnCloseOutCompletedSwitch = this.Columns["CloseOutCompletedSwitch"];
                this.columnRejectedSwitch = this.Columns["RejectedSwitch"];
                this.columnSwitchFreeSwitch = this.Columns["SwitchFreeSwitch"];
                this.columnAcceptedByMaster = this.Columns["AcceptedByMaster"];
                this.columnComputedExposure = this.Columns["ComputedExposure"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnManageChangeRowId = new DataColumn("ManageChangeRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnManageChangeRowId);
                this.columnProjectRowId = new DataColumn("ProjectRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProjectRowId);
                this.columnLocationRowId = new DataColumn("LocationRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLocationRowId);
                this.columnManageChangeReferenceId = new DataColumn("ManageChangeReferenceId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnManageChangeReferenceId);
                this.columnDateOfRequest = new DataColumn("DateOfRequest", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateOfRequest);
                this.columnDateEffective = new DataColumn("DateEffective", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateEffective);
                this.columnIsContractual = new DataColumn("IsContractual", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsContractual);
                this.columnTypeOfChangeRowId = new DataColumn("TypeOfChangeRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTypeOfChangeRowId);
                this.columnDateOfRemoval = new DataColumn("DateOfRemoval", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateOfRemoval);
                this.columnNatureOfChange = new DataColumn("NatureOfChange", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNatureOfChange);
                this.columnNatureOfChangeRowId = new DataColumn("NatureOfChangeRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNatureOfChangeRowId);
                this.columnDescriptionCurrent = new DataColumn("DescriptionCurrent", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescriptionCurrent);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnResponsibleRoleListsRowId = new DataColumn("ResponsibleRoleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResponsibleRoleListsRowId);
                this.columnRequestorId = new DataColumn("RequestorId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRequestorId);
                this.columnEndorserId = new DataColumn("EndorserId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEndorserId);
                this.columnDateOfEndorsement = new DataColumn("DateOfEndorsement", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateOfEndorsement);
                this.columnJustification = new DataColumn("Justification", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnJustification);
                this.columnOnSiteRiskAssessmentCompleted = new DataColumn("OnSiteRiskAssessmentCompleted", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOnSiteRiskAssessmentCompleted);
                this.columnOnshoreRiskAssessmentCompleted = new DataColumn("OnshoreRiskAssessmentCompleted", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOnshoreRiskAssessmentCompleted);
                this.columnOnSiteJobSafetyAnalysisCompleted = new DataColumn("OnSiteJobSafetyAnalysisCompleted", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOnSiteJobSafetyAnalysisCompleted);
                this.columnApprovedByOnshoreManagement = new DataColumn("ApprovedByOnshoreManagement", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApprovedByOnshoreManagement);
                this.columnOnSiteWorkInstructionCompleted = new DataColumn("OnSiteWorkInstructionCompleted", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOnSiteWorkInstructionCompleted);
                this.columnPotentialConsequence = new DataColumn("PotentialConsequence", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPotentialConsequence);
                this.columnMigration = new DataColumn("Migration", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMigration);
                this.columnTrainingRequired = new DataColumn("TrainingRequired", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTrainingRequired);
                this.columnTraining = new DataColumn("Training", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTraining);
                this.columnCostOfChange = new DataColumn("CostOfChange", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCostOfChange);
                this.columnIncreasedRisk = new DataColumn("IncreasedRisk", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIncreasedRisk);
                this.columnComments = new DataColumn("Comments", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComments);
                this.columnProposedById = new DataColumn("ProposedById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProposedById);
                this.columnDateOfProposal = new DataColumn("DateOfProposal", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateOfProposal);
                this.columnReviewedById = new DataColumn("ReviewedById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReviewedById);
                this.columnDateOfReview = new DataColumn("DateOfReview", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateOfReview);
                this.columnApprovalReviewedById1 = new DataColumn("ApprovalReviewedById1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApprovalReviewedById1);
                this.columnApprovalRevieweDate1 = new DataColumn("ApprovalRevieweDate1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApprovalRevieweDate1);
                this.columnApprovalReviewedById2 = new DataColumn("ApprovalReviewedById2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApprovalReviewedById2);
                this.columnApprovalRevieweDate2 = new DataColumn("ApprovalRevieweDate2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApprovalRevieweDate2);
                this.columnApprovalEndorsedById = new DataColumn("ApprovalEndorsedById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApprovalEndorsedById);
                this.columnApprovalEndorsedDate = new DataColumn("ApprovalEndorsedDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApprovalEndorsedDate);
                this.columnApprovedById = new DataColumn("ApprovedById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApprovedById);
                this.columnApprovedDate = new DataColumn("ApprovedDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApprovedDate);
                this.columnLessonsLearned = new DataColumn("LessonsLearned", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLessonsLearned);
                this.columnChangeCommunicatedById = new DataColumn("ChangeCommunicatedById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangeCommunicatedById);
                this.columnDateChangeCommunicated = new DataColumn("DateChangeCommunicated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChangeCommunicated);
                this.columnMethodOfCommunication = new DataColumn("MethodOfCommunication", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMethodOfCommunication);
                this.columnDocumentationChangesById = new DataColumn("DocumentationChangesById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDocumentationChangesById);
                this.columnDateDocumentationChanges = new DataColumn("DateDocumentationChanges", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDocumentationChanges);
                this.columnDocumentsChanged = new DataColumn("DocumentsChanged", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDocumentsChanged);
                this.columnTrainingRequriementsCompletedById = new DataColumn("TrainingRequriementsCompletedById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTrainingRequriementsCompletedById);
                this.columnDateTrainingRequriementsCompleted = new DataColumn("DateTrainingRequriementsCompleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTrainingRequriementsCompleted);
                this.columnTrainingConducted = new DataColumn("TrainingConducted", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTrainingConducted);
                this.columnRegulatoryPermitRequirementsCompletedById = new DataColumn("RegulatoryPermitRequirementsCompletedById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRegulatoryPermitRequirementsCompletedById);
                this.columnDateRegulatoryPermitRequirementsCompleted = new DataColumn("DateRegulatoryPermitRequirementsCompleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateRegulatoryPermitRequirementsCompleted);
                this.columnRegulatoryPermitRequirementsCompleted = new DataColumn("RegulatoryPermitRequirementsCompleted", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRegulatoryPermitRequirementsCompleted);
                this.columnChangeRequirementsCompletedById = new DataColumn("ChangeRequirementsCompletedById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangeRequirementsCompletedById);
                this.columnDateChangeRequirementsCompleted = new DataColumn("DateChangeRequirementsCompleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChangeRequirementsCompleted);
                this.columnChangeRequirementsCompletedComments = new DataColumn("ChangeRequirementsCompletedComments", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangeRequirementsCompletedComments);
                this.columnLessonsLearnedCommunicatedById = new DataColumn("LessonsLearnedCommunicatedById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLessonsLearnedCommunicatedById);
                this.columnDateLessonsLearnedCommunicated = new DataColumn("DateLessonsLearnedCommunicated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateLessonsLearnedCommunicated);
                this.columnChangeReportCloseOutDocumentationById = new DataColumn("ChangeReportCloseOutDocumentationById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangeReportCloseOutDocumentationById);
                this.columnDateChangeReportCloseOutDocumentation = new DataColumn("DateChangeReportCloseOutDocumentation", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChangeReportCloseOutDocumentation);
                this.columnApprovalForChangeReportCloseOutById = new DataColumn("ApprovalForChangeReportCloseOutById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApprovalForChangeReportCloseOutById);
                this.columnDateApprovalForChangeReportCloseOut = new DataColumn("DateApprovalForChangeReportCloseOut", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateApprovalForChangeReportCloseOut);
                this.columnManageChangeStatusListsRowId = new DataColumn("ManageChangeStatusListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnManageChangeStatusListsRowId);
                this.columnInitiationCompletedSwitch = new DataColumn("InitiationCompletedSwitch", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnInitiationCompletedSwitch);
                this.columnEvaluationCompletedSwitch = new DataColumn("EvaluationCompletedSwitch", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEvaluationCompletedSwitch);
                this.columnApprovalsCompletedSwitch = new DataColumn("ApprovalsCompletedSwitch", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApprovalsCompletedSwitch);
                this.columnImplementationCompletedSwitch = new DataColumn("ImplementationCompletedSwitch", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImplementationCompletedSwitch);
                this.columnCloseOutCompletedSwitch = new DataColumn("CloseOutCompletedSwitch", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCloseOutCompletedSwitch);
                this.columnRejectedSwitch = new DataColumn("RejectedSwitch", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRejectedSwitch);
                this.columnSwitchFreeSwitch = new DataColumn("SwitchFreeSwitch", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFreeSwitch);
                this.columnAcceptedByMaster = new DataColumn("AcceptedByMaster", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAcceptedByMaster);
                this.columnComputedExposure = new DataColumn("ComputedExposure", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComputedExposure);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.columnManageChangeRowId.AutoIncrement = true;
                this.columnManageChangeRowId.AllowDBNull = false;
                this.columnManageChangeRowId.ReadOnly = true;
            }
            
            public GAManageChangeRow NewGAManageChangeRow() {
                return ((GAManageChangeRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAManageChangeRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAManageChangeRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAManageChangeRowChanged != null)) {
                    this.GAManageChangeRowChanged(this, new GAManageChangeRowChangeEvent(((GAManageChangeRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAManageChangeRowChanging != null)) {
                    this.GAManageChangeRowChanging(this, new GAManageChangeRowChangeEvent(((GAManageChangeRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAManageChangeRowDeleted != null)) {
                    this.GAManageChangeRowDeleted(this, new GAManageChangeRowChangeEvent(((GAManageChangeRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAManageChangeRowDeleting != null)) {
                    this.GAManageChangeRowDeleting(this, new GAManageChangeRowChangeEvent(((GAManageChangeRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAManageChangeRow(GAManageChangeRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAManageChangeRow : DataRow {
            
            private GAManageChangeDataTable tableGAManageChange;
            
            internal GAManageChangeRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAManageChange = ((GAManageChangeDataTable)(this.Table));
            }
            
            public int ManageChangeRowId {
                get {
                    return ((int)(this[this.tableGAManageChange.ManageChangeRowIdColumn]));
                }
                set {
                    this[this.tableGAManageChange.ManageChangeRowIdColumn] = value;
                }
            }
            
            public string ProjectRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ProjectRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ProjectRowIdColumn] = value;
                }
            }
            
            public string LocationRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.LocationRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.LocationRowIdColumn] = value;
                }
            }
            
            public string ManageChangeReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ManageChangeReferenceIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ManageChangeReferenceIdColumn] = value;
                }
            }
            
            public System.DateTime DateOfRequest {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateOfRequestColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateOfRequestColumn] = value;
                }
            }
            
            public System.DateTime DateEffective {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateEffectiveColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateEffectiveColumn] = value;
                }
            }
            
            public bool IsContractual {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.IsContractualColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.IsContractualColumn] = value;
                }
            }
            
            public string TypeOfChangeRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.TypeOfChangeRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.TypeOfChangeRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateOfRemoval {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateOfRemovalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateOfRemovalColumn] = value;
                }
            }
            
            public string NatureOfChange {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.NatureOfChangeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.NatureOfChangeColumn] = value;
                }
            }
            
            public string NatureOfChangeRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.NatureOfChangeRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.NatureOfChangeRowIdColumn] = value;
                }
            }
            
            public string DescriptionCurrent {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.DescriptionCurrentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DescriptionCurrentColumn] = value;
                }
            }
            
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.DescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DescriptionColumn] = value;
                }
            }
            
            public string ResponsibleRoleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ResponsibleRoleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ResponsibleRoleListsRowIdColumn] = value;
                }
            }
            
            public string RequestorId {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.RequestorIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.RequestorIdColumn] = value;
                }
            }
            
            public string EndorserId {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.EndorserIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.EndorserIdColumn] = value;
                }
            }
            
            public System.DateTime DateOfEndorsement {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateOfEndorsementColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateOfEndorsementColumn] = value;
                }
            }
            
            public string Justification {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.JustificationColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.JustificationColumn] = value;
                }
            }
            
            public bool OnSiteRiskAssessmentCompleted {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.OnSiteRiskAssessmentCompletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.OnSiteRiskAssessmentCompletedColumn] = value;
                }
            }
            
            public bool OnshoreRiskAssessmentCompleted {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.OnshoreRiskAssessmentCompletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.OnshoreRiskAssessmentCompletedColumn] = value;
                }
            }
            
            public bool OnSiteJobSafetyAnalysisCompleted {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.OnSiteJobSafetyAnalysisCompletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.OnSiteJobSafetyAnalysisCompletedColumn] = value;
                }
            }
            
            public bool ApprovedByOnshoreManagement {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.ApprovedByOnshoreManagementColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovedByOnshoreManagementColumn] = value;
                }
            }
            
            public bool OnSiteWorkInstructionCompleted {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.OnSiteWorkInstructionCompletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.OnSiteWorkInstructionCompletedColumn] = value;
                }
            }
            
            public string PotentialConsequence {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.PotentialConsequenceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.PotentialConsequenceColumn] = value;
                }
            }
            
            public string Migration {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.MigrationColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.MigrationColumn] = value;
                }
            }
            
            public bool TrainingRequired {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.TrainingRequiredColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.TrainingRequiredColumn] = value;
                }
            }
            
            public string Training {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.TrainingColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.TrainingColumn] = value;
                }
            }
            
            public string CostOfChange {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.CostOfChangeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.CostOfChangeColumn] = value;
                }
            }
            
            public bool IncreasedRisk {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.IncreasedRiskColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.IncreasedRiskColumn] = value;
                }
            }
            
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.CommentsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.CommentsColumn] = value;
                }
            }
            
            public string ProposedById {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ProposedByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ProposedByIdColumn] = value;
                }
            }
            
            public System.DateTime DateOfProposal {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateOfProposalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateOfProposalColumn] = value;
                }
            }
            
            public string ReviewedById {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ReviewedByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ReviewedByIdColumn] = value;
                }
            }
            
            public System.DateTime DateOfReview {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateOfReviewColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateOfReviewColumn] = value;
                }
            }
            
            public string ApprovalReviewedById1 {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ApprovalReviewedById1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovalReviewedById1Column] = value;
                }
            }
            
            public System.DateTime ApprovalRevieweDate1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.ApprovalRevieweDate1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovalRevieweDate1Column] = value;
                }
            }
            
            public string ApprovalReviewedById2 {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ApprovalReviewedById2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovalReviewedById2Column] = value;
                }
            }
            
            public System.DateTime ApprovalRevieweDate2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.ApprovalRevieweDate2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovalRevieweDate2Column] = value;
                }
            }
            
            public string ApprovalEndorsedById {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ApprovalEndorsedByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovalEndorsedByIdColumn] = value;
                }
            }
            
            public System.DateTime ApprovalEndorsedDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.ApprovalEndorsedDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovalEndorsedDateColumn] = value;
                }
            }
            
            public string ApprovedById {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ApprovedByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovedByIdColumn] = value;
                }
            }
            
            public System.DateTime ApprovedDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.ApprovedDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovedDateColumn] = value;
                }
            }
            
            public string LessonsLearned {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.LessonsLearnedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.LessonsLearnedColumn] = value;
                }
            }
            
            public string ChangeCommunicatedById {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ChangeCommunicatedByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ChangeCommunicatedByIdColumn] = value;
                }
            }
            
            public System.DateTime DateChangeCommunicated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateChangeCommunicatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateChangeCommunicatedColumn] = value;
                }
            }
            
            public string MethodOfCommunication {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.MethodOfCommunicationColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.MethodOfCommunicationColumn] = value;
                }
            }
            
            public string DocumentationChangesById {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.DocumentationChangesByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DocumentationChangesByIdColumn] = value;
                }
            }
            
            public System.DateTime DateDocumentationChanges {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateDocumentationChangesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateDocumentationChangesColumn] = value;
                }
            }
            
            public string DocumentsChanged {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.DocumentsChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DocumentsChangedColumn] = value;
                }
            }
            
            public string TrainingRequriementsCompletedById {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.TrainingRequriementsCompletedByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.TrainingRequriementsCompletedByIdColumn] = value;
                }
            }
            
            public System.DateTime DateTrainingRequriementsCompleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateTrainingRequriementsCompletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateTrainingRequriementsCompletedColumn] = value;
                }
            }
            
            public string TrainingConducted {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.TrainingConductedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.TrainingConductedColumn] = value;
                }
            }
            
            public string RegulatoryPermitRequirementsCompletedById {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.RegulatoryPermitRequirementsCompletedByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.RegulatoryPermitRequirementsCompletedByIdColumn] = value;
                }
            }
            
            public System.DateTime DateRegulatoryPermitRequirementsCompleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateRegulatoryPermitRequirementsCompletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateRegulatoryPermitRequirementsCompletedColumn] = value;
                }
            }
            
            public string RegulatoryPermitRequirementsCompleted {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.RegulatoryPermitRequirementsCompletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.RegulatoryPermitRequirementsCompletedColumn] = value;
                }
            }
            
            public string ChangeRequirementsCompletedById {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ChangeRequirementsCompletedByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ChangeRequirementsCompletedByIdColumn] = value;
                }
            }
            
            public System.DateTime DateChangeRequirementsCompleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateChangeRequirementsCompletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateChangeRequirementsCompletedColumn] = value;
                }
            }
            
            public string ChangeRequirementsCompletedComments {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ChangeRequirementsCompletedCommentsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ChangeRequirementsCompletedCommentsColumn] = value;
                }
            }
            
            public string LessonsLearnedCommunicatedById {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.LessonsLearnedCommunicatedByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.LessonsLearnedCommunicatedByIdColumn] = value;
                }
            }
            
            public System.DateTime DateLessonsLearnedCommunicated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateLessonsLearnedCommunicatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateLessonsLearnedCommunicatedColumn] = value;
                }
            }
            
            public string ChangeReportCloseOutDocumentationById {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ChangeReportCloseOutDocumentationByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ChangeReportCloseOutDocumentationByIdColumn] = value;
                }
            }
            
            public System.DateTime DateChangeReportCloseOutDocumentation {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateChangeReportCloseOutDocumentationColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateChangeReportCloseOutDocumentationColumn] = value;
                }
            }
            
            public string ApprovalForChangeReportCloseOutById {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ApprovalForChangeReportCloseOutByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovalForChangeReportCloseOutByIdColumn] = value;
                }
            }
            
            public System.DateTime DateApprovalForChangeReportCloseOut {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateApprovalForChangeReportCloseOutColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateApprovalForChangeReportCloseOutColumn] = value;
                }
            }
            
            public string ManageChangeStatusListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.ManageChangeStatusListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ManageChangeStatusListsRowIdColumn] = value;
                }
            }
            
            public bool InitiationCompletedSwitch {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.InitiationCompletedSwitchColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.InitiationCompletedSwitchColumn] = value;
                }
            }
            
            public bool EvaluationCompletedSwitch {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.EvaluationCompletedSwitchColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.EvaluationCompletedSwitchColumn] = value;
                }
            }
            
            public bool ApprovalsCompletedSwitch {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.ApprovalsCompletedSwitchColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ApprovalsCompletedSwitchColumn] = value;
                }
            }
            
            public bool ImplementationCompletedSwitch {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.ImplementationCompletedSwitchColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ImplementationCompletedSwitchColumn] = value;
                }
            }
            
            public bool CloseOutCompletedSwitch {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.CloseOutCompletedSwitchColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.CloseOutCompletedSwitchColumn] = value;
                }
            }
            
            public bool RejectedSwitch {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.RejectedSwitchColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.RejectedSwitchColumn] = value;
                }
            }
            
            public bool SwitchFreeSwitch {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.SwitchFreeSwitchColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.SwitchFreeSwitchColumn] = value;
                }
            }
            
            public bool AcceptedByMaster {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.AcceptedByMasterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.AcceptedByMasterColumn] = value;
                }
            }
            
            public int ComputedExposure {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ComputedExposureColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ComputedExposureColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAManageChange.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAManageChange.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAManageChange.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAManageChange.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAManageChange.IntFree3Column] = value;
                }
            }
            
            public bool IsProjectRowIdNull() {
                return this.IsNull(this.tableGAManageChange.ProjectRowIdColumn);
            }
            
            public void SetProjectRowIdNull() {
                this[this.tableGAManageChange.ProjectRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsLocationRowIdNull() {
                return this.IsNull(this.tableGAManageChange.LocationRowIdColumn);
            }
            
            public void SetLocationRowIdNull() {
                this[this.tableGAManageChange.LocationRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsManageChangeReferenceIdNull() {
                return this.IsNull(this.tableGAManageChange.ManageChangeReferenceIdColumn);
            }
            
            public void SetManageChangeReferenceIdNull() {
                this[this.tableGAManageChange.ManageChangeReferenceIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateOfRequestNull() {
                return this.IsNull(this.tableGAManageChange.DateOfRequestColumn);
            }
            
            public void SetDateOfRequestNull() {
                this[this.tableGAManageChange.DateOfRequestColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateEffectiveNull() {
                return this.IsNull(this.tableGAManageChange.DateEffectiveColumn);
            }
            
            public void SetDateEffectiveNull() {
                this[this.tableGAManageChange.DateEffectiveColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsContractualNull() {
                return this.IsNull(this.tableGAManageChange.IsContractualColumn);
            }
            
            public void SetIsContractualNull() {
                this[this.tableGAManageChange.IsContractualColumn] = System.Convert.DBNull;
            }
            
            public bool IsTypeOfChangeRowIdNull() {
                return this.IsNull(this.tableGAManageChange.TypeOfChangeRowIdColumn);
            }
            
            public void SetTypeOfChangeRowIdNull() {
                this[this.tableGAManageChange.TypeOfChangeRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateOfRemovalNull() {
                return this.IsNull(this.tableGAManageChange.DateOfRemovalColumn);
            }
            
            public void SetDateOfRemovalNull() {
                this[this.tableGAManageChange.DateOfRemovalColumn] = System.Convert.DBNull;
            }
            
            public bool IsNatureOfChangeNull() {
                return this.IsNull(this.tableGAManageChange.NatureOfChangeColumn);
            }
            
            public void SetNatureOfChangeNull() {
                this[this.tableGAManageChange.NatureOfChangeColumn] = System.Convert.DBNull;
            }
            
            public bool IsNatureOfChangeRowIdNull() {
                return this.IsNull(this.tableGAManageChange.NatureOfChangeRowIdColumn);
            }
            
            public void SetNatureOfChangeRowIdNull() {
                this[this.tableGAManageChange.NatureOfChangeRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescriptionCurrentNull() {
                return this.IsNull(this.tableGAManageChange.DescriptionCurrentColumn);
            }
            
            public void SetDescriptionCurrentNull() {
                this[this.tableGAManageChange.DescriptionCurrentColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGAManageChange.DescriptionColumn);
            }
            
            public void SetDescriptionNull() {
                this[this.tableGAManageChange.DescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsResponsibleRoleListsRowIdNull() {
                return this.IsNull(this.tableGAManageChange.ResponsibleRoleListsRowIdColumn);
            }
            
            public void SetResponsibleRoleListsRowIdNull() {
                this[this.tableGAManageChange.ResponsibleRoleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsRequestorIdNull() {
                return this.IsNull(this.tableGAManageChange.RequestorIdColumn);
            }
            
            public void SetRequestorIdNull() {
                this[this.tableGAManageChange.RequestorIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsEndorserIdNull() {
                return this.IsNull(this.tableGAManageChange.EndorserIdColumn);
            }
            
            public void SetEndorserIdNull() {
                this[this.tableGAManageChange.EndorserIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateOfEndorsementNull() {
                return this.IsNull(this.tableGAManageChange.DateOfEndorsementColumn);
            }
            
            public void SetDateOfEndorsementNull() {
                this[this.tableGAManageChange.DateOfEndorsementColumn] = System.Convert.DBNull;
            }
            
            public bool IsJustificationNull() {
                return this.IsNull(this.tableGAManageChange.JustificationColumn);
            }
            
            public void SetJustificationNull() {
                this[this.tableGAManageChange.JustificationColumn] = System.Convert.DBNull;
            }
            
            public bool IsOnSiteRiskAssessmentCompletedNull() {
                return this.IsNull(this.tableGAManageChange.OnSiteRiskAssessmentCompletedColumn);
            }
            
            public void SetOnSiteRiskAssessmentCompletedNull() {
                this[this.tableGAManageChange.OnSiteRiskAssessmentCompletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsOnshoreRiskAssessmentCompletedNull() {
                return this.IsNull(this.tableGAManageChange.OnshoreRiskAssessmentCompletedColumn);
            }
            
            public void SetOnshoreRiskAssessmentCompletedNull() {
                this[this.tableGAManageChange.OnshoreRiskAssessmentCompletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsOnSiteJobSafetyAnalysisCompletedNull() {
                return this.IsNull(this.tableGAManageChange.OnSiteJobSafetyAnalysisCompletedColumn);
            }
            
            public void SetOnSiteJobSafetyAnalysisCompletedNull() {
                this[this.tableGAManageChange.OnSiteJobSafetyAnalysisCompletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsApprovedByOnshoreManagementNull() {
                return this.IsNull(this.tableGAManageChange.ApprovedByOnshoreManagementColumn);
            }
            
            public void SetApprovedByOnshoreManagementNull() {
                this[this.tableGAManageChange.ApprovedByOnshoreManagementColumn] = System.Convert.DBNull;
            }
            
            public bool IsOnSiteWorkInstructionCompletedNull() {
                return this.IsNull(this.tableGAManageChange.OnSiteWorkInstructionCompletedColumn);
            }
            
            public void SetOnSiteWorkInstructionCompletedNull() {
                this[this.tableGAManageChange.OnSiteWorkInstructionCompletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsPotentialConsequenceNull() {
                return this.IsNull(this.tableGAManageChange.PotentialConsequenceColumn);
            }
            
            public void SetPotentialConsequenceNull() {
                this[this.tableGAManageChange.PotentialConsequenceColumn] = System.Convert.DBNull;
            }
            
            public bool IsMigrationNull() {
                return this.IsNull(this.tableGAManageChange.MigrationColumn);
            }
            
            public void SetMigrationNull() {
                this[this.tableGAManageChange.MigrationColumn] = System.Convert.DBNull;
            }
            
            public bool IsTrainingRequiredNull() {
                return this.IsNull(this.tableGAManageChange.TrainingRequiredColumn);
            }
            
            public void SetTrainingRequiredNull() {
                this[this.tableGAManageChange.TrainingRequiredColumn] = System.Convert.DBNull;
            }
            
            public bool IsTrainingNull() {
                return this.IsNull(this.tableGAManageChange.TrainingColumn);
            }
            
            public void SetTrainingNull() {
                this[this.tableGAManageChange.TrainingColumn] = System.Convert.DBNull;
            }
            
            public bool IsCostOfChangeNull() {
                return this.IsNull(this.tableGAManageChange.CostOfChangeColumn);
            }
            
            public void SetCostOfChangeNull() {
                this[this.tableGAManageChange.CostOfChangeColumn] = System.Convert.DBNull;
            }
            
            public bool IsIncreasedRiskNull() {
                return this.IsNull(this.tableGAManageChange.IncreasedRiskColumn);
            }
            
            public void SetIncreasedRiskNull() {
                this[this.tableGAManageChange.IncreasedRiskColumn] = System.Convert.DBNull;
            }
            
            public bool IsCommentsNull() {
                return this.IsNull(this.tableGAManageChange.CommentsColumn);
            }
            
            public void SetCommentsNull() {
                this[this.tableGAManageChange.CommentsColumn] = System.Convert.DBNull;
            }
            
            public bool IsProposedByIdNull() {
                return this.IsNull(this.tableGAManageChange.ProposedByIdColumn);
            }
            
            public void SetProposedByIdNull() {
                this[this.tableGAManageChange.ProposedByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateOfProposalNull() {
                return this.IsNull(this.tableGAManageChange.DateOfProposalColumn);
            }
            
            public void SetDateOfProposalNull() {
                this[this.tableGAManageChange.DateOfProposalColumn] = System.Convert.DBNull;
            }
            
            public bool IsReviewedByIdNull() {
                return this.IsNull(this.tableGAManageChange.ReviewedByIdColumn);
            }
            
            public void SetReviewedByIdNull() {
                this[this.tableGAManageChange.ReviewedByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateOfReviewNull() {
                return this.IsNull(this.tableGAManageChange.DateOfReviewColumn);
            }
            
            public void SetDateOfReviewNull() {
                this[this.tableGAManageChange.DateOfReviewColumn] = System.Convert.DBNull;
            }
            
            public bool IsApprovalReviewedById1Null() {
                return this.IsNull(this.tableGAManageChange.ApprovalReviewedById1Column);
            }
            
            public void SetApprovalReviewedById1Null() {
                this[this.tableGAManageChange.ApprovalReviewedById1Column] = System.Convert.DBNull;
            }
            
            public bool IsApprovalRevieweDate1Null() {
                return this.IsNull(this.tableGAManageChange.ApprovalRevieweDate1Column);
            }
            
            public void SetApprovalRevieweDate1Null() {
                this[this.tableGAManageChange.ApprovalRevieweDate1Column] = System.Convert.DBNull;
            }
            
            public bool IsApprovalReviewedById2Null() {
                return this.IsNull(this.tableGAManageChange.ApprovalReviewedById2Column);
            }
            
            public void SetApprovalReviewedById2Null() {
                this[this.tableGAManageChange.ApprovalReviewedById2Column] = System.Convert.DBNull;
            }
            
            public bool IsApprovalRevieweDate2Null() {
                return this.IsNull(this.tableGAManageChange.ApprovalRevieweDate2Column);
            }
            
            public void SetApprovalRevieweDate2Null() {
                this[this.tableGAManageChange.ApprovalRevieweDate2Column] = System.Convert.DBNull;
            }
            
            public bool IsApprovalEndorsedByIdNull() {
                return this.IsNull(this.tableGAManageChange.ApprovalEndorsedByIdColumn);
            }
            
            public void SetApprovalEndorsedByIdNull() {
                this[this.tableGAManageChange.ApprovalEndorsedByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsApprovalEndorsedDateNull() {
                return this.IsNull(this.tableGAManageChange.ApprovalEndorsedDateColumn);
            }
            
            public void SetApprovalEndorsedDateNull() {
                this[this.tableGAManageChange.ApprovalEndorsedDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsApprovedByIdNull() {
                return this.IsNull(this.tableGAManageChange.ApprovedByIdColumn);
            }
            
            public void SetApprovedByIdNull() {
                this[this.tableGAManageChange.ApprovedByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsApprovedDateNull() {
                return this.IsNull(this.tableGAManageChange.ApprovedDateColumn);
            }
            
            public void SetApprovedDateNull() {
                this[this.tableGAManageChange.ApprovedDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsLessonsLearnedNull() {
                return this.IsNull(this.tableGAManageChange.LessonsLearnedColumn);
            }
            
            public void SetLessonsLearnedNull() {
                this[this.tableGAManageChange.LessonsLearnedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangeCommunicatedByIdNull() {
                return this.IsNull(this.tableGAManageChange.ChangeCommunicatedByIdColumn);
            }
            
            public void SetChangeCommunicatedByIdNull() {
                this[this.tableGAManageChange.ChangeCommunicatedByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangeCommunicatedNull() {
                return this.IsNull(this.tableGAManageChange.DateChangeCommunicatedColumn);
            }
            
            public void SetDateChangeCommunicatedNull() {
                this[this.tableGAManageChange.DateChangeCommunicatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsMethodOfCommunicationNull() {
                return this.IsNull(this.tableGAManageChange.MethodOfCommunicationColumn);
            }
            
            public void SetMethodOfCommunicationNull() {
                this[this.tableGAManageChange.MethodOfCommunicationColumn] = System.Convert.DBNull;
            }
            
            public bool IsDocumentationChangesByIdNull() {
                return this.IsNull(this.tableGAManageChange.DocumentationChangesByIdColumn);
            }
            
            public void SetDocumentationChangesByIdNull() {
                this[this.tableGAManageChange.DocumentationChangesByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDocumentationChangesNull() {
                return this.IsNull(this.tableGAManageChange.DateDocumentationChangesColumn);
            }
            
            public void SetDateDocumentationChangesNull() {
                this[this.tableGAManageChange.DateDocumentationChangesColumn] = System.Convert.DBNull;
            }
            
            public bool IsDocumentsChangedNull() {
                return this.IsNull(this.tableGAManageChange.DocumentsChangedColumn);
            }
            
            public void SetDocumentsChangedNull() {
                this[this.tableGAManageChange.DocumentsChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsTrainingRequriementsCompletedByIdNull() {
                return this.IsNull(this.tableGAManageChange.TrainingRequriementsCompletedByIdColumn);
            }
            
            public void SetTrainingRequriementsCompletedByIdNull() {
                this[this.tableGAManageChange.TrainingRequriementsCompletedByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateTrainingRequriementsCompletedNull() {
                return this.IsNull(this.tableGAManageChange.DateTrainingRequriementsCompletedColumn);
            }
            
            public void SetDateTrainingRequriementsCompletedNull() {
                this[this.tableGAManageChange.DateTrainingRequriementsCompletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsTrainingConductedNull() {
                return this.IsNull(this.tableGAManageChange.TrainingConductedColumn);
            }
            
            public void SetTrainingConductedNull() {
                this[this.tableGAManageChange.TrainingConductedColumn] = System.Convert.DBNull;
            }
            
            public bool IsRegulatoryPermitRequirementsCompletedByIdNull() {
                return this.IsNull(this.tableGAManageChange.RegulatoryPermitRequirementsCompletedByIdColumn);
            }
            
            public void SetRegulatoryPermitRequirementsCompletedByIdNull() {
                this[this.tableGAManageChange.RegulatoryPermitRequirementsCompletedByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateRegulatoryPermitRequirementsCompletedNull() {
                return this.IsNull(this.tableGAManageChange.DateRegulatoryPermitRequirementsCompletedColumn);
            }
            
            public void SetDateRegulatoryPermitRequirementsCompletedNull() {
                this[this.tableGAManageChange.DateRegulatoryPermitRequirementsCompletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsRegulatoryPermitRequirementsCompletedNull() {
                return this.IsNull(this.tableGAManageChange.RegulatoryPermitRequirementsCompletedColumn);
            }
            
            public void SetRegulatoryPermitRequirementsCompletedNull() {
                this[this.tableGAManageChange.RegulatoryPermitRequirementsCompletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangeRequirementsCompletedByIdNull() {
                return this.IsNull(this.tableGAManageChange.ChangeRequirementsCompletedByIdColumn);
            }
            
            public void SetChangeRequirementsCompletedByIdNull() {
                this[this.tableGAManageChange.ChangeRequirementsCompletedByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangeRequirementsCompletedNull() {
                return this.IsNull(this.tableGAManageChange.DateChangeRequirementsCompletedColumn);
            }
            
            public void SetDateChangeRequirementsCompletedNull() {
                this[this.tableGAManageChange.DateChangeRequirementsCompletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangeRequirementsCompletedCommentsNull() {
                return this.IsNull(this.tableGAManageChange.ChangeRequirementsCompletedCommentsColumn);
            }
            
            public void SetChangeRequirementsCompletedCommentsNull() {
                this[this.tableGAManageChange.ChangeRequirementsCompletedCommentsColumn] = System.Convert.DBNull;
            }
            
            public bool IsLessonsLearnedCommunicatedByIdNull() {
                return this.IsNull(this.tableGAManageChange.LessonsLearnedCommunicatedByIdColumn);
            }
            
            public void SetLessonsLearnedCommunicatedByIdNull() {
                this[this.tableGAManageChange.LessonsLearnedCommunicatedByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateLessonsLearnedCommunicatedNull() {
                return this.IsNull(this.tableGAManageChange.DateLessonsLearnedCommunicatedColumn);
            }
            
            public void SetDateLessonsLearnedCommunicatedNull() {
                this[this.tableGAManageChange.DateLessonsLearnedCommunicatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangeReportCloseOutDocumentationByIdNull() {
                return this.IsNull(this.tableGAManageChange.ChangeReportCloseOutDocumentationByIdColumn);
            }
            
            public void SetChangeReportCloseOutDocumentationByIdNull() {
                this[this.tableGAManageChange.ChangeReportCloseOutDocumentationByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangeReportCloseOutDocumentationNull() {
                return this.IsNull(this.tableGAManageChange.DateChangeReportCloseOutDocumentationColumn);
            }
            
            public void SetDateChangeReportCloseOutDocumentationNull() {
                this[this.tableGAManageChange.DateChangeReportCloseOutDocumentationColumn] = System.Convert.DBNull;
            }
            
            public bool IsApprovalForChangeReportCloseOutByIdNull() {
                return this.IsNull(this.tableGAManageChange.ApprovalForChangeReportCloseOutByIdColumn);
            }
            
            public void SetApprovalForChangeReportCloseOutByIdNull() {
                this[this.tableGAManageChange.ApprovalForChangeReportCloseOutByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateApprovalForChangeReportCloseOutNull() {
                return this.IsNull(this.tableGAManageChange.DateApprovalForChangeReportCloseOutColumn);
            }
            
            public void SetDateApprovalForChangeReportCloseOutNull() {
                this[this.tableGAManageChange.DateApprovalForChangeReportCloseOutColumn] = System.Convert.DBNull;
            }
            
            public bool IsManageChangeStatusListsRowIdNull() {
                return this.IsNull(this.tableGAManageChange.ManageChangeStatusListsRowIdColumn);
            }
            
            public void SetManageChangeStatusListsRowIdNull() {
                this[this.tableGAManageChange.ManageChangeStatusListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsInitiationCompletedSwitchNull() {
                return this.IsNull(this.tableGAManageChange.InitiationCompletedSwitchColumn);
            }
            
            public void SetInitiationCompletedSwitchNull() {
                this[this.tableGAManageChange.InitiationCompletedSwitchColumn] = System.Convert.DBNull;
            }
            
            public bool IsEvaluationCompletedSwitchNull() {
                return this.IsNull(this.tableGAManageChange.EvaluationCompletedSwitchColumn);
            }
            
            public void SetEvaluationCompletedSwitchNull() {
                this[this.tableGAManageChange.EvaluationCompletedSwitchColumn] = System.Convert.DBNull;
            }
            
            public bool IsApprovalsCompletedSwitchNull() {
                return this.IsNull(this.tableGAManageChange.ApprovalsCompletedSwitchColumn);
            }
            
            public void SetApprovalsCompletedSwitchNull() {
                this[this.tableGAManageChange.ApprovalsCompletedSwitchColumn] = System.Convert.DBNull;
            }
            
            public bool IsImplementationCompletedSwitchNull() {
                return this.IsNull(this.tableGAManageChange.ImplementationCompletedSwitchColumn);
            }
            
            public void SetImplementationCompletedSwitchNull() {
                this[this.tableGAManageChange.ImplementationCompletedSwitchColumn] = System.Convert.DBNull;
            }
            
            public bool IsCloseOutCompletedSwitchNull() {
                return this.IsNull(this.tableGAManageChange.CloseOutCompletedSwitchColumn);
            }
            
            public void SetCloseOutCompletedSwitchNull() {
                this[this.tableGAManageChange.CloseOutCompletedSwitchColumn] = System.Convert.DBNull;
            }
            
            public bool IsRejectedSwitchNull() {
                return this.IsNull(this.tableGAManageChange.RejectedSwitchColumn);
            }
            
            public void SetRejectedSwitchNull() {
                this[this.tableGAManageChange.RejectedSwitchColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFreeSwitchNull() {
                return this.IsNull(this.tableGAManageChange.SwitchFreeSwitchColumn);
            }
            
            public void SetSwitchFreeSwitchNull() {
                this[this.tableGAManageChange.SwitchFreeSwitchColumn] = System.Convert.DBNull;
            }
            
            public bool IsAcceptedByMasterNull() {
                return this.IsNull(this.tableGAManageChange.AcceptedByMasterColumn);
            }
            
            public void SetAcceptedByMasterNull() {
                this[this.tableGAManageChange.AcceptedByMasterColumn] = System.Convert.DBNull;
            }
            
            public bool IsComputedExposureNull() {
                return this.IsNull(this.tableGAManageChange.ComputedExposureColumn);
            }
            
            public void SetComputedExposureNull() {
                this[this.tableGAManageChange.ComputedExposureColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAManageChange.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGAManageChange.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAManageChange.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGAManageChange.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAManageChange.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGAManageChange.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAManageChange.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGAManageChange.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAManageChange.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGAManageChange.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAManageChange.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGAManageChange.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAManageChange.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGAManageChange.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAManageChange.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGAManageChange.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAManageChange.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGAManageChange.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAManageChange.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGAManageChange.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAManageChange.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGAManageChange.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAManageChange.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGAManageChange.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAManageChange.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGAManageChange.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAManageChange.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGAManageChange.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAManageChange.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGAManageChange.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAManageChange.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGAManageChange.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAManageChange.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGAManageChange.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAManageChange.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGAManageChange.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAManageChange.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGAManageChange.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAManageChangeRowChangeEvent : EventArgs {
            
            private GAManageChangeRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAManageChangeRowChangeEvent(GAManageChangeRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAManageChangeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GATextItemDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnTextItemRowId;
            
            private DataColumn columnSequence;
            
            private DataColumn columnHeader;
            
            private DataColumn columnPresenter;
            
            private DataColumn columnTimeStart;
            
            private DataColumn columnTimeEnd;
            
            private DataColumn columnText;
            
            private DataColumn columnSignedBy;
            
            private DataColumn columnDateSigned;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GATextItemDataTable() : 
                    base("GATextItem") {
                this.InitClass();
            }
            
            internal GATextItemDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn TextItemRowIdColumn {
                get {
                    return this.columnTextItemRowId;
                }
            }
            
            internal DataColumn SequenceColumn {
                get {
                    return this.columnSequence;
                }
            }
            
            internal DataColumn HeaderColumn {
                get {
                    return this.columnHeader;
                }
            }
            
            internal DataColumn PresenterColumn {
                get {
                    return this.columnPresenter;
                }
            }
            
            internal DataColumn TimeStartColumn {
                get {
                    return this.columnTimeStart;
                }
            }
            
            internal DataColumn TimeEndColumn {
                get {
                    return this.columnTimeEnd;
                }
            }
            
            internal DataColumn TextColumn {
                get {
                    return this.columnText;
                }
            }
            
            internal DataColumn SignedByColumn {
                get {
                    return this.columnSignedBy;
                }
            }
            
            internal DataColumn DateSignedColumn {
                get {
                    return this.columnDateSigned;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GATextItemRow this[int index] {
                get {
                    return ((GATextItemRow)(this.Rows[index]));
                }
            }
            
            public event GATextItemRowChangeEventHandler GATextItemRowChanged;
            
            public event GATextItemRowChangeEventHandler GATextItemRowChanging;
            
            public event GATextItemRowChangeEventHandler GATextItemRowDeleted;
            
            public event GATextItemRowChangeEventHandler GATextItemRowDeleting;
            
            public void AddGATextItemRow(GATextItemRow row) {
                this.Rows.Add(row);
            }
            
            public GATextItemRow AddGATextItemRow(
                        int Sequence, 
                        string Header, 
                        string Presenter, 
                        System.DateTime TimeStart, 
                        System.DateTime TimeEnd, 
                        string Text, 
                        string SignedBy, 
                        System.DateTime DateSigned, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GATextItemRow rowGATextItemRow = ((GATextItemRow)(this.NewRow()));
                rowGATextItemRow.ItemArray = new object[] {
                        null,
                        Sequence,
                        Header,
                        Presenter,
                        TimeStart,
                        TimeEnd,
                        Text,
                        SignedBy,
                        DateSigned,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGATextItemRow);
                return rowGATextItemRow;
            }
            
            public GATextItemRow FindByTextItemRowId(int TextItemRowId) {
                return ((GATextItemRow)(this.Rows.Find(new object[] {
                            TextItemRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GATextItemDataTable cln = ((GATextItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GATextItemDataTable();
            }
            
            internal void InitVars() {
                this.columnTextItemRowId = this.Columns["TextItemRowId"];
                this.columnSequence = this.Columns["Sequence"];
                this.columnHeader = this.Columns["Header"];
                this.columnPresenter = this.Columns["Presenter"];
                this.columnTimeStart = this.Columns["TimeStart"];
                this.columnTimeEnd = this.Columns["TimeEnd"];
                this.columnText = this.Columns["Text"];
                this.columnSignedBy = this.Columns["SignedBy"];
                this.columnDateSigned = this.Columns["DateSigned"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnTextItemRowId = new DataColumn("TextItemRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextItemRowId);
                this.columnSequence = new DataColumn("Sequence", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSequence);
                this.columnHeader = new DataColumn("Header", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHeader);
                this.columnPresenter = new DataColumn("Presenter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPresenter);
                this.columnTimeStart = new DataColumn("TimeStart", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTimeStart);
                this.columnTimeEnd = new DataColumn("TimeEnd", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTimeEnd);
                this.columnText = new DataColumn("Text", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnText);
                this.columnSignedBy = new DataColumn("SignedBy", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSignedBy);
                this.columnDateSigned = new DataColumn("DateSigned", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateSigned);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey18", new DataColumn[] {
                                this.columnTextItemRowId}, true));
                this.columnTextItemRowId.AutoIncrement = true;
                this.columnTextItemRowId.AllowDBNull = false;
                this.columnTextItemRowId.ReadOnly = true;
                this.columnTextItemRowId.Unique = true;
            }
            
            public GATextItemRow NewGATextItemRow() {
                return ((GATextItemRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GATextItemRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GATextItemRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GATextItemRowChanged != null)) {
                    this.GATextItemRowChanged(this, new GATextItemRowChangeEvent(((GATextItemRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GATextItemRowChanging != null)) {
                    this.GATextItemRowChanging(this, new GATextItemRowChangeEvent(((GATextItemRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GATextItemRowDeleted != null)) {
                    this.GATextItemRowDeleted(this, new GATextItemRowChangeEvent(((GATextItemRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GATextItemRowDeleting != null)) {
                    this.GATextItemRowDeleting(this, new GATextItemRowChangeEvent(((GATextItemRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGATextItemRow(GATextItemRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GATextItemRow : DataRow {
            
            private GATextItemDataTable tableGATextItem;
            
            internal GATextItemRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGATextItem = ((GATextItemDataTable)(this.Table));
            }
            
            public int TextItemRowId {
                get {
                    return ((int)(this[this.tableGATextItem.TextItemRowIdColumn]));
                }
                set {
                    this[this.tableGATextItem.TextItemRowIdColumn] = value;
                }
            }
            
            public int Sequence {
                get {
                    try {
                        return ((int)(this[this.tableGATextItem.SequenceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.SequenceColumn] = value;
                }
            }
            
            public string Header {
                get {
                    try {
                        return ((string)(this[this.tableGATextItem.HeaderColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.HeaderColumn] = value;
                }
            }
            
            public string Presenter {
                get {
                    try {
                        return ((string)(this[this.tableGATextItem.PresenterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.PresenterColumn] = value;
                }
            }
            
            public System.DateTime TimeStart {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGATextItem.TimeStartColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.TimeStartColumn] = value;
                }
            }
            
            public System.DateTime TimeEnd {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGATextItem.TimeEndColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.TimeEndColumn] = value;
                }
            }
            
            public string Text {
                get {
                    try {
                        return ((string)(this[this.tableGATextItem.TextColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.TextColumn] = value;
                }
            }
            
            public string SignedBy {
                get {
                    try {
                        return ((string)(this[this.tableGATextItem.SignedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.SignedByColumn] = value;
                }
            }
            
            public System.DateTime DateSigned {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGATextItem.DateSignedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.DateSignedColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGATextItem.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGATextItem.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGATextItem.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGATextItem.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGATextItem.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGATextItem.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGATextItem.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGATextItem.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGATextItem.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGATextItem.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGATextItem.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGATextItem.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGATextItem.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGATextItem.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGATextItem.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGATextItem.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGATextItem.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGATextItem.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGATextItem.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGATextItem.IntFree3Column] = value;
                }
            }
            
            public bool IsSequenceNull() {
                return this.IsNull(this.tableGATextItem.SequenceColumn);
            }
            
            public void SetSequenceNull() {
                this[this.tableGATextItem.SequenceColumn] = System.Convert.DBNull;
            }
            
            public bool IsHeaderNull() {
                return this.IsNull(this.tableGATextItem.HeaderColumn);
            }
            
            public void SetHeaderNull() {
                this[this.tableGATextItem.HeaderColumn] = System.Convert.DBNull;
            }
            
            public bool IsPresenterNull() {
                return this.IsNull(this.tableGATextItem.PresenterColumn);
            }
            
            public void SetPresenterNull() {
                this[this.tableGATextItem.PresenterColumn] = System.Convert.DBNull;
            }
            
            public bool IsTimeStartNull() {
                return this.IsNull(this.tableGATextItem.TimeStartColumn);
            }
            
            public void SetTimeStartNull() {
                this[this.tableGATextItem.TimeStartColumn] = System.Convert.DBNull;
            }
            
            public bool IsTimeEndNull() {
                return this.IsNull(this.tableGATextItem.TimeEndColumn);
            }
            
            public void SetTimeEndNull() {
                this[this.tableGATextItem.TimeEndColumn] = System.Convert.DBNull;
            }
            
            public bool IsTextNull() {
                return this.IsNull(this.tableGATextItem.TextColumn);
            }
            
            public void SetTextNull() {
                this[this.tableGATextItem.TextColumn] = System.Convert.DBNull;
            }
            
            public bool IsSignedByNull() {
                return this.IsNull(this.tableGATextItem.SignedByColumn);
            }
            
            public void SetSignedByNull() {
                this[this.tableGATextItem.SignedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateSignedNull() {
                return this.IsNull(this.tableGATextItem.DateSignedColumn);
            }
            
            public void SetDateSignedNull() {
                this[this.tableGATextItem.DateSignedColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGATextItem.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGATextItem.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGATextItem.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGATextItem.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGATextItem.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGATextItem.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGATextItem.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGATextItem.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGATextItem.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGATextItem.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGATextItem.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGATextItem.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGATextItem.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGATextItem.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGATextItem.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGATextItem.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGATextItem.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGATextItem.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGATextItem.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGATextItem.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGATextItem.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGATextItem.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGATextItem.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGATextItem.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGATextItem.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGATextItem.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGATextItem.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGATextItem.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGATextItem.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGATextItem.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGATextItem.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGATextItem.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGATextItem.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGATextItem.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGATextItem.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGATextItem.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGATextItem.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGATextItem.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GATextItemRowChangeEvent : EventArgs {
            
            private GATextItemRow eventRow;
            
            private DataRowAction eventAction;
            
            public GATextItemRowChangeEvent(GATextItemRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GATextItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAControlDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnControlRowId;
            
            private DataColumn columnControlCategoryListsRowId;
            
            private DataColumn columnResourcesNeeded;
            
            private DataColumn columnDateNextAssessment;
            
            private DataColumn columnDateApproved;
            
            private DataColumn columnDateAssessed;
            
            private DataColumn columnDescription;
            
            private DataColumn columnPurpose;
            
            private DataColumn columnName;
            
            private DataColumn columnResponsibleRoleListsRowId;
            
            private DataColumn columnComment;
            
            private DataColumn columnResponsibleId;
            
            private DataColumn columnAssessedById;
            
            private DataColumn columnApprovedById;
            
            internal GAControlDataTable() : 
                    base("GAControl") {
                this.InitClass();
            }
            
            internal GAControlDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ControlRowIdColumn {
                get {
                    return this.columnControlRowId;
                }
            }
            
            internal DataColumn ControlCategoryListsRowIdColumn {
                get {
                    return this.columnControlCategoryListsRowId;
                }
            }
            
            internal DataColumn ResourcesNeededColumn {
                get {
                    return this.columnResourcesNeeded;
                }
            }
            
            internal DataColumn DateNextAssessmentColumn {
                get {
                    return this.columnDateNextAssessment;
                }
            }
            
            internal DataColumn DateApprovedColumn {
                get {
                    return this.columnDateApproved;
                }
            }
            
            internal DataColumn DateAssessedColumn {
                get {
                    return this.columnDateAssessed;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn PurposeColumn {
                get {
                    return this.columnPurpose;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn ResponsibleRoleListsRowIdColumn {
                get {
                    return this.columnResponsibleRoleListsRowId;
                }
            }
            
            internal DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            internal DataColumn ResponsibleIdColumn {
                get {
                    return this.columnResponsibleId;
                }
            }
            
            internal DataColumn AssessedByIdColumn {
                get {
                    return this.columnAssessedById;
                }
            }
            
            internal DataColumn ApprovedByIdColumn {
                get {
                    return this.columnApprovedById;
                }
            }
            
            public GAControlRow this[int index] {
                get {
                    return ((GAControlRow)(this.Rows[index]));
                }
            }
            
            public event GAControlRowChangeEventHandler GAControlRowChanged;
            
            public event GAControlRowChangeEventHandler GAControlRowChanging;
            
            public event GAControlRowChangeEventHandler GAControlRowDeleted;
            
            public event GAControlRowChangeEventHandler GAControlRowDeleting;
            
            public void AddGAControlRow(GAControlRow row) {
                this.Rows.Add(row);
            }
            
            public GAControlRow AddGAControlRow(string ControlCategoryListsRowId, string ResourcesNeeded, System.DateTime DateNextAssessment, System.DateTime DateApproved, System.DateTime DateAssessed, string Description, string Purpose, string Name, string ResponsibleRoleListsRowId, string Comment, string ResponsibleId, string AssessedById, string ApprovedById) {
                GAControlRow rowGAControlRow = ((GAControlRow)(this.NewRow()));
                rowGAControlRow.ItemArray = new object[] {
                        null,
                        ControlCategoryListsRowId,
                        ResourcesNeeded,
                        DateNextAssessment,
                        DateApproved,
                        DateAssessed,
                        Description,
                        Purpose,
                        Name,
                        ResponsibleRoleListsRowId,
                        Comment,
                        ResponsibleId,
                        AssessedById,
                        ApprovedById};
                this.Rows.Add(rowGAControlRow);
                return rowGAControlRow;
            }
            
            public GAControlRow FindByControlRowId(int ControlRowId) {
                return ((GAControlRow)(this.Rows.Find(new object[] {
                            ControlRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAControlDataTable cln = ((GAControlDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAControlDataTable();
            }
            
            internal void InitVars() {
                this.columnControlRowId = this.Columns["ControlRowId"];
                this.columnControlCategoryListsRowId = this.Columns["ControlCategoryListsRowId"];
                this.columnResourcesNeeded = this.Columns["ResourcesNeeded"];
                this.columnDateNextAssessment = this.Columns["DateNextAssessment"];
                this.columnDateApproved = this.Columns["DateApproved"];
                this.columnDateAssessed = this.Columns["DateAssessed"];
                this.columnDescription = this.Columns["Description"];
                this.columnPurpose = this.Columns["Purpose"];
                this.columnName = this.Columns["Name"];
                this.columnResponsibleRoleListsRowId = this.Columns["ResponsibleRoleListsRowId"];
                this.columnComment = this.Columns["Comment"];
                this.columnResponsibleId = this.Columns["ResponsibleId"];
                this.columnAssessedById = this.Columns["AssessedById"];
                this.columnApprovedById = this.Columns["ApprovedById"];
            }
            
            private void InitClass() {
                this.columnControlRowId = new DataColumn("ControlRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnControlRowId);
                this.columnControlCategoryListsRowId = new DataColumn("ControlCategoryListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnControlCategoryListsRowId);
                this.columnResourcesNeeded = new DataColumn("ResourcesNeeded", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResourcesNeeded);
                this.columnDateNextAssessment = new DataColumn("DateNextAssessment", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateNextAssessment);
                this.columnDateApproved = new DataColumn("DateApproved", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateApproved);
                this.columnDateAssessed = new DataColumn("DateAssessed", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateAssessed);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnPurpose = new DataColumn("Purpose", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPurpose);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnResponsibleRoleListsRowId = new DataColumn("ResponsibleRoleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResponsibleRoleListsRowId);
                this.columnComment = new DataColumn("Comment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComment);
                this.columnResponsibleId = new DataColumn("ResponsibleId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResponsibleId);
                this.columnAssessedById = new DataColumn("AssessedById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAssessedById);
                this.columnApprovedById = new DataColumn("ApprovedById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApprovedById);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey19", new DataColumn[] {
                                this.columnControlRowId}, true));
                this.columnControlRowId.AutoIncrement = true;
                this.columnControlRowId.AllowDBNull = false;
                this.columnControlRowId.ReadOnly = true;
                this.columnControlRowId.Unique = true;
            }
            
            public GAControlRow NewGAControlRow() {
                return ((GAControlRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAControlRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAControlRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAControlRowChanged != null)) {
                    this.GAControlRowChanged(this, new GAControlRowChangeEvent(((GAControlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAControlRowChanging != null)) {
                    this.GAControlRowChanging(this, new GAControlRowChangeEvent(((GAControlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAControlRowDeleted != null)) {
                    this.GAControlRowDeleted(this, new GAControlRowChangeEvent(((GAControlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAControlRowDeleting != null)) {
                    this.GAControlRowDeleting(this, new GAControlRowChangeEvent(((GAControlRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAControlRow(GAControlRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAControlRow : DataRow {
            
            private GAControlDataTable tableGAControl;
            
            internal GAControlRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAControl = ((GAControlDataTable)(this.Table));
            }
            
            public int ControlRowId {
                get {
                    return ((int)(this[this.tableGAControl.ControlRowIdColumn]));
                }
                set {
                    this[this.tableGAControl.ControlRowIdColumn] = value;
                }
            }
            
            public string ControlCategoryListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAControl.ControlCategoryListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAControl.ControlCategoryListsRowIdColumn] = value;
                }
            }
            
            public string ResourcesNeeded {
                get {
                    try {
                        return ((string)(this[this.tableGAControl.ResourcesNeededColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAControl.ResourcesNeededColumn] = value;
                }
            }
            
            public System.DateTime DateNextAssessment {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAControl.DateNextAssessmentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAControl.DateNextAssessmentColumn] = value;
                }
            }
            
            public System.DateTime DateApproved {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAControl.DateApprovedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAControl.DateApprovedColumn] = value;
                }
            }
            
            public System.DateTime DateAssessed {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAControl.DateAssessedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAControl.DateAssessedColumn] = value;
                }
            }
            
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGAControl.DescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAControl.DescriptionColumn] = value;
                }
            }
            
            public string Purpose {
                get {
                    try {
                        return ((string)(this[this.tableGAControl.PurposeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAControl.PurposeColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGAControl.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAControl.NameColumn] = value;
                }
            }
            
            public string ResponsibleRoleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAControl.ResponsibleRoleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAControl.ResponsibleRoleListsRowIdColumn] = value;
                }
            }
            
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGAControl.CommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAControl.CommentColumn] = value;
                }
            }
            
            public string ResponsibleId {
                get {
                    try {
                        return ((string)(this[this.tableGAControl.ResponsibleIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAControl.ResponsibleIdColumn] = value;
                }
            }
            
            public string AssessedById {
                get {
                    try {
                        return ((string)(this[this.tableGAControl.AssessedByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAControl.AssessedByIdColumn] = value;
                }
            }
            
            public string ApprovedById {
                get {
                    try {
                        return ((string)(this[this.tableGAControl.ApprovedByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAControl.ApprovedByIdColumn] = value;
                }
            }
            
            public bool IsControlCategoryListsRowIdNull() {
                return this.IsNull(this.tableGAControl.ControlCategoryListsRowIdColumn);
            }
            
            public void SetControlCategoryListsRowIdNull() {
                this[this.tableGAControl.ControlCategoryListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsResourcesNeededNull() {
                return this.IsNull(this.tableGAControl.ResourcesNeededColumn);
            }
            
            public void SetResourcesNeededNull() {
                this[this.tableGAControl.ResourcesNeededColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateNextAssessmentNull() {
                return this.IsNull(this.tableGAControl.DateNextAssessmentColumn);
            }
            
            public void SetDateNextAssessmentNull() {
                this[this.tableGAControl.DateNextAssessmentColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateApprovedNull() {
                return this.IsNull(this.tableGAControl.DateApprovedColumn);
            }
            
            public void SetDateApprovedNull() {
                this[this.tableGAControl.DateApprovedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateAssessedNull() {
                return this.IsNull(this.tableGAControl.DateAssessedColumn);
            }
            
            public void SetDateAssessedNull() {
                this[this.tableGAControl.DateAssessedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGAControl.DescriptionColumn);
            }
            
            public void SetDescriptionNull() {
                this[this.tableGAControl.DescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsPurposeNull() {
                return this.IsNull(this.tableGAControl.PurposeColumn);
            }
            
            public void SetPurposeNull() {
                this[this.tableGAControl.PurposeColumn] = System.Convert.DBNull;
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tableGAControl.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tableGAControl.NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsResponsibleRoleListsRowIdNull() {
                return this.IsNull(this.tableGAControl.ResponsibleRoleListsRowIdColumn);
            }
            
            public void SetResponsibleRoleListsRowIdNull() {
                this[this.tableGAControl.ResponsibleRoleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsCommentNull() {
                return this.IsNull(this.tableGAControl.CommentColumn);
            }
            
            public void SetCommentNull() {
                this[this.tableGAControl.CommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsResponsibleIdNull() {
                return this.IsNull(this.tableGAControl.ResponsibleIdColumn);
            }
            
            public void SetResponsibleIdNull() {
                this[this.tableGAControl.ResponsibleIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsAssessedByIdNull() {
                return this.IsNull(this.tableGAControl.AssessedByIdColumn);
            }
            
            public void SetAssessedByIdNull() {
                this[this.tableGAControl.AssessedByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsApprovedByIdNull() {
                return this.IsNull(this.tableGAControl.ApprovedByIdColumn);
            }
            
            public void SetApprovedByIdNull() {
                this[this.tableGAControl.ApprovedByIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAControlRowChangeEvent : EventArgs {
            
            private GAControlRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAControlRowChangeEvent(GAControlRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAControlRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GARiskDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnRiskRowId;
            
            private DataColumn columnRiskReferenceId;
            
            private DataColumn columnDate;
            
            private DataColumn columnDateNextAssessment;
            
            private DataColumn columnPreMitigationRiskRatingRowId;
            
            private DataColumn columnPostMitigationRiskRatingRowId;
            
            private DataColumn columnAssessmentPrecontrolMitigation;
            
            private DataColumn columnRisksHazardsIdentified;
            
            private DataColumn columnResponsibleRoleListsRowId;
            
            private DataColumn columnResponsibleId;
            
            private DataColumn columnAssessedById;
            
            private DataColumn columnTask;
            
            private DataColumn columnExistingControlMitigationMeasures;
            
            private DataColumn columnOnSiteRiskAssessmentCompleted;
            
            private DataColumn columnOnshoreRiskAssessmentCompleted;
            
            private DataColumn columnOnSiteJobSafetyAnalysisCompleted;
            
            private DataColumn columnApprovedByOnshoreManagement;
            
            private DataColumn columnOnSiteWorkInstructionCompleted;
            
            private DataColumn columnProcedureId;
            
            private DataColumn columnTrainingRequired;
            
            private DataColumn columnAssessmentPostcontrolMitigation;
            
            private DataColumn columnSuggestionFurtherRiskReduction;
            
            private DataColumn columnSeverityAssetsListsRowId;
            
            private DataColumn columnSeverityEnvironmentListsRowId;
            
            private DataColumn columnSeverityPeopleListsRowId;
            
            private DataColumn columnSeverityReputationListsRowId;
            
            private DataColumn columnStatusListsRowId;
            
            private DataColumn columnPotentialListsRowId;
            
            private DataColumn columnName;
            
            private DataColumn columnDescription;
            
            internal GARiskDataTable() : 
                    base("GARisk") {
                this.InitClass();
            }
            
            internal GARiskDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn RiskRowIdColumn {
                get {
                    return this.columnRiskRowId;
                }
            }
            
            internal DataColumn RiskReferenceIdColumn {
                get {
                    return this.columnRiskReferenceId;
                }
            }
            
            internal DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            internal DataColumn DateNextAssessmentColumn {
                get {
                    return this.columnDateNextAssessment;
                }
            }
            
            internal DataColumn PreMitigationRiskRatingRowIdColumn {
                get {
                    return this.columnPreMitigationRiskRatingRowId;
                }
            }
            
            internal DataColumn PostMitigationRiskRatingRowIdColumn {
                get {
                    return this.columnPostMitigationRiskRatingRowId;
                }
            }
            
            internal DataColumn AssessmentPrecontrolMitigationColumn {
                get {
                    return this.columnAssessmentPrecontrolMitigation;
                }
            }
            
            internal DataColumn RisksHazardsIdentifiedColumn {
                get {
                    return this.columnRisksHazardsIdentified;
                }
            }
            
            internal DataColumn ResponsibleRoleListsRowIdColumn {
                get {
                    return this.columnResponsibleRoleListsRowId;
                }
            }
            
            internal DataColumn ResponsibleIdColumn {
                get {
                    return this.columnResponsibleId;
                }
            }
            
            internal DataColumn AssessedByIdColumn {
                get {
                    return this.columnAssessedById;
                }
            }
            
            internal DataColumn TaskColumn {
                get {
                    return this.columnTask;
                }
            }
            
            internal DataColumn ExistingControlMitigationMeasuresColumn {
                get {
                    return this.columnExistingControlMitigationMeasures;
                }
            }
            
            internal DataColumn OnSiteRiskAssessmentCompletedColumn {
                get {
                    return this.columnOnSiteRiskAssessmentCompleted;
                }
            }
            
            internal DataColumn OnshoreRiskAssessmentCompletedColumn {
                get {
                    return this.columnOnshoreRiskAssessmentCompleted;
                }
            }
            
            internal DataColumn OnSiteJobSafetyAnalysisCompletedColumn {
                get {
                    return this.columnOnSiteJobSafetyAnalysisCompleted;
                }
            }
            
            internal DataColumn ApprovedByOnshoreManagementColumn {
                get {
                    return this.columnApprovedByOnshoreManagement;
                }
            }
            
            internal DataColumn OnSiteWorkInstructionCompletedColumn {
                get {
                    return this.columnOnSiteWorkInstructionCompleted;
                }
            }
            
            internal DataColumn ProcedureIdColumn {
                get {
                    return this.columnProcedureId;
                }
            }
            
            internal DataColumn TrainingRequiredColumn {
                get {
                    return this.columnTrainingRequired;
                }
            }
            
            internal DataColumn AssessmentPostcontrolMitigationColumn {
                get {
                    return this.columnAssessmentPostcontrolMitigation;
                }
            }
            
            internal DataColumn SuggestionFurtherRiskReductionColumn {
                get {
                    return this.columnSuggestionFurtherRiskReduction;
                }
            }
            
            internal DataColumn SeverityAssetsListsRowIdColumn {
                get {
                    return this.columnSeverityAssetsListsRowId;
                }
            }
            
            internal DataColumn SeverityEnvironmentListsRowIdColumn {
                get {
                    return this.columnSeverityEnvironmentListsRowId;
                }
            }
            
            internal DataColumn SeverityPeopleListsRowIdColumn {
                get {
                    return this.columnSeverityPeopleListsRowId;
                }
            }
            
            internal DataColumn SeverityReputationListsRowIdColumn {
                get {
                    return this.columnSeverityReputationListsRowId;
                }
            }
            
            internal DataColumn StatusListsRowIdColumn {
                get {
                    return this.columnStatusListsRowId;
                }
            }
            
            internal DataColumn PotentialListsRowIdColumn {
                get {
                    return this.columnPotentialListsRowId;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            public GARiskRow this[int index] {
                get {
                    return ((GARiskRow)(this.Rows[index]));
                }
            }
            
            public event GARiskRowChangeEventHandler GARiskRowChanged;
            
            public event GARiskRowChangeEventHandler GARiskRowChanging;
            
            public event GARiskRowChangeEventHandler GARiskRowDeleted;
            
            public event GARiskRowChangeEventHandler GARiskRowDeleting;
            
            public void AddGARiskRow(GARiskRow row) {
                this.Rows.Add(row);
            }
            
            public GARiskRow AddGARiskRow(
                        string RiskReferenceId, 
                        System.DateTime Date, 
                        System.DateTime DateNextAssessment, 
                        string PreMitigationRiskRatingRowId, 
                        string PostMitigationRiskRatingRowId, 
                        string AssessmentPrecontrolMitigation, 
                        string RisksHazardsIdentified, 
                        string ResponsibleRoleListsRowId, 
                        string ResponsibleId, 
                        string AssessedById, 
                        bool Task, 
                        string ExistingControlMitigationMeasures, 
                        bool OnSiteRiskAssessmentCompleted, 
                        bool OnshoreRiskAssessmentCompleted, 
                        bool OnSiteJobSafetyAnalysisCompleted, 
                        bool ApprovedByOnshoreManagement, 
                        bool OnSiteWorkInstructionCompleted, 
                        string ProcedureId, 
                        bool TrainingRequired, 
                        string AssessmentPostcontrolMitigation, 
                        string SuggestionFurtherRiskReduction, 
                        string SeverityAssetsListsRowId, 
                        string SeverityEnvironmentListsRowId, 
                        string SeverityPeopleListsRowId, 
                        string SeverityReputationListsRowId, 
                        string StatusListsRowId, 
                        string PotentialListsRowId, 
                        string Name, 
                        string Description) {
                GARiskRow rowGARiskRow = ((GARiskRow)(this.NewRow()));
                rowGARiskRow.ItemArray = new object[] {
                        null,
                        RiskReferenceId,
                        Date,
                        DateNextAssessment,
                        PreMitigationRiskRatingRowId,
                        PostMitigationRiskRatingRowId,
                        AssessmentPrecontrolMitigation,
                        RisksHazardsIdentified,
                        ResponsibleRoleListsRowId,
                        ResponsibleId,
                        AssessedById,
                        Task,
                        ExistingControlMitigationMeasures,
                        OnSiteRiskAssessmentCompleted,
                        OnshoreRiskAssessmentCompleted,
                        OnSiteJobSafetyAnalysisCompleted,
                        ApprovedByOnshoreManagement,
                        OnSiteWorkInstructionCompleted,
                        ProcedureId,
                        TrainingRequired,
                        AssessmentPostcontrolMitigation,
                        SuggestionFurtherRiskReduction,
                        SeverityAssetsListsRowId,
                        SeverityEnvironmentListsRowId,
                        SeverityPeopleListsRowId,
                        SeverityReputationListsRowId,
                        StatusListsRowId,
                        PotentialListsRowId,
                        Name,
                        Description};
                this.Rows.Add(rowGARiskRow);
                return rowGARiskRow;
            }
            
            public GARiskRow FindByRiskRowId(int RiskRowId) {
                return ((GARiskRow)(this.Rows.Find(new object[] {
                            RiskRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GARiskDataTable cln = ((GARiskDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GARiskDataTable();
            }
            
            internal void InitVars() {
                this.columnRiskRowId = this.Columns["RiskRowId"];
                this.columnRiskReferenceId = this.Columns["RiskReferenceId"];
                this.columnDate = this.Columns["Date"];
                this.columnDateNextAssessment = this.Columns["DateNextAssessment"];
                this.columnPreMitigationRiskRatingRowId = this.Columns["PreMitigationRiskRatingRowId"];
                this.columnPostMitigationRiskRatingRowId = this.Columns["PostMitigationRiskRatingRowId"];
                this.columnAssessmentPrecontrolMitigation = this.Columns["AssessmentPrecontrolMitigation"];
                this.columnRisksHazardsIdentified = this.Columns["RisksHazardsIdentified"];
                this.columnResponsibleRoleListsRowId = this.Columns["ResponsibleRoleListsRowId"];
                this.columnResponsibleId = this.Columns["ResponsibleId"];
                this.columnAssessedById = this.Columns["AssessedById"];
                this.columnTask = this.Columns["Task"];
                this.columnExistingControlMitigationMeasures = this.Columns["ExistingControlMitigationMeasures"];
                this.columnOnSiteRiskAssessmentCompleted = this.Columns["OnSiteRiskAssessmentCompleted"];
                this.columnOnshoreRiskAssessmentCompleted = this.Columns["OnshoreRiskAssessmentCompleted"];
                this.columnOnSiteJobSafetyAnalysisCompleted = this.Columns["OnSiteJobSafetyAnalysisCompleted"];
                this.columnApprovedByOnshoreManagement = this.Columns["ApprovedByOnshoreManagement"];
                this.columnOnSiteWorkInstructionCompleted = this.Columns["OnSiteWorkInstructionCompleted"];
                this.columnProcedureId = this.Columns["ProcedureId"];
                this.columnTrainingRequired = this.Columns["TrainingRequired"];
                this.columnAssessmentPostcontrolMitigation = this.Columns["AssessmentPostcontrolMitigation"];
                this.columnSuggestionFurtherRiskReduction = this.Columns["SuggestionFurtherRiskReduction"];
                this.columnSeverityAssetsListsRowId = this.Columns["SeverityAssetsListsRowId"];
                this.columnSeverityEnvironmentListsRowId = this.Columns["SeverityEnvironmentListsRowId"];
                this.columnSeverityPeopleListsRowId = this.Columns["SeverityPeopleListsRowId"];
                this.columnSeverityReputationListsRowId = this.Columns["SeverityReputationListsRowId"];
                this.columnStatusListsRowId = this.Columns["StatusListsRowId"];
                this.columnPotentialListsRowId = this.Columns["PotentialListsRowId"];
                this.columnName = this.Columns["Name"];
                this.columnDescription = this.Columns["Description"];
            }
            
            private void InitClass() {
                this.columnRiskRowId = new DataColumn("RiskRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRiskRowId);
                this.columnRiskReferenceId = new DataColumn("RiskReferenceId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRiskReferenceId);
                this.columnDate = new DataColumn("Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDate);
                this.columnDateNextAssessment = new DataColumn("DateNextAssessment", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateNextAssessment);
                this.columnPreMitigationRiskRatingRowId = new DataColumn("PreMitigationRiskRatingRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreMitigationRiskRatingRowId);
                this.columnPostMitigationRiskRatingRowId = new DataColumn("PostMitigationRiskRatingRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPostMitigationRiskRatingRowId);
                this.columnAssessmentPrecontrolMitigation = new DataColumn("AssessmentPrecontrolMitigation", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAssessmentPrecontrolMitigation);
                this.columnRisksHazardsIdentified = new DataColumn("RisksHazardsIdentified", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRisksHazardsIdentified);
                this.columnResponsibleRoleListsRowId = new DataColumn("ResponsibleRoleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResponsibleRoleListsRowId);
                this.columnResponsibleId = new DataColumn("ResponsibleId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResponsibleId);
                this.columnAssessedById = new DataColumn("AssessedById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAssessedById);
                this.columnTask = new DataColumn("Task", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTask);
                this.columnExistingControlMitigationMeasures = new DataColumn("ExistingControlMitigationMeasures", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnExistingControlMitigationMeasures);
                this.columnOnSiteRiskAssessmentCompleted = new DataColumn("OnSiteRiskAssessmentCompleted", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOnSiteRiskAssessmentCompleted);
                this.columnOnshoreRiskAssessmentCompleted = new DataColumn("OnshoreRiskAssessmentCompleted", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOnshoreRiskAssessmentCompleted);
                this.columnOnSiteJobSafetyAnalysisCompleted = new DataColumn("OnSiteJobSafetyAnalysisCompleted", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOnSiteJobSafetyAnalysisCompleted);
                this.columnApprovedByOnshoreManagement = new DataColumn("ApprovedByOnshoreManagement", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApprovedByOnshoreManagement);
                this.columnOnSiteWorkInstructionCompleted = new DataColumn("OnSiteWorkInstructionCompleted", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOnSiteWorkInstructionCompleted);
                this.columnProcedureId = new DataColumn("ProcedureId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProcedureId);
                this.columnTrainingRequired = new DataColumn("TrainingRequired", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTrainingRequired);
                this.columnAssessmentPostcontrolMitigation = new DataColumn("AssessmentPostcontrolMitigation", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAssessmentPostcontrolMitigation);
                this.columnSuggestionFurtherRiskReduction = new DataColumn("SuggestionFurtherRiskReduction", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSuggestionFurtherRiskReduction);
                this.columnSeverityAssetsListsRowId = new DataColumn("SeverityAssetsListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSeverityAssetsListsRowId);
                this.columnSeverityEnvironmentListsRowId = new DataColumn("SeverityEnvironmentListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSeverityEnvironmentListsRowId);
                this.columnSeverityPeopleListsRowId = new DataColumn("SeverityPeopleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSeverityPeopleListsRowId);
                this.columnSeverityReputationListsRowId = new DataColumn("SeverityReputationListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSeverityReputationListsRowId);
                this.columnStatusListsRowId = new DataColumn("StatusListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatusListsRowId);
                this.columnPotentialListsRowId = new DataColumn("PotentialListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPotentialListsRowId);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey20", new DataColumn[] {
                                this.columnRiskRowId}, true));
                this.columnRiskRowId.AutoIncrement = true;
                this.columnRiskRowId.AllowDBNull = false;
                this.columnRiskRowId.ReadOnly = true;
                this.columnRiskRowId.Unique = true;
            }
            
            public GARiskRow NewGARiskRow() {
                return ((GARiskRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GARiskRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GARiskRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GARiskRowChanged != null)) {
                    this.GARiskRowChanged(this, new GARiskRowChangeEvent(((GARiskRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GARiskRowChanging != null)) {
                    this.GARiskRowChanging(this, new GARiskRowChangeEvent(((GARiskRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GARiskRowDeleted != null)) {
                    this.GARiskRowDeleted(this, new GARiskRowChangeEvent(((GARiskRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GARiskRowDeleting != null)) {
                    this.GARiskRowDeleting(this, new GARiskRowChangeEvent(((GARiskRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGARiskRow(GARiskRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GARiskRow : DataRow {
            
            private GARiskDataTable tableGARisk;
            
            internal GARiskRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGARisk = ((GARiskDataTable)(this.Table));
            }
            
            public int RiskRowId {
                get {
                    return ((int)(this[this.tableGARisk.RiskRowIdColumn]));
                }
                set {
                    this[this.tableGARisk.RiskRowIdColumn] = value;
                }
            }
            
            public string RiskReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.RiskReferenceIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.RiskReferenceIdColumn] = value;
                }
            }
            
            public System.DateTime Date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGARisk.DateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.DateColumn] = value;
                }
            }
            
            public System.DateTime DateNextAssessment {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGARisk.DateNextAssessmentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.DateNextAssessmentColumn] = value;
                }
            }
            
            public string PreMitigationRiskRatingRowId {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.PreMitigationRiskRatingRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.PreMitigationRiskRatingRowIdColumn] = value;
                }
            }
            
            public string PostMitigationRiskRatingRowId {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.PostMitigationRiskRatingRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.PostMitigationRiskRatingRowIdColumn] = value;
                }
            }
            
            public string AssessmentPrecontrolMitigation {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.AssessmentPrecontrolMitigationColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.AssessmentPrecontrolMitigationColumn] = value;
                }
            }
            
            public string RisksHazardsIdentified {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.RisksHazardsIdentifiedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.RisksHazardsIdentifiedColumn] = value;
                }
            }
            
            public string ResponsibleRoleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.ResponsibleRoleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.ResponsibleRoleListsRowIdColumn] = value;
                }
            }
            
            public string ResponsibleId {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.ResponsibleIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.ResponsibleIdColumn] = value;
                }
            }
            
            public string AssessedById {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.AssessedByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.AssessedByIdColumn] = value;
                }
            }
            
            public bool Task {
                get {
                    try {
                        return ((bool)(this[this.tableGARisk.TaskColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.TaskColumn] = value;
                }
            }
            
            public string ExistingControlMitigationMeasures {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.ExistingControlMitigationMeasuresColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.ExistingControlMitigationMeasuresColumn] = value;
                }
            }
            
            public bool OnSiteRiskAssessmentCompleted {
                get {
                    try {
                        return ((bool)(this[this.tableGARisk.OnSiteRiskAssessmentCompletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.OnSiteRiskAssessmentCompletedColumn] = value;
                }
            }
            
            public bool OnshoreRiskAssessmentCompleted {
                get {
                    try {
                        return ((bool)(this[this.tableGARisk.OnshoreRiskAssessmentCompletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.OnshoreRiskAssessmentCompletedColumn] = value;
                }
            }
            
            public bool OnSiteJobSafetyAnalysisCompleted {
                get {
                    try {
                        return ((bool)(this[this.tableGARisk.OnSiteJobSafetyAnalysisCompletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.OnSiteJobSafetyAnalysisCompletedColumn] = value;
                }
            }
            
            public bool ApprovedByOnshoreManagement {
                get {
                    try {
                        return ((bool)(this[this.tableGARisk.ApprovedByOnshoreManagementColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.ApprovedByOnshoreManagementColumn] = value;
                }
            }
            
            public bool OnSiteWorkInstructionCompleted {
                get {
                    try {
                        return ((bool)(this[this.tableGARisk.OnSiteWorkInstructionCompletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.OnSiteWorkInstructionCompletedColumn] = value;
                }
            }
            
            public string ProcedureId {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.ProcedureIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.ProcedureIdColumn] = value;
                }
            }
            
            public bool TrainingRequired {
                get {
                    try {
                        return ((bool)(this[this.tableGARisk.TrainingRequiredColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.TrainingRequiredColumn] = value;
                }
            }
            
            public string AssessmentPostcontrolMitigation {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.AssessmentPostcontrolMitigationColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.AssessmentPostcontrolMitigationColumn] = value;
                }
            }
            
            public string SuggestionFurtherRiskReduction {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.SuggestionFurtherRiskReductionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.SuggestionFurtherRiskReductionColumn] = value;
                }
            }
            
            public string SeverityAssetsListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.SeverityAssetsListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.SeverityAssetsListsRowIdColumn] = value;
                }
            }
            
            public string SeverityEnvironmentListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.SeverityEnvironmentListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.SeverityEnvironmentListsRowIdColumn] = value;
                }
            }
            
            public string SeverityPeopleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.SeverityPeopleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.SeverityPeopleListsRowIdColumn] = value;
                }
            }
            
            public string SeverityReputationListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.SeverityReputationListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.SeverityReputationListsRowIdColumn] = value;
                }
            }
            
            public string StatusListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.StatusListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.StatusListsRowIdColumn] = value;
                }
            }
            
            public string PotentialListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.PotentialListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.PotentialListsRowIdColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.NameColumn] = value;
                }
            }
            
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGARisk.DescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARisk.DescriptionColumn] = value;
                }
            }
            
            public bool IsRiskReferenceIdNull() {
                return this.IsNull(this.tableGARisk.RiskReferenceIdColumn);
            }
            
            public void SetRiskReferenceIdNull() {
                this[this.tableGARisk.RiskReferenceIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateNull() {
                return this.IsNull(this.tableGARisk.DateColumn);
            }
            
            public void SetDateNull() {
                this[this.tableGARisk.DateColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateNextAssessmentNull() {
                return this.IsNull(this.tableGARisk.DateNextAssessmentColumn);
            }
            
            public void SetDateNextAssessmentNull() {
                this[this.tableGARisk.DateNextAssessmentColumn] = System.Convert.DBNull;
            }
            
            public bool IsPreMitigationRiskRatingRowIdNull() {
                return this.IsNull(this.tableGARisk.PreMitigationRiskRatingRowIdColumn);
            }
            
            public void SetPreMitigationRiskRatingRowIdNull() {
                this[this.tableGARisk.PreMitigationRiskRatingRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsPostMitigationRiskRatingRowIdNull() {
                return this.IsNull(this.tableGARisk.PostMitigationRiskRatingRowIdColumn);
            }
            
            public void SetPostMitigationRiskRatingRowIdNull() {
                this[this.tableGARisk.PostMitigationRiskRatingRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsAssessmentPrecontrolMitigationNull() {
                return this.IsNull(this.tableGARisk.AssessmentPrecontrolMitigationColumn);
            }
            
            public void SetAssessmentPrecontrolMitigationNull() {
                this[this.tableGARisk.AssessmentPrecontrolMitigationColumn] = System.Convert.DBNull;
            }
            
            public bool IsRisksHazardsIdentifiedNull() {
                return this.IsNull(this.tableGARisk.RisksHazardsIdentifiedColumn);
            }
            
            public void SetRisksHazardsIdentifiedNull() {
                this[this.tableGARisk.RisksHazardsIdentifiedColumn] = System.Convert.DBNull;
            }
            
            public bool IsResponsibleRoleListsRowIdNull() {
                return this.IsNull(this.tableGARisk.ResponsibleRoleListsRowIdColumn);
            }
            
            public void SetResponsibleRoleListsRowIdNull() {
                this[this.tableGARisk.ResponsibleRoleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsResponsibleIdNull() {
                return this.IsNull(this.tableGARisk.ResponsibleIdColumn);
            }
            
            public void SetResponsibleIdNull() {
                this[this.tableGARisk.ResponsibleIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsAssessedByIdNull() {
                return this.IsNull(this.tableGARisk.AssessedByIdColumn);
            }
            
            public void SetAssessedByIdNull() {
                this[this.tableGARisk.AssessedByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTaskNull() {
                return this.IsNull(this.tableGARisk.TaskColumn);
            }
            
            public void SetTaskNull() {
                this[this.tableGARisk.TaskColumn] = System.Convert.DBNull;
            }
            
            public bool IsExistingControlMitigationMeasuresNull() {
                return this.IsNull(this.tableGARisk.ExistingControlMitigationMeasuresColumn);
            }
            
            public void SetExistingControlMitigationMeasuresNull() {
                this[this.tableGARisk.ExistingControlMitigationMeasuresColumn] = System.Convert.DBNull;
            }
            
            public bool IsOnSiteRiskAssessmentCompletedNull() {
                return this.IsNull(this.tableGARisk.OnSiteRiskAssessmentCompletedColumn);
            }
            
            public void SetOnSiteRiskAssessmentCompletedNull() {
                this[this.tableGARisk.OnSiteRiskAssessmentCompletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsOnshoreRiskAssessmentCompletedNull() {
                return this.IsNull(this.tableGARisk.OnshoreRiskAssessmentCompletedColumn);
            }
            
            public void SetOnshoreRiskAssessmentCompletedNull() {
                this[this.tableGARisk.OnshoreRiskAssessmentCompletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsOnSiteJobSafetyAnalysisCompletedNull() {
                return this.IsNull(this.tableGARisk.OnSiteJobSafetyAnalysisCompletedColumn);
            }
            
            public void SetOnSiteJobSafetyAnalysisCompletedNull() {
                this[this.tableGARisk.OnSiteJobSafetyAnalysisCompletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsApprovedByOnshoreManagementNull() {
                return this.IsNull(this.tableGARisk.ApprovedByOnshoreManagementColumn);
            }
            
            public void SetApprovedByOnshoreManagementNull() {
                this[this.tableGARisk.ApprovedByOnshoreManagementColumn] = System.Convert.DBNull;
            }
            
            public bool IsOnSiteWorkInstructionCompletedNull() {
                return this.IsNull(this.tableGARisk.OnSiteWorkInstructionCompletedColumn);
            }
            
            public void SetOnSiteWorkInstructionCompletedNull() {
                this[this.tableGARisk.OnSiteWorkInstructionCompletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsProcedureIdNull() {
                return this.IsNull(this.tableGARisk.ProcedureIdColumn);
            }
            
            public void SetProcedureIdNull() {
                this[this.tableGARisk.ProcedureIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsTrainingRequiredNull() {
                return this.IsNull(this.tableGARisk.TrainingRequiredColumn);
            }
            
            public void SetTrainingRequiredNull() {
                this[this.tableGARisk.TrainingRequiredColumn] = System.Convert.DBNull;
            }
            
            public bool IsAssessmentPostcontrolMitigationNull() {
                return this.IsNull(this.tableGARisk.AssessmentPostcontrolMitigationColumn);
            }
            
            public void SetAssessmentPostcontrolMitigationNull() {
                this[this.tableGARisk.AssessmentPostcontrolMitigationColumn] = System.Convert.DBNull;
            }
            
            public bool IsSuggestionFurtherRiskReductionNull() {
                return this.IsNull(this.tableGARisk.SuggestionFurtherRiskReductionColumn);
            }
            
            public void SetSuggestionFurtherRiskReductionNull() {
                this[this.tableGARisk.SuggestionFurtherRiskReductionColumn] = System.Convert.DBNull;
            }
            
            public bool IsSeverityAssetsListsRowIdNull() {
                return this.IsNull(this.tableGARisk.SeverityAssetsListsRowIdColumn);
            }
            
            public void SetSeverityAssetsListsRowIdNull() {
                this[this.tableGARisk.SeverityAssetsListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSeverityEnvironmentListsRowIdNull() {
                return this.IsNull(this.tableGARisk.SeverityEnvironmentListsRowIdColumn);
            }
            
            public void SetSeverityEnvironmentListsRowIdNull() {
                this[this.tableGARisk.SeverityEnvironmentListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSeverityPeopleListsRowIdNull() {
                return this.IsNull(this.tableGARisk.SeverityPeopleListsRowIdColumn);
            }
            
            public void SetSeverityPeopleListsRowIdNull() {
                this[this.tableGARisk.SeverityPeopleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSeverityReputationListsRowIdNull() {
                return this.IsNull(this.tableGARisk.SeverityReputationListsRowIdColumn);
            }
            
            public void SetSeverityReputationListsRowIdNull() {
                this[this.tableGARisk.SeverityReputationListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsStatusListsRowIdNull() {
                return this.IsNull(this.tableGARisk.StatusListsRowIdColumn);
            }
            
            public void SetStatusListsRowIdNull() {
                this[this.tableGARisk.StatusListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsPotentialListsRowIdNull() {
                return this.IsNull(this.tableGARisk.PotentialListsRowIdColumn);
            }
            
            public void SetPotentialListsRowIdNull() {
                this[this.tableGARisk.PotentialListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tableGARisk.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tableGARisk.NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGARisk.DescriptionColumn);
            }
            
            public void SetDescriptionNull() {
                this[this.tableGARisk.DescriptionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GARiskRowChangeEvent : EventArgs {
            
            private GARiskRow eventRow;
            
            private DataRowAction eventAction;
            
            public GARiskRowChangeEvent(GARiskRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GARiskRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GARiskControlDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnRiskControlRowId;
            
            private DataColumn columnRiskControlReferenceId;
            
            private DataColumn columnDate;
            
            private DataColumn columnResponsibleRoleListsRowId;
            
            private DataColumn columnResponsibleId;
            
            private DataColumn columnAssessedById;
            
            private DataColumn columnApprovedById;
            
            private DataColumn columnControl;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            private DataColumn columnControlRowId;
            
            internal GARiskControlDataTable() : 
                    base("GARiskControl") {
                this.InitClass();
            }
            
            internal GARiskControlDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn RiskControlRowIdColumn {
                get {
                    return this.columnRiskControlRowId;
                }
            }
            
            internal DataColumn RiskControlReferenceIdColumn {
                get {
                    return this.columnRiskControlReferenceId;
                }
            }
            
            internal DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            internal DataColumn ResponsibleRoleListsRowIdColumn {
                get {
                    return this.columnResponsibleRoleListsRowId;
                }
            }
            
            internal DataColumn ResponsibleIdColumn {
                get {
                    return this.columnResponsibleId;
                }
            }
            
            internal DataColumn AssessedByIdColumn {
                get {
                    return this.columnAssessedById;
                }
            }
            
            internal DataColumn ApprovedByIdColumn {
                get {
                    return this.columnApprovedById;
                }
            }
            
            internal DataColumn ControlColumn {
                get {
                    return this.columnControl;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            internal DataColumn ControlRowIdColumn {
                get {
                    return this.columnControlRowId;
                }
            }
            
            public GARiskControlRow this[int index] {
                get {
                    return ((GARiskControlRow)(this.Rows[index]));
                }
            }
            
            public event GARiskControlRowChangeEventHandler GARiskControlRowChanged;
            
            public event GARiskControlRowChangeEventHandler GARiskControlRowChanging;
            
            public event GARiskControlRowChangeEventHandler GARiskControlRowDeleted;
            
            public event GARiskControlRowChangeEventHandler GARiskControlRowDeleting;
            
            public void AddGARiskControlRow(GARiskControlRow row) {
                this.Rows.Add(row);
            }
            
            public GARiskControlRow AddGARiskControlRow(
                        string RiskControlReferenceId, 
                        System.DateTime Date, 
                        string ResponsibleRoleListsRowId, 
                        string ResponsibleId, 
                        string AssessedById, 
                        string ApprovedById, 
                        string Control, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3, 
                        string ControlRowId) {
                GARiskControlRow rowGARiskControlRow = ((GARiskControlRow)(this.NewRow()));
                rowGARiskControlRow.ItemArray = new object[] {
                        null,
                        RiskControlReferenceId,
                        Date,
                        ResponsibleRoleListsRowId,
                        ResponsibleId,
                        AssessedById,
                        ApprovedById,
                        Control,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3,
                        ControlRowId};
                this.Rows.Add(rowGARiskControlRow);
                return rowGARiskControlRow;
            }
            
            public GARiskControlRow FindByRiskControlRowId(int RiskControlRowId) {
                return ((GARiskControlRow)(this.Rows.Find(new object[] {
                            RiskControlRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GARiskControlDataTable cln = ((GARiskControlDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GARiskControlDataTable();
            }
            
            internal void InitVars() {
                this.columnRiskControlRowId = this.Columns["RiskControlRowId"];
                this.columnRiskControlReferenceId = this.Columns["RiskControlReferenceId"];
                this.columnDate = this.Columns["Date"];
                this.columnResponsibleRoleListsRowId = this.Columns["ResponsibleRoleListsRowId"];
                this.columnResponsibleId = this.Columns["ResponsibleId"];
                this.columnAssessedById = this.Columns["AssessedById"];
                this.columnApprovedById = this.Columns["ApprovedById"];
                this.columnControl = this.Columns["Control"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
                this.columnControlRowId = this.Columns["ControlRowId"];
            }
            
            private void InitClass() {
                this.columnRiskControlRowId = new DataColumn("RiskControlRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRiskControlRowId);
                this.columnRiskControlReferenceId = new DataColumn("RiskControlReferenceId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRiskControlReferenceId);
                this.columnDate = new DataColumn("Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDate);
                this.columnResponsibleRoleListsRowId = new DataColumn("ResponsibleRoleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResponsibleRoleListsRowId);
                this.columnResponsibleId = new DataColumn("ResponsibleId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResponsibleId);
                this.columnAssessedById = new DataColumn("AssessedById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAssessedById);
                this.columnApprovedById = new DataColumn("ApprovedById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApprovedById);
                this.columnControl = new DataColumn("Control", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnControl);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.columnControlRowId = new DataColumn("ControlRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnControlRowId);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey21", new DataColumn[] {
                                this.columnRiskControlRowId}, true));
                this.columnRiskControlRowId.AutoIncrement = true;
                this.columnRiskControlRowId.AllowDBNull = false;
                this.columnRiskControlRowId.ReadOnly = true;
                this.columnRiskControlRowId.Unique = true;
            }
            
            public GARiskControlRow NewGARiskControlRow() {
                return ((GARiskControlRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GARiskControlRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GARiskControlRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GARiskControlRowChanged != null)) {
                    this.GARiskControlRowChanged(this, new GARiskControlRowChangeEvent(((GARiskControlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GARiskControlRowChanging != null)) {
                    this.GARiskControlRowChanging(this, new GARiskControlRowChangeEvent(((GARiskControlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GARiskControlRowDeleted != null)) {
                    this.GARiskControlRowDeleted(this, new GARiskControlRowChangeEvent(((GARiskControlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GARiskControlRowDeleting != null)) {
                    this.GARiskControlRowDeleting(this, new GARiskControlRowChangeEvent(((GARiskControlRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGARiskControlRow(GARiskControlRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GARiskControlRow : DataRow {
            
            private GARiskControlDataTable tableGARiskControl;
            
            internal GARiskControlRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGARiskControl = ((GARiskControlDataTable)(this.Table));
            }
            
            public int RiskControlRowId {
                get {
                    return ((int)(this[this.tableGARiskControl.RiskControlRowIdColumn]));
                }
                set {
                    this[this.tableGARiskControl.RiskControlRowIdColumn] = value;
                }
            }
            
            public string RiskControlReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGARiskControl.RiskControlReferenceIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.RiskControlReferenceIdColumn] = value;
                }
            }
            
            public System.DateTime Date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGARiskControl.DateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.DateColumn] = value;
                }
            }
            
            public string ResponsibleRoleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGARiskControl.ResponsibleRoleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.ResponsibleRoleListsRowIdColumn] = value;
                }
            }
            
            public string ResponsibleId {
                get {
                    try {
                        return ((string)(this[this.tableGARiskControl.ResponsibleIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.ResponsibleIdColumn] = value;
                }
            }
            
            public string AssessedById {
                get {
                    try {
                        return ((string)(this[this.tableGARiskControl.AssessedByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.AssessedByIdColumn] = value;
                }
            }
            
            public string ApprovedById {
                get {
                    try {
                        return ((string)(this[this.tableGARiskControl.ApprovedByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.ApprovedByIdColumn] = value;
                }
            }
            
            public string Control {
                get {
                    try {
                        return ((string)(this[this.tableGARiskControl.ControlColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.ControlColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGARiskControl.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGARiskControl.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGARiskControl.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGARiskControl.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGARiskControl.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGARiskControl.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGARiskControl.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGARiskControl.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGARiskControl.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGARiskControl.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGARiskControl.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGARiskControl.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGARiskControl.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGARiskControl.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGARiskControl.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGARiskControl.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGARiskControl.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGARiskControl.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGARiskControl.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.IntFree3Column] = value;
                }
            }
            
            public string ControlRowId {
                get {
                    try {
                        return ((string)(this[this.tableGARiskControl.ControlRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARiskControl.ControlRowIdColumn] = value;
                }
            }
            
            public bool IsRiskControlReferenceIdNull() {
                return this.IsNull(this.tableGARiskControl.RiskControlReferenceIdColumn);
            }
            
            public void SetRiskControlReferenceIdNull() {
                this[this.tableGARiskControl.RiskControlReferenceIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateNull() {
                return this.IsNull(this.tableGARiskControl.DateColumn);
            }
            
            public void SetDateNull() {
                this[this.tableGARiskControl.DateColumn] = System.Convert.DBNull;
            }
            
            public bool IsResponsibleRoleListsRowIdNull() {
                return this.IsNull(this.tableGARiskControl.ResponsibleRoleListsRowIdColumn);
            }
            
            public void SetResponsibleRoleListsRowIdNull() {
                this[this.tableGARiskControl.ResponsibleRoleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsResponsibleIdNull() {
                return this.IsNull(this.tableGARiskControl.ResponsibleIdColumn);
            }
            
            public void SetResponsibleIdNull() {
                this[this.tableGARiskControl.ResponsibleIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsAssessedByIdNull() {
                return this.IsNull(this.tableGARiskControl.AssessedByIdColumn);
            }
            
            public void SetAssessedByIdNull() {
                this[this.tableGARiskControl.AssessedByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsApprovedByIdNull() {
                return this.IsNull(this.tableGARiskControl.ApprovedByIdColumn);
            }
            
            public void SetApprovedByIdNull() {
                this[this.tableGARiskControl.ApprovedByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsControlNull() {
                return this.IsNull(this.tableGARiskControl.ControlColumn);
            }
            
            public void SetControlNull() {
                this[this.tableGARiskControl.ControlColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGARiskControl.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGARiskControl.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGARiskControl.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGARiskControl.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGARiskControl.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGARiskControl.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGARiskControl.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGARiskControl.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGARiskControl.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGARiskControl.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGARiskControl.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGARiskControl.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGARiskControl.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGARiskControl.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGARiskControl.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGARiskControl.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGARiskControl.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGARiskControl.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGARiskControl.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGARiskControl.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGARiskControl.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGARiskControl.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGARiskControl.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGARiskControl.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGARiskControl.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGARiskControl.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGARiskControl.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGARiskControl.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGARiskControl.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGARiskControl.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGARiskControl.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGARiskControl.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGARiskControl.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGARiskControl.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGARiskControl.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGARiskControl.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGARiskControl.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGARiskControl.IntFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsControlRowIdNull() {
                return this.IsNull(this.tableGARiskControl.ControlRowIdColumn);
            }
            
            public void SetControlRowIdNull() {
                this[this.tableGARiskControl.ControlRowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GARiskControlRowChangeEvent : EventArgs {
            
            private GARiskControlRow eventRow;
            
            private DataRowAction eventAction;
            
            public GARiskControlRowChangeEvent(GARiskControlRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GARiskControlRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAProcedureReferenceDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnProcedureReferenceRowId;
            
            private DataColumn columnProcedureReferenceReferenceId;
            
            private DataColumn columnDate;
            
            private DataColumn columnDateNextAssessment;
            
            private DataColumn columnPreMitigationRiskRatingRowId;
            
            private DataColumn columnPostMitigationRiskRatingRowId;
            
            private DataColumn columnApprovedById;
            
            private DataColumn columnDateApproved;
            
            private DataColumn columnResponsibleId;
            
            private DataColumn columnResponsibleRoleListsRowId;
            
            private DataColumn columnAssessedById;
            
            private DataColumn columnDateAssessed;
            
            private DataColumn columnControl;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GAProcedureReferenceDataTable() : 
                    base("GAProcedureReference") {
                this.InitClass();
            }
            
            internal GAProcedureReferenceDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ProcedureReferenceRowIdColumn {
                get {
                    return this.columnProcedureReferenceRowId;
                }
            }
            
            internal DataColumn ProcedureReferenceReferenceIdColumn {
                get {
                    return this.columnProcedureReferenceReferenceId;
                }
            }
            
            internal DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            internal DataColumn DateNextAssessmentColumn {
                get {
                    return this.columnDateNextAssessment;
                }
            }
            
            internal DataColumn PreMitigationRiskRatingRowIdColumn {
                get {
                    return this.columnPreMitigationRiskRatingRowId;
                }
            }
            
            internal DataColumn PostMitigationRiskRatingRowIdColumn {
                get {
                    return this.columnPostMitigationRiskRatingRowId;
                }
            }
            
            internal DataColumn ApprovedByIdColumn {
                get {
                    return this.columnApprovedById;
                }
            }
            
            internal DataColumn DateApprovedColumn {
                get {
                    return this.columnDateApproved;
                }
            }
            
            internal DataColumn ResponsibleIdColumn {
                get {
                    return this.columnResponsibleId;
                }
            }
            
            internal DataColumn ResponsibleRoleListsRowIdColumn {
                get {
                    return this.columnResponsibleRoleListsRowId;
                }
            }
            
            internal DataColumn AssessedByIdColumn {
                get {
                    return this.columnAssessedById;
                }
            }
            
            internal DataColumn DateAssessedColumn {
                get {
                    return this.columnDateAssessed;
                }
            }
            
            internal DataColumn ControlColumn {
                get {
                    return this.columnControl;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GAProcedureReferenceRow this[int index] {
                get {
                    return ((GAProcedureReferenceRow)(this.Rows[index]));
                }
            }
            
            public event GAProcedureReferenceRowChangeEventHandler GAProcedureReferenceRowChanged;
            
            public event GAProcedureReferenceRowChangeEventHandler GAProcedureReferenceRowChanging;
            
            public event GAProcedureReferenceRowChangeEventHandler GAProcedureReferenceRowDeleted;
            
            public event GAProcedureReferenceRowChangeEventHandler GAProcedureReferenceRowDeleting;
            
            public void AddGAProcedureReferenceRow(GAProcedureReferenceRow row) {
                this.Rows.Add(row);
            }
            
            public GAProcedureReferenceRow AddGAProcedureReferenceRow(
                        string ProcedureReferenceReferenceId, 
                        System.DateTime Date, 
                        System.DateTime DateNextAssessment, 
                        string PreMitigationRiskRatingRowId, 
                        string PostMitigationRiskRatingRowId, 
                        string ApprovedById, 
                        System.DateTime DateApproved, 
                        string ResponsibleId, 
                        string ResponsibleRoleListsRowId, 
                        string AssessedById, 
                        System.DateTime DateAssessed, 
                        string Control, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAProcedureReferenceRow rowGAProcedureReferenceRow = ((GAProcedureReferenceRow)(this.NewRow()));
                rowGAProcedureReferenceRow.ItemArray = new object[] {
                        null,
                        ProcedureReferenceReferenceId,
                        Date,
                        DateNextAssessment,
                        PreMitigationRiskRatingRowId,
                        PostMitigationRiskRatingRowId,
                        ApprovedById,
                        DateApproved,
                        ResponsibleId,
                        ResponsibleRoleListsRowId,
                        AssessedById,
                        DateAssessed,
                        Control,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAProcedureReferenceRow);
                return rowGAProcedureReferenceRow;
            }
            
            public GAProcedureReferenceRow FindByProcedureReferenceRowId(int ProcedureReferenceRowId) {
                return ((GAProcedureReferenceRow)(this.Rows.Find(new object[] {
                            ProcedureReferenceRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAProcedureReferenceDataTable cln = ((GAProcedureReferenceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAProcedureReferenceDataTable();
            }
            
            internal void InitVars() {
                this.columnProcedureReferenceRowId = this.Columns["ProcedureReferenceRowId"];
                this.columnProcedureReferenceReferenceId = this.Columns["ProcedureReferenceReferenceId"];
                this.columnDate = this.Columns["Date"];
                this.columnDateNextAssessment = this.Columns["DateNextAssessment"];
                this.columnPreMitigationRiskRatingRowId = this.Columns["PreMitigationRiskRatingRowId"];
                this.columnPostMitigationRiskRatingRowId = this.Columns["PostMitigationRiskRatingRowId"];
                this.columnApprovedById = this.Columns["ApprovedById"];
                this.columnDateApproved = this.Columns["DateApproved"];
                this.columnResponsibleId = this.Columns["ResponsibleId"];
                this.columnResponsibleRoleListsRowId = this.Columns["ResponsibleRoleListsRowId"];
                this.columnAssessedById = this.Columns["AssessedById"];
                this.columnDateAssessed = this.Columns["DateAssessed"];
                this.columnControl = this.Columns["Control"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnProcedureReferenceRowId = new DataColumn("ProcedureReferenceRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProcedureReferenceRowId);
                this.columnProcedureReferenceReferenceId = new DataColumn("ProcedureReferenceReferenceId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProcedureReferenceReferenceId);
                this.columnDate = new DataColumn("Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDate);
                this.columnDateNextAssessment = new DataColumn("DateNextAssessment", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateNextAssessment);
                this.columnPreMitigationRiskRatingRowId = new DataColumn("PreMitigationRiskRatingRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPreMitigationRiskRatingRowId);
                this.columnPostMitigationRiskRatingRowId = new DataColumn("PostMitigationRiskRatingRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPostMitigationRiskRatingRowId);
                this.columnApprovedById = new DataColumn("ApprovedById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApprovedById);
                this.columnDateApproved = new DataColumn("DateApproved", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateApproved);
                this.columnResponsibleId = new DataColumn("ResponsibleId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResponsibleId);
                this.columnResponsibleRoleListsRowId = new DataColumn("ResponsibleRoleListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResponsibleRoleListsRowId);
                this.columnAssessedById = new DataColumn("AssessedById", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAssessedById);
                this.columnDateAssessed = new DataColumn("DateAssessed", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateAssessed);
                this.columnControl = new DataColumn("Control", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnControl);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey22", new DataColumn[] {
                                this.columnProcedureReferenceRowId}, true));
                this.columnProcedureReferenceRowId.AutoIncrement = true;
                this.columnProcedureReferenceRowId.AllowDBNull = false;
                this.columnProcedureReferenceRowId.ReadOnly = true;
                this.columnProcedureReferenceRowId.Unique = true;
            }
            
            public GAProcedureReferenceRow NewGAProcedureReferenceRow() {
                return ((GAProcedureReferenceRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAProcedureReferenceRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAProcedureReferenceRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAProcedureReferenceRowChanged != null)) {
                    this.GAProcedureReferenceRowChanged(this, new GAProcedureReferenceRowChangeEvent(((GAProcedureReferenceRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAProcedureReferenceRowChanging != null)) {
                    this.GAProcedureReferenceRowChanging(this, new GAProcedureReferenceRowChangeEvent(((GAProcedureReferenceRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAProcedureReferenceRowDeleted != null)) {
                    this.GAProcedureReferenceRowDeleted(this, new GAProcedureReferenceRowChangeEvent(((GAProcedureReferenceRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAProcedureReferenceRowDeleting != null)) {
                    this.GAProcedureReferenceRowDeleting(this, new GAProcedureReferenceRowChangeEvent(((GAProcedureReferenceRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAProcedureReferenceRow(GAProcedureReferenceRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAProcedureReferenceRow : DataRow {
            
            private GAProcedureReferenceDataTable tableGAProcedureReference;
            
            internal GAProcedureReferenceRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAProcedureReference = ((GAProcedureReferenceDataTable)(this.Table));
            }
            
            public int ProcedureReferenceRowId {
                get {
                    return ((int)(this[this.tableGAProcedureReference.ProcedureReferenceRowIdColumn]));
                }
                set {
                    this[this.tableGAProcedureReference.ProcedureReferenceRowIdColumn] = value;
                }
            }
            
            public string ProcedureReferenceReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGAProcedureReference.ProcedureReferenceReferenceIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.ProcedureReferenceReferenceIdColumn] = value;
                }
            }
            
            public System.DateTime Date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateColumn] = value;
                }
            }
            
            public System.DateTime DateNextAssessment {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateNextAssessmentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateNextAssessmentColumn] = value;
                }
            }
            
            public string PreMitigationRiskRatingRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAProcedureReference.PreMitigationRiskRatingRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.PreMitigationRiskRatingRowIdColumn] = value;
                }
            }
            
            public string PostMitigationRiskRatingRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAProcedureReference.PostMitigationRiskRatingRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.PostMitigationRiskRatingRowIdColumn] = value;
                }
            }
            
            public string ApprovedById {
                get {
                    try {
                        return ((string)(this[this.tableGAProcedureReference.ApprovedByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.ApprovedByIdColumn] = value;
                }
            }
            
            public System.DateTime DateApproved {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateApprovedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateApprovedColumn] = value;
                }
            }
            
            public string ResponsibleId {
                get {
                    try {
                        return ((string)(this[this.tableGAProcedureReference.ResponsibleIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.ResponsibleIdColumn] = value;
                }
            }
            
            public string ResponsibleRoleListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAProcedureReference.ResponsibleRoleListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.ResponsibleRoleListsRowIdColumn] = value;
                }
            }
            
            public string AssessedById {
                get {
                    try {
                        return ((string)(this[this.tableGAProcedureReference.AssessedByIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.AssessedByIdColumn] = value;
                }
            }
            
            public System.DateTime DateAssessed {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateAssessedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateAssessedColumn] = value;
                }
            }
            
            public string Control {
                get {
                    try {
                        return ((string)(this[this.tableGAProcedureReference.ControlColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.ControlColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAProcedureReference.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAProcedureReference.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAProcedureReference.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAProcedureReference.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAProcedureReference.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAProcedureReference.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAProcedureReference.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAProcedureReference.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAProcedureReference.IntFree3Column] = value;
                }
            }
            
            public bool IsProcedureReferenceReferenceIdNull() {
                return this.IsNull(this.tableGAProcedureReference.ProcedureReferenceReferenceIdColumn);
            }
            
            public void SetProcedureReferenceReferenceIdNull() {
                this[this.tableGAProcedureReference.ProcedureReferenceReferenceIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateNull() {
                return this.IsNull(this.tableGAProcedureReference.DateColumn);
            }
            
            public void SetDateNull() {
                this[this.tableGAProcedureReference.DateColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateNextAssessmentNull() {
                return this.IsNull(this.tableGAProcedureReference.DateNextAssessmentColumn);
            }
            
            public void SetDateNextAssessmentNull() {
                this[this.tableGAProcedureReference.DateNextAssessmentColumn] = System.Convert.DBNull;
            }
            
            public bool IsPreMitigationRiskRatingRowIdNull() {
                return this.IsNull(this.tableGAProcedureReference.PreMitigationRiskRatingRowIdColumn);
            }
            
            public void SetPreMitigationRiskRatingRowIdNull() {
                this[this.tableGAProcedureReference.PreMitigationRiskRatingRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsPostMitigationRiskRatingRowIdNull() {
                return this.IsNull(this.tableGAProcedureReference.PostMitigationRiskRatingRowIdColumn);
            }
            
            public void SetPostMitigationRiskRatingRowIdNull() {
                this[this.tableGAProcedureReference.PostMitigationRiskRatingRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsApprovedByIdNull() {
                return this.IsNull(this.tableGAProcedureReference.ApprovedByIdColumn);
            }
            
            public void SetApprovedByIdNull() {
                this[this.tableGAProcedureReference.ApprovedByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateApprovedNull() {
                return this.IsNull(this.tableGAProcedureReference.DateApprovedColumn);
            }
            
            public void SetDateApprovedNull() {
                this[this.tableGAProcedureReference.DateApprovedColumn] = System.Convert.DBNull;
            }
            
            public bool IsResponsibleIdNull() {
                return this.IsNull(this.tableGAProcedureReference.ResponsibleIdColumn);
            }
            
            public void SetResponsibleIdNull() {
                this[this.tableGAProcedureReference.ResponsibleIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsResponsibleRoleListsRowIdNull() {
                return this.IsNull(this.tableGAProcedureReference.ResponsibleRoleListsRowIdColumn);
            }
            
            public void SetResponsibleRoleListsRowIdNull() {
                this[this.tableGAProcedureReference.ResponsibleRoleListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsAssessedByIdNull() {
                return this.IsNull(this.tableGAProcedureReference.AssessedByIdColumn);
            }
            
            public void SetAssessedByIdNull() {
                this[this.tableGAProcedureReference.AssessedByIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateAssessedNull() {
                return this.IsNull(this.tableGAProcedureReference.DateAssessedColumn);
            }
            
            public void SetDateAssessedNull() {
                this[this.tableGAProcedureReference.DateAssessedColumn] = System.Convert.DBNull;
            }
            
            public bool IsControlNull() {
                return this.IsNull(this.tableGAProcedureReference.ControlColumn);
            }
            
            public void SetControlNull() {
                this[this.tableGAProcedureReference.ControlColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAProcedureReference.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGAProcedureReference.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAProcedureReference.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGAProcedureReference.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAProcedureReference.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGAProcedureReference.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAProcedureReference.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGAProcedureReference.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAProcedureReference.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGAProcedureReference.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAProcedureReference.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGAProcedureReference.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAProcedureReference.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGAProcedureReference.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAProcedureReference.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGAProcedureReference.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAProcedureReference.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGAProcedureReference.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAProcedureReference.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGAProcedureReference.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAProcedureReference.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGAProcedureReference.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAProcedureReference.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGAProcedureReference.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAProcedureReference.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGAProcedureReference.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAProcedureReference.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGAProcedureReference.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAProcedureReference.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGAProcedureReference.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAProcedureReference.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGAProcedureReference.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAProcedureReference.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGAProcedureReference.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAProcedureReference.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGAProcedureReference.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAProcedureReference.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGAProcedureReference.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAProcedureReferenceRowChangeEvent : EventArgs {
            
            private GAProcedureReferenceRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAProcedureReferenceRowChangeEvent(GAProcedureReferenceRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAProcedureReferenceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAOpportunityDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnOpportunityRowId;
            
            private DataColumn columnReferenceId;
            
            private DataColumn columnOpportunityStatusListsRowId;
            
            private DataColumn columnSubject;
            
            private DataColumn columnDate;
            
            private DataColumn columnAreaOfOpportunityListRowId;
            
            private DataColumn columnOriginatorId;
            
            private DataColumn columnDescription;
            
            private DataColumn columnReasonsOrFactsIllustrating_;
            
            private DataColumn columnSuggestedImplementation;
            
            private DataColumn columnReferenceIdPrefix;
            
            private DataColumn columnComment;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            internal GAOpportunityDataTable() : 
                    base("GAOpportunity") {
                this.InitClass();
            }
            
            internal GAOpportunityDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn OpportunityRowIdColumn {
                get {
                    return this.columnOpportunityRowId;
                }
            }
            
            internal DataColumn ReferenceIdColumn {
                get {
                    return this.columnReferenceId;
                }
            }
            
            internal DataColumn OpportunityStatusListsRowIdColumn {
                get {
                    return this.columnOpportunityStatusListsRowId;
                }
            }
            
            internal DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            internal DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            internal DataColumn AreaOfOpportunityListRowIdColumn {
                get {
                    return this.columnAreaOfOpportunityListRowId;
                }
            }
            
            internal DataColumn OriginatorIdColumn {
                get {
                    return this.columnOriginatorId;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn ReasonsOrFactsIllustrating_Column {
                get {
                    return this.columnReasonsOrFactsIllustrating_;
                }
            }
            
            internal DataColumn SuggestedImplementationColumn {
                get {
                    return this.columnSuggestedImplementation;
                }
            }
            
            internal DataColumn ReferenceIdPrefixColumn {
                get {
                    return this.columnReferenceIdPrefix;
                }
            }
            
            internal DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            public GAOpportunityRow this[int index] {
                get {
                    return ((GAOpportunityRow)(this.Rows[index]));
                }
            }
            
            public event GAOpportunityRowChangeEventHandler GAOpportunityRowChanged;
            
            public event GAOpportunityRowChangeEventHandler GAOpportunityRowChanging;
            
            public event GAOpportunityRowChangeEventHandler GAOpportunityRowDeleted;
            
            public event GAOpportunityRowChangeEventHandler GAOpportunityRowDeleting;
            
            public void AddGAOpportunityRow(GAOpportunityRow row) {
                this.Rows.Add(row);
            }
            
            public GAOpportunityRow AddGAOpportunityRow(
                        string ReferenceId, 
                        string OpportunityStatusListsRowId, 
                        string Subject, 
                        System.DateTime Date, 
                        string AreaOfOpportunityListRowId, 
                        string OriginatorId, 
                        string Description, 
                        string ReasonsOrFactsIllustrating_, 
                        string SuggestedImplementation, 
                        string ReferenceIdPrefix, 
                        string Comment, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3) {
                GAOpportunityRow rowGAOpportunityRow = ((GAOpportunityRow)(this.NewRow()));
                rowGAOpportunityRow.ItemArray = new object[] {
                        null,
                        ReferenceId,
                        OpportunityStatusListsRowId,
                        Subject,
                        Date,
                        AreaOfOpportunityListRowId,
                        OriginatorId,
                        Description,
                        ReasonsOrFactsIllustrating_,
                        SuggestedImplementation,
                        ReferenceIdPrefix,
                        Comment,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3};
                this.Rows.Add(rowGAOpportunityRow);
                return rowGAOpportunityRow;
            }
            
            public GAOpportunityRow FindByOpportunityRowId(int OpportunityRowId) {
                return ((GAOpportunityRow)(this.Rows.Find(new object[] {
                            OpportunityRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GAOpportunityDataTable cln = ((GAOpportunityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GAOpportunityDataTable();
            }
            
            internal void InitVars() {
                this.columnOpportunityRowId = this.Columns["OpportunityRowId"];
                this.columnReferenceId = this.Columns["ReferenceId"];
                this.columnOpportunityStatusListsRowId = this.Columns["OpportunityStatusListsRowId"];
                this.columnSubject = this.Columns["Subject"];
                this.columnDate = this.Columns["Date"];
                this.columnAreaOfOpportunityListRowId = this.Columns["AreaOfOpportunityListRowId"];
                this.columnOriginatorId = this.Columns["OriginatorId"];
                this.columnDescription = this.Columns["Description"];
                this.columnReasonsOrFactsIllustrating_ = this.Columns["ReasonsOrFactsIllustrating "];
                this.columnSuggestedImplementation = this.Columns["SuggestedImplementation"];
                this.columnReferenceIdPrefix = this.Columns["ReferenceIdPrefix"];
                this.columnComment = this.Columns["Comment"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
            }
            
            private void InitClass() {
                this.columnOpportunityRowId = new DataColumn("OpportunityRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOpportunityRowId);
                this.columnReferenceId = new DataColumn("ReferenceId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReferenceId);
                this.columnOpportunityStatusListsRowId = new DataColumn("OpportunityStatusListsRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOpportunityStatusListsRowId);
                this.columnSubject = new DataColumn("Subject", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSubject);
                this.columnDate = new DataColumn("Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDate);
                this.columnAreaOfOpportunityListRowId = new DataColumn("AreaOfOpportunityListRowId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAreaOfOpportunityListRowId);
                this.columnOriginatorId = new DataColumn("OriginatorId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOriginatorId);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnReasonsOrFactsIllustrating_ = new DataColumn("ReasonsOrFactsIllustrating ", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReasonsOrFactsIllustrating_);
                this.columnSuggestedImplementation = new DataColumn("SuggestedImplementation", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSuggestedImplementation);
                this.columnReferenceIdPrefix = new DataColumn("ReferenceIdPrefix", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReferenceIdPrefix);
                this.columnComment = new DataColumn("Comment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComment);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey23", new DataColumn[] {
                                this.columnOpportunityRowId}, true));
                this.columnOpportunityRowId.AutoIncrement = true;
                this.columnOpportunityRowId.AllowDBNull = false;
                this.columnOpportunityRowId.ReadOnly = true;
                this.columnOpportunityRowId.Unique = true;
            }
            
            public GAOpportunityRow NewGAOpportunityRow() {
                return ((GAOpportunityRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GAOpportunityRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GAOpportunityRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAOpportunityRowChanged != null)) {
                    this.GAOpportunityRowChanged(this, new GAOpportunityRowChangeEvent(((GAOpportunityRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAOpportunityRowChanging != null)) {
                    this.GAOpportunityRowChanging(this, new GAOpportunityRowChangeEvent(((GAOpportunityRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAOpportunityRowDeleted != null)) {
                    this.GAOpportunityRowDeleted(this, new GAOpportunityRowChangeEvent(((GAOpportunityRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAOpportunityRowDeleting != null)) {
                    this.GAOpportunityRowDeleting(this, new GAOpportunityRowChangeEvent(((GAOpportunityRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGAOpportunityRow(GAOpportunityRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAOpportunityRow : DataRow {
            
            private GAOpportunityDataTable tableGAOpportunity;
            
            internal GAOpportunityRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAOpportunity = ((GAOpportunityDataTable)(this.Table));
            }
            
            public int OpportunityRowId {
                get {
                    return ((int)(this[this.tableGAOpportunity.OpportunityRowIdColumn]));
                }
                set {
                    this[this.tableGAOpportunity.OpportunityRowIdColumn] = value;
                }
            }
            
            public string ReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGAOpportunity.ReferenceIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.ReferenceIdColumn] = value;
                }
            }
            
            public string OpportunityStatusListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAOpportunity.OpportunityStatusListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.OpportunityStatusListsRowIdColumn] = value;
                }
            }
            
            public string Subject {
                get {
                    try {
                        return ((string)(this[this.tableGAOpportunity.SubjectColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.SubjectColumn] = value;
                }
            }
            
            public System.DateTime Date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAOpportunity.DateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.DateColumn] = value;
                }
            }
            
            public string AreaOfOpportunityListRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAOpportunity.AreaOfOpportunityListRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.AreaOfOpportunityListRowIdColumn] = value;
                }
            }
            
            public string OriginatorId {
                get {
                    try {
                        return ((string)(this[this.tableGAOpportunity.OriginatorIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.OriginatorIdColumn] = value;
                }
            }
            
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGAOpportunity.DescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.DescriptionColumn] = value;
                }
            }
            
            public string ReasonsOrFactsIllustrating_ {
                get {
                    try {
                        return ((string)(this[this.tableGAOpportunity.ReasonsOrFactsIllustrating_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.ReasonsOrFactsIllustrating_Column] = value;
                }
            }
            
            public string SuggestedImplementation {
                get {
                    try {
                        return ((string)(this[this.tableGAOpportunity.SuggestedImplementationColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.SuggestedImplementationColumn] = value;
                }
            }
            
            public string ReferenceIdPrefix {
                get {
                    try {
                        return ((string)(this[this.tableGAOpportunity.ReferenceIdPrefixColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.ReferenceIdPrefixColumn] = value;
                }
            }
            
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGAOpportunity.CommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.CommentColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAOpportunity.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAOpportunity.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAOpportunity.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAOpportunity.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAOpportunity.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAOpportunity.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAOpportunity.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAOpportunity.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAOpportunity.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAOpportunity.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAOpportunity.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAOpportunity.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGAOpportunity.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAOpportunity.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAOpportunity.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAOpportunity.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAOpportunity.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAOpportunity.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAOpportunity.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAOpportunity.IntFree3Column] = value;
                }
            }
            
            public bool IsReferenceIdNull() {
                return this.IsNull(this.tableGAOpportunity.ReferenceIdColumn);
            }
            
            public void SetReferenceIdNull() {
                this[this.tableGAOpportunity.ReferenceIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsOpportunityStatusListsRowIdNull() {
                return this.IsNull(this.tableGAOpportunity.OpportunityStatusListsRowIdColumn);
            }
            
            public void SetOpportunityStatusListsRowIdNull() {
                this[this.tableGAOpportunity.OpportunityStatusListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsSubjectNull() {
                return this.IsNull(this.tableGAOpportunity.SubjectColumn);
            }
            
            public void SetSubjectNull() {
                this[this.tableGAOpportunity.SubjectColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateNull() {
                return this.IsNull(this.tableGAOpportunity.DateColumn);
            }
            
            public void SetDateNull() {
                this[this.tableGAOpportunity.DateColumn] = System.Convert.DBNull;
            }
            
            public bool IsAreaOfOpportunityListRowIdNull() {
                return this.IsNull(this.tableGAOpportunity.AreaOfOpportunityListRowIdColumn);
            }
            
            public void SetAreaOfOpportunityListRowIdNull() {
                this[this.tableGAOpportunity.AreaOfOpportunityListRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsOriginatorIdNull() {
                return this.IsNull(this.tableGAOpportunity.OriginatorIdColumn);
            }
            
            public void SetOriginatorIdNull() {
                this[this.tableGAOpportunity.OriginatorIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGAOpportunity.DescriptionColumn);
            }
            
            public void SetDescriptionNull() {
                this[this.tableGAOpportunity.DescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsReasonsOrFactsIllustrating_Null() {
                return this.IsNull(this.tableGAOpportunity.ReasonsOrFactsIllustrating_Column);
            }
            
            public void SetReasonsOrFactsIllustrating_Null() {
                this[this.tableGAOpportunity.ReasonsOrFactsIllustrating_Column] = System.Convert.DBNull;
            }
            
            public bool IsSuggestedImplementationNull() {
                return this.IsNull(this.tableGAOpportunity.SuggestedImplementationColumn);
            }
            
            public void SetSuggestedImplementationNull() {
                this[this.tableGAOpportunity.SuggestedImplementationColumn] = System.Convert.DBNull;
            }
            
            public bool IsReferenceIdPrefixNull() {
                return this.IsNull(this.tableGAOpportunity.ReferenceIdPrefixColumn);
            }
            
            public void SetReferenceIdPrefixNull() {
                this[this.tableGAOpportunity.ReferenceIdPrefixColumn] = System.Convert.DBNull;
            }
            
            public bool IsCommentNull() {
                return this.IsNull(this.tableGAOpportunity.CommentColumn);
            }
            
            public void SetCommentNull() {
                this[this.tableGAOpportunity.CommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAOpportunity.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGAOpportunity.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAOpportunity.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGAOpportunity.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAOpportunity.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGAOpportunity.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAOpportunity.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGAOpportunity.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAOpportunity.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGAOpportunity.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAOpportunity.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGAOpportunity.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAOpportunity.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGAOpportunity.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAOpportunity.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGAOpportunity.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAOpportunity.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGAOpportunity.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAOpportunity.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGAOpportunity.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAOpportunity.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGAOpportunity.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAOpportunity.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGAOpportunity.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAOpportunity.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGAOpportunity.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAOpportunity.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGAOpportunity.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAOpportunity.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGAOpportunity.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAOpportunity.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGAOpportunity.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAOpportunity.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGAOpportunity.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAOpportunity.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGAOpportunity.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAOpportunity.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGAOpportunity.IntFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GAOpportunityRowChangeEvent : EventArgs {
            
            private GAOpportunityRow eventRow;
            
            private DataRowAction eventAction;
            
            public GAOpportunityRowChangeEvent(GAOpportunityRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GAOpportunityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GADaysReportDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnDaysReportRowId;
            
            private DataColumn columnReferenceId;
            
            private DataColumn columnDate;
            
            private DataColumn columnCetaceansCount;
            
            private DataColumn columnCrewBoatActivitiesCount;
            
            private DataColumn columnCrewSafetyMeetingsCount;
            
            private DataColumn columnToolboxMeetingsCount;
            
            private DataColumn columnSafetyDrillsCount;
            
            private DataColumn columnDrillHours;
            
            private DataColumn columnReporter;
            
            private DataColumn columnComment;
            
            private DataColumn columnDrillsOther;
            
            private DataColumn columnDrillsManOverBoard;
            
            private DataColumn columnDrillsFirstAid;
            
            private DataColumn columnDrillsFire;
            
            private DataColumn columnDrillsLifeBoat;
            
            private DataColumn columnShareInfoPC;
            
            private DataColumn columnShareInfoNav;
            
            private DataColumn columnShareInfoTech;
            
            private DataColumn columnShareInfoMech;
            
            private DataColumn columnSeismicPersonnelCount;
            
            private DataColumn columnMarinePersonnelCount;
            
            private DataColumn columnThirdPartyPersonnelCount;
            
            private DataColumn columnOfficePersonnelCount;
            
            private DataColumn columnClientPersonnelCount;
            
            private DataColumn columnOwnIncidentAndIllnessCount;
            
            private DataColumn columnHIPCardUnsafeActsCount;
            
            private DataColumn columnHIPCardNearMissesCount;
            
            private DataColumn columnSOPDepartmentalInspectionsCount;
            
            private DataColumn columnSOPCrossDepartmentalInspectionsCount;
            
            private DataColumn columnSOPPartyChiefInspectionsCount;
            
            private DataColumn columnManHours;
            
            private DataColumn columnProjectManHours;
            
            private DataColumn columnYesNoSafetyEventListsRowId;
            
            private DataColumn columnMasterRowId;
            
            private DataColumn columnDateCreated;
            
            private DataColumn columnCreatedBy;
            
            private DataColumn columnDateChanged;
            
            private DataColumn columnChangedBy;
            
            private DataColumn columnDateDeleted;
            
            private DataColumn columnDeletedBy;
            
            private DataColumn columnSwitchFree1;
            
            private DataColumn columnSwitchFree2;
            
            private DataColumn columnSwitchFree3;
            
            private DataColumn columnDateTimeFree1;
            
            private DataColumn columnDateTimeFree2;
            
            private DataColumn columnDateTimeFree3;
            
            private DataColumn columnTextFree1;
            
            private DataColumn columnTextFree2;
            
            private DataColumn columnTextFree3;
            
            private DataColumn columnIntFree1;
            
            private DataColumn columnIntFree2;
            
            private DataColumn columnIntFree3;
            
            private DataColumn columnMaritimeIncidentAndIllnessCount;
            
            internal GADaysReportDataTable() : 
                    base("GADaysReport") {
                this.InitClass();
            }
            
            internal GADaysReportDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn DaysReportRowIdColumn {
                get {
                    return this.columnDaysReportRowId;
                }
            }
            
            internal DataColumn ReferenceIdColumn {
                get {
                    return this.columnReferenceId;
                }
            }
            
            internal DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            internal DataColumn CetaceansCountColumn {
                get {
                    return this.columnCetaceansCount;
                }
            }
            
            internal DataColumn CrewBoatActivitiesCountColumn {
                get {
                    return this.columnCrewBoatActivitiesCount;
                }
            }
            
            internal DataColumn CrewSafetyMeetingsCountColumn {
                get {
                    return this.columnCrewSafetyMeetingsCount;
                }
            }
            
            internal DataColumn ToolboxMeetingsCountColumn {
                get {
                    return this.columnToolboxMeetingsCount;
                }
            }
            
            internal DataColumn SafetyDrillsCountColumn {
                get {
                    return this.columnSafetyDrillsCount;
                }
            }
            
            internal DataColumn DrillHoursColumn {
                get {
                    return this.columnDrillHours;
                }
            }
            
            internal DataColumn ReporterColumn {
                get {
                    return this.columnReporter;
                }
            }
            
            internal DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            internal DataColumn DrillsOtherColumn {
                get {
                    return this.columnDrillsOther;
                }
            }
            
            internal DataColumn DrillsManOverBoardColumn {
                get {
                    return this.columnDrillsManOverBoard;
                }
            }
            
            internal DataColumn DrillsFirstAidColumn {
                get {
                    return this.columnDrillsFirstAid;
                }
            }
            
            internal DataColumn DrillsFireColumn {
                get {
                    return this.columnDrillsFire;
                }
            }
            
            internal DataColumn DrillsLifeBoatColumn {
                get {
                    return this.columnDrillsLifeBoat;
                }
            }
            
            internal DataColumn ShareInfoPCColumn {
                get {
                    return this.columnShareInfoPC;
                }
            }
            
            internal DataColumn ShareInfoNavColumn {
                get {
                    return this.columnShareInfoNav;
                }
            }
            
            internal DataColumn ShareInfoTechColumn {
                get {
                    return this.columnShareInfoTech;
                }
            }
            
            internal DataColumn ShareInfoMechColumn {
                get {
                    return this.columnShareInfoMech;
                }
            }
            
            internal DataColumn SeismicPersonnelCountColumn {
                get {
                    return this.columnSeismicPersonnelCount;
                }
            }
            
            internal DataColumn MarinePersonnelCountColumn {
                get {
                    return this.columnMarinePersonnelCount;
                }
            }
            
            internal DataColumn ThirdPartyPersonnelCountColumn {
                get {
                    return this.columnThirdPartyPersonnelCount;
                }
            }
            
            internal DataColumn OfficePersonnelCountColumn {
                get {
                    return this.columnOfficePersonnelCount;
                }
            }
            
            internal DataColumn ClientPersonnelCountColumn {
                get {
                    return this.columnClientPersonnelCount;
                }
            }
            
            internal DataColumn OwnIncidentAndIllnessCountColumn {
                get {
                    return this.columnOwnIncidentAndIllnessCount;
                }
            }
            
            internal DataColumn HIPCardUnsafeActsCountColumn {
                get {
                    return this.columnHIPCardUnsafeActsCount;
                }
            }
            
            internal DataColumn HIPCardNearMissesCountColumn {
                get {
                    return this.columnHIPCardNearMissesCount;
                }
            }
            
            internal DataColumn SOPDepartmentalInspectionsCountColumn {
                get {
                    return this.columnSOPDepartmentalInspectionsCount;
                }
            }
            
            internal DataColumn SOPCrossDepartmentalInspectionsCountColumn {
                get {
                    return this.columnSOPCrossDepartmentalInspectionsCount;
                }
            }
            
            internal DataColumn SOPPartyChiefInspectionsCountColumn {
                get {
                    return this.columnSOPPartyChiefInspectionsCount;
                }
            }
            
            internal DataColumn ManHoursColumn {
                get {
                    return this.columnManHours;
                }
            }
            
            internal DataColumn ProjectManHoursColumn {
                get {
                    return this.columnProjectManHours;
                }
            }
            
            internal DataColumn YesNoSafetyEventListsRowIdColumn {
                get {
                    return this.columnYesNoSafetyEventListsRowId;
                }
            }
            
            internal DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            internal DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            internal DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            internal DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            internal DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            internal DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            internal DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            internal DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            internal DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            internal DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            internal DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            internal DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            internal DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            internal DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            internal DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            internal DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            internal DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            internal DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            internal DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            internal DataColumn MaritimeIncidentAndIllnessCountColumn {
                get {
                    return this.columnMaritimeIncidentAndIllnessCount;
                }
            }
            
            public GADaysReportRow this[int index] {
                get {
                    return ((GADaysReportRow)(this.Rows[index]));
                }
            }
            
            public event GADaysReportRowChangeEventHandler GADaysReportRowChanged;
            
            public event GADaysReportRowChangeEventHandler GADaysReportRowChanging;
            
            public event GADaysReportRowChangeEventHandler GADaysReportRowDeleted;
            
            public event GADaysReportRowChangeEventHandler GADaysReportRowDeleting;
            
            public void AddGADaysReportRow(GADaysReportRow row) {
                this.Rows.Add(row);
            }
            
            public GADaysReportRow AddGADaysReportRow(
                        string ReferenceId, 
                        System.DateTime Date, 
                        int CetaceansCount, 
                        int CrewBoatActivitiesCount, 
                        int CrewSafetyMeetingsCount, 
                        int ToolboxMeetingsCount, 
                        int SafetyDrillsCount, 
                        int DrillHours, 
                        string Reporter, 
                        string Comment, 
                        int DrillsOther, 
                        int DrillsManOverBoard, 
                        int DrillsFirstAid, 
                        int DrillsFire, 
                        int DrillsLifeBoat, 
                        string ShareInfoPC, 
                        string ShareInfoNav, 
                        string ShareInfoTech, 
                        string ShareInfoMech, 
                        int SeismicPersonnelCount, 
                        int MarinePersonnelCount, 
                        int ThirdPartyPersonnelCount, 
                        int OfficePersonnelCount, 
                        int ClientPersonnelCount, 
                        int OwnIncidentAndIllnessCount, 
                        int HIPCardUnsafeActsCount, 
                        int HIPCardNearMissesCount, 
                        int SOPDepartmentalInspectionsCount, 
                        int SOPCrossDepartmentalInspectionsCount, 
                        int SOPPartyChiefInspectionsCount, 
                        int ManHours, 
                        int ProjectManHours, 
                        int YesNoSafetyEventListsRowId, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3, 
                        int MaritimeIncidentAndIllnessCount) {
                GADaysReportRow rowGADaysReportRow = ((GADaysReportRow)(this.NewRow()));
                rowGADaysReportRow.ItemArray = new object[] {
                        null,
                        ReferenceId,
                        Date,
                        CetaceansCount,
                        CrewBoatActivitiesCount,
                        CrewSafetyMeetingsCount,
                        ToolboxMeetingsCount,
                        SafetyDrillsCount,
                        DrillHours,
                        Reporter,
                        Comment,
                        DrillsOther,
                        DrillsManOverBoard,
                        DrillsFirstAid,
                        DrillsFire,
                        DrillsLifeBoat,
                        ShareInfoPC,
                        ShareInfoNav,
                        ShareInfoTech,
                        ShareInfoMech,
                        SeismicPersonnelCount,
                        MarinePersonnelCount,
                        ThirdPartyPersonnelCount,
                        OfficePersonnelCount,
                        ClientPersonnelCount,
                        OwnIncidentAndIllnessCount,
                        HIPCardUnsafeActsCount,
                        HIPCardNearMissesCount,
                        SOPDepartmentalInspectionsCount,
                        SOPCrossDepartmentalInspectionsCount,
                        SOPPartyChiefInspectionsCount,
                        ManHours,
                        ProjectManHours,
                        YesNoSafetyEventListsRowId,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3,
                        MaritimeIncidentAndIllnessCount};
                this.Rows.Add(rowGADaysReportRow);
                return rowGADaysReportRow;
            }
            
            public GADaysReportRow FindByDaysReportRowId(int DaysReportRowId) {
                return ((GADaysReportRow)(this.Rows.Find(new object[] {
                            DaysReportRowId})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GADaysReportDataTable cln = ((GADaysReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GADaysReportDataTable();
            }
            
            internal void InitVars() {
                this.columnDaysReportRowId = this.Columns["DaysReportRowId"];
                this.columnReferenceId = this.Columns["ReferenceId"];
                this.columnDate = this.Columns["Date"];
                this.columnCetaceansCount = this.Columns["CetaceansCount"];
                this.columnCrewBoatActivitiesCount = this.Columns["CrewBoatActivitiesCount"];
                this.columnCrewSafetyMeetingsCount = this.Columns["CrewSafetyMeetingsCount"];
                this.columnToolboxMeetingsCount = this.Columns["ToolboxMeetingsCount"];
                this.columnSafetyDrillsCount = this.Columns["SafetyDrillsCount"];
                this.columnDrillHours = this.Columns["DrillHours"];
                this.columnReporter = this.Columns["Reporter"];
                this.columnComment = this.Columns["Comment"];
                this.columnDrillsOther = this.Columns["DrillsOther"];
                this.columnDrillsManOverBoard = this.Columns["DrillsManOverBoard"];
                this.columnDrillsFirstAid = this.Columns["DrillsFirstAid"];
                this.columnDrillsFire = this.Columns["DrillsFire"];
                this.columnDrillsLifeBoat = this.Columns["DrillsLifeBoat"];
                this.columnShareInfoPC = this.Columns["ShareInfoPC"];
                this.columnShareInfoNav = this.Columns["ShareInfoNav"];
                this.columnShareInfoTech = this.Columns["ShareInfoTech"];
                this.columnShareInfoMech = this.Columns["ShareInfoMech"];
                this.columnSeismicPersonnelCount = this.Columns["SeismicPersonnelCount"];
                this.columnMarinePersonnelCount = this.Columns["MarinePersonnelCount"];
                this.columnThirdPartyPersonnelCount = this.Columns["ThirdPartyPersonnelCount"];
                this.columnOfficePersonnelCount = this.Columns["OfficePersonnelCount"];
                this.columnClientPersonnelCount = this.Columns["ClientPersonnelCount"];
                this.columnOwnIncidentAndIllnessCount = this.Columns["OwnIncidentAndIllnessCount"];
                this.columnHIPCardUnsafeActsCount = this.Columns["HIPCardUnsafeActsCount"];
                this.columnHIPCardNearMissesCount = this.Columns["HIPCardNearMissesCount"];
                this.columnSOPDepartmentalInspectionsCount = this.Columns["SOPDepartmentalInspectionsCount"];
                this.columnSOPCrossDepartmentalInspectionsCount = this.Columns["SOPCrossDepartmentalInspectionsCount"];
                this.columnSOPPartyChiefInspectionsCount = this.Columns["SOPPartyChiefInspectionsCount"];
                this.columnManHours = this.Columns["ManHours"];
                this.columnProjectManHours = this.Columns["ProjectManHours"];
                this.columnYesNoSafetyEventListsRowId = this.Columns["YesNoSafetyEventListsRowId"];
                this.columnMasterRowId = this.Columns["MasterRowId"];
                this.columnDateCreated = this.Columns["DateCreated"];
                this.columnCreatedBy = this.Columns["CreatedBy"];
                this.columnDateChanged = this.Columns["DateChanged"];
                this.columnChangedBy = this.Columns["ChangedBy"];
                this.columnDateDeleted = this.Columns["DateDeleted"];
                this.columnDeletedBy = this.Columns["DeletedBy"];
                this.columnSwitchFree1 = this.Columns["SwitchFree1"];
                this.columnSwitchFree2 = this.Columns["SwitchFree2"];
                this.columnSwitchFree3 = this.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = this.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = this.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = this.Columns["DateTimeFree3"];
                this.columnTextFree1 = this.Columns["TextFree1"];
                this.columnTextFree2 = this.Columns["TextFree2"];
                this.columnTextFree3 = this.Columns["TextFree3"];
                this.columnIntFree1 = this.Columns["IntFree1"];
                this.columnIntFree2 = this.Columns["IntFree2"];
                this.columnIntFree3 = this.Columns["IntFree3"];
                this.columnMaritimeIncidentAndIllnessCount = this.Columns["MaritimeIncidentAndIllnessCount"];
            }
            
            private void InitClass() {
                this.columnDaysReportRowId = new DataColumn("DaysReportRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDaysReportRowId);
                this.columnReferenceId = new DataColumn("ReferenceId", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReferenceId);
                this.columnDate = new DataColumn("Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDate);
                this.columnCetaceansCount = new DataColumn("CetaceansCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCetaceansCount);
                this.columnCrewBoatActivitiesCount = new DataColumn("CrewBoatActivitiesCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCrewBoatActivitiesCount);
                this.columnCrewSafetyMeetingsCount = new DataColumn("CrewSafetyMeetingsCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCrewSafetyMeetingsCount);
                this.columnToolboxMeetingsCount = new DataColumn("ToolboxMeetingsCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnToolboxMeetingsCount);
                this.columnSafetyDrillsCount = new DataColumn("SafetyDrillsCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSafetyDrillsCount);
                this.columnDrillHours = new DataColumn("DrillHours", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDrillHours);
                this.columnReporter = new DataColumn("Reporter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReporter);
                this.columnComment = new DataColumn("Comment", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComment);
                this.columnDrillsOther = new DataColumn("DrillsOther", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDrillsOther);
                this.columnDrillsManOverBoard = new DataColumn("DrillsManOverBoard", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDrillsManOverBoard);
                this.columnDrillsFirstAid = new DataColumn("DrillsFirstAid", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDrillsFirstAid);
                this.columnDrillsFire = new DataColumn("DrillsFire", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDrillsFire);
                this.columnDrillsLifeBoat = new DataColumn("DrillsLifeBoat", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDrillsLifeBoat);
                this.columnShareInfoPC = new DataColumn("ShareInfoPC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShareInfoPC);
                this.columnShareInfoNav = new DataColumn("ShareInfoNav", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShareInfoNav);
                this.columnShareInfoTech = new DataColumn("ShareInfoTech", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShareInfoTech);
                this.columnShareInfoMech = new DataColumn("ShareInfoMech", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShareInfoMech);
                this.columnSeismicPersonnelCount = new DataColumn("SeismicPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSeismicPersonnelCount);
                this.columnMarinePersonnelCount = new DataColumn("MarinePersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMarinePersonnelCount);
                this.columnThirdPartyPersonnelCount = new DataColumn("ThirdPartyPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnThirdPartyPersonnelCount);
                this.columnOfficePersonnelCount = new DataColumn("OfficePersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOfficePersonnelCount);
                this.columnClientPersonnelCount = new DataColumn("ClientPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientPersonnelCount);
                this.columnOwnIncidentAndIllnessCount = new DataColumn("OwnIncidentAndIllnessCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOwnIncidentAndIllnessCount);
                this.columnHIPCardUnsafeActsCount = new DataColumn("HIPCardUnsafeActsCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHIPCardUnsafeActsCount);
                this.columnHIPCardNearMissesCount = new DataColumn("HIPCardNearMissesCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHIPCardNearMissesCount);
                this.columnSOPDepartmentalInspectionsCount = new DataColumn("SOPDepartmentalInspectionsCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPDepartmentalInspectionsCount);
                this.columnSOPCrossDepartmentalInspectionsCount = new DataColumn("SOPCrossDepartmentalInspectionsCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPCrossDepartmentalInspectionsCount);
                this.columnSOPPartyChiefInspectionsCount = new DataColumn("SOPPartyChiefInspectionsCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPPartyChiefInspectionsCount);
                this.columnManHours = new DataColumn("ManHours", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnManHours);
                this.columnProjectManHours = new DataColumn("ProjectManHours", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProjectManHours);
                this.columnYesNoSafetyEventListsRowId = new DataColumn("YesNoSafetyEventListsRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnYesNoSafetyEventListsRowId);
                this.columnMasterRowId = new DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntFree3);
                this.columnMaritimeIncidentAndIllnessCount = new DataColumn("MaritimeIncidentAndIllnessCount", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaritimeIncidentAndIllnessCount);
                this.Constraints.Add(new UniqueConstraint("ReportViewKey24", new DataColumn[] {
                                this.columnDaysReportRowId}, true));
                this.columnDaysReportRowId.AutoIncrement = true;
                this.columnDaysReportRowId.AllowDBNull = false;
                this.columnDaysReportRowId.ReadOnly = true;
                this.columnDaysReportRowId.Unique = true;
            }
            
            public GADaysReportRow NewGADaysReportRow() {
                return ((GADaysReportRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GADaysReportRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GADaysReportRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GADaysReportRowChanged != null)) {
                    this.GADaysReportRowChanged(this, new GADaysReportRowChangeEvent(((GADaysReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GADaysReportRowChanging != null)) {
                    this.GADaysReportRowChanging(this, new GADaysReportRowChangeEvent(((GADaysReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GADaysReportRowDeleted != null)) {
                    this.GADaysReportRowDeleted(this, new GADaysReportRowChangeEvent(((GADaysReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GADaysReportRowDeleting != null)) {
                    this.GADaysReportRowDeleting(this, new GADaysReportRowChangeEvent(((GADaysReportRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGADaysReportRow(GADaysReportRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GADaysReportRow : DataRow {
            
            private GADaysReportDataTable tableGADaysReport;
            
            internal GADaysReportRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGADaysReport = ((GADaysReportDataTable)(this.Table));
            }
            
            public int DaysReportRowId {
                get {
                    return ((int)(this[this.tableGADaysReport.DaysReportRowIdColumn]));
                }
                set {
                    this[this.tableGADaysReport.DaysReportRowIdColumn] = value;
                }
            }
            
            public string ReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.ReferenceIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ReferenceIdColumn] = value;
                }
            }
            
            public System.DateTime Date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADaysReport.DateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DateColumn] = value;
                }
            }
            
            public int CetaceansCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.CetaceansCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.CetaceansCountColumn] = value;
                }
            }
            
            public int CrewBoatActivitiesCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.CrewBoatActivitiesCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.CrewBoatActivitiesCountColumn] = value;
                }
            }
            
            public int CrewSafetyMeetingsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.CrewSafetyMeetingsCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.CrewSafetyMeetingsCountColumn] = value;
                }
            }
            
            public int ToolboxMeetingsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.ToolboxMeetingsCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ToolboxMeetingsCountColumn] = value;
                }
            }
            
            public int SafetyDrillsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.SafetyDrillsCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.SafetyDrillsCountColumn] = value;
                }
            }
            
            public int DrillHours {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.DrillHoursColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DrillHoursColumn] = value;
                }
            }
            
            public string Reporter {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.ReporterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ReporterColumn] = value;
                }
            }
            
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.CommentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.CommentColumn] = value;
                }
            }
            
            public int DrillsOther {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.DrillsOtherColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DrillsOtherColumn] = value;
                }
            }
            
            public int DrillsManOverBoard {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.DrillsManOverBoardColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DrillsManOverBoardColumn] = value;
                }
            }
            
            public int DrillsFirstAid {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.DrillsFirstAidColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DrillsFirstAidColumn] = value;
                }
            }
            
            public int DrillsFire {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.DrillsFireColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DrillsFireColumn] = value;
                }
            }
            
            public int DrillsLifeBoat {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.DrillsLifeBoatColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DrillsLifeBoatColumn] = value;
                }
            }
            
            public string ShareInfoPC {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.ShareInfoPCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ShareInfoPCColumn] = value;
                }
            }
            
            public string ShareInfoNav {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.ShareInfoNavColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ShareInfoNavColumn] = value;
                }
            }
            
            public string ShareInfoTech {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.ShareInfoTechColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ShareInfoTechColumn] = value;
                }
            }
            
            public string ShareInfoMech {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.ShareInfoMechColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ShareInfoMechColumn] = value;
                }
            }
            
            public int SeismicPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.SeismicPersonnelCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.SeismicPersonnelCountColumn] = value;
                }
            }
            
            public int MarinePersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.MarinePersonnelCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.MarinePersonnelCountColumn] = value;
                }
            }
            
            public int ThirdPartyPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.ThirdPartyPersonnelCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ThirdPartyPersonnelCountColumn] = value;
                }
            }
            
            public int OfficePersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.OfficePersonnelCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.OfficePersonnelCountColumn] = value;
                }
            }
            
            public int ClientPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.ClientPersonnelCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ClientPersonnelCountColumn] = value;
                }
            }
            
            public int OwnIncidentAndIllnessCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.OwnIncidentAndIllnessCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.OwnIncidentAndIllnessCountColumn] = value;
                }
            }
            
            public int HIPCardUnsafeActsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.HIPCardUnsafeActsCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.HIPCardUnsafeActsCountColumn] = value;
                }
            }
            
            public int HIPCardNearMissesCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.HIPCardNearMissesCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.HIPCardNearMissesCountColumn] = value;
                }
            }
            
            public int SOPDepartmentalInspectionsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.SOPDepartmentalInspectionsCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.SOPDepartmentalInspectionsCountColumn] = value;
                }
            }
            
            public int SOPCrossDepartmentalInspectionsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.SOPCrossDepartmentalInspectionsCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.SOPCrossDepartmentalInspectionsCountColumn] = value;
                }
            }
            
            public int SOPPartyChiefInspectionsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.SOPPartyChiefInspectionsCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.SOPPartyChiefInspectionsCountColumn] = value;
                }
            }
            
            public int ManHours {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.ManHoursColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ManHoursColumn] = value;
                }
            }
            
            public int ProjectManHours {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.ProjectManHoursColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ProjectManHoursColumn] = value;
                }
            }
            
            public int YesNoSafetyEventListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.YesNoSafetyEventListsRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.YesNoSafetyEventListsRowIdColumn] = value;
                }
            }
            
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.MasterRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.MasterRowIdColumn] = value;
                }
            }
            
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADaysReport.DateCreatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DateCreatedColumn] = value;
                }
            }
            
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.CreatedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.CreatedByColumn] = value;
                }
            }
            
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADaysReport.DateChangedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DateChangedColumn] = value;
                }
            }
            
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.ChangedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ChangedByColumn] = value;
                }
            }
            
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADaysReport.DateDeletedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DateDeletedColumn] = value;
                }
            }
            
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.DeletedByColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DeletedByColumn] = value;
                }
            }
            
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGADaysReport.SwitchFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.SwitchFree1Column] = value;
                }
            }
            
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGADaysReport.SwitchFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.SwitchFree2Column] = value;
                }
            }
            
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGADaysReport.SwitchFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.SwitchFree3Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADaysReport.DateTimeFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DateTimeFree1Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADaysReport.DateTimeFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DateTimeFree2Column] = value;
                }
            }
            
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADaysReport.DateTimeFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DateTimeFree3Column] = value;
                }
            }
            
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.TextFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.TextFree1Column] = value;
                }
            }
            
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.TextFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.TextFree2Column] = value;
                }
            }
            
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.TextFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.TextFree3Column] = value;
                }
            }
            
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.IntFree1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.IntFree1Column] = value;
                }
            }
            
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.IntFree2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.IntFree2Column] = value;
                }
            }
            
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.IntFree3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.IntFree3Column] = value;
                }
            }
            
            public int MaritimeIncidentAndIllnessCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.MaritimeIncidentAndIllnessCountColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.MaritimeIncidentAndIllnessCountColumn] = value;
                }
            }
            
            public bool IsReferenceIdNull() {
                return this.IsNull(this.tableGADaysReport.ReferenceIdColumn);
            }
            
            public void SetReferenceIdNull() {
                this[this.tableGADaysReport.ReferenceIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateNull() {
                return this.IsNull(this.tableGADaysReport.DateColumn);
            }
            
            public void SetDateNull() {
                this[this.tableGADaysReport.DateColumn] = System.Convert.DBNull;
            }
            
            public bool IsCetaceansCountNull() {
                return this.IsNull(this.tableGADaysReport.CetaceansCountColumn);
            }
            
            public void SetCetaceansCountNull() {
                this[this.tableGADaysReport.CetaceansCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsCrewBoatActivitiesCountNull() {
                return this.IsNull(this.tableGADaysReport.CrewBoatActivitiesCountColumn);
            }
            
            public void SetCrewBoatActivitiesCountNull() {
                this[this.tableGADaysReport.CrewBoatActivitiesCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsCrewSafetyMeetingsCountNull() {
                return this.IsNull(this.tableGADaysReport.CrewSafetyMeetingsCountColumn);
            }
            
            public void SetCrewSafetyMeetingsCountNull() {
                this[this.tableGADaysReport.CrewSafetyMeetingsCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsToolboxMeetingsCountNull() {
                return this.IsNull(this.tableGADaysReport.ToolboxMeetingsCountColumn);
            }
            
            public void SetToolboxMeetingsCountNull() {
                this[this.tableGADaysReport.ToolboxMeetingsCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsSafetyDrillsCountNull() {
                return this.IsNull(this.tableGADaysReport.SafetyDrillsCountColumn);
            }
            
            public void SetSafetyDrillsCountNull() {
                this[this.tableGADaysReport.SafetyDrillsCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsDrillHoursNull() {
                return this.IsNull(this.tableGADaysReport.DrillHoursColumn);
            }
            
            public void SetDrillHoursNull() {
                this[this.tableGADaysReport.DrillHoursColumn] = System.Convert.DBNull;
            }
            
            public bool IsReporterNull() {
                return this.IsNull(this.tableGADaysReport.ReporterColumn);
            }
            
            public void SetReporterNull() {
                this[this.tableGADaysReport.ReporterColumn] = System.Convert.DBNull;
            }
            
            public bool IsCommentNull() {
                return this.IsNull(this.tableGADaysReport.CommentColumn);
            }
            
            public void SetCommentNull() {
                this[this.tableGADaysReport.CommentColumn] = System.Convert.DBNull;
            }
            
            public bool IsDrillsOtherNull() {
                return this.IsNull(this.tableGADaysReport.DrillsOtherColumn);
            }
            
            public void SetDrillsOtherNull() {
                this[this.tableGADaysReport.DrillsOtherColumn] = System.Convert.DBNull;
            }
            
            public bool IsDrillsManOverBoardNull() {
                return this.IsNull(this.tableGADaysReport.DrillsManOverBoardColumn);
            }
            
            public void SetDrillsManOverBoardNull() {
                this[this.tableGADaysReport.DrillsManOverBoardColumn] = System.Convert.DBNull;
            }
            
            public bool IsDrillsFirstAidNull() {
                return this.IsNull(this.tableGADaysReport.DrillsFirstAidColumn);
            }
            
            public void SetDrillsFirstAidNull() {
                this[this.tableGADaysReport.DrillsFirstAidColumn] = System.Convert.DBNull;
            }
            
            public bool IsDrillsFireNull() {
                return this.IsNull(this.tableGADaysReport.DrillsFireColumn);
            }
            
            public void SetDrillsFireNull() {
                this[this.tableGADaysReport.DrillsFireColumn] = System.Convert.DBNull;
            }
            
            public bool IsDrillsLifeBoatNull() {
                return this.IsNull(this.tableGADaysReport.DrillsLifeBoatColumn);
            }
            
            public void SetDrillsLifeBoatNull() {
                this[this.tableGADaysReport.DrillsLifeBoatColumn] = System.Convert.DBNull;
            }
            
            public bool IsShareInfoPCNull() {
                return this.IsNull(this.tableGADaysReport.ShareInfoPCColumn);
            }
            
            public void SetShareInfoPCNull() {
                this[this.tableGADaysReport.ShareInfoPCColumn] = System.Convert.DBNull;
            }
            
            public bool IsShareInfoNavNull() {
                return this.IsNull(this.tableGADaysReport.ShareInfoNavColumn);
            }
            
            public void SetShareInfoNavNull() {
                this[this.tableGADaysReport.ShareInfoNavColumn] = System.Convert.DBNull;
            }
            
            public bool IsShareInfoTechNull() {
                return this.IsNull(this.tableGADaysReport.ShareInfoTechColumn);
            }
            
            public void SetShareInfoTechNull() {
                this[this.tableGADaysReport.ShareInfoTechColumn] = System.Convert.DBNull;
            }
            
            public bool IsShareInfoMechNull() {
                return this.IsNull(this.tableGADaysReport.ShareInfoMechColumn);
            }
            
            public void SetShareInfoMechNull() {
                this[this.tableGADaysReport.ShareInfoMechColumn] = System.Convert.DBNull;
            }
            
            public bool IsSeismicPersonnelCountNull() {
                return this.IsNull(this.tableGADaysReport.SeismicPersonnelCountColumn);
            }
            
            public void SetSeismicPersonnelCountNull() {
                this[this.tableGADaysReport.SeismicPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsMarinePersonnelCountNull() {
                return this.IsNull(this.tableGADaysReport.MarinePersonnelCountColumn);
            }
            
            public void SetMarinePersonnelCountNull() {
                this[this.tableGADaysReport.MarinePersonnelCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsThirdPartyPersonnelCountNull() {
                return this.IsNull(this.tableGADaysReport.ThirdPartyPersonnelCountColumn);
            }
            
            public void SetThirdPartyPersonnelCountNull() {
                this[this.tableGADaysReport.ThirdPartyPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsOfficePersonnelCountNull() {
                return this.IsNull(this.tableGADaysReport.OfficePersonnelCountColumn);
            }
            
            public void SetOfficePersonnelCountNull() {
                this[this.tableGADaysReport.OfficePersonnelCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientPersonnelCountNull() {
                return this.IsNull(this.tableGADaysReport.ClientPersonnelCountColumn);
            }
            
            public void SetClientPersonnelCountNull() {
                this[this.tableGADaysReport.ClientPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsOwnIncidentAndIllnessCountNull() {
                return this.IsNull(this.tableGADaysReport.OwnIncidentAndIllnessCountColumn);
            }
            
            public void SetOwnIncidentAndIllnessCountNull() {
                this[this.tableGADaysReport.OwnIncidentAndIllnessCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsHIPCardUnsafeActsCountNull() {
                return this.IsNull(this.tableGADaysReport.HIPCardUnsafeActsCountColumn);
            }
            
            public void SetHIPCardUnsafeActsCountNull() {
                this[this.tableGADaysReport.HIPCardUnsafeActsCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsHIPCardNearMissesCountNull() {
                return this.IsNull(this.tableGADaysReport.HIPCardNearMissesCountColumn);
            }
            
            public void SetHIPCardNearMissesCountNull() {
                this[this.tableGADaysReport.HIPCardNearMissesCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPDepartmentalInspectionsCountNull() {
                return this.IsNull(this.tableGADaysReport.SOPDepartmentalInspectionsCountColumn);
            }
            
            public void SetSOPDepartmentalInspectionsCountNull() {
                this[this.tableGADaysReport.SOPDepartmentalInspectionsCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPCrossDepartmentalInspectionsCountNull() {
                return this.IsNull(this.tableGADaysReport.SOPCrossDepartmentalInspectionsCountColumn);
            }
            
            public void SetSOPCrossDepartmentalInspectionsCountNull() {
                this[this.tableGADaysReport.SOPCrossDepartmentalInspectionsCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOPPartyChiefInspectionsCountNull() {
                return this.IsNull(this.tableGADaysReport.SOPPartyChiefInspectionsCountColumn);
            }
            
            public void SetSOPPartyChiefInspectionsCountNull() {
                this[this.tableGADaysReport.SOPPartyChiefInspectionsCountColumn] = System.Convert.DBNull;
            }
            
            public bool IsManHoursNull() {
                return this.IsNull(this.tableGADaysReport.ManHoursColumn);
            }
            
            public void SetManHoursNull() {
                this[this.tableGADaysReport.ManHoursColumn] = System.Convert.DBNull;
            }
            
            public bool IsProjectManHoursNull() {
                return this.IsNull(this.tableGADaysReport.ProjectManHoursColumn);
            }
            
            public void SetProjectManHoursNull() {
                this[this.tableGADaysReport.ProjectManHoursColumn] = System.Convert.DBNull;
            }
            
            public bool IsYesNoSafetyEventListsRowIdNull() {
                return this.IsNull(this.tableGADaysReport.YesNoSafetyEventListsRowIdColumn);
            }
            
            public void SetYesNoSafetyEventListsRowIdNull() {
                this[this.tableGADaysReport.YesNoSafetyEventListsRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGADaysReport.MasterRowIdColumn);
            }
            
            public void SetMasterRowIdNull() {
                this[this.tableGADaysReport.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGADaysReport.DateCreatedColumn);
            }
            
            public void SetDateCreatedNull() {
                this[this.tableGADaysReport.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGADaysReport.CreatedByColumn);
            }
            
            public void SetCreatedByNull() {
                this[this.tableGADaysReport.CreatedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGADaysReport.DateChangedColumn);
            }
            
            public void SetDateChangedNull() {
                this[this.tableGADaysReport.DateChangedColumn] = System.Convert.DBNull;
            }
            
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGADaysReport.ChangedByColumn);
            }
            
            public void SetChangedByNull() {
                this[this.tableGADaysReport.ChangedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGADaysReport.DateDeletedColumn);
            }
            
            public void SetDateDeletedNull() {
                this[this.tableGADaysReport.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGADaysReport.DeletedByColumn);
            }
            
            public void SetDeletedByNull() {
                this[this.tableGADaysReport.DeletedByColumn] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGADaysReport.SwitchFree1Column);
            }
            
            public void SetSwitchFree1Null() {
                this[this.tableGADaysReport.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGADaysReport.SwitchFree2Column);
            }
            
            public void SetSwitchFree2Null() {
                this[this.tableGADaysReport.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGADaysReport.SwitchFree3Column);
            }
            
            public void SetSwitchFree3Null() {
                this[this.tableGADaysReport.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGADaysReport.DateTimeFree1Column);
            }
            
            public void SetDateTimeFree1Null() {
                this[this.tableGADaysReport.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGADaysReport.DateTimeFree2Column);
            }
            
            public void SetDateTimeFree2Null() {
                this[this.tableGADaysReport.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGADaysReport.DateTimeFree3Column);
            }
            
            public void SetDateTimeFree3Null() {
                this[this.tableGADaysReport.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGADaysReport.TextFree1Column);
            }
            
            public void SetTextFree1Null() {
                this[this.tableGADaysReport.TextFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGADaysReport.TextFree2Column);
            }
            
            public void SetTextFree2Null() {
                this[this.tableGADaysReport.TextFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGADaysReport.TextFree3Column);
            }
            
            public void SetTextFree3Null() {
                this[this.tableGADaysReport.TextFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGADaysReport.IntFree1Column);
            }
            
            public void SetIntFree1Null() {
                this[this.tableGADaysReport.IntFree1Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGADaysReport.IntFree2Column);
            }
            
            public void SetIntFree2Null() {
                this[this.tableGADaysReport.IntFree2Column] = System.Convert.DBNull;
            }
            
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGADaysReport.IntFree3Column);
            }
            
            public void SetIntFree3Null() {
                this[this.tableGADaysReport.IntFree3Column] = System.Convert.DBNull;
            }
            
            public bool IsMaritimeIncidentAndIllnessCountNull() {
                return this.IsNull(this.tableGADaysReport.MaritimeIncidentAndIllnessCountColumn);
            }
            
            public void SetMaritimeIncidentAndIllnessCountNull() {
                this[this.tableGADaysReport.MaritimeIncidentAndIllnessCountColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GADaysReportRowChangeEvent : EventArgs {
            
            private GADaysReportRow eventRow;
            
            private DataRowAction eventAction;
            
            public GADaysReportRowChangeEvent(GADaysReportRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GADaysReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
