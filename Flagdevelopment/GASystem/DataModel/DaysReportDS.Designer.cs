//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DaysReportDS")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DaysReportDS : System.Data.DataSet {
        
        private GADaysReportDataTable tableGADaysReport;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DaysReportDS() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DaysReportDS(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["GADaysReport"] != null)) {
                    base.Tables.Add(new GADaysReportDataTable(ds.Tables["GADaysReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GADaysReportDataTable GADaysReport {
            get {
                return this.tableGADaysReport;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DaysReportDS cln = ((DaysReportDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GADaysReport"] != null)) {
                    base.Tables.Add(new GADaysReportDataTable(ds.Tables["GADaysReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGADaysReport = ((GADaysReportDataTable)(base.Tables["GADaysReport"]));
            if ((initTable == true)) {
                if ((this.tableGADaysReport != null)) {
                    this.tableGADaysReport.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DaysReportDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DaysReportDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGADaysReport = new GADaysReportDataTable();
            base.Tables.Add(this.tableGADaysReport);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGADaysReport() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DaysReportDS ds = new DaysReportDS();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void GADaysReportRowChangeEventHandler(object sender, GADaysReportRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GADaysReportDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDaysReportRowId;
            
            private System.Data.DataColumn columnReferenceId;
            
            private System.Data.DataColumn columnDate;
            
            private System.Data.DataColumn columnCetaceansCount;
            
            private System.Data.DataColumn columnCrewBoatActivitiesCount;
            
            private System.Data.DataColumn columnCrewSafetyMeetingsCount;
            
            private System.Data.DataColumn columnToolboxMeetingsCount;
            
            private System.Data.DataColumn columnSafetyDrillsCount;
            
            private System.Data.DataColumn columnDrillHours;
            
            private System.Data.DataColumn columnReporter;
            
            private System.Data.DataColumn columnComment;
            
            private System.Data.DataColumn columnDrillsOther;
            
            private System.Data.DataColumn columnDrillsManOverBoard;
            
            private System.Data.DataColumn columnDrillsFirstAid;
            
            private System.Data.DataColumn columnDrillsFire;
            
            private System.Data.DataColumn columnDrillsLifeBoat;
            
            private System.Data.DataColumn columnShareInfoPC;
            
            private System.Data.DataColumn columnShareInfoNav;
            
            private System.Data.DataColumn columnShareInfoTech;
            
            private System.Data.DataColumn columnShareInfoMech;
            
            private System.Data.DataColumn columnSeismicPersonnelCount;
            
            private System.Data.DataColumn columnMarinePersonnelCount;
            
            private System.Data.DataColumn columnThirdPartyPersonnelCount;
            
            private System.Data.DataColumn columnOfficePersonnelCount;
            
            private System.Data.DataColumn columnClientPersonnelCount;
            
            private System.Data.DataColumn columnMaritimeIncidentAndIllnessCount;
            
            private System.Data.DataColumn columnOwnIncidentAndIllnessCount;
            
            private System.Data.DataColumn columnHIPCardUnsafeActsCount;
            
            private System.Data.DataColumn columnHIPCardNearMissesCount;
            
            private System.Data.DataColumn columnSOPDepartmentalInspectionsCount;
            
            private System.Data.DataColumn columnSOPCrossDepartmentalInspectionsCount;
            
            private System.Data.DataColumn columnSOPPartyChiefInspectionsCount;
            
            private System.Data.DataColumn columnManHours;
            
            private System.Data.DataColumn columnProjectManHours;
            
            private System.Data.DataColumn columnYesNoSafetyEventListsRowId;
            
            private System.Data.DataColumn columnrowguid;
            
            private System.Data.DataColumn columnMasterRowId;
            
            private System.Data.DataColumn columnDateCreated;
            
            private System.Data.DataColumn columnCreatedBy;
            
            private System.Data.DataColumn columnDateChanged;
            
            private System.Data.DataColumn columnChangedBy;
            
            private System.Data.DataColumn columnDateDeleted;
            
            private System.Data.DataColumn columnDeletedBy;
            
            private System.Data.DataColumn columnSwitchFree1;
            
            private System.Data.DataColumn columnSwitchFree2;
            
            private System.Data.DataColumn columnSwitchFree3;
            
            private System.Data.DataColumn columnDateTimeFree1;
            
            private System.Data.DataColumn columnDateTimeFree2;
            
            private System.Data.DataColumn columnDateTimeFree3;
            
            private System.Data.DataColumn columnTextFree1;
            
            private System.Data.DataColumn columnTextFree2;
            
            private System.Data.DataColumn columnTextFree3;
            
            private System.Data.DataColumn columnIntFree1;
            
            private System.Data.DataColumn columnIntFree2;
            
            private System.Data.DataColumn columnIntFree3;
            
            private System.Data.DataColumn columnHeliActivitiesCount;
            
            private System.Data.DataColumn columnOtherActivitiesCount;
            
            private System.Data.DataColumn columnnTextFree1;
            
            private System.Data.DataColumn columnnTextFree2;
            
            private System.Data.DataColumn columnnTextFree3;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADaysReportDataTable() {
                this.TableName = "GADaysReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GADaysReportDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GADaysReportDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DaysReportRowIdColumn {
                get {
                    return this.columnDaysReportRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ReferenceIdColumn {
                get {
                    return this.columnReferenceId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CetaceansCountColumn {
                get {
                    return this.columnCetaceansCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CrewBoatActivitiesCountColumn {
                get {
                    return this.columnCrewBoatActivitiesCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CrewSafetyMeetingsCountColumn {
                get {
                    return this.columnCrewSafetyMeetingsCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ToolboxMeetingsCountColumn {
                get {
                    return this.columnToolboxMeetingsCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SafetyDrillsCountColumn {
                get {
                    return this.columnSafetyDrillsCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DrillHoursColumn {
                get {
                    return this.columnDrillHours;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ReporterColumn {
                get {
                    return this.columnReporter;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DrillsOtherColumn {
                get {
                    return this.columnDrillsOther;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DrillsManOverBoardColumn {
                get {
                    return this.columnDrillsManOverBoard;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DrillsFirstAidColumn {
                get {
                    return this.columnDrillsFirstAid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DrillsFireColumn {
                get {
                    return this.columnDrillsFire;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DrillsLifeBoatColumn {
                get {
                    return this.columnDrillsLifeBoat;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ShareInfoPCColumn {
                get {
                    return this.columnShareInfoPC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ShareInfoNavColumn {
                get {
                    return this.columnShareInfoNav;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ShareInfoTechColumn {
                get {
                    return this.columnShareInfoTech;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ShareInfoMechColumn {
                get {
                    return this.columnShareInfoMech;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SeismicPersonnelCountColumn {
                get {
                    return this.columnSeismicPersonnelCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MarinePersonnelCountColumn {
                get {
                    return this.columnMarinePersonnelCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ThirdPartyPersonnelCountColumn {
                get {
                    return this.columnThirdPartyPersonnelCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OfficePersonnelCountColumn {
                get {
                    return this.columnOfficePersonnelCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ClientPersonnelCountColumn {
                get {
                    return this.columnClientPersonnelCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaritimeIncidentAndIllnessCountColumn {
                get {
                    return this.columnMaritimeIncidentAndIllnessCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OwnIncidentAndIllnessCountColumn {
                get {
                    return this.columnOwnIncidentAndIllnessCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HIPCardUnsafeActsCountColumn {
                get {
                    return this.columnHIPCardUnsafeActsCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HIPCardNearMissesCountColumn {
                get {
                    return this.columnHIPCardNearMissesCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPDepartmentalInspectionsCountColumn {
                get {
                    return this.columnSOPDepartmentalInspectionsCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPCrossDepartmentalInspectionsCountColumn {
                get {
                    return this.columnSOPCrossDepartmentalInspectionsCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOPPartyChiefInspectionsCountColumn {
                get {
                    return this.columnSOPPartyChiefInspectionsCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ManHoursColumn {
                get {
                    return this.columnManHours;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProjectManHoursColumn {
                get {
                    return this.columnProjectManHours;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn YesNoSafetyEventListsRowIdColumn {
                get {
                    return this.columnYesNoSafetyEventListsRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HeliActivitiesCountColumn {
                get {
                    return this.columnHeliActivitiesCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OtherActivitiesCountColumn {
                get {
                    return this.columnOtherActivitiesCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nTextFree1Column {
                get {
                    return this.columnnTextFree1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nTextFree2Column {
                get {
                    return this.columnnTextFree2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nTextFree3Column {
                get {
                    return this.columnnTextFree3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADaysReportRow this[int index] {
                get {
                    return ((GADaysReportRow)(this.Rows[index]));
                }
            }
            
            public event GADaysReportRowChangeEventHandler GADaysReportRowChanging;
            
            public event GADaysReportRowChangeEventHandler GADaysReportRowChanged;
            
            public event GADaysReportRowChangeEventHandler GADaysReportRowDeleting;
            
            public event GADaysReportRowChangeEventHandler GADaysReportRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGADaysReportRow(GADaysReportRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADaysReportRow AddGADaysReportRow(
                        string ReferenceId, 
                        System.DateTime Date, 
                        int CetaceansCount, 
                        int CrewBoatActivitiesCount, 
                        int CrewSafetyMeetingsCount, 
                        int ToolboxMeetingsCount, 
                        int SafetyDrillsCount, 
                        int DrillHours, 
                        int Reporter, 
                        string Comment, 
                        int DrillsOther, 
                        int DrillsManOverBoard, 
                        int DrillsFirstAid, 
                        int DrillsFire, 
                        int DrillsLifeBoat, 
                        string ShareInfoPC, 
                        string ShareInfoNav, 
                        string ShareInfoTech, 
                        string ShareInfoMech, 
                        int SeismicPersonnelCount, 
                        int MarinePersonnelCount, 
                        int ThirdPartyPersonnelCount, 
                        int OfficePersonnelCount, 
                        int ClientPersonnelCount, 
                        int MaritimeIncidentAndIllnessCount, 
                        int OwnIncidentAndIllnessCount, 
                        int HIPCardUnsafeActsCount, 
                        int HIPCardNearMissesCount, 
                        int SOPDepartmentalInspectionsCount, 
                        int SOPCrossDepartmentalInspectionsCount, 
                        int SOPPartyChiefInspectionsCount, 
                        int ManHours, 
                        int ProjectManHours, 
                        int YesNoSafetyEventListsRowId, 
                        System.Guid rowguid, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3, 
                        int HeliActivitiesCount, 
                        int OtherActivitiesCount, 
                        string nTextFree1, 
                        string nTextFree2, 
                        string nTextFree3) {
                GADaysReportRow rowGADaysReportRow = ((GADaysReportRow)(this.NewRow()));
                rowGADaysReportRow.ItemArray = new object[] {
                        null,
                        ReferenceId,
                        Date,
                        CetaceansCount,
                        CrewBoatActivitiesCount,
                        CrewSafetyMeetingsCount,
                        ToolboxMeetingsCount,
                        SafetyDrillsCount,
                        DrillHours,
                        Reporter,
                        Comment,
                        DrillsOther,
                        DrillsManOverBoard,
                        DrillsFirstAid,
                        DrillsFire,
                        DrillsLifeBoat,
                        ShareInfoPC,
                        ShareInfoNav,
                        ShareInfoTech,
                        ShareInfoMech,
                        SeismicPersonnelCount,
                        MarinePersonnelCount,
                        ThirdPartyPersonnelCount,
                        OfficePersonnelCount,
                        ClientPersonnelCount,
                        MaritimeIncidentAndIllnessCount,
                        OwnIncidentAndIllnessCount,
                        HIPCardUnsafeActsCount,
                        HIPCardNearMissesCount,
                        SOPDepartmentalInspectionsCount,
                        SOPCrossDepartmentalInspectionsCount,
                        SOPPartyChiefInspectionsCount,
                        ManHours,
                        ProjectManHours,
                        YesNoSafetyEventListsRowId,
                        rowguid,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3,
                        HeliActivitiesCount,
                        OtherActivitiesCount,
                        nTextFree1,
                        nTextFree2,
                        nTextFree3};
                this.Rows.Add(rowGADaysReportRow);
                return rowGADaysReportRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADaysReportRow FindByDaysReportRowId(int DaysReportRowId) {
                return ((GADaysReportRow)(this.Rows.Find(new object[] {
                            DaysReportRowId})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                GADaysReportDataTable cln = ((GADaysReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new GADaysReportDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDaysReportRowId = base.Columns["DaysReportRowId"];
                this.columnReferenceId = base.Columns["ReferenceId"];
                this.columnDate = base.Columns["Date"];
                this.columnCetaceansCount = base.Columns["CetaceansCount"];
                this.columnCrewBoatActivitiesCount = base.Columns["CrewBoatActivitiesCount"];
                this.columnCrewSafetyMeetingsCount = base.Columns["CrewSafetyMeetingsCount"];
                this.columnToolboxMeetingsCount = base.Columns["ToolboxMeetingsCount"];
                this.columnSafetyDrillsCount = base.Columns["SafetyDrillsCount"];
                this.columnDrillHours = base.Columns["DrillHours"];
                this.columnReporter = base.Columns["Reporter"];
                this.columnComment = base.Columns["Comment"];
                this.columnDrillsOther = base.Columns["DrillsOther"];
                this.columnDrillsManOverBoard = base.Columns["DrillsManOverBoard"];
                this.columnDrillsFirstAid = base.Columns["DrillsFirstAid"];
                this.columnDrillsFire = base.Columns["DrillsFire"];
                this.columnDrillsLifeBoat = base.Columns["DrillsLifeBoat"];
                this.columnShareInfoPC = base.Columns["ShareInfoPC"];
                this.columnShareInfoNav = base.Columns["ShareInfoNav"];
                this.columnShareInfoTech = base.Columns["ShareInfoTech"];
                this.columnShareInfoMech = base.Columns["ShareInfoMech"];
                this.columnSeismicPersonnelCount = base.Columns["SeismicPersonnelCount"];
                this.columnMarinePersonnelCount = base.Columns["MarinePersonnelCount"];
                this.columnThirdPartyPersonnelCount = base.Columns["ThirdPartyPersonnelCount"];
                this.columnOfficePersonnelCount = base.Columns["OfficePersonnelCount"];
                this.columnClientPersonnelCount = base.Columns["ClientPersonnelCount"];
                this.columnMaritimeIncidentAndIllnessCount = base.Columns["MaritimeIncidentAndIllnessCount"];
                this.columnOwnIncidentAndIllnessCount = base.Columns["OwnIncidentAndIllnessCount"];
                this.columnHIPCardUnsafeActsCount = base.Columns["HIPCardUnsafeActsCount"];
                this.columnHIPCardNearMissesCount = base.Columns["HIPCardNearMissesCount"];
                this.columnSOPDepartmentalInspectionsCount = base.Columns["SOPDepartmentalInspectionsCount"];
                this.columnSOPCrossDepartmentalInspectionsCount = base.Columns["SOPCrossDepartmentalInspectionsCount"];
                this.columnSOPPartyChiefInspectionsCount = base.Columns["SOPPartyChiefInspectionsCount"];
                this.columnManHours = base.Columns["ManHours"];
                this.columnProjectManHours = base.Columns["ProjectManHours"];
                this.columnYesNoSafetyEventListsRowId = base.Columns["YesNoSafetyEventListsRowId"];
                this.columnrowguid = base.Columns["rowguid"];
                this.columnMasterRowId = base.Columns["MasterRowId"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnDateChanged = base.Columns["DateChanged"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnDateDeleted = base.Columns["DateDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnSwitchFree1 = base.Columns["SwitchFree1"];
                this.columnSwitchFree2 = base.Columns["SwitchFree2"];
                this.columnSwitchFree3 = base.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = base.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = base.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = base.Columns["DateTimeFree3"];
                this.columnTextFree1 = base.Columns["TextFree1"];
                this.columnTextFree2 = base.Columns["TextFree2"];
                this.columnTextFree3 = base.Columns["TextFree3"];
                this.columnIntFree1 = base.Columns["IntFree1"];
                this.columnIntFree2 = base.Columns["IntFree2"];
                this.columnIntFree3 = base.Columns["IntFree3"];
                this.columnHeliActivitiesCount = base.Columns["HeliActivitiesCount"];
                this.columnOtherActivitiesCount = base.Columns["OtherActivitiesCount"];
                this.columnnTextFree1 = base.Columns["nTextFree1"];
                this.columnnTextFree2 = base.Columns["nTextFree2"];
                this.columnnTextFree3 = base.Columns["nTextFree3"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDaysReportRowId = new System.Data.DataColumn("DaysReportRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaysReportRowId);
                this.columnReferenceId = new System.Data.DataColumn("ReferenceId", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceId);
                this.columnDate = new System.Data.DataColumn("Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnCetaceansCount = new System.Data.DataColumn("CetaceansCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCetaceansCount);
                this.columnCrewBoatActivitiesCount = new System.Data.DataColumn("CrewBoatActivitiesCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrewBoatActivitiesCount);
                this.columnCrewSafetyMeetingsCount = new System.Data.DataColumn("CrewSafetyMeetingsCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrewSafetyMeetingsCount);
                this.columnToolboxMeetingsCount = new System.Data.DataColumn("ToolboxMeetingsCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnToolboxMeetingsCount);
                this.columnSafetyDrillsCount = new System.Data.DataColumn("SafetyDrillsCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyDrillsCount);
                this.columnDrillHours = new System.Data.DataColumn("DrillHours", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrillHours);
                this.columnReporter = new System.Data.DataColumn("Reporter", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReporter);
                this.columnComment = new System.Data.DataColumn("Comment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnDrillsOther = new System.Data.DataColumn("DrillsOther", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrillsOther);
                this.columnDrillsManOverBoard = new System.Data.DataColumn("DrillsManOverBoard", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrillsManOverBoard);
                this.columnDrillsFirstAid = new System.Data.DataColumn("DrillsFirstAid", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrillsFirstAid);
                this.columnDrillsFire = new System.Data.DataColumn("DrillsFire", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrillsFire);
                this.columnDrillsLifeBoat = new System.Data.DataColumn("DrillsLifeBoat", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrillsLifeBoat);
                this.columnShareInfoPC = new System.Data.DataColumn("ShareInfoPC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnShareInfoPC);
                this.columnShareInfoNav = new System.Data.DataColumn("ShareInfoNav", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnShareInfoNav);
                this.columnShareInfoTech = new System.Data.DataColumn("ShareInfoTech", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnShareInfoTech);
                this.columnShareInfoMech = new System.Data.DataColumn("ShareInfoMech", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnShareInfoMech);
                this.columnSeismicPersonnelCount = new System.Data.DataColumn("SeismicPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeismicPersonnelCount);
                this.columnMarinePersonnelCount = new System.Data.DataColumn("MarinePersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarinePersonnelCount);
                this.columnThirdPartyPersonnelCount = new System.Data.DataColumn("ThirdPartyPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnThirdPartyPersonnelCount);
                this.columnOfficePersonnelCount = new System.Data.DataColumn("OfficePersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficePersonnelCount);
                this.columnClientPersonnelCount = new System.Data.DataColumn("ClientPersonnelCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientPersonnelCount);
                this.columnMaritimeIncidentAndIllnessCount = new System.Data.DataColumn("MaritimeIncidentAndIllnessCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritimeIncidentAndIllnessCount);
                this.columnOwnIncidentAndIllnessCount = new System.Data.DataColumn("OwnIncidentAndIllnessCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnIncidentAndIllnessCount);
                this.columnHIPCardUnsafeActsCount = new System.Data.DataColumn("HIPCardUnsafeActsCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIPCardUnsafeActsCount);
                this.columnHIPCardNearMissesCount = new System.Data.DataColumn("HIPCardNearMissesCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIPCardNearMissesCount);
                this.columnSOPDepartmentalInspectionsCount = new System.Data.DataColumn("SOPDepartmentalInspectionsCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPDepartmentalInspectionsCount);
                this.columnSOPCrossDepartmentalInspectionsCount = new System.Data.DataColumn("SOPCrossDepartmentalInspectionsCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPCrossDepartmentalInspectionsCount);
                this.columnSOPPartyChiefInspectionsCount = new System.Data.DataColumn("SOPPartyChiefInspectionsCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPPartyChiefInspectionsCount);
                this.columnManHours = new System.Data.DataColumn("ManHours", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManHours);
                this.columnProjectManHours = new System.Data.DataColumn("ProjectManHours", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectManHours);
                this.columnYesNoSafetyEventListsRowId = new System.Data.DataColumn("YesNoSafetyEventListsRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnYesNoSafetyEventListsRowId);
                this.columnrowguid = new System.Data.DataColumn("rowguid", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowguid);
                this.columnMasterRowId = new System.Data.DataColumn("MasterRowId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new System.Data.DataColumn("DateCreated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new System.Data.DataColumn("CreatedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new System.Data.DataColumn("DateChanged", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new System.Data.DataColumn("ChangedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new System.Data.DataColumn("DateDeleted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new System.Data.DataColumn("DeletedBy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new System.Data.DataColumn("SwitchFree1", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new System.Data.DataColumn("SwitchFree2", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new System.Data.DataColumn("SwitchFree3", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new System.Data.DataColumn("DateTimeFree1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new System.Data.DataColumn("DateTimeFree2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new System.Data.DataColumn("DateTimeFree3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new System.Data.DataColumn("TextFree1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new System.Data.DataColumn("TextFree2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new System.Data.DataColumn("TextFree3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new System.Data.DataColumn("IntFree1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new System.Data.DataColumn("IntFree2", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new System.Data.DataColumn("IntFree3", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree3);
                this.columnHeliActivitiesCount = new System.Data.DataColumn("HeliActivitiesCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeliActivitiesCount);
                this.columnOtherActivitiesCount = new System.Data.DataColumn("OtherActivitiesCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherActivitiesCount);
                this.columnnTextFree1 = new System.Data.DataColumn("nTextFree1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree1);
                this.columnnTextFree2 = new System.Data.DataColumn("nTextFree2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree2);
                this.columnnTextFree3 = new System.Data.DataColumn("nTextFree3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree3);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnDaysReportRowId}, true));
                this.columnDaysReportRowId.AutoIncrement = true;
                this.columnDaysReportRowId.AllowDBNull = false;
                this.columnDaysReportRowId.ReadOnly = true;
                this.columnDaysReportRowId.Unique = true;
                this.columnReferenceId.MaxLength = 50;
                this.columnComment.MaxLength = 1073741823;
                this.columnShareInfoPC.MaxLength = 1073741823;
                this.columnShareInfoNav.MaxLength = 1073741823;
                this.columnShareInfoTech.MaxLength = 1073741823;
                this.columnShareInfoMech.MaxLength = 1073741823;
                this.columnTextFree1.MaxLength = 200;
                this.columnTextFree2.MaxLength = 200;
                this.columnTextFree3.MaxLength = 200;
                this.columnnTextFree1.MaxLength = 1073741823;
                this.columnnTextFree2.MaxLength = 1073741823;
                this.columnnTextFree3.MaxLength = 1073741823;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADaysReportRow NewGADaysReportRow() {
                return ((GADaysReportRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new GADaysReportRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(GADaysReportRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GADaysReportRowChanged != null)) {
                    this.GADaysReportRowChanged(this, new GADaysReportRowChangeEvent(((GADaysReportRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GADaysReportRowChanging != null)) {
                    this.GADaysReportRowChanging(this, new GADaysReportRowChangeEvent(((GADaysReportRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GADaysReportRowDeleted != null)) {
                    this.GADaysReportRowDeleted(this, new GADaysReportRowChangeEvent(((GADaysReportRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GADaysReportRowDeleting != null)) {
                    this.GADaysReportRowDeleting(this, new GADaysReportRowChangeEvent(((GADaysReportRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGADaysReportRow(GADaysReportRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DaysReportDS ds = new DaysReportDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GADaysReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GADaysReportRow : System.Data.DataRow {
            
            private GADaysReportDataTable tableGADaysReport;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GADaysReportRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGADaysReport = ((GADaysReportDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DaysReportRowId {
                get {
                    return ((int)(this[this.tableGADaysReport.DaysReportRowIdColumn]));
                }
                set {
                    this[this.tableGADaysReport.DaysReportRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.ReferenceIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ReferenceId\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ReferenceIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADaysReport.DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Date\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CetaceansCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.CetaceansCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CetaceansCount\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.CetaceansCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CrewBoatActivitiesCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.CrewBoatActivitiesCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CrewBoatActivitiesCount\' in table \'GADaysReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.CrewBoatActivitiesCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CrewSafetyMeetingsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.CrewSafetyMeetingsCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CrewSafetyMeetingsCount\' in table \'GADaysReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.CrewSafetyMeetingsCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ToolboxMeetingsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.ToolboxMeetingsCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ToolboxMeetingsCount\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ToolboxMeetingsCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SafetyDrillsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.SafetyDrillsCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SafetyDrillsCount\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.SafetyDrillsCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DrillHours {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.DrillHoursColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DrillHours\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DrillHoursColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reporter {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.ReporterColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Reporter\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ReporterColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.CommentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Comment\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.CommentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DrillsOther {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.DrillsOtherColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DrillsOther\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DrillsOtherColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DrillsManOverBoard {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.DrillsManOverBoardColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DrillsManOverBoard\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DrillsManOverBoardColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DrillsFirstAid {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.DrillsFirstAidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DrillsFirstAid\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DrillsFirstAidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DrillsFire {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.DrillsFireColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DrillsFire\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DrillsFireColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DrillsLifeBoat {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.DrillsLifeBoatColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DrillsLifeBoat\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DrillsLifeBoatColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShareInfoPC {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.ShareInfoPCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ShareInfoPC\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ShareInfoPCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShareInfoNav {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.ShareInfoNavColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ShareInfoNav\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ShareInfoNavColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShareInfoTech {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.ShareInfoTechColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ShareInfoTech\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ShareInfoTechColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShareInfoMech {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.ShareInfoMechColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ShareInfoMech\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ShareInfoMechColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SeismicPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.SeismicPersonnelCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SeismicPersonnelCount\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.SeismicPersonnelCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MarinePersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.MarinePersonnelCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MarinePersonnelCount\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.MarinePersonnelCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ThirdPartyPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.ThirdPartyPersonnelCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ThirdPartyPersonnelCount\' in table \'GADaysReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ThirdPartyPersonnelCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OfficePersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.OfficePersonnelCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OfficePersonnelCount\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.OfficePersonnelCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.ClientPersonnelCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ClientPersonnelCount\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ClientPersonnelCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaritimeIncidentAndIllnessCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.MaritimeIncidentAndIllnessCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MaritimeIncidentAndIllnessCount\' in table \'GADaysReport\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.MaritimeIncidentAndIllnessCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnIncidentAndIllnessCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.OwnIncidentAndIllnessCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OwnIncidentAndIllnessCount\' in table \'GADaysReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.OwnIncidentAndIllnessCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HIPCardUnsafeActsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.HIPCardUnsafeActsCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HIPCardUnsafeActsCount\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.HIPCardUnsafeActsCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HIPCardNearMissesCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.HIPCardNearMissesCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HIPCardNearMissesCount\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.HIPCardNearMissesCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOPDepartmentalInspectionsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.SOPDepartmentalInspectionsCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPDepartmentalInspectionsCount\' in table \'GADaysReport\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.SOPDepartmentalInspectionsCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOPCrossDepartmentalInspectionsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.SOPCrossDepartmentalInspectionsCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPCrossDepartmentalInspectionsCount\' in table \'GADaysRepor" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.SOPCrossDepartmentalInspectionsCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOPPartyChiefInspectionsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.SOPPartyChiefInspectionsCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOPPartyChiefInspectionsCount\' in table \'GADaysReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.SOPPartyChiefInspectionsCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ManHours {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.ManHoursColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ManHours\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ManHoursColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectManHours {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.ProjectManHoursColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ProjectManHours\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ProjectManHoursColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YesNoSafetyEventListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.YesNoSafetyEventListsRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'YesNoSafetyEventListsRowId\' in table \'GADaysReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.YesNoSafetyEventListsRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid rowguid {
                get {
                    try {
                        return ((System.Guid)(this[this.tableGADaysReport.rowguidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rowguid\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.rowguidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.MasterRowIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MasterRowId\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.MasterRowIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADaysReport.DateCreatedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateCreated\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DateCreatedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.CreatedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.CreatedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADaysReport.DateChangedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateChanged\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DateChangedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.ChangedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.ChangedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADaysReport.DateDeletedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateDeleted\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DateDeletedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.DeletedByColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DeletedByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGADaysReport.SwitchFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree1\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.SwitchFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGADaysReport.SwitchFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree2\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.SwitchFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGADaysReport.SwitchFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwitchFree3\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.SwitchFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADaysReport.DateTimeFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree1\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DateTimeFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADaysReport.DateTimeFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree2\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DateTimeFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGADaysReport.DateTimeFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DateTimeFree3\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.DateTimeFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.TextFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree1\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.TextFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.TextFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree2\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.TextFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.TextFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TextFree3\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.TextFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.IntFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree1\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.IntFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.IntFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree2\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.IntFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.IntFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IntFree3\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.IntFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HeliActivitiesCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.HeliActivitiesCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HeliActivitiesCount\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.HeliActivitiesCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OtherActivitiesCount {
                get {
                    try {
                        return ((int)(this[this.tableGADaysReport.OtherActivitiesCountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OtherActivitiesCount\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.OtherActivitiesCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.nTextFree1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nTextFree1\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.nTextFree1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.nTextFree2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nTextFree2\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.nTextFree2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGADaysReport.nTextFree3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nTextFree3\' in table \'GADaysReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADaysReport.nTextFree3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceIdNull() {
                return this.IsNull(this.tableGADaysReport.ReferenceIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceIdNull() {
                this[this.tableGADaysReport.ReferenceIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableGADaysReport.DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableGADaysReport.DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCetaceansCountNull() {
                return this.IsNull(this.tableGADaysReport.CetaceansCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCetaceansCountNull() {
                this[this.tableGADaysReport.CetaceansCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrewBoatActivitiesCountNull() {
                return this.IsNull(this.tableGADaysReport.CrewBoatActivitiesCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrewBoatActivitiesCountNull() {
                this[this.tableGADaysReport.CrewBoatActivitiesCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrewSafetyMeetingsCountNull() {
                return this.IsNull(this.tableGADaysReport.CrewSafetyMeetingsCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrewSafetyMeetingsCountNull() {
                this[this.tableGADaysReport.CrewSafetyMeetingsCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToolboxMeetingsCountNull() {
                return this.IsNull(this.tableGADaysReport.ToolboxMeetingsCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToolboxMeetingsCountNull() {
                this[this.tableGADaysReport.ToolboxMeetingsCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyDrillsCountNull() {
                return this.IsNull(this.tableGADaysReport.SafetyDrillsCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyDrillsCountNull() {
                this[this.tableGADaysReport.SafetyDrillsCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrillHoursNull() {
                return this.IsNull(this.tableGADaysReport.DrillHoursColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrillHoursNull() {
                this[this.tableGADaysReport.DrillHoursColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReporterNull() {
                return this.IsNull(this.tableGADaysReport.ReporterColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReporterNull() {
                this[this.tableGADaysReport.ReporterColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableGADaysReport.CommentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableGADaysReport.CommentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrillsOtherNull() {
                return this.IsNull(this.tableGADaysReport.DrillsOtherColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrillsOtherNull() {
                this[this.tableGADaysReport.DrillsOtherColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrillsManOverBoardNull() {
                return this.IsNull(this.tableGADaysReport.DrillsManOverBoardColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrillsManOverBoardNull() {
                this[this.tableGADaysReport.DrillsManOverBoardColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrillsFirstAidNull() {
                return this.IsNull(this.tableGADaysReport.DrillsFirstAidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrillsFirstAidNull() {
                this[this.tableGADaysReport.DrillsFirstAidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrillsFireNull() {
                return this.IsNull(this.tableGADaysReport.DrillsFireColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrillsFireNull() {
                this[this.tableGADaysReport.DrillsFireColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrillsLifeBoatNull() {
                return this.IsNull(this.tableGADaysReport.DrillsLifeBoatColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrillsLifeBoatNull() {
                this[this.tableGADaysReport.DrillsLifeBoatColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShareInfoPCNull() {
                return this.IsNull(this.tableGADaysReport.ShareInfoPCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShareInfoPCNull() {
                this[this.tableGADaysReport.ShareInfoPCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShareInfoNavNull() {
                return this.IsNull(this.tableGADaysReport.ShareInfoNavColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShareInfoNavNull() {
                this[this.tableGADaysReport.ShareInfoNavColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShareInfoTechNull() {
                return this.IsNull(this.tableGADaysReport.ShareInfoTechColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShareInfoTechNull() {
                this[this.tableGADaysReport.ShareInfoTechColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShareInfoMechNull() {
                return this.IsNull(this.tableGADaysReport.ShareInfoMechColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShareInfoMechNull() {
                this[this.tableGADaysReport.ShareInfoMechColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeismicPersonnelCountNull() {
                return this.IsNull(this.tableGADaysReport.SeismicPersonnelCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeismicPersonnelCountNull() {
                this[this.tableGADaysReport.SeismicPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarinePersonnelCountNull() {
                return this.IsNull(this.tableGADaysReport.MarinePersonnelCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarinePersonnelCountNull() {
                this[this.tableGADaysReport.MarinePersonnelCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThirdPartyPersonnelCountNull() {
                return this.IsNull(this.tableGADaysReport.ThirdPartyPersonnelCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThirdPartyPersonnelCountNull() {
                this[this.tableGADaysReport.ThirdPartyPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfficePersonnelCountNull() {
                return this.IsNull(this.tableGADaysReport.OfficePersonnelCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfficePersonnelCountNull() {
                this[this.tableGADaysReport.OfficePersonnelCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientPersonnelCountNull() {
                return this.IsNull(this.tableGADaysReport.ClientPersonnelCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientPersonnelCountNull() {
                this[this.tableGADaysReport.ClientPersonnelCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritimeIncidentAndIllnessCountNull() {
                return this.IsNull(this.tableGADaysReport.MaritimeIncidentAndIllnessCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritimeIncidentAndIllnessCountNull() {
                this[this.tableGADaysReport.MaritimeIncidentAndIllnessCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnIncidentAndIllnessCountNull() {
                return this.IsNull(this.tableGADaysReport.OwnIncidentAndIllnessCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnIncidentAndIllnessCountNull() {
                this[this.tableGADaysReport.OwnIncidentAndIllnessCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIPCardUnsafeActsCountNull() {
                return this.IsNull(this.tableGADaysReport.HIPCardUnsafeActsCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIPCardUnsafeActsCountNull() {
                this[this.tableGADaysReport.HIPCardUnsafeActsCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIPCardNearMissesCountNull() {
                return this.IsNull(this.tableGADaysReport.HIPCardNearMissesCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIPCardNearMissesCountNull() {
                this[this.tableGADaysReport.HIPCardNearMissesCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPDepartmentalInspectionsCountNull() {
                return this.IsNull(this.tableGADaysReport.SOPDepartmentalInspectionsCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPDepartmentalInspectionsCountNull() {
                this[this.tableGADaysReport.SOPDepartmentalInspectionsCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPCrossDepartmentalInspectionsCountNull() {
                return this.IsNull(this.tableGADaysReport.SOPCrossDepartmentalInspectionsCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPCrossDepartmentalInspectionsCountNull() {
                this[this.tableGADaysReport.SOPCrossDepartmentalInspectionsCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPPartyChiefInspectionsCountNull() {
                return this.IsNull(this.tableGADaysReport.SOPPartyChiefInspectionsCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPPartyChiefInspectionsCountNull() {
                this[this.tableGADaysReport.SOPPartyChiefInspectionsCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManHoursNull() {
                return this.IsNull(this.tableGADaysReport.ManHoursColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManHoursNull() {
                this[this.tableGADaysReport.ManHoursColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectManHoursNull() {
                return this.IsNull(this.tableGADaysReport.ProjectManHoursColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectManHoursNull() {
                this[this.tableGADaysReport.ProjectManHoursColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYesNoSafetyEventListsRowIdNull() {
                return this.IsNull(this.tableGADaysReport.YesNoSafetyEventListsRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYesNoSafetyEventListsRowIdNull() {
                this[this.tableGADaysReport.YesNoSafetyEventListsRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGADaysReport.rowguidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrowguidNull() {
                this[this.tableGADaysReport.rowguidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGADaysReport.MasterRowIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterRowIdNull() {
                this[this.tableGADaysReport.MasterRowIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGADaysReport.DateCreatedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateCreatedNull() {
                this[this.tableGADaysReport.DateCreatedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGADaysReport.CreatedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableGADaysReport.CreatedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGADaysReport.DateChangedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangedNull() {
                this[this.tableGADaysReport.DateChangedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGADaysReport.ChangedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableGADaysReport.ChangedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGADaysReport.DateDeletedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateDeletedNull() {
                this[this.tableGADaysReport.DateDeletedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGADaysReport.DeletedByColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableGADaysReport.DeletedByColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGADaysReport.SwitchFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree1Null() {
                this[this.tableGADaysReport.SwitchFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGADaysReport.SwitchFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree2Null() {
                this[this.tableGADaysReport.SwitchFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGADaysReport.SwitchFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree3Null() {
                this[this.tableGADaysReport.SwitchFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGADaysReport.DateTimeFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree1Null() {
                this[this.tableGADaysReport.DateTimeFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGADaysReport.DateTimeFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree2Null() {
                this[this.tableGADaysReport.DateTimeFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGADaysReport.DateTimeFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree3Null() {
                this[this.tableGADaysReport.DateTimeFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGADaysReport.TextFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree1Null() {
                this[this.tableGADaysReport.TextFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGADaysReport.TextFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree2Null() {
                this[this.tableGADaysReport.TextFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGADaysReport.TextFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree3Null() {
                this[this.tableGADaysReport.TextFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGADaysReport.IntFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree1Null() {
                this[this.tableGADaysReport.IntFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGADaysReport.IntFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree2Null() {
                this[this.tableGADaysReport.IntFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGADaysReport.IntFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree3Null() {
                this[this.tableGADaysReport.IntFree3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeliActivitiesCountNull() {
                return this.IsNull(this.tableGADaysReport.HeliActivitiesCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeliActivitiesCountNull() {
                this[this.tableGADaysReport.HeliActivitiesCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherActivitiesCountNull() {
                return this.IsNull(this.tableGADaysReport.OtherActivitiesCountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherActivitiesCountNull() {
                this[this.tableGADaysReport.OtherActivitiesCountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree1Null() {
                return this.IsNull(this.tableGADaysReport.nTextFree1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree1Null() {
                this[this.tableGADaysReport.nTextFree1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree2Null() {
                return this.IsNull(this.tableGADaysReport.nTextFree2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree2Null() {
                this[this.tableGADaysReport.nTextFree2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree3Null() {
                return this.IsNull(this.tableGADaysReport.nTextFree3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree3Null() {
                this[this.tableGADaysReport.nTextFree3Column] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GADaysReportRowChangeEvent : System.EventArgs {
            
            private GADaysReportRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADaysReportRowChangeEvent(GADaysReportRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADaysReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GASystem.DataModel.DaysReportDSTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GADaysReportTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GADaysReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GADaysReport";
            tableMapping.ColumnMappings.Add("DaysReportRowId", "DaysReportRowId");
            tableMapping.ColumnMappings.Add("ReferenceId", "ReferenceId");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("CetaceansCount", "CetaceansCount");
            tableMapping.ColumnMappings.Add("CrewBoatActivitiesCount", "CrewBoatActivitiesCount");
            tableMapping.ColumnMappings.Add("CrewSafetyMeetingsCount", "CrewSafetyMeetingsCount");
            tableMapping.ColumnMappings.Add("ToolboxMeetingsCount", "ToolboxMeetingsCount");
            tableMapping.ColumnMappings.Add("SafetyDrillsCount", "SafetyDrillsCount");
            tableMapping.ColumnMappings.Add("DrillHours", "DrillHours");
            tableMapping.ColumnMappings.Add("Reporter", "Reporter");
            tableMapping.ColumnMappings.Add("Comment", "Comment");
            tableMapping.ColumnMappings.Add("DrillsOther", "DrillsOther");
            tableMapping.ColumnMappings.Add("DrillsManOverBoard", "DrillsManOverBoard");
            tableMapping.ColumnMappings.Add("DrillsFirstAid", "DrillsFirstAid");
            tableMapping.ColumnMappings.Add("DrillsFire", "DrillsFire");
            tableMapping.ColumnMappings.Add("DrillsLifeBoat", "DrillsLifeBoat");
            tableMapping.ColumnMappings.Add("ShareInfoPC", "ShareInfoPC");
            tableMapping.ColumnMappings.Add("ShareInfoNav", "ShareInfoNav");
            tableMapping.ColumnMappings.Add("ShareInfoTech", "ShareInfoTech");
            tableMapping.ColumnMappings.Add("ShareInfoMech", "ShareInfoMech");
            tableMapping.ColumnMappings.Add("SeismicPersonnelCount", "SeismicPersonnelCount");
            tableMapping.ColumnMappings.Add("MarinePersonnelCount", "MarinePersonnelCount");
            tableMapping.ColumnMappings.Add("ThirdPartyPersonnelCount", "ThirdPartyPersonnelCount");
            tableMapping.ColumnMappings.Add("OfficePersonnelCount", "OfficePersonnelCount");
            tableMapping.ColumnMappings.Add("ClientPersonnelCount", "ClientPersonnelCount");
            tableMapping.ColumnMappings.Add("MaritimeIncidentAndIllnessCount", "MaritimeIncidentAndIllnessCount");
            tableMapping.ColumnMappings.Add("OwnIncidentAndIllnessCount", "OwnIncidentAndIllnessCount");
            tableMapping.ColumnMappings.Add("HIPCardUnsafeActsCount", "HIPCardUnsafeActsCount");
            tableMapping.ColumnMappings.Add("HIPCardNearMissesCount", "HIPCardNearMissesCount");
            tableMapping.ColumnMappings.Add("SOPDepartmentalInspectionsCount", "SOPDepartmentalInspectionsCount");
            tableMapping.ColumnMappings.Add("SOPCrossDepartmentalInspectionsCount", "SOPCrossDepartmentalInspectionsCount");
            tableMapping.ColumnMappings.Add("SOPPartyChiefInspectionsCount", "SOPPartyChiefInspectionsCount");
            tableMapping.ColumnMappings.Add("ManHours", "ManHours");
            tableMapping.ColumnMappings.Add("ProjectManHours", "ProjectManHours");
            tableMapping.ColumnMappings.Add("YesNoSafetyEventListsRowId", "YesNoSafetyEventListsRowId");
            tableMapping.ColumnMappings.Add("rowguid", "rowguid");
            tableMapping.ColumnMappings.Add("MasterRowId", "MasterRowId");
            tableMapping.ColumnMappings.Add("DateCreated", "DateCreated");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("DateChanged", "DateChanged");
            tableMapping.ColumnMappings.Add("ChangedBy", "ChangedBy");
            tableMapping.ColumnMappings.Add("DateDeleted", "DateDeleted");
            tableMapping.ColumnMappings.Add("DeletedBy", "DeletedBy");
            tableMapping.ColumnMappings.Add("SwitchFree1", "SwitchFree1");
            tableMapping.ColumnMappings.Add("SwitchFree2", "SwitchFree2");
            tableMapping.ColumnMappings.Add("SwitchFree3", "SwitchFree3");
            tableMapping.ColumnMappings.Add("DateTimeFree1", "DateTimeFree1");
            tableMapping.ColumnMappings.Add("DateTimeFree2", "DateTimeFree2");
            tableMapping.ColumnMappings.Add("DateTimeFree3", "DateTimeFree3");
            tableMapping.ColumnMappings.Add("TextFree1", "TextFree1");
            tableMapping.ColumnMappings.Add("TextFree2", "TextFree2");
            tableMapping.ColumnMappings.Add("TextFree3", "TextFree3");
            tableMapping.ColumnMappings.Add("IntFree1", "IntFree1");
            tableMapping.ColumnMappings.Add("IntFree2", "IntFree2");
            tableMapping.ColumnMappings.Add("IntFree3", "IntFree3");
            tableMapping.ColumnMappings.Add("HeliActivitiesCount", "HeliActivitiesCount");
            tableMapping.ColumnMappings.Add("OtherActivitiesCount", "OtherActivitiesCount");
            tableMapping.ColumnMappings.Add("nTextFree1", "nTextFree1");
            tableMapping.ColumnMappings.Add("nTextFree2", "nTextFree2");
            tableMapping.ColumnMappings.Add("nTextFree3", "nTextFree3");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[GADaysReport] WHERE (([DaysReportRowId] = @Original_DaysReport" +
                "RowId) AND ((@IsNull_ReferenceId = 1 AND [ReferenceId] IS NULL) OR ([ReferenceId" +
                "] = @Original_ReferenceId)) AND ((@IsNull_Date = 1 AND [Date] IS NULL) OR ([Date" +
                "] = @Original_Date)) AND ((@IsNull_CetaceansCount = 1 AND [CetaceansCount] IS NU" +
                "LL) OR ([CetaceansCount] = @Original_CetaceansCount)) AND ((@IsNull_CrewBoatActi" +
                "vitiesCount = 1 AND [CrewBoatActivitiesCount] IS NULL) OR ([CrewBoatActivitiesCo" +
                "unt] = @Original_CrewBoatActivitiesCount)) AND ((@IsNull_CrewSafetyMeetingsCount" +
                " = 1 AND [CrewSafetyMeetingsCount] IS NULL) OR ([CrewSafetyMeetingsCount] = @Ori" +
                "ginal_CrewSafetyMeetingsCount)) AND ((@IsNull_ToolboxMeetingsCount = 1 AND [Tool" +
                "boxMeetingsCount] IS NULL) OR ([ToolboxMeetingsCount] = @Original_ToolboxMeeting" +
                "sCount)) AND ((@IsNull_SafetyDrillsCount = 1 AND [SafetyDrillsCount] IS NULL) OR" +
                " ([SafetyDrillsCount] = @Original_SafetyDrillsCount)) AND ((@IsNull_DrillHours =" +
                " 1 AND [DrillHours] IS NULL) OR ([DrillHours] = @Original_DrillHours)) AND ((@Is" +
                "Null_Reporter = 1 AND [Reporter] IS NULL) OR ([Reporter] = @Original_Reporter)) " +
                "AND ((@IsNull_DrillsOther = 1 AND [DrillsOther] IS NULL) OR ([DrillsOther] = @Or" +
                "iginal_DrillsOther)) AND ((@IsNull_DrillsManOverBoard = 1 AND [DrillsManOverBoar" +
                "d] IS NULL) OR ([DrillsManOverBoard] = @Original_DrillsManOverBoard)) AND ((@IsN" +
                "ull_DrillsFirstAid = 1 AND [DrillsFirstAid] IS NULL) OR ([DrillsFirstAid] = @Ori" +
                "ginal_DrillsFirstAid)) AND ((@IsNull_DrillsFire = 1 AND [DrillsFire] IS NULL) OR" +
                " ([DrillsFire] = @Original_DrillsFire)) AND ((@IsNull_DrillsLifeBoat = 1 AND [Dr" +
                "illsLifeBoat] IS NULL) OR ([DrillsLifeBoat] = @Original_DrillsLifeBoat)) AND ((@" +
                "IsNull_SeismicPersonnelCount = 1 AND [SeismicPersonnelCount] IS NULL) OR ([Seism" +
                "icPersonnelCount] = @Original_SeismicPersonnelCount)) AND ((@IsNull_MarinePerson" +
                "nelCount = 1 AND [MarinePersonnelCount] IS NULL) OR ([MarinePersonnelCount] = @O" +
                "riginal_MarinePersonnelCount)) AND ((@IsNull_ThirdPartyPersonnelCount = 1 AND [T" +
                "hirdPartyPersonnelCount] IS NULL) OR ([ThirdPartyPersonnelCount] = @Original_Thi" +
                "rdPartyPersonnelCount)) AND ((@IsNull_OfficePersonnelCount = 1 AND [OfficePerson" +
                "nelCount] IS NULL) OR ([OfficePersonnelCount] = @Original_OfficePersonnelCount))" +
                " AND ((@IsNull_ClientPersonnelCount = 1 AND [ClientPersonnelCount] IS NULL) OR (" +
                "[ClientPersonnelCount] = @Original_ClientPersonnelCount)) AND ((@IsNull_Maritime" +
                "IncidentAndIllnessCount = 1 AND [MaritimeIncidentAndIllnessCount] IS NULL) OR ([" +
                "MaritimeIncidentAndIllnessCount] = @Original_MaritimeIncidentAndIllnessCount)) A" +
                "ND ((@IsNull_OwnIncidentAndIllnessCount = 1 AND [OwnIncidentAndIllnessCount] IS " +
                "NULL) OR ([OwnIncidentAndIllnessCount] = @Original_OwnIncidentAndIllnessCount)) " +
                "AND ((@IsNull_HIPCardUnsafeActsCount = 1 AND [HIPCardUnsafeActsCount] IS NULL) O" +
                "R ([HIPCardUnsafeActsCount] = @Original_HIPCardUnsafeActsCount)) AND ((@IsNull_H" +
                "IPCardNearMissesCount = 1 AND [HIPCardNearMissesCount] IS NULL) OR ([HIPCardNear" +
                "MissesCount] = @Original_HIPCardNearMissesCount)) AND ((@IsNull_SOPDepartmentalI" +
                "nspectionsCount = 1 AND [SOPDepartmentalInspectionsCount] IS NULL) OR ([SOPDepar" +
                "tmentalInspectionsCount] = @Original_SOPDepartmentalInspectionsCount)) AND ((@Is" +
                "Null_SOPCrossDepartmentalInspectionsCount = 1 AND [SOPCrossDepartmentalInspectio" +
                "nsCount] IS NULL) OR ([SOPCrossDepartmentalInspectionsCount] = @Original_SOPCros" +
                "sDepartmentalInspectionsCount)) AND ((@IsNull_SOPPartyChiefInspectionsCount = 1 " +
                "AND [SOPPartyChiefInspectionsCount] IS NULL) OR ([SOPPartyChiefInspectionsCount]" +
                " = @Original_SOPPartyChiefInspectionsCount)) AND ((@IsNull_ManHours = 1 AND [Man" +
                "Hours] IS NULL) OR ([ManHours] = @Original_ManHours)) AND ((@IsNull_ProjectManHo" +
                "urs = 1 AND [ProjectManHours] IS NULL) OR ([ProjectManHours] = @Original_Project" +
                "ManHours)) AND ((@IsNull_YesNoSafetyEventListsRowId = 1 AND [YesNoSafetyEventLis" +
                "tsRowId] IS NULL) OR ([YesNoSafetyEventListsRowId] = @Original_YesNoSafetyEventL" +
                "istsRowId)) AND ([rowguid] = @Original_rowguid) AND ((@IsNull_MasterRowId = 1 AN" +
                "D [MasterRowId] IS NULL) OR ([MasterRowId] = @Original_MasterRowId)) AND ((@IsNu" +
                "ll_DateCreated = 1 AND [DateCreated] IS NULL) OR ([DateCreated] = @Original_Date" +
                "Created)) AND ((@IsNull_CreatedBy = 1 AND [CreatedBy] IS NULL) OR ([CreatedBy] =" +
                " @Original_CreatedBy)) AND ((@IsNull_DateChanged = 1 AND [DateChanged] IS NULL) " +
                "OR ([DateChanged] = @Original_DateChanged)) AND ((@IsNull_ChangedBy = 1 AND [Cha" +
                "ngedBy] IS NULL) OR ([ChangedBy] = @Original_ChangedBy)) AND ((@IsNull_DateDelet" +
                "ed = 1 AND [DateDeleted] IS NULL) OR ([DateDeleted] = @Original_DateDeleted)) AN" +
                "D ((@IsNull_DeletedBy = 1 AND [DeletedBy] IS NULL) OR ([DeletedBy] = @Original_D" +
                "eletedBy)) AND ((@IsNull_SwitchFree1 = 1 AND [SwitchFree1] IS NULL) OR ([SwitchF" +
                "ree1] = @Original_SwitchFree1)) AND ((@IsNull_SwitchFree2 = 1 AND [SwitchFree2] " +
                "IS NULL) OR ([SwitchFree2] = @Original_SwitchFree2)) AND ((@IsNull_SwitchFree3 =" +
                " 1 AND [SwitchFree3] IS NULL) OR ([SwitchFree3] = @Original_SwitchFree3)) AND ((" +
                "@IsNull_DateTimeFree1 = 1 AND [DateTimeFree1] IS NULL) OR ([DateTimeFree1] = @Or" +
                "iginal_DateTimeFree1)) AND ((@IsNull_DateTimeFree2 = 1 AND [DateTimeFree2] IS NU" +
                "LL) OR ([DateTimeFree2] = @Original_DateTimeFree2)) AND ((@IsNull_DateTimeFree3 " +
                "= 1 AND [DateTimeFree3] IS NULL) OR ([DateTimeFree3] = @Original_DateTimeFree3))" +
                " AND ((@IsNull_TextFree1 = 1 AND [TextFree1] IS NULL) OR ([TextFree1] = @Origina" +
                "l_TextFree1)) AND ((@IsNull_TextFree2 = 1 AND [TextFree2] IS NULL) OR ([TextFree" +
                "2] = @Original_TextFree2)) AND ((@IsNull_TextFree3 = 1 AND [TextFree3] IS NULL) " +
                "OR ([TextFree3] = @Original_TextFree3)) AND ((@IsNull_IntFree1 = 1 AND [IntFree1" +
                "] IS NULL) OR ([IntFree1] = @Original_IntFree1)) AND ((@IsNull_IntFree2 = 1 AND " +
                "[IntFree2] IS NULL) OR ([IntFree2] = @Original_IntFree2)) AND ((@IsNull_IntFree3" +
                " = 1 AND [IntFree3] IS NULL) OR ([IntFree3] = @Original_IntFree3)) AND ((@IsNull" +
                "_HeliActivitiesCount = 1 AND [HeliActivitiesCount] IS NULL) OR ([HeliActivitiesC" +
                "ount] = @Original_HeliActivitiesCount)) AND ((@IsNull_OtherActivitiesCount = 1 A" +
                "ND [OtherActivitiesCount] IS NULL) OR ([OtherActivitiesCount] = @Original_OtherA" +
                "ctivitiesCount)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DaysReportRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DaysReportRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ReferenceId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ReferenceId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ReferenceId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CetaceansCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CetaceansCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CetaceansCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CetaceansCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CrewBoatActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewBoatActivitiesCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CrewBoatActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewBoatActivitiesCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CrewSafetyMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewSafetyMeetingsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CrewSafetyMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewSafetyMeetingsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ToolboxMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ToolboxMeetingsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ToolboxMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ToolboxMeetingsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SafetyDrillsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyDrillsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SafetyDrillsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyDrillsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DrillHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillHours", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DrillHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillHours", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Reporter", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Reporter", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Reporter", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Reporter", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DrillsOther", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsOther", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DrillsOther", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsOther", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DrillsManOverBoard", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsManOverBoard", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DrillsManOverBoard", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsManOverBoard", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DrillsFirstAid", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsFirstAid", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DrillsFirstAid", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsFirstAid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DrillsFire", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsFire", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DrillsFire", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsFire", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DrillsLifeBoat", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsLifeBoat", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DrillsLifeBoat", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsLifeBoat", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SeismicPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SeismicPersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SeismicPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SeismicPersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MarinePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MarinePersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MarinePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MarinePersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ThirdPartyPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ThirdPartyPersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ThirdPartyPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ThirdPartyPersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OfficePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OfficePersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OfficePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OfficePersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ClientPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ClientPersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ClientPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ClientPersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MaritimeIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MaritimeIncidentAndIllnessCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaritimeIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MaritimeIncidentAndIllnessCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OwnIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OwnIncidentAndIllnessCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OwnIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OwnIncidentAndIllnessCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HIPCardUnsafeActsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardUnsafeActsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HIPCardUnsafeActsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardUnsafeActsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HIPCardNearMissesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardNearMissesCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HIPCardNearMissesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardNearMissesCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPDepartmentalInspectionsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPDepartmentalInspectionsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPCrossDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPCrossDepartmentalInspectionsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPCrossDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPCrossDepartmentalInspectionsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPPartyChiefInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPartyChiefInspectionsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPPartyChiefInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPartyChiefInspectionsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManHours", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManHours", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ProjectManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectManHours", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ProjectManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectManHours", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_YesNoSafetyEventListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "YesNoSafetyEventListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_YesNoSafetyEventListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "YesNoSafetyEventListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateCreated", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChanged", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateDeleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HeliActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HeliActivitiesCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HeliActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HeliActivitiesCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OtherActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OtherActivitiesCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OtherActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OtherActivitiesCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[GADaysReport] ([ReferenceId], [Date], [CetaceansCount], [CrewB" +
                "oatActivitiesCount], [CrewSafetyMeetingsCount], [ToolboxMeetingsCount], [SafetyD" +
                "rillsCount], [DrillHours], [Reporter], [Comment], [DrillsOther], [DrillsManOverB" +
                "oard], [DrillsFirstAid], [DrillsFire], [DrillsLifeBoat], [ShareInfoPC], [ShareIn" +
                "foNav], [ShareInfoTech], [ShareInfoMech], [SeismicPersonnelCount], [MarinePerson" +
                "nelCount], [ThirdPartyPersonnelCount], [OfficePersonnelCount], [ClientPersonnelC" +
                "ount], [MaritimeIncidentAndIllnessCount], [OwnIncidentAndIllnessCount], [HIPCard" +
                "UnsafeActsCount], [HIPCardNearMissesCount], [SOPDepartmentalInspectionsCount], [" +
                "SOPCrossDepartmentalInspectionsCount], [SOPPartyChiefInspectionsCount], [ManHour" +
                "s], [ProjectManHours], [YesNoSafetyEventListsRowId], [rowguid], [MasterRowId], [" +
                "DateCreated], [CreatedBy], [DateChanged], [ChangedBy], [DateDeleted], [DeletedBy" +
                "], [SwitchFree1], [SwitchFree2], [SwitchFree3], [DateTimeFree1], [DateTimeFree2]" +
                ", [DateTimeFree3], [TextFree1], [TextFree2], [TextFree3], [IntFree1], [IntFree2]" +
                ", [IntFree3], [HeliActivitiesCount], [OtherActivitiesCount], [nTextFree1], [nTex" +
                "tFree2], [nTextFree3]) VALUES (@ReferenceId, @Date, @CetaceansCount, @CrewBoatAc" +
                "tivitiesCount, @CrewSafetyMeetingsCount, @ToolboxMeetingsCount, @SafetyDrillsCou" +
                "nt, @DrillHours, @Reporter, @Comment, @DrillsOther, @DrillsManOverBoard, @Drills" +
                "FirstAid, @DrillsFire, @DrillsLifeBoat, @ShareInfoPC, @ShareInfoNav, @ShareInfoT" +
                "ech, @ShareInfoMech, @SeismicPersonnelCount, @MarinePersonnelCount, @ThirdPartyP" +
                "ersonnelCount, @OfficePersonnelCount, @ClientPersonnelCount, @MaritimeIncidentAn" +
                "dIllnessCount, @OwnIncidentAndIllnessCount, @HIPCardUnsafeActsCount, @HIPCardNea" +
                "rMissesCount, @SOPDepartmentalInspectionsCount, @SOPCrossDepartmentalInspections" +
                "Count, @SOPPartyChiefInspectionsCount, @ManHours, @ProjectManHours, @YesNoSafety" +
                "EventListsRowId, @rowguid, @MasterRowId, @DateCreated, @CreatedBy, @DateChanged," +
                " @ChangedBy, @DateDeleted, @DeletedBy, @SwitchFree1, @SwitchFree2, @SwitchFree3," +
                " @DateTimeFree1, @DateTimeFree2, @DateTimeFree3, @TextFree1, @TextFree2, @TextFr" +
                "ee3, @IntFree1, @IntFree2, @IntFree3, @HeliActivitiesCount, @OtherActivitiesCoun" +
                "t, @nTextFree1, @nTextFree2, @nTextFree3);\r\nSELECT DaysReportRowId, ReferenceId," +
                " Date, CetaceansCount, CrewBoatActivitiesCount, CrewSafetyMeetingsCount, Toolbox" +
                "MeetingsCount, SafetyDrillsCount, DrillHours, Reporter, Comment, DrillsOther, Dr" +
                "illsManOverBoard, DrillsFirstAid, DrillsFire, DrillsLifeBoat, ShareInfoPC, Share" +
                "InfoNav, ShareInfoTech, ShareInfoMech, SeismicPersonnelCount, MarinePersonnelCou" +
                "nt, ThirdPartyPersonnelCount, OfficePersonnelCount, ClientPersonnelCount, Mariti" +
                "meIncidentAndIllnessCount, OwnIncidentAndIllnessCount, HIPCardUnsafeActsCount, H" +
                "IPCardNearMissesCount, SOPDepartmentalInspectionsCount, SOPCrossDepartmentalInsp" +
                "ectionsCount, SOPPartyChiefInspectionsCount, ManHours, ProjectManHours, YesNoSaf" +
                "etyEventListsRowId, rowguid, MasterRowId, DateCreated, CreatedBy, DateChanged, C" +
                "hangedBy, DateDeleted, DeletedBy, SwitchFree1, SwitchFree2, SwitchFree3, DateTim" +
                "eFree1, DateTimeFree2, DateTimeFree3, TextFree1, TextFree2, TextFree3, IntFree1," +
                " IntFree2, IntFree3, HeliActivitiesCount, OtherActivitiesCount, nTextFree1, nTex" +
                "tFree2, nTextFree3 FROM GADaysReport WHERE (DaysReportRowId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ReferenceId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CetaceansCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CetaceansCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CrewBoatActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewBoatActivitiesCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CrewSafetyMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewSafetyMeetingsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ToolboxMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ToolboxMeetingsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SafetyDrillsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyDrillsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DrillHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillHours", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Reporter", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Reporter", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Comment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Comment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DrillsOther", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsOther", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DrillsManOverBoard", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsManOverBoard", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DrillsFirstAid", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsFirstAid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DrillsFire", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsFire", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DrillsLifeBoat", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsLifeBoat", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ShareInfoPC", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "ShareInfoPC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ShareInfoNav", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "ShareInfoNav", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ShareInfoTech", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "ShareInfoTech", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ShareInfoMech", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "ShareInfoMech", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SeismicPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SeismicPersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MarinePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MarinePersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ThirdPartyPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ThirdPartyPersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OfficePersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ClientPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ClientPersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaritimeIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MaritimeIncidentAndIllnessCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OwnIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OwnIncidentAndIllnessCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HIPCardUnsafeActsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardUnsafeActsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HIPCardNearMissesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardNearMissesCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPDepartmentalInspectionsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPCrossDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPCrossDepartmentalInspectionsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPPartyChiefInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPartyChiefInspectionsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManHours", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ProjectManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectManHours", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@YesNoSafetyEventListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "YesNoSafetyEventListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HeliActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HeliActivitiesCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OtherActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OtherActivitiesCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree1", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree2", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree3", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[GADaysReport] SET [ReferenceId] = @ReferenceId, [Date] = @Date, [Ce" +
                "taceansCount] = @CetaceansCount, [CrewBoatActivitiesCount] = @CrewBoatActivities" +
                "Count, [CrewSafetyMeetingsCount] = @CrewSafetyMeetingsCount, [ToolboxMeetingsCou" +
                "nt] = @ToolboxMeetingsCount, [SafetyDrillsCount] = @SafetyDrillsCount, [DrillHou" +
                "rs] = @DrillHours, [Reporter] = @Reporter, [Comment] = @Comment, [DrillsOther] =" +
                " @DrillsOther, [DrillsManOverBoard] = @DrillsManOverBoard, [DrillsFirstAid] = @D" +
                "rillsFirstAid, [DrillsFire] = @DrillsFire, [DrillsLifeBoat] = @DrillsLifeBoat, [" +
                "ShareInfoPC] = @ShareInfoPC, [ShareInfoNav] = @ShareInfoNav, [ShareInfoTech] = @" +
                "ShareInfoTech, [ShareInfoMech] = @ShareInfoMech, [SeismicPersonnelCount] = @Seis" +
                "micPersonnelCount, [MarinePersonnelCount] = @MarinePersonnelCount, [ThirdPartyPe" +
                "rsonnelCount] = @ThirdPartyPersonnelCount, [OfficePersonnelCount] = @OfficePerso" +
                "nnelCount, [ClientPersonnelCount] = @ClientPersonnelCount, [MaritimeIncidentAndI" +
                "llnessCount] = @MaritimeIncidentAndIllnessCount, [OwnIncidentAndIllnessCount] = " +
                "@OwnIncidentAndIllnessCount, [HIPCardUnsafeActsCount] = @HIPCardUnsafeActsCount," +
                " [HIPCardNearMissesCount] = @HIPCardNearMissesCount, [SOPDepartmentalInspections" +
                "Count] = @SOPDepartmentalInspectionsCount, [SOPCrossDepartmentalInspectionsCount" +
                "] = @SOPCrossDepartmentalInspectionsCount, [SOPPartyChiefInspectionsCount] = @SO" +
                "PPartyChiefInspectionsCount, [ManHours] = @ManHours, [ProjectManHours] = @Projec" +
                "tManHours, [YesNoSafetyEventListsRowId] = @YesNoSafetyEventListsRowId, [rowguid]" +
                " = @rowguid, [MasterRowId] = @MasterRowId, [DateCreated] = @DateCreated, [Create" +
                "dBy] = @CreatedBy, [DateChanged] = @DateChanged, [ChangedBy] = @ChangedBy, [Date" +
                "Deleted] = @DateDeleted, [DeletedBy] = @DeletedBy, [SwitchFree1] = @SwitchFree1," +
                " [SwitchFree2] = @SwitchFree2, [SwitchFree3] = @SwitchFree3, [DateTimeFree1] = @" +
                "DateTimeFree1, [DateTimeFree2] = @DateTimeFree2, [DateTimeFree3] = @DateTimeFree" +
                "3, [TextFree1] = @TextFree1, [TextFree2] = @TextFree2, [TextFree3] = @TextFree3," +
                " [IntFree1] = @IntFree1, [IntFree2] = @IntFree2, [IntFree3] = @IntFree3, [HeliAc" +
                "tivitiesCount] = @HeliActivitiesCount, [OtherActivitiesCount] = @OtherActivities" +
                "Count, [nTextFree1] = @nTextFree1, [nTextFree2] = @nTextFree2, [nTextFree3] = @n" +
                "TextFree3 WHERE (([DaysReportRowId] = @Original_DaysReportRowId) AND ((@IsNull_R" +
                "eferenceId = 1 AND [ReferenceId] IS NULL) OR ([ReferenceId] = @Original_Referenc" +
                "eId)) AND ((@IsNull_Date = 1 AND [Date] IS NULL) OR ([Date] = @Original_Date)) A" +
                "ND ((@IsNull_CetaceansCount = 1 AND [CetaceansCount] IS NULL) OR ([CetaceansCoun" +
                "t] = @Original_CetaceansCount)) AND ((@IsNull_CrewBoatActivitiesCount = 1 AND [C" +
                "rewBoatActivitiesCount] IS NULL) OR ([CrewBoatActivitiesCount] = @Original_CrewB" +
                "oatActivitiesCount)) AND ((@IsNull_CrewSafetyMeetingsCount = 1 AND [CrewSafetyMe" +
                "etingsCount] IS NULL) OR ([CrewSafetyMeetingsCount] = @Original_CrewSafetyMeetin" +
                "gsCount)) AND ((@IsNull_ToolboxMeetingsCount = 1 AND [ToolboxMeetingsCount] IS N" +
                "ULL) OR ([ToolboxMeetingsCount] = @Original_ToolboxMeetingsCount)) AND ((@IsNull" +
                "_SafetyDrillsCount = 1 AND [SafetyDrillsCount] IS NULL) OR ([SafetyDrillsCount] " +
                "= @Original_SafetyDrillsCount)) AND ((@IsNull_DrillHours = 1 AND [DrillHours] IS" +
                " NULL) OR ([DrillHours] = @Original_DrillHours)) AND ((@IsNull_Reporter = 1 AND " +
                "[Reporter] IS NULL) OR ([Reporter] = @Original_Reporter)) AND ((@IsNull_DrillsOt" +
                "her = 1 AND [DrillsOther] IS NULL) OR ([DrillsOther] = @Original_DrillsOther)) A" +
                "ND ((@IsNull_DrillsManOverBoard = 1 AND [DrillsManOverBoard] IS NULL) OR ([Drill" +
                "sManOverBoard] = @Original_DrillsManOverBoard)) AND ((@IsNull_DrillsFirstAid = 1" +
                " AND [DrillsFirstAid] IS NULL) OR ([DrillsFirstAid] = @Original_DrillsFirstAid))" +
                " AND ((@IsNull_DrillsFire = 1 AND [DrillsFire] IS NULL) OR ([DrillsFire] = @Orig" +
                "inal_DrillsFire)) AND ((@IsNull_DrillsLifeBoat = 1 AND [DrillsLifeBoat] IS NULL)" +
                " OR ([DrillsLifeBoat] = @Original_DrillsLifeBoat)) AND ((@IsNull_SeismicPersonne" +
                "lCount = 1 AND [SeismicPersonnelCount] IS NULL) OR ([SeismicPersonnelCount] = @O" +
                "riginal_SeismicPersonnelCount)) AND ((@IsNull_MarinePersonnelCount = 1 AND [Mari" +
                "nePersonnelCount] IS NULL) OR ([MarinePersonnelCount] = @Original_MarinePersonne" +
                "lCount)) AND ((@IsNull_ThirdPartyPersonnelCount = 1 AND [ThirdPartyPersonnelCoun" +
                "t] IS NULL) OR ([ThirdPartyPersonnelCount] = @Original_ThirdPartyPersonnelCount)" +
                ") AND ((@IsNull_OfficePersonnelCount = 1 AND [OfficePersonnelCount] IS NULL) OR " +
                "([OfficePersonnelCount] = @Original_OfficePersonnelCount)) AND ((@IsNull_ClientP" +
                "ersonnelCount = 1 AND [ClientPersonnelCount] IS NULL) OR ([ClientPersonnelCount]" +
                " = @Original_ClientPersonnelCount)) AND ((@IsNull_MaritimeIncidentAndIllnessCoun" +
                "t = 1 AND [MaritimeIncidentAndIllnessCount] IS NULL) OR ([MaritimeIncidentAndIll" +
                "nessCount] = @Original_MaritimeIncidentAndIllnessCount)) AND ((@IsNull_OwnIncide" +
                "ntAndIllnessCount = 1 AND [OwnIncidentAndIllnessCount] IS NULL) OR ([OwnIncident" +
                "AndIllnessCount] = @Original_OwnIncidentAndIllnessCount)) AND ((@IsNull_HIPCardU" +
                "nsafeActsCount = 1 AND [HIPCardUnsafeActsCount] IS NULL) OR ([HIPCardUnsafeActsC" +
                "ount] = @Original_HIPCardUnsafeActsCount)) AND ((@IsNull_HIPCardNearMissesCount " +
                "= 1 AND [HIPCardNearMissesCount] IS NULL) OR ([HIPCardNearMissesCount] = @Origin" +
                "al_HIPCardNearMissesCount)) AND ((@IsNull_SOPDepartmentalInspectionsCount = 1 AN" +
                "D [SOPDepartmentalInspectionsCount] IS NULL) OR ([SOPDepartmentalInspectionsCoun" +
                "t] = @Original_SOPDepartmentalInspectionsCount)) AND ((@IsNull_SOPCrossDepartmen" +
                "talInspectionsCount = 1 AND [SOPCrossDepartmentalInspectionsCount] IS NULL) OR (" +
                "[SOPCrossDepartmentalInspectionsCount] = @Original_SOPCrossDepartmentalInspectio" +
                "nsCount)) AND ((@IsNull_SOPPartyChiefInspectionsCount = 1 AND [SOPPartyChiefInsp" +
                "ectionsCount] IS NULL) OR ([SOPPartyChiefInspectionsCount] = @Original_SOPPartyC" +
                "hiefInspectionsCount)) AND ((@IsNull_ManHours = 1 AND [ManHours] IS NULL) OR ([M" +
                "anHours] = @Original_ManHours)) AND ((@IsNull_ProjectManHours = 1 AND [ProjectMa" +
                "nHours] IS NULL) OR ([ProjectManHours] = @Original_ProjectManHours)) AND ((@IsNu" +
                "ll_YesNoSafetyEventListsRowId = 1 AND [YesNoSafetyEventListsRowId] IS NULL) OR (" +
                "[YesNoSafetyEventListsRowId] = @Original_YesNoSafetyEventListsRowId)) AND ([rowg" +
                "uid] = @Original_rowguid) AND ((@IsNull_MasterRowId = 1 AND [MasterRowId] IS NUL" +
                "L) OR ([MasterRowId] = @Original_MasterRowId)) AND ((@IsNull_DateCreated = 1 AND" +
                " [DateCreated] IS NULL) OR ([DateCreated] = @Original_DateCreated)) AND ((@IsNul" +
                "l_CreatedBy = 1 AND [CreatedBy] IS NULL) OR ([CreatedBy] = @Original_CreatedBy))" +
                " AND ((@IsNull_DateChanged = 1 AND [DateChanged] IS NULL) OR ([DateChanged] = @O" +
                "riginal_DateChanged)) AND ((@IsNull_ChangedBy = 1 AND [ChangedBy] IS NULL) OR ([" +
                "ChangedBy] = @Original_ChangedBy)) AND ((@IsNull_DateDeleted = 1 AND [DateDelete" +
                "d] IS NULL) OR ([DateDeleted] = @Original_DateDeleted)) AND ((@IsNull_DeletedBy " +
                "= 1 AND [DeletedBy] IS NULL) OR ([DeletedBy] = @Original_DeletedBy)) AND ((@IsNu" +
                "ll_SwitchFree1 = 1 AND [SwitchFree1] IS NULL) OR ([SwitchFree1] = @Original_Swit" +
                "chFree1)) AND ((@IsNull_SwitchFree2 = 1 AND [SwitchFree2] IS NULL) OR ([SwitchFr" +
                "ee2] = @Original_SwitchFree2)) AND ((@IsNull_SwitchFree3 = 1 AND [SwitchFree3] I" +
                "S NULL) OR ([SwitchFree3] = @Original_SwitchFree3)) AND ((@IsNull_DateTimeFree1 " +
                "= 1 AND [DateTimeFree1] IS NULL) OR ([DateTimeFree1] = @Original_DateTimeFree1))" +
                " AND ((@IsNull_DateTimeFree2 = 1 AND [DateTimeFree2] IS NULL) OR ([DateTimeFree2" +
                "] = @Original_DateTimeFree2)) AND ((@IsNull_DateTimeFree3 = 1 AND [DateTimeFree3" +
                "] IS NULL) OR ([DateTimeFree3] = @Original_DateTimeFree3)) AND ((@IsNull_TextFre" +
                "e1 = 1 AND [TextFree1] IS NULL) OR ([TextFree1] = @Original_TextFree1)) AND ((@I" +
                "sNull_TextFree2 = 1 AND [TextFree2] IS NULL) OR ([TextFree2] = @Original_TextFre" +
                "e2)) AND ((@IsNull_TextFree3 = 1 AND [TextFree3] IS NULL) OR ([TextFree3] = @Ori" +
                "ginal_TextFree3)) AND ((@IsNull_IntFree1 = 1 AND [IntFree1] IS NULL) OR ([IntFre" +
                "e1] = @Original_IntFree1)) AND ((@IsNull_IntFree2 = 1 AND [IntFree2] IS NULL) OR" +
                " ([IntFree2] = @Original_IntFree2)) AND ((@IsNull_IntFree3 = 1 AND [IntFree3] IS" +
                " NULL) OR ([IntFree3] = @Original_IntFree3)) AND ((@IsNull_HeliActivitiesCount =" +
                " 1 AND [HeliActivitiesCount] IS NULL) OR ([HeliActivitiesCount] = @Original_Heli" +
                "ActivitiesCount)) AND ((@IsNull_OtherActivitiesCount = 1 AND [OtherActivitiesCou" +
                "nt] IS NULL) OR ([OtherActivitiesCount] = @Original_OtherActivitiesCount)));\r\nSE" +
                "LECT DaysReportRowId, ReferenceId, Date, CetaceansCount, CrewBoatActivitiesCount" +
                ", CrewSafetyMeetingsCount, ToolboxMeetingsCount, SafetyDrillsCount, DrillHours, " +
                "Reporter, Comment, DrillsOther, DrillsManOverBoard, DrillsFirstAid, DrillsFire, " +
                "DrillsLifeBoat, ShareInfoPC, ShareInfoNav, ShareInfoTech, ShareInfoMech, Seismic" +
                "PersonnelCount, MarinePersonnelCount, ThirdPartyPersonnelCount, OfficePersonnelC" +
                "ount, ClientPersonnelCount, MaritimeIncidentAndIllnessCount, OwnIncidentAndIllne" +
                "ssCount, HIPCardUnsafeActsCount, HIPCardNearMissesCount, SOPDepartmentalInspecti" +
                "onsCount, SOPCrossDepartmentalInspectionsCount, SOPPartyChiefInspectionsCount, M" +
                "anHours, ProjectManHours, YesNoSafetyEventListsRowId, rowguid, MasterRowId, Date" +
                "Created, CreatedBy, DateChanged, ChangedBy, DateDeleted, DeletedBy, SwitchFree1," +
                " SwitchFree2, SwitchFree3, DateTimeFree1, DateTimeFree2, DateTimeFree3, TextFree" +
                "1, TextFree2, TextFree3, IntFree1, IntFree2, IntFree3, HeliActivitiesCount, Othe" +
                "rActivitiesCount, nTextFree1, nTextFree2, nTextFree3 FROM GADaysReport WHERE (Da" +
                "ysReportRowId = @DaysReportRowId)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ReferenceId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CetaceansCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CetaceansCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CrewBoatActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewBoatActivitiesCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CrewSafetyMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewSafetyMeetingsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ToolboxMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ToolboxMeetingsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SafetyDrillsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyDrillsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DrillHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillHours", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Reporter", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Reporter", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Comment", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "Comment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DrillsOther", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsOther", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DrillsManOverBoard", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsManOverBoard", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DrillsFirstAid", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsFirstAid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DrillsFire", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsFire", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DrillsLifeBoat", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsLifeBoat", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ShareInfoPC", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "ShareInfoPC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ShareInfoNav", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "ShareInfoNav", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ShareInfoTech", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "ShareInfoTech", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ShareInfoMech", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "ShareInfoMech", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SeismicPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SeismicPersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MarinePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MarinePersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ThirdPartyPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ThirdPartyPersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OfficePersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ClientPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ClientPersonnelCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaritimeIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MaritimeIncidentAndIllnessCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OwnIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OwnIncidentAndIllnessCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HIPCardUnsafeActsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardUnsafeActsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HIPCardNearMissesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardNearMissesCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPDepartmentalInspectionsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPCrossDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPCrossDepartmentalInspectionsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOPPartyChiefInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPartyChiefInspectionsCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManHours", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ProjectManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectManHours", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@YesNoSafetyEventListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "YesNoSafetyEventListsRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HeliActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HeliActivitiesCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OtherActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OtherActivitiesCount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree1", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree2", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nTextFree3", System.Data.SqlDbType.NText, 0, System.Data.ParameterDirection.Input, 0, 0, "nTextFree3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DaysReportRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DaysReportRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ReferenceId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ReferenceId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ReferenceId", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ReferenceId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CetaceansCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CetaceansCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CetaceansCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CetaceansCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CrewBoatActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewBoatActivitiesCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CrewBoatActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewBoatActivitiesCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CrewSafetyMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewSafetyMeetingsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CrewSafetyMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CrewSafetyMeetingsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ToolboxMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ToolboxMeetingsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ToolboxMeetingsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ToolboxMeetingsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SafetyDrillsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyDrillsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SafetyDrillsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SafetyDrillsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DrillHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillHours", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DrillHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillHours", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Reporter", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Reporter", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Reporter", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Reporter", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DrillsOther", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsOther", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DrillsOther", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsOther", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DrillsManOverBoard", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsManOverBoard", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DrillsManOverBoard", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsManOverBoard", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DrillsFirstAid", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsFirstAid", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DrillsFirstAid", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsFirstAid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DrillsFire", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsFire", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DrillsFire", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsFire", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DrillsLifeBoat", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsLifeBoat", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DrillsLifeBoat", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DrillsLifeBoat", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SeismicPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SeismicPersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SeismicPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SeismicPersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MarinePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MarinePersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MarinePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MarinePersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ThirdPartyPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ThirdPartyPersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ThirdPartyPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ThirdPartyPersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OfficePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OfficePersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OfficePersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OfficePersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ClientPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ClientPersonnelCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ClientPersonnelCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ClientPersonnelCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MaritimeIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MaritimeIncidentAndIllnessCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaritimeIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MaritimeIncidentAndIllnessCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OwnIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OwnIncidentAndIllnessCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OwnIncidentAndIllnessCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OwnIncidentAndIllnessCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HIPCardUnsafeActsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardUnsafeActsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HIPCardUnsafeActsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardUnsafeActsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HIPCardNearMissesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardNearMissesCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HIPCardNearMissesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HIPCardNearMissesCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPDepartmentalInspectionsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPDepartmentalInspectionsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPCrossDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPCrossDepartmentalInspectionsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPCrossDepartmentalInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPCrossDepartmentalInspectionsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOPPartyChiefInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPartyChiefInspectionsCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOPPartyChiefInspectionsCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOPPartyChiefInspectionsCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManHours", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ManHours", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ProjectManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectManHours", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ProjectManHours", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ProjectManHours", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_YesNoSafetyEventListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "YesNoSafetyEventListsRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_YesNoSafetyEventListsRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "YesNoSafetyEventListsRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rowguid", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "rowguid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MasterRowId", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MasterRowId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateCreated", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateCreated", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateCreated", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CreatedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateChanged", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateChanged", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateChanged", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChangedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateDeleted", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateDeleted", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateDeleted", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeletedBy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SwitchFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SwitchFree3", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "SwitchFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree1", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree2", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DateTimeFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DateTimeFree3", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DateTimeFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree1", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TextFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TextFree3", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TextFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IntFree3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IntFree3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HeliActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HeliActivitiesCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HeliActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HeliActivitiesCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OtherActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OtherActivitiesCount", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OtherActivitiesCount", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OtherActivitiesCount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DaysReportRowId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "DaysReportRowId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GASystem.Properties.Settings.Default.flagdata070807ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT DaysReportRowId, ReferenceId, Date, CetaceansCount, CrewBoatActivitiesCount, CrewSafetyMeetingsCount, ToolboxMeetingsCount, SafetyDrillsCount, DrillHours, Reporter, Comment, DrillsOther, DrillsManOverBoard, DrillsFirstAid, DrillsFire, DrillsLifeBoat, ShareInfoPC, ShareInfoNav, ShareInfoTech, ShareInfoMech, SeismicPersonnelCount, MarinePersonnelCount, ThirdPartyPersonnelCount, OfficePersonnelCount, ClientPersonnelCount, MaritimeIncidentAndIllnessCount, OwnIncidentAndIllnessCount, HIPCardUnsafeActsCount, HIPCardNearMissesCount, SOPDepartmentalInspectionsCount, SOPCrossDepartmentalInspectionsCount, SOPPartyChiefInspectionsCount, ManHours, ProjectManHours, YesNoSafetyEventListsRowId, rowguid, MasterRowId, DateCreated, CreatedBy, DateChanged, ChangedBy, DateDeleted, DeletedBy, SwitchFree1, SwitchFree2, SwitchFree3, DateTimeFree1, DateTimeFree2, DateTimeFree3, TextFree1, TextFree2, TextFree3, IntFree1, IntFree2, IntFree3, HeliActivitiesCount, OtherActivitiesCount, nTextFree1, nTextFree2, nTextFree3 FROM dbo.GADaysReport";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DaysReportDS.GADaysReportDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DaysReportDS.GADaysReportDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DaysReportDS.GADaysReportDataTable dataTable = new DaysReportDS.GADaysReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DaysReportDS.GADaysReportDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DaysReportDS dataSet) {
            return this.Adapter.Update(dataSet, "GADaysReport");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_DaysReportRowId, 
                    string Original_ReferenceId, 
                    System.Nullable<System.DateTime> Original_Date, 
                    System.Nullable<int> Original_CetaceansCount, 
                    System.Nullable<int> Original_CrewBoatActivitiesCount, 
                    System.Nullable<int> Original_CrewSafetyMeetingsCount, 
                    System.Nullable<int> Original_ToolboxMeetingsCount, 
                    System.Nullable<int> Original_SafetyDrillsCount, 
                    System.Nullable<int> Original_DrillHours, 
                    System.Nullable<int> Original_Reporter, 
                    System.Nullable<int> Original_DrillsOther, 
                    System.Nullable<int> Original_DrillsManOverBoard, 
                    System.Nullable<int> Original_DrillsFirstAid, 
                    System.Nullable<int> Original_DrillsFire, 
                    System.Nullable<int> Original_DrillsLifeBoat, 
                    System.Nullable<int> Original_SeismicPersonnelCount, 
                    System.Nullable<int> Original_MarinePersonnelCount, 
                    System.Nullable<int> Original_ThirdPartyPersonnelCount, 
                    System.Nullable<int> Original_OfficePersonnelCount, 
                    System.Nullable<int> Original_ClientPersonnelCount, 
                    System.Nullable<int> Original_MaritimeIncidentAndIllnessCount, 
                    System.Nullable<int> Original_OwnIncidentAndIllnessCount, 
                    System.Nullable<int> Original_HIPCardUnsafeActsCount, 
                    System.Nullable<int> Original_HIPCardNearMissesCount, 
                    System.Nullable<int> Original_SOPDepartmentalInspectionsCount, 
                    System.Nullable<int> Original_SOPCrossDepartmentalInspectionsCount, 
                    System.Nullable<int> Original_SOPPartyChiefInspectionsCount, 
                    System.Nullable<int> Original_ManHours, 
                    System.Nullable<int> Original_ProjectManHours, 
                    System.Nullable<int> Original_YesNoSafetyEventListsRowId, 
                    System.Nullable<System.Guid> Original_rowguid, 
                    System.Nullable<int> Original_MasterRowId, 
                    System.Nullable<System.DateTime> Original_DateCreated, 
                    System.Nullable<int> Original_CreatedBy, 
                    System.Nullable<System.DateTime> Original_DateChanged, 
                    System.Nullable<int> Original_ChangedBy, 
                    System.Nullable<System.DateTime> Original_DateDeleted, 
                    System.Nullable<int> Original_DeletedBy, 
                    System.Nullable<bool> Original_SwitchFree1, 
                    System.Nullable<bool> Original_SwitchFree2, 
                    System.Nullable<bool> Original_SwitchFree3, 
                    System.Nullable<System.DateTime> Original_DateTimeFree1, 
                    System.Nullable<System.DateTime> Original_DateTimeFree2, 
                    System.Nullable<System.DateTime> Original_DateTimeFree3, 
                    string Original_TextFree1, 
                    string Original_TextFree2, 
                    string Original_TextFree3, 
                    System.Nullable<int> Original_IntFree1, 
                    System.Nullable<int> Original_IntFree2, 
                    System.Nullable<int> Original_IntFree3, 
                    System.Nullable<int> Original_HeliActivitiesCount, 
                    System.Nullable<int> Original_OtherActivitiesCount) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_DaysReportRowId));
            if ((Original_ReferenceId == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ReferenceId));
            }
            if ((Original_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_CetaceansCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_CetaceansCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_CrewBoatActivitiesCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_CrewBoatActivitiesCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_CrewSafetyMeetingsCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_CrewSafetyMeetingsCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_ToolboxMeetingsCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_ToolboxMeetingsCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_SafetyDrillsCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_SafetyDrillsCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_DrillHours.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_DrillHours.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_Reporter.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_Reporter.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_DrillsOther.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_DrillsOther.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_DrillsManOverBoard.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_DrillsManOverBoard.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_DrillsFirstAid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_DrillsFirstAid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_DrillsFire.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_DrillsFire.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((Original_DrillsLifeBoat.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_DrillsLifeBoat.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((Original_SeismicPersonnelCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_SeismicPersonnelCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((Original_MarinePersonnelCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_MarinePersonnelCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((Original_ThirdPartyPersonnelCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_ThirdPartyPersonnelCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((Original_OfficePersonnelCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_OfficePersonnelCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((Original_ClientPersonnelCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_ClientPersonnelCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = System.DBNull.Value;
            }
            if ((Original_MaritimeIncidentAndIllnessCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_MaritimeIncidentAndIllnessCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = System.DBNull.Value;
            }
            if ((Original_OwnIncidentAndIllnessCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((int)(Original_OwnIncidentAndIllnessCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = System.DBNull.Value;
            }
            if ((Original_HIPCardUnsafeActsCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((int)(Original_HIPCardUnsafeActsCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = System.DBNull.Value;
            }
            if ((Original_HIPCardNearMissesCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((int)(Original_HIPCardNearMissesCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = System.DBNull.Value;
            }
            if ((Original_SOPDepartmentalInspectionsCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((int)(Original_SOPDepartmentalInspectionsCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = System.DBNull.Value;
            }
            if ((Original_SOPCrossDepartmentalInspectionsCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((int)(Original_SOPCrossDepartmentalInspectionsCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = System.DBNull.Value;
            }
            if ((Original_SOPPartyChiefInspectionsCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((int)(Original_SOPPartyChiefInspectionsCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = System.DBNull.Value;
            }
            if ((Original_ManHours.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((int)(Original_ManHours.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = System.DBNull.Value;
            }
            if ((Original_ProjectManHours.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((int)(Original_ProjectManHours.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = System.DBNull.Value;
            }
            if ((Original_YesNoSafetyEventListsRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((int)(Original_YesNoSafetyEventListsRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = System.DBNull.Value;
            }
            if ((Original_rowguid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((System.Guid)(Original_rowguid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = System.DBNull.Value;
            }
            if ((Original_MasterRowId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((int)(Original_MasterRowId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = System.DBNull.Value;
            }
            if ((Original_DateCreated.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((System.DateTime)(Original_DateCreated.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = System.DBNull.Value;
            }
            if ((Original_CreatedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((int)(Original_CreatedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = System.DBNull.Value;
            }
            if ((Original_DateChanged.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((System.DateTime)(Original_DateChanged.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = System.DBNull.Value;
            }
            if ((Original_ChangedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((int)(Original_ChangedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = System.DBNull.Value;
            }
            if ((Original_DateDeleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((System.DateTime)(Original_DateDeleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = System.DBNull.Value;
            }
            if ((Original_DeletedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((int)(Original_DeletedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((bool)(Original_SwitchFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((bool)(Original_SwitchFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((bool)(Original_SwitchFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((System.DateTime)(Original_DateTimeFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((System.DateTime)(Original_DateTimeFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((System.DateTime)(Original_DateTimeFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = System.DBNull.Value;
            }
            if ((Original_TextFree1 == null)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((string)(Original_TextFree1));
            }
            if ((Original_TextFree2 == null)) {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[89].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[89].Value = ((string)(Original_TextFree2));
            }
            if ((Original_TextFree3 == null)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((string)(Original_TextFree3));
            }
            if ((Original_IntFree1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[93].Value = ((int)(Original_IntFree1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[93].Value = System.DBNull.Value;
            }
            if ((Original_IntFree2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[95].Value = ((int)(Original_IntFree2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[95].Value = System.DBNull.Value;
            }
            if ((Original_IntFree3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[97].Value = ((int)(Original_IntFree3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[97].Value = System.DBNull.Value;
            }
            if ((Original_HeliActivitiesCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[99].Value = ((int)(Original_HeliActivitiesCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[99].Value = System.DBNull.Value;
            }
            if ((Original_OtherActivitiesCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[101].Value = ((int)(Original_OtherActivitiesCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[101].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string ReferenceId, 
                    System.Nullable<System.DateTime> Date, 
                    System.Nullable<int> CetaceansCount, 
                    System.Nullable<int> CrewBoatActivitiesCount, 
                    System.Nullable<int> CrewSafetyMeetingsCount, 
                    System.Nullable<int> ToolboxMeetingsCount, 
                    System.Nullable<int> SafetyDrillsCount, 
                    System.Nullable<int> DrillHours, 
                    System.Nullable<int> Reporter, 
                    string Comment, 
                    System.Nullable<int> DrillsOther, 
                    System.Nullable<int> DrillsManOverBoard, 
                    System.Nullable<int> DrillsFirstAid, 
                    System.Nullable<int> DrillsFire, 
                    System.Nullable<int> DrillsLifeBoat, 
                    string ShareInfoPC, 
                    string ShareInfoNav, 
                    string ShareInfoTech, 
                    string ShareInfoMech, 
                    System.Nullable<int> SeismicPersonnelCount, 
                    System.Nullable<int> MarinePersonnelCount, 
                    System.Nullable<int> ThirdPartyPersonnelCount, 
                    System.Nullable<int> OfficePersonnelCount, 
                    System.Nullable<int> ClientPersonnelCount, 
                    System.Nullable<int> MaritimeIncidentAndIllnessCount, 
                    System.Nullable<int> OwnIncidentAndIllnessCount, 
                    System.Nullable<int> HIPCardUnsafeActsCount, 
                    System.Nullable<int> HIPCardNearMissesCount, 
                    System.Nullable<int> SOPDepartmentalInspectionsCount, 
                    System.Nullable<int> SOPCrossDepartmentalInspectionsCount, 
                    System.Nullable<int> SOPPartyChiefInspectionsCount, 
                    System.Nullable<int> ManHours, 
                    System.Nullable<int> ProjectManHours, 
                    System.Nullable<int> YesNoSafetyEventListsRowId, 
                    System.Nullable<System.Guid> rowguid, 
                    System.Nullable<int> MasterRowId, 
                    System.Nullable<System.DateTime> DateCreated, 
                    System.Nullable<int> CreatedBy, 
                    System.Nullable<System.DateTime> DateChanged, 
                    System.Nullable<int> ChangedBy, 
                    System.Nullable<System.DateTime> DateDeleted, 
                    System.Nullable<int> DeletedBy, 
                    System.Nullable<bool> SwitchFree1, 
                    System.Nullable<bool> SwitchFree2, 
                    System.Nullable<bool> SwitchFree3, 
                    System.Nullable<System.DateTime> DateTimeFree1, 
                    System.Nullable<System.DateTime> DateTimeFree2, 
                    System.Nullable<System.DateTime> DateTimeFree3, 
                    string TextFree1, 
                    string TextFree2, 
                    string TextFree3, 
                    System.Nullable<int> IntFree1, 
                    System.Nullable<int> IntFree2, 
                    System.Nullable<int> IntFree3, 
                    System.Nullable<int> HeliActivitiesCount, 
                    System.Nullable<int> OtherActivitiesCount, 
                    string nTextFree1, 
                    string nTextFree2, 
                    string nTextFree3) {
            if ((ReferenceId == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ReferenceId));
            }
            if ((Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((CetaceansCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(CetaceansCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((CrewBoatActivitiesCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(CrewBoatActivitiesCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((CrewSafetyMeetingsCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(CrewSafetyMeetingsCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((ToolboxMeetingsCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(ToolboxMeetingsCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((SafetyDrillsCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(SafetyDrillsCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((DrillHours.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(DrillHours.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Reporter.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Reporter.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Comment == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Comment));
            }
            if ((DrillsOther.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(DrillsOther.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((DrillsManOverBoard.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(DrillsManOverBoard.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((DrillsFirstAid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(DrillsFirstAid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((DrillsFire.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(DrillsFire.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((DrillsLifeBoat.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(DrillsLifeBoat.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((ShareInfoPC == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ShareInfoPC));
            }
            if ((ShareInfoNav == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ShareInfoNav));
            }
            if ((ShareInfoTech == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(ShareInfoTech));
            }
            if ((ShareInfoMech == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(ShareInfoMech));
            }
            if ((SeismicPersonnelCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(SeismicPersonnelCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((MarinePersonnelCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(MarinePersonnelCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((ThirdPartyPersonnelCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(ThirdPartyPersonnelCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = System.DBNull.Value;
            }
            if ((OfficePersonnelCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(OfficePersonnelCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((ClientPersonnelCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((int)(ClientPersonnelCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = System.DBNull.Value;
            }
            if ((MaritimeIncidentAndIllnessCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(MaritimeIncidentAndIllnessCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((OwnIncidentAndIllnessCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(OwnIncidentAndIllnessCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((HIPCardUnsafeActsCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(HIPCardUnsafeActsCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((HIPCardNearMissesCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(HIPCardNearMissesCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = System.DBNull.Value;
            }
            if ((SOPDepartmentalInspectionsCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(SOPDepartmentalInspectionsCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((SOPCrossDepartmentalInspectionsCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((int)(SOPCrossDepartmentalInspectionsCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = System.DBNull.Value;
            }
            if ((SOPPartyChiefInspectionsCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((int)(SOPPartyChiefInspectionsCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((ManHours.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((int)(ManHours.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = System.DBNull.Value;
            }
            if ((ProjectManHours.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((int)(ProjectManHours.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((YesNoSafetyEventListsRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((int)(YesNoSafetyEventListsRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = System.DBNull.Value;
            }
            if ((rowguid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((System.Guid)(rowguid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((MasterRowId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(MasterRowId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((DateCreated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((CreatedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((int)(CreatedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((DateChanged.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((System.DateTime)(DateChanged.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = System.DBNull.Value;
            }
            if ((ChangedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((int)(ChangedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = System.DBNull.Value;
            }
            if ((DateDeleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((System.DateTime)(DateDeleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = System.DBNull.Value;
            }
            if ((DeletedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((int)(DeletedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = System.DBNull.Value;
            }
            if ((SwitchFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((bool)(SwitchFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = System.DBNull.Value;
            }
            if ((SwitchFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((bool)(SwitchFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = System.DBNull.Value;
            }
            if ((SwitchFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((bool)(SwitchFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = System.DBNull.Value;
            }
            if ((DateTimeFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((System.DateTime)(DateTimeFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = System.DBNull.Value;
            }
            if ((DateTimeFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((System.DateTime)(DateTimeFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = System.DBNull.Value;
            }
            if ((DateTimeFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((System.DateTime)(DateTimeFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = System.DBNull.Value;
            }
            if ((TextFree1 == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(TextFree1));
            }
            if ((TextFree2 == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(TextFree2));
            }
            if ((TextFree3 == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(TextFree3));
            }
            if ((IntFree1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((int)(IntFree1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = System.DBNull.Value;
            }
            if ((IntFree2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((int)(IntFree2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = System.DBNull.Value;
            }
            if ((IntFree3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((int)(IntFree3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = System.DBNull.Value;
            }
            if ((HeliActivitiesCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((int)(HeliActivitiesCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = System.DBNull.Value;
            }
            if ((OtherActivitiesCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((int)(OtherActivitiesCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = System.DBNull.Value;
            }
            if ((nTextFree1 == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(nTextFree1));
            }
            if ((nTextFree2 == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(nTextFree2));
            }
            if ((nTextFree3 == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(nTextFree3));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ReferenceId, 
                    System.Nullable<System.DateTime> Date, 
                    System.Nullable<int> CetaceansCount, 
                    System.Nullable<int> CrewBoatActivitiesCount, 
                    System.Nullable<int> CrewSafetyMeetingsCount, 
                    System.Nullable<int> ToolboxMeetingsCount, 
                    System.Nullable<int> SafetyDrillsCount, 
                    System.Nullable<int> DrillHours, 
                    System.Nullable<int> Reporter, 
                    string Comment, 
                    System.Nullable<int> DrillsOther, 
                    System.Nullable<int> DrillsManOverBoard, 
                    System.Nullable<int> DrillsFirstAid, 
                    System.Nullable<int> DrillsFire, 
                    System.Nullable<int> DrillsLifeBoat, 
                    string ShareInfoPC, 
                    string ShareInfoNav, 
                    string ShareInfoTech, 
                    string ShareInfoMech, 
                    System.Nullable<int> SeismicPersonnelCount, 
                    System.Nullable<int> MarinePersonnelCount, 
                    System.Nullable<int> ThirdPartyPersonnelCount, 
                    System.Nullable<int> OfficePersonnelCount, 
                    System.Nullable<int> ClientPersonnelCount, 
                    System.Nullable<int> MaritimeIncidentAndIllnessCount, 
                    System.Nullable<int> OwnIncidentAndIllnessCount, 
                    System.Nullable<int> HIPCardUnsafeActsCount, 
                    System.Nullable<int> HIPCardNearMissesCount, 
                    System.Nullable<int> SOPDepartmentalInspectionsCount, 
                    System.Nullable<int> SOPCrossDepartmentalInspectionsCount, 
                    System.Nullable<int> SOPPartyChiefInspectionsCount, 
                    System.Nullable<int> ManHours, 
                    System.Nullable<int> ProjectManHours, 
                    System.Nullable<int> YesNoSafetyEventListsRowId, 
                    System.Nullable<System.Guid> rowguid, 
                    System.Nullable<int> MasterRowId, 
                    System.Nullable<System.DateTime> DateCreated, 
                    System.Nullable<int> CreatedBy, 
                    System.Nullable<System.DateTime> DateChanged, 
                    System.Nullable<int> ChangedBy, 
                    System.Nullable<System.DateTime> DateDeleted, 
                    System.Nullable<int> DeletedBy, 
                    System.Nullable<bool> SwitchFree1, 
                    System.Nullable<bool> SwitchFree2, 
                    System.Nullable<bool> SwitchFree3, 
                    System.Nullable<System.DateTime> DateTimeFree1, 
                    System.Nullable<System.DateTime> DateTimeFree2, 
                    System.Nullable<System.DateTime> DateTimeFree3, 
                    string TextFree1, 
                    string TextFree2, 
                    string TextFree3, 
                    System.Nullable<int> IntFree1, 
                    System.Nullable<int> IntFree2, 
                    System.Nullable<int> IntFree3, 
                    System.Nullable<int> HeliActivitiesCount, 
                    System.Nullable<int> OtherActivitiesCount, 
                    string nTextFree1, 
                    string nTextFree2, 
                    string nTextFree3, 
                    int Original_DaysReportRowId, 
                    string Original_ReferenceId, 
                    System.Nullable<System.DateTime> Original_Date, 
                    System.Nullable<int> Original_CetaceansCount, 
                    System.Nullable<int> Original_CrewBoatActivitiesCount, 
                    System.Nullable<int> Original_CrewSafetyMeetingsCount, 
                    System.Nullable<int> Original_ToolboxMeetingsCount, 
                    System.Nullable<int> Original_SafetyDrillsCount, 
                    System.Nullable<int> Original_DrillHours, 
                    System.Nullable<int> Original_Reporter, 
                    System.Nullable<int> Original_DrillsOther, 
                    System.Nullable<int> Original_DrillsManOverBoard, 
                    System.Nullable<int> Original_DrillsFirstAid, 
                    System.Nullable<int> Original_DrillsFire, 
                    System.Nullable<int> Original_DrillsLifeBoat, 
                    System.Nullable<int> Original_SeismicPersonnelCount, 
                    System.Nullable<int> Original_MarinePersonnelCount, 
                    System.Nullable<int> Original_ThirdPartyPersonnelCount, 
                    System.Nullable<int> Original_OfficePersonnelCount, 
                    System.Nullable<int> Original_ClientPersonnelCount, 
                    System.Nullable<int> Original_MaritimeIncidentAndIllnessCount, 
                    System.Nullable<int> Original_OwnIncidentAndIllnessCount, 
                    System.Nullable<int> Original_HIPCardUnsafeActsCount, 
                    System.Nullable<int> Original_HIPCardNearMissesCount, 
                    System.Nullable<int> Original_SOPDepartmentalInspectionsCount, 
                    System.Nullable<int> Original_SOPCrossDepartmentalInspectionsCount, 
                    System.Nullable<int> Original_SOPPartyChiefInspectionsCount, 
                    System.Nullable<int> Original_ManHours, 
                    System.Nullable<int> Original_ProjectManHours, 
                    System.Nullable<int> Original_YesNoSafetyEventListsRowId, 
                    System.Nullable<System.Guid> Original_rowguid, 
                    System.Nullable<int> Original_MasterRowId, 
                    System.Nullable<System.DateTime> Original_DateCreated, 
                    System.Nullable<int> Original_CreatedBy, 
                    System.Nullable<System.DateTime> Original_DateChanged, 
                    System.Nullable<int> Original_ChangedBy, 
                    System.Nullable<System.DateTime> Original_DateDeleted, 
                    System.Nullable<int> Original_DeletedBy, 
                    System.Nullable<bool> Original_SwitchFree1, 
                    System.Nullable<bool> Original_SwitchFree2, 
                    System.Nullable<bool> Original_SwitchFree3, 
                    System.Nullable<System.DateTime> Original_DateTimeFree1, 
                    System.Nullable<System.DateTime> Original_DateTimeFree2, 
                    System.Nullable<System.DateTime> Original_DateTimeFree3, 
                    string Original_TextFree1, 
                    string Original_TextFree2, 
                    string Original_TextFree3, 
                    System.Nullable<int> Original_IntFree1, 
                    System.Nullable<int> Original_IntFree2, 
                    System.Nullable<int> Original_IntFree3, 
                    System.Nullable<int> Original_HeliActivitiesCount, 
                    System.Nullable<int> Original_OtherActivitiesCount, 
                    int DaysReportRowId) {
            if ((ReferenceId == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ReferenceId));
            }
            if ((Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((CetaceansCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(CetaceansCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((CrewBoatActivitiesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(CrewBoatActivitiesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((CrewSafetyMeetingsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(CrewSafetyMeetingsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((ToolboxMeetingsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ToolboxMeetingsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((SafetyDrillsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(SafetyDrillsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((DrillHours.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(DrillHours.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Reporter.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Reporter.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Comment == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Comment));
            }
            if ((DrillsOther.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(DrillsOther.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((DrillsManOverBoard.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(DrillsManOverBoard.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((DrillsFirstAid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(DrillsFirstAid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((DrillsFire.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(DrillsFire.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((DrillsLifeBoat.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(DrillsLifeBoat.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((ShareInfoPC == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ShareInfoPC));
            }
            if ((ShareInfoNav == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ShareInfoNav));
            }
            if ((ShareInfoTech == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(ShareInfoTech));
            }
            if ((ShareInfoMech == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(ShareInfoMech));
            }
            if ((SeismicPersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(SeismicPersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((MarinePersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(MarinePersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((ThirdPartyPersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(ThirdPartyPersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            if ((OfficePersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(OfficePersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((ClientPersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(ClientPersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            if ((MaritimeIncidentAndIllnessCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(MaritimeIncidentAndIllnessCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((OwnIncidentAndIllnessCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(OwnIncidentAndIllnessCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((HIPCardUnsafeActsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(HIPCardUnsafeActsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((HIPCardNearMissesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(HIPCardNearMissesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            if ((SOPDepartmentalInspectionsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(SOPDepartmentalInspectionsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((SOPCrossDepartmentalInspectionsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(SOPCrossDepartmentalInspectionsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = System.DBNull.Value;
            }
            if ((SOPPartyChiefInspectionsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(SOPPartyChiefInspectionsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((ManHours.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(ManHours.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            if ((ProjectManHours.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(ProjectManHours.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((YesNoSafetyEventListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(YesNoSafetyEventListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = System.DBNull.Value;
            }
            if ((rowguid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((System.Guid)(rowguid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((MasterRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(MasterRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((DateCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((CreatedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(CreatedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((DateChanged.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTime)(DateChanged.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = System.DBNull.Value;
            }
            if ((ChangedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(ChangedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = System.DBNull.Value;
            }
            if ((DateDeleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(DateDeleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = System.DBNull.Value;
            }
            if ((DeletedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(DeletedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = System.DBNull.Value;
            }
            if ((SwitchFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(SwitchFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = System.DBNull.Value;
            }
            if ((SwitchFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((bool)(SwitchFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = System.DBNull.Value;
            }
            if ((SwitchFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(SwitchFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = System.DBNull.Value;
            }
            if ((DateTimeFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((System.DateTime)(DateTimeFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = System.DBNull.Value;
            }
            if ((DateTimeFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((System.DateTime)(DateTimeFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = System.DBNull.Value;
            }
            if ((DateTimeFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((System.DateTime)(DateTimeFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = System.DBNull.Value;
            }
            if ((TextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(TextFree1));
            }
            if ((TextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(TextFree2));
            }
            if ((TextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(TextFree3));
            }
            if ((IntFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(IntFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = System.DBNull.Value;
            }
            if ((IntFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(IntFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = System.DBNull.Value;
            }
            if ((IntFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(IntFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = System.DBNull.Value;
            }
            if ((HeliActivitiesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(HeliActivitiesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = System.DBNull.Value;
            }
            if ((OtherActivitiesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(OtherActivitiesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = System.DBNull.Value;
            }
            if ((nTextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(nTextFree1));
            }
            if ((nTextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(nTextFree2));
            }
            if ((nTextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(nTextFree3));
            }
            this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(Original_DaysReportRowId));
            if ((Original_ReferenceId == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_ReferenceId));
            }
            if ((Original_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((System.DateTime)(Original_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = System.DBNull.Value;
            }
            if ((Original_CetaceansCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(Original_CetaceansCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = System.DBNull.Value;
            }
            if ((Original_CrewBoatActivitiesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(Original_CrewBoatActivitiesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = System.DBNull.Value;
            }
            if ((Original_CrewSafetyMeetingsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(Original_CrewSafetyMeetingsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = System.DBNull.Value;
            }
            if ((Original_ToolboxMeetingsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(Original_ToolboxMeetingsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = System.DBNull.Value;
            }
            if ((Original_SafetyDrillsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((int)(Original_SafetyDrillsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = System.DBNull.Value;
            }
            if ((Original_DrillHours.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_DrillHours.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = System.DBNull.Value;
            }
            if ((Original_Reporter.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((int)(Original_Reporter.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = System.DBNull.Value;
            }
            if ((Original_DrillsOther.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(Original_DrillsOther.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = System.DBNull.Value;
            }
            if ((Original_DrillsManOverBoard.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(Original_DrillsManOverBoard.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = System.DBNull.Value;
            }
            if ((Original_DrillsFirstAid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((int)(Original_DrillsFirstAid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = System.DBNull.Value;
            }
            if ((Original_DrillsFire.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((int)(Original_DrillsFire.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = System.DBNull.Value;
            }
            if ((Original_DrillsLifeBoat.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((int)(Original_DrillsLifeBoat.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = System.DBNull.Value;
            }
            if ((Original_SeismicPersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((int)(Original_SeismicPersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = System.DBNull.Value;
            }
            if ((Original_MarinePersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(Original_MarinePersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = System.DBNull.Value;
            }
            if ((Original_ThirdPartyPersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((int)(Original_ThirdPartyPersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = System.DBNull.Value;
            }
            if ((Original_OfficePersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((int)(Original_OfficePersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = System.DBNull.Value;
            }
            if ((Original_ClientPersonnelCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((int)(Original_ClientPersonnelCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = System.DBNull.Value;
            }
            if ((Original_MaritimeIncidentAndIllnessCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((int)(Original_MaritimeIncidentAndIllnessCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = System.DBNull.Value;
            }
            if ((Original_OwnIncidentAndIllnessCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((int)(Original_OwnIncidentAndIllnessCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = System.DBNull.Value;
            }
            if ((Original_HIPCardUnsafeActsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((int)(Original_HIPCardUnsafeActsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = System.DBNull.Value;
            }
            if ((Original_HIPCardNearMissesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((int)(Original_HIPCardNearMissesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = System.DBNull.Value;
            }
            if ((Original_SOPDepartmentalInspectionsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((int)(Original_SOPDepartmentalInspectionsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = System.DBNull.Value;
            }
            if ((Original_SOPCrossDepartmentalInspectionsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((int)(Original_SOPCrossDepartmentalInspectionsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = System.DBNull.Value;
            }
            if ((Original_SOPPartyChiefInspectionsCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((int)(Original_SOPPartyChiefInspectionsCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = System.DBNull.Value;
            }
            if ((Original_ManHours.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((int)(Original_ManHours.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = System.DBNull.Value;
            }
            if ((Original_ProjectManHours.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((int)(Original_ProjectManHours.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = System.DBNull.Value;
            }
            if ((Original_YesNoSafetyEventListsRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((int)(Original_YesNoSafetyEventListsRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = System.DBNull.Value;
            }
            if ((Original_rowguid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((System.Guid)(Original_rowguid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = System.DBNull.Value;
            }
            if ((Original_MasterRowId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((int)(Original_MasterRowId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = System.DBNull.Value;
            }
            if ((Original_DateCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((System.DateTime)(Original_DateCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = System.DBNull.Value;
            }
            if ((Original_CreatedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((int)(Original_CreatedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = System.DBNull.Value;
            }
            if ((Original_DateChanged.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((System.DateTime)(Original_DateChanged.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = System.DBNull.Value;
            }
            if ((Original_ChangedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((int)(Original_ChangedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = System.DBNull.Value;
            }
            if ((Original_DateDeleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((System.DateTime)(Original_DateDeleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = System.DBNull.Value;
            }
            if ((Original_DeletedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((int)(Original_DeletedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((bool)(Original_SwitchFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[136].Value = ((bool)(Original_SwitchFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[136].Value = System.DBNull.Value;
            }
            if ((Original_SwitchFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((bool)(Original_SwitchFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[140].Value = ((System.DateTime)(Original_DateTimeFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[140].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[142].Value = ((System.DateTime)(Original_DateTimeFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[142].Value = System.DBNull.Value;
            }
            if ((Original_DateTimeFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((System.DateTime)(Original_DateTimeFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = System.DBNull.Value;
            }
            if ((Original_TextFree1 == null)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[146].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[146].Value = ((string)(Original_TextFree1));
            }
            if ((Original_TextFree2 == null)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[148].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[148].Value = ((string)(Original_TextFree2));
            }
            if ((Original_TextFree3 == null)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[150].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[150].Value = ((string)(Original_TextFree3));
            }
            if ((Original_IntFree1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[152].Value = ((int)(Original_IntFree1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[152].Value = System.DBNull.Value;
            }
            if ((Original_IntFree2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[154].Value = ((int)(Original_IntFree2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[154].Value = System.DBNull.Value;
            }
            if ((Original_IntFree3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[156].Value = ((int)(Original_IntFree3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[156].Value = System.DBNull.Value;
            }
            if ((Original_HeliActivitiesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((int)(Original_HeliActivitiesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = System.DBNull.Value;
            }
            if ((Original_OtherActivitiesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[160].Value = ((int)(Original_OtherActivitiesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[160].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[161].Value = ((int)(DaysReportRowId));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591