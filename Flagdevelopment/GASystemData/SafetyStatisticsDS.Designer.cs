//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SafetyStatisticsDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SafetyStatisticsDS : global::System.Data.DataSet {
        
        private GASafetyStatisticsDataTable tableGASafetyStatistics;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SafetyStatisticsDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SafetyStatisticsDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GASafetyStatistics"] != null)) {
                    base.Tables.Add(new GASafetyStatisticsDataTable(ds.Tables["GASafetyStatistics"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GASafetyStatisticsDataTable GASafetyStatistics {
            get {
                return this.tableGASafetyStatistics;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SafetyStatisticsDS cln = ((SafetyStatisticsDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GASafetyStatistics"] != null)) {
                    base.Tables.Add(new GASafetyStatisticsDataTable(ds.Tables["GASafetyStatistics"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGASafetyStatistics = ((GASafetyStatisticsDataTable)(base.Tables["GASafetyStatistics"]));
            if ((initTable == true)) {
                if ((this.tableGASafetyStatistics != null)) {
                    this.tableGASafetyStatistics.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SafetyStatisticsDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SafetyStatisticsDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGASafetyStatistics = new GASafetyStatisticsDataTable();
            base.Tables.Add(this.tableGASafetyStatistics);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGASafetyStatistics() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SafetyStatisticsDS ds = new SafetyStatisticsDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GASafetyStatisticsRowChangeEventHandler(object sender, GASafetyStatisticsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GASafetyStatisticsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnworkarea;
            
            private global::System.Data.DataColumn columndays;
            
            private global::System.Data.DataColumn columnExposureSeismic;
            
            private global::System.Data.DataColumn columnExposureMaritime;
            
            private global::System.Data.DataColumn columnExposureTP;
            
            private global::System.Data.DataColumn columnRecordDate;
            
            private global::System.Data.DataColumn columnnm;
            
            private global::System.Data.DataColumn columnfac;
            
            private global::System.Data.DataColumn columnmtc;
            
            private global::System.Data.DataColumn columnrwc;
            
            private global::System.Data.DataColumn columnlti;
            
            private global::System.Data.DataColumn columnppd;
            
            private global::System.Data.DataColumn columnptd;
            
            private global::System.Data.DataColumn columnfat;
            
            private global::System.Data.DataColumn columnlwd;
            
            private global::System.Data.DataColumn columnrwd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyStatisticsDataTable() {
                this.TableName = "GASafetyStatistics";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GASafetyStatisticsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GASafetyStatisticsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn workareaColumn {
                get {
                    return this.columnworkarea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn daysColumn {
                get {
                    return this.columndays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExposureSeismicColumn {
                get {
                    return this.columnExposureSeismic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExposureMaritimeColumn {
                get {
                    return this.columnExposureMaritime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExposureTPColumn {
                get {
                    return this.columnExposureTP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDateColumn {
                get {
                    return this.columnRecordDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nmColumn {
                get {
                    return this.columnnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn facColumn {
                get {
                    return this.columnfac;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mtcColumn {
                get {
                    return this.columnmtc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rwcColumn {
                get {
                    return this.columnrwc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ltiColumn {
                get {
                    return this.columnlti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ppdColumn {
                get {
                    return this.columnppd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ptdColumn {
                get {
                    return this.columnptd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fatColumn {
                get {
                    return this.columnfat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lwdColumn {
                get {
                    return this.columnlwd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rwdColumn {
                get {
                    return this.columnrwd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyStatisticsRow this[int index] {
                get {
                    return ((GASafetyStatisticsRow)(this.Rows[index]));
                }
            }
            
            public event GASafetyStatisticsRowChangeEventHandler GASafetyStatisticsRowChanging;
            
            public event GASafetyStatisticsRowChangeEventHandler GASafetyStatisticsRowChanged;
            
            public event GASafetyStatisticsRowChangeEventHandler GASafetyStatisticsRowDeleting;
            
            public event GASafetyStatisticsRowChangeEventHandler GASafetyStatisticsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGASafetyStatisticsRow(GASafetyStatisticsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyStatisticsRow AddGASafetyStatisticsRow(
                        string workarea, 
                        int days, 
                        int ExposureSeismic, 
                        int ExposureMaritime, 
                        int ExposureTP, 
                        System.DateTime RecordDate, 
                        string nm, 
                        string fac, 
                        string mtc, 
                        string rwc, 
                        string lti, 
                        string ppd, 
                        string ptd, 
                        string fat, 
                        int lwd, 
                        int rwd) {
                GASafetyStatisticsRow rowGASafetyStatisticsRow = ((GASafetyStatisticsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        workarea,
                        days,
                        ExposureSeismic,
                        ExposureMaritime,
                        ExposureTP,
                        RecordDate,
                        nm,
                        fac,
                        mtc,
                        rwc,
                        lti,
                        ppd,
                        ptd,
                        fat,
                        lwd,
                        rwd};
                rowGASafetyStatisticsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGASafetyStatisticsRow);
                return rowGASafetyStatisticsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GASafetyStatisticsDataTable cln = ((GASafetyStatisticsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GASafetyStatisticsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnworkarea = base.Columns["workarea"];
                this.columndays = base.Columns["days"];
                this.columnExposureSeismic = base.Columns["ExposureSeismic"];
                this.columnExposureMaritime = base.Columns["ExposureMaritime"];
                this.columnExposureTP = base.Columns["ExposureTP"];
                this.columnRecordDate = base.Columns["RecordDate"];
                this.columnnm = base.Columns["nm"];
                this.columnfac = base.Columns["fac"];
                this.columnmtc = base.Columns["mtc"];
                this.columnrwc = base.Columns["rwc"];
                this.columnlti = base.Columns["lti"];
                this.columnppd = base.Columns["ppd"];
                this.columnptd = base.Columns["ptd"];
                this.columnfat = base.Columns["fat"];
                this.columnlwd = base.Columns["lwd"];
                this.columnrwd = base.Columns["rwd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnworkarea = new global::System.Data.DataColumn("workarea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnworkarea);
                this.columndays = new global::System.Data.DataColumn("days", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndays);
                this.columnExposureSeismic = new global::System.Data.DataColumn("ExposureSeismic", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExposureSeismic);
                this.columnExposureMaritime = new global::System.Data.DataColumn("ExposureMaritime", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExposureMaritime);
                this.columnExposureTP = new global::System.Data.DataColumn("ExposureTP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExposureTP);
                this.columnRecordDate = new global::System.Data.DataColumn("RecordDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDate);
                this.columnnm = new global::System.Data.DataColumn("nm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnm);
                this.columnfac = new global::System.Data.DataColumn("fac", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfac);
                this.columnmtc = new global::System.Data.DataColumn("mtc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmtc);
                this.columnrwc = new global::System.Data.DataColumn("rwc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrwc);
                this.columnlti = new global::System.Data.DataColumn("lti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlti);
                this.columnppd = new global::System.Data.DataColumn("ppd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppd);
                this.columnptd = new global::System.Data.DataColumn("ptd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnptd);
                this.columnfat = new global::System.Data.DataColumn("fat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfat);
                this.columnlwd = new global::System.Data.DataColumn("lwd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlwd);
                this.columnrwd = new global::System.Data.DataColumn("rwd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrwd);
                this.columndays.ReadOnly = true;
                this.columnExposureSeismic.ReadOnly = true;
                this.columnExposureMaritime.ReadOnly = true;
                this.columnExposureTP.ReadOnly = true;
                this.columnnm.ReadOnly = true;
                this.columnfac.ReadOnly = true;
                this.columnmtc.ReadOnly = true;
                this.columnrwc.ReadOnly = true;
                this.columnlti.ReadOnly = true;
                this.columnppd.ReadOnly = true;
                this.columnptd.ReadOnly = true;
                this.columnfat.ReadOnly = true;
                this.columnlwd.ReadOnly = true;
                this.columnrwd.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyStatisticsRow NewGASafetyStatisticsRow() {
                return ((GASafetyStatisticsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GASafetyStatisticsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GASafetyStatisticsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GASafetyStatisticsRowChanged != null)) {
                    this.GASafetyStatisticsRowChanged(this, new GASafetyStatisticsRowChangeEvent(((GASafetyStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GASafetyStatisticsRowChanging != null)) {
                    this.GASafetyStatisticsRowChanging(this, new GASafetyStatisticsRowChangeEvent(((GASafetyStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GASafetyStatisticsRowDeleted != null)) {
                    this.GASafetyStatisticsRowDeleted(this, new GASafetyStatisticsRowChangeEvent(((GASafetyStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GASafetyStatisticsRowDeleting != null)) {
                    this.GASafetyStatisticsRowDeleting(this, new GASafetyStatisticsRowChangeEvent(((GASafetyStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGASafetyStatisticsRow(GASafetyStatisticsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SafetyStatisticsDS ds = new SafetyStatisticsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GASafetyStatisticsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GASafetyStatisticsRow : global::System.Data.DataRow {
            
            private GASafetyStatisticsDataTable tableGASafetyStatistics;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GASafetyStatisticsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGASafetyStatistics = ((GASafetyStatisticsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string workarea {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.workareaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'workarea\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.workareaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int days {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyStatistics.daysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'days\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.daysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExposureSeismic {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyStatistics.ExposureSeismicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExposureSeismic\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.ExposureSeismicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExposureMaritime {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyStatistics.ExposureMaritimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExposureMaritime\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.ExposureMaritimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExposureTP {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyStatistics.ExposureTPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExposureTP\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.ExposureTPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RecordDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGASafetyStatistics.RecordDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDate\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.RecordDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nm {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.nmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nm\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.nmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fac {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.facColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fac\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.facColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mtc {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.mtcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mtc\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.mtcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rwc {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.rwcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rwc\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.rwcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lti {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.ltiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lti\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.ltiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ppd {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.ppdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ppd\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.ppdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ptd {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.ptdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ptd\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.ptdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fat {
                get {
                    try {
                        return ((string)(this[this.tableGASafetyStatistics.fatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fat\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.fatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int lwd {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyStatistics.lwdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lwd\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.lwdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int rwd {
                get {
                    try {
                        return ((int)(this[this.tableGASafetyStatistics.rwdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rwd\' in table \'GASafetyStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASafetyStatistics.rwdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsworkareaNull() {
                return this.IsNull(this.tableGASafetyStatistics.workareaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetworkareaNull() {
                this[this.tableGASafetyStatistics.workareaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdaysNull() {
                return this.IsNull(this.tableGASafetyStatistics.daysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdaysNull() {
                this[this.tableGASafetyStatistics.daysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExposureSeismicNull() {
                return this.IsNull(this.tableGASafetyStatistics.ExposureSeismicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExposureSeismicNull() {
                this[this.tableGASafetyStatistics.ExposureSeismicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExposureMaritimeNull() {
                return this.IsNull(this.tableGASafetyStatistics.ExposureMaritimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExposureMaritimeNull() {
                this[this.tableGASafetyStatistics.ExposureMaritimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExposureTPNull() {
                return this.IsNull(this.tableGASafetyStatistics.ExposureTPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExposureTPNull() {
                this[this.tableGASafetyStatistics.ExposureTPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDateNull() {
                return this.IsNull(this.tableGASafetyStatistics.RecordDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDateNull() {
                this[this.tableGASafetyStatistics.RecordDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnmNull() {
                return this.IsNull(this.tableGASafetyStatistics.nmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnmNull() {
                this[this.tableGASafetyStatistics.nmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfacNull() {
                return this.IsNull(this.tableGASafetyStatistics.facColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfacNull() {
                this[this.tableGASafetyStatistics.facColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmtcNull() {
                return this.IsNull(this.tableGASafetyStatistics.mtcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmtcNull() {
                this[this.tableGASafetyStatistics.mtcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrwcNull() {
                return this.IsNull(this.tableGASafetyStatistics.rwcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrwcNull() {
                this[this.tableGASafetyStatistics.rwcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsltiNull() {
                return this.IsNull(this.tableGASafetyStatistics.ltiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetltiNull() {
                this[this.tableGASafetyStatistics.ltiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsppdNull() {
                return this.IsNull(this.tableGASafetyStatistics.ppdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetppdNull() {
                this[this.tableGASafetyStatistics.ppdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsptdNull() {
                return this.IsNull(this.tableGASafetyStatistics.ptdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetptdNull() {
                this[this.tableGASafetyStatistics.ptdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfatNull() {
                return this.IsNull(this.tableGASafetyStatistics.fatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfatNull() {
                this[this.tableGASafetyStatistics.fatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslwdNull() {
                return this.IsNull(this.tableGASafetyStatistics.lwdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlwdNull() {
                this[this.tableGASafetyStatistics.lwdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrwdNull() {
                return this.IsNull(this.tableGASafetyStatistics.rwdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrwdNull() {
                this[this.tableGASafetyStatistics.rwdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GASafetyStatisticsRowChangeEvent : global::System.EventArgs {
            
            private GASafetyStatisticsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyStatisticsRowChangeEvent(GASafetyStatisticsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASafetyStatisticsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591