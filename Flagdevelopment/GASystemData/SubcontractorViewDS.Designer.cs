//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SubcontractorViewDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SubcontractorViewDS : global::System.Data.DataSet {
        
        private GASubcontractorViewDataTable tableGASubcontractorView;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SubcontractorViewDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SubcontractorViewDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GASubcontractorView"] != null)) {
                    base.Tables.Add(new GASubcontractorViewDataTable(ds.Tables["GASubcontractorView"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GASubcontractorViewDataTable GASubcontractorView {
            get {
                return this.tableGASubcontractorView;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SubcontractorViewDS cln = ((SubcontractorViewDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GASubcontractorView"] != null)) {
                    base.Tables.Add(new GASubcontractorViewDataTable(ds.Tables["GASubcontractorView"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGASubcontractorView = ((GASubcontractorViewDataTable)(base.Tables["GASubcontractorView"]));
            if ((initTable == true)) {
                if ((this.tableGASubcontractorView != null)) {
                    this.tableGASubcontractorView.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SubcontractorViewDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SubcontractorViewDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGASubcontractorView = new GASubcontractorViewDataTable();
            base.Tables.Add(this.tableGASubcontractorView);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGASubcontractorView() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SubcontractorViewDS ds = new SubcontractorViewDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GASubcontractorViewRowChangeEventHandler(object sender, GASubcontractorViewRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GASubcontractorViewDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSubcontractorViewRowId;
            
            private global::System.Data.DataColumn columnSubcontractorViewReferenceId;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnIncidentReporter;
            
            private global::System.Data.DataColumn columnItem;
            
            private global::System.Data.DataColumn columnDateLastAudit;
            
            private global::System.Data.DataColumn columnMainPointofContact;
            
            private global::System.Data.DataColumn columnExternalAuditFrequence;
            
            private global::System.Data.DataColumn columnHasMaritimeReport;
            
            private global::System.Data.DataColumn columnDateNextAudit;
            
            private global::System.Data.DataColumn columnSubcontractorAddress;
            
            private global::System.Data.DataColumn columnRXTContractholderPersonnelRowId;
            
            private global::System.Data.DataColumn columnSubcontractorEmailAddress;
            
            private global::System.Data.DataColumn columnCompanyRowId;
            
            private global::System.Data.DataColumn columnCategoryLevelListsRowId;
            
            private global::System.Data.DataColumn columnSubContractorAuditRequiredListsRowId;
            
            private global::System.Data.DataColumn columnStatusListsRowId;
            
            private global::System.Data.DataColumn columnTypeOfIncidentListsRowId;
            
            private global::System.Data.DataColumn columnApprovedSince;
            
            private global::System.Data.DataColumn columnProductServiceListsRowId;
            
            private global::System.Data.DataColumn columnReferenceIdPrefix;
            
            private global::System.Data.DataColumn columnEyeWitness;
            
            private global::System.Data.DataColumn columnMasterRowId;
            
            private global::System.Data.DataColumn columnDateCreated;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnDateChanged;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnDateDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnISO9001Accredited;
            
            private global::System.Data.DataColumn columnISO14001Accredited;
            
            private global::System.Data.DataColumn columnOSHA18001Accredited;
            
            private global::System.Data.DataColumn columnDateTimeFree1;
            
            private global::System.Data.DataColumn columnDateTimeFree2;
            
            private global::System.Data.DataColumn columnDateTimeFree3;
            
            private global::System.Data.DataColumn columnurl;
            
            private global::System.Data.DataColumn columnMimetype;
            
            private global::System.Data.DataColumn columnReviewSchedule;
            
            private global::System.Data.DataColumn columnIntFree1;
            
            private global::System.Data.DataColumn columnIntFree2;
            
            private global::System.Data.DataColumn columnViewTypeListsRowId;
            
            private global::System.Data.DataColumn columnContributionFactorToTheIncident;
            
            private global::System.Data.DataColumn columnCurrentlyProvides;
            
            private global::System.Data.DataColumn columnControlMeasureHealthAndSafety;
            
            private global::System.Data.DataColumn columnControlMeasureEnvironmental;
            
            private global::System.Data.DataColumn columnControlMeasureQuality;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASubcontractorViewDataTable() {
                this.TableName = "GASubcontractorView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GASubcontractorViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GASubcontractorViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubcontractorViewRowIdColumn {
                get {
                    return this.columnSubcontractorViewRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubcontractorViewReferenceIdColumn {
                get {
                    return this.columnSubcontractorViewReferenceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncidentReporterColumn {
                get {
                    return this.columnIncidentReporter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemColumn {
                get {
                    return this.columnItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateLastAuditColumn {
                get {
                    return this.columnDateLastAudit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MainPointofContactColumn {
                get {
                    return this.columnMainPointofContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExternalAuditFrequenceColumn {
                get {
                    return this.columnExternalAuditFrequence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HasMaritimeReportColumn {
                get {
                    return this.columnHasMaritimeReport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateNextAuditColumn {
                get {
                    return this.columnDateNextAudit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubcontractorAddressColumn {
                get {
                    return this.columnSubcontractorAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RXTContractholderPersonnelRowIdColumn {
                get {
                    return this.columnRXTContractholderPersonnelRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubcontractorEmailAddressColumn {
                get {
                    return this.columnSubcontractorEmailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyRowIdColumn {
                get {
                    return this.columnCompanyRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryLevelListsRowIdColumn {
                get {
                    return this.columnCategoryLevelListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubContractorAuditRequiredListsRowIdColumn {
                get {
                    return this.columnSubContractorAuditRequiredListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusListsRowIdColumn {
                get {
                    return this.columnStatusListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeOfIncidentListsRowIdColumn {
                get {
                    return this.columnTypeOfIncidentListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApprovedSinceColumn {
                get {
                    return this.columnApprovedSince;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductServiceListsRowIdColumn {
                get {
                    return this.columnProductServiceListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceIdPrefixColumn {
                get {
                    return this.columnReferenceIdPrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EyeWitnessColumn {
                get {
                    return this.columnEyeWitness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISO9001AccreditedColumn {
                get {
                    return this.columnISO9001Accredited;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISO14001AccreditedColumn {
                get {
                    return this.columnISO14001Accredited;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSHA18001AccreditedColumn {
                get {
                    return this.columnOSHA18001Accredited;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urlColumn {
                get {
                    return this.columnurl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MimetypeColumn {
                get {
                    return this.columnMimetype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewScheduleColumn {
                get {
                    return this.columnReviewSchedule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ViewTypeListsRowIdColumn {
                get {
                    return this.columnViewTypeListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContributionFactorToTheIncidentColumn {
                get {
                    return this.columnContributionFactorToTheIncident;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrentlyProvidesColumn {
                get {
                    return this.columnCurrentlyProvides;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ControlMeasureHealthAndSafetyColumn {
                get {
                    return this.columnControlMeasureHealthAndSafety;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ControlMeasureEnvironmentalColumn {
                get {
                    return this.columnControlMeasureEnvironmental;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ControlMeasureQualityColumn {
                get {
                    return this.columnControlMeasureQuality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASubcontractorViewRow this[int index] {
                get {
                    return ((GASubcontractorViewRow)(this.Rows[index]));
                }
            }
            
            public event GASubcontractorViewRowChangeEventHandler GASubcontractorViewRowChanging;
            
            public event GASubcontractorViewRowChangeEventHandler GASubcontractorViewRowChanged;
            
            public event GASubcontractorViewRowChangeEventHandler GASubcontractorViewRowDeleting;
            
            public event GASubcontractorViewRowChangeEventHandler GASubcontractorViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGASubcontractorViewRow(GASubcontractorViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASubcontractorViewRow AddGASubcontractorViewRow(
                        string SubcontractorViewReferenceId, 
                        string Title, 
                        string IncidentReporter, 
                        string Item, 
                        System.DateTime DateLastAudit, 
                        string MainPointofContact, 
                        string ExternalAuditFrequence, 
                        bool HasMaritimeReport, 
                        System.DateTime DateNextAudit, 
                        string SubcontractorAddress, 
                        int RXTContractholderPersonnelRowId, 
                        string SubcontractorEmailAddress, 
                        int CompanyRowId, 
                        int CategoryLevelListsRowId, 
                        int SubContractorAuditRequiredListsRowId, 
                        int StatusListsRowId, 
                        int TypeOfIncidentListsRowId, 
                        int ApprovedSince, 
                        int ProductServiceListsRowId, 
                        string ReferenceIdPrefix, 
                        int EyeWitness, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool ISO9001Accredited, 
                        bool ISO14001Accredited, 
                        bool OSHA18001Accredited, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string url, 
                        string Mimetype, 
                        string ReviewSchedule, 
                        int IntFree1, 
                        int IntFree2, 
                        int ViewTypeListsRowId, 
                        string ContributionFactorToTheIncident, 
                        string CurrentlyProvides, 
                        string ControlMeasureHealthAndSafety, 
                        string ControlMeasureEnvironmental, 
                        string ControlMeasureQuality) {
                GASubcontractorViewRow rowGASubcontractorViewRow = ((GASubcontractorViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SubcontractorViewReferenceId,
                        Title,
                        IncidentReporter,
                        Item,
                        DateLastAudit,
                        MainPointofContact,
                        ExternalAuditFrequence,
                        HasMaritimeReport,
                        DateNextAudit,
                        SubcontractorAddress,
                        RXTContractholderPersonnelRowId,
                        SubcontractorEmailAddress,
                        CompanyRowId,
                        CategoryLevelListsRowId,
                        SubContractorAuditRequiredListsRowId,
                        StatusListsRowId,
                        TypeOfIncidentListsRowId,
                        ApprovedSince,
                        ProductServiceListsRowId,
                        ReferenceIdPrefix,
                        EyeWitness,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        ISO9001Accredited,
                        ISO14001Accredited,
                        OSHA18001Accredited,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        url,
                        Mimetype,
                        ReviewSchedule,
                        IntFree1,
                        IntFree2,
                        ViewTypeListsRowId,
                        ContributionFactorToTheIncident,
                        CurrentlyProvides,
                        ControlMeasureHealthAndSafety,
                        ControlMeasureEnvironmental,
                        ControlMeasureQuality};
                rowGASubcontractorViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGASubcontractorViewRow);
                return rowGASubcontractorViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASubcontractorViewRow FindBySubcontractorViewRowId(int SubcontractorViewRowId) {
                return ((GASubcontractorViewRow)(this.Rows.Find(new object[] {
                            SubcontractorViewRowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GASubcontractorViewDataTable cln = ((GASubcontractorViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GASubcontractorViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSubcontractorViewRowId = base.Columns["SubcontractorViewRowId"];
                this.columnSubcontractorViewReferenceId = base.Columns["SubcontractorViewReferenceId"];
                this.columnTitle = base.Columns["Title"];
                this.columnIncidentReporter = base.Columns["IncidentReporter"];
                this.columnItem = base.Columns["Item"];
                this.columnDateLastAudit = base.Columns["DateLastAudit"];
                this.columnMainPointofContact = base.Columns["MainPointofContact"];
                this.columnExternalAuditFrequence = base.Columns["ExternalAuditFrequence"];
                this.columnHasMaritimeReport = base.Columns["HasMaritimeReport"];
                this.columnDateNextAudit = base.Columns["DateNextAudit"];
                this.columnSubcontractorAddress = base.Columns["SubcontractorAddress"];
                this.columnRXTContractholderPersonnelRowId = base.Columns["RXTContractholderPersonnelRowId"];
                this.columnSubcontractorEmailAddress = base.Columns["SubcontractorEmailAddress"];
                this.columnCompanyRowId = base.Columns["CompanyRowId"];
                this.columnCategoryLevelListsRowId = base.Columns["CategoryLevelListsRowId"];
                this.columnSubContractorAuditRequiredListsRowId = base.Columns["SubContractorAuditRequiredListsRowId"];
                this.columnStatusListsRowId = base.Columns["StatusListsRowId"];
                this.columnTypeOfIncidentListsRowId = base.Columns["TypeOfIncidentListsRowId"];
                this.columnApprovedSince = base.Columns["ApprovedSince"];
                this.columnProductServiceListsRowId = base.Columns["ProductServiceListsRowId"];
                this.columnReferenceIdPrefix = base.Columns["ReferenceIdPrefix"];
                this.columnEyeWitness = base.Columns["EyeWitness"];
                this.columnMasterRowId = base.Columns["MasterRowId"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnDateChanged = base.Columns["DateChanged"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnDateDeleted = base.Columns["DateDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnISO9001Accredited = base.Columns["ISO9001Accredited"];
                this.columnISO14001Accredited = base.Columns["ISO14001Accredited"];
                this.columnOSHA18001Accredited = base.Columns["OSHA18001Accredited"];
                this.columnDateTimeFree1 = base.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = base.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = base.Columns["DateTimeFree3"];
                this.columnurl = base.Columns["url"];
                this.columnMimetype = base.Columns["Mimetype"];
                this.columnReviewSchedule = base.Columns["ReviewSchedule"];
                this.columnIntFree1 = base.Columns["IntFree1"];
                this.columnIntFree2 = base.Columns["IntFree2"];
                this.columnViewTypeListsRowId = base.Columns["ViewTypeListsRowId"];
                this.columnContributionFactorToTheIncident = base.Columns["ContributionFactorToTheIncident"];
                this.columnCurrentlyProvides = base.Columns["CurrentlyProvides"];
                this.columnControlMeasureHealthAndSafety = base.Columns["ControlMeasureHealthAndSafety"];
                this.columnControlMeasureEnvironmental = base.Columns["ControlMeasureEnvironmental"];
                this.columnControlMeasureQuality = base.Columns["ControlMeasureQuality"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSubcontractorViewRowId = new global::System.Data.DataColumn("SubcontractorViewRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubcontractorViewRowId);
                this.columnSubcontractorViewReferenceId = new global::System.Data.DataColumn("SubcontractorViewReferenceId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubcontractorViewReferenceId);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnIncidentReporter = new global::System.Data.DataColumn("IncidentReporter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncidentReporter);
                this.columnItem = new global::System.Data.DataColumn("Item", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Item");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "ItemColumn");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnItem");
                this.columnItem.ExtendedProperties.Add("Generator_UserColumnName", "Item");
                base.Columns.Add(this.columnItem);
                this.columnDateLastAudit = new global::System.Data.DataColumn("DateLastAudit", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateLastAudit);
                this.columnMainPointofContact = new global::System.Data.DataColumn("MainPointofContact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainPointofContact);
                this.columnExternalAuditFrequence = new global::System.Data.DataColumn("ExternalAuditFrequence", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExternalAuditFrequence);
                this.columnHasMaritimeReport = new global::System.Data.DataColumn("HasMaritimeReport", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasMaritimeReport);
                this.columnDateNextAudit = new global::System.Data.DataColumn("DateNextAudit", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateNextAudit);
                this.columnSubcontractorAddress = new global::System.Data.DataColumn("SubcontractorAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubcontractorAddress);
                this.columnRXTContractholderPersonnelRowId = new global::System.Data.DataColumn("RXTContractholderPersonnelRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRXTContractholderPersonnelRowId);
                this.columnSubcontractorEmailAddress = new global::System.Data.DataColumn("SubcontractorEmailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubcontractorEmailAddress);
                this.columnCompanyRowId = new global::System.Data.DataColumn("CompanyRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyRowId);
                this.columnCategoryLevelListsRowId = new global::System.Data.DataColumn("CategoryLevelListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryLevelListsRowId);
                this.columnSubContractorAuditRequiredListsRowId = new global::System.Data.DataColumn("SubContractorAuditRequiredListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubContractorAuditRequiredListsRowId);
                this.columnStatusListsRowId = new global::System.Data.DataColumn("StatusListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusListsRowId);
                this.columnTypeOfIncidentListsRowId = new global::System.Data.DataColumn("TypeOfIncidentListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfIncidentListsRowId);
                this.columnApprovedSince = new global::System.Data.DataColumn("ApprovedSince", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedSince);
                this.columnProductServiceListsRowId = new global::System.Data.DataColumn("ProductServiceListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductServiceListsRowId);
                this.columnReferenceIdPrefix = new global::System.Data.DataColumn("ReferenceIdPrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceIdPrefix);
                this.columnEyeWitness = new global::System.Data.DataColumn("EyeWitness", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEyeWitness);
                this.columnMasterRowId = new global::System.Data.DataColumn("MasterRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new global::System.Data.DataColumn("DateCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new global::System.Data.DataColumn("DateChanged", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new global::System.Data.DataColumn("DateDeleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnISO9001Accredited = new global::System.Data.DataColumn("ISO9001Accredited", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISO9001Accredited);
                this.columnISO14001Accredited = new global::System.Data.DataColumn("ISO14001Accredited", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISO14001Accredited);
                this.columnOSHA18001Accredited = new global::System.Data.DataColumn("OSHA18001Accredited", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSHA18001Accredited);
                this.columnDateTimeFree1 = new global::System.Data.DataColumn("DateTimeFree1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new global::System.Data.DataColumn("DateTimeFree2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new global::System.Data.DataColumn("DateTimeFree3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree3);
                this.columnurl = new global::System.Data.DataColumn("url", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurl);
                this.columnMimetype = new global::System.Data.DataColumn("Mimetype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMimetype);
                this.columnReviewSchedule = new global::System.Data.DataColumn("ReviewSchedule", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewSchedule);
                this.columnIntFree1 = new global::System.Data.DataColumn("IntFree1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new global::System.Data.DataColumn("IntFree2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree2);
                this.columnViewTypeListsRowId = new global::System.Data.DataColumn("ViewTypeListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViewTypeListsRowId);
                this.columnContributionFactorToTheIncident = new global::System.Data.DataColumn("ContributionFactorToTheIncident", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContributionFactorToTheIncident);
                this.columnCurrentlyProvides = new global::System.Data.DataColumn("CurrentlyProvides", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentlyProvides);
                this.columnControlMeasureHealthAndSafety = new global::System.Data.DataColumn("ControlMeasureHealthAndSafety", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnControlMeasureHealthAndSafety);
                this.columnControlMeasureEnvironmental = new global::System.Data.DataColumn("ControlMeasureEnvironmental", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnControlMeasureEnvironmental);
                this.columnControlMeasureQuality = new global::System.Data.DataColumn("ControlMeasureQuality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnControlMeasureQuality);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSubcontractorViewRowId}, true));
                this.columnSubcontractorViewRowId.AutoIncrement = true;
                this.columnSubcontractorViewRowId.AllowDBNull = false;
                this.columnSubcontractorViewRowId.ReadOnly = true;
                this.columnSubcontractorViewRowId.Unique = true;
                this.columnSubcontractorViewReferenceId.MaxLength = 50;
                this.columnTitle.MaxLength = 200;
                this.columnIncidentReporter.MaxLength = 100;
                this.columnItem.MaxLength = 200;
                this.columnMainPointofContact.MaxLength = 1073741823;
                this.columnExternalAuditFrequence.MaxLength = 50;
                this.columnSubcontractorAddress.MaxLength = 1073741823;
                this.columnSubcontractorEmailAddress.MaxLength = 50;
                this.columnReferenceIdPrefix.MaxLength = 8;
                this.columnurl.MaxLength = 200;
                this.columnMimetype.MaxLength = 200;
                this.columnReviewSchedule.MaxLength = 200;
                this.columnContributionFactorToTheIncident.MaxLength = 1073741823;
                this.columnCurrentlyProvides.MaxLength = 1073741823;
                this.columnControlMeasureHealthAndSafety.MaxLength = 1073741823;
                this.columnControlMeasureEnvironmental.MaxLength = 1073741823;
                this.columnControlMeasureQuality.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASubcontractorViewRow NewGASubcontractorViewRow() {
                return ((GASubcontractorViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GASubcontractorViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GASubcontractorViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GASubcontractorViewRowChanged != null)) {
                    this.GASubcontractorViewRowChanged(this, new GASubcontractorViewRowChangeEvent(((GASubcontractorViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GASubcontractorViewRowChanging != null)) {
                    this.GASubcontractorViewRowChanging(this, new GASubcontractorViewRowChangeEvent(((GASubcontractorViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GASubcontractorViewRowDeleted != null)) {
                    this.GASubcontractorViewRowDeleted(this, new GASubcontractorViewRowChangeEvent(((GASubcontractorViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GASubcontractorViewRowDeleting != null)) {
                    this.GASubcontractorViewRowDeleting(this, new GASubcontractorViewRowChangeEvent(((GASubcontractorViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGASubcontractorViewRow(GASubcontractorViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SubcontractorViewDS ds = new SubcontractorViewDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GASubcontractorViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GASubcontractorViewRow : global::System.Data.DataRow {
            
            private GASubcontractorViewDataTable tableGASubcontractorView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GASubcontractorViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGASubcontractorView = ((GASubcontractorViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubcontractorViewRowId {
                get {
                    return ((int)(this[this.tableGASubcontractorView.SubcontractorViewRowIdColumn]));
                }
                set {
                    this[this.tableGASubcontractorView.SubcontractorViewRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubcontractorViewReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.SubcontractorViewReferenceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubcontractorViewReferenceId\' in table \'GASubcontractorView" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.SubcontractorViewReferenceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Title\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IncidentReporter {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.IncidentReporterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncidentReporter\' in table \'GASubcontractorView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.IncidentReporterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.ItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.ItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateLastAudit {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGASubcontractorView.DateLastAuditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateLastAudit\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.DateLastAuditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MainPointofContact {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.MainPointofContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainPointofContact\' in table \'GASubcontractorView\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.MainPointofContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExternalAuditFrequence {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.ExternalAuditFrequenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExternalAuditFrequence\' in table \'GASubcontractorView\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.ExternalAuditFrequenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HasMaritimeReport {
                get {
                    try {
                        return ((bool)(this[this.tableGASubcontractorView.HasMaritimeReportColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasMaritimeReport\' in table \'GASubcontractorView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.HasMaritimeReportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateNextAudit {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGASubcontractorView.DateNextAuditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateNextAudit\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.DateNextAuditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubcontractorAddress {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.SubcontractorAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubcontractorAddress\' in table \'GASubcontractorView\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.SubcontractorAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RXTContractholderPersonnelRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASubcontractorView.RXTContractholderPersonnelRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RXTContractholderPersonnelRowId\' in table \'GASubcontractorV" +
                                "iew\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.RXTContractholderPersonnelRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubcontractorEmailAddress {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.SubcontractorEmailAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubcontractorEmailAddress\' in table \'GASubcontractorView\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.SubcontractorEmailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompanyRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASubcontractorView.CompanyRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyRowId\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.CompanyRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CategoryLevelListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASubcontractorView.CategoryLevelListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryLevelListsRowId\' in table \'GASubcontractorView\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.CategoryLevelListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubContractorAuditRequiredListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASubcontractorView.SubContractorAuditRequiredListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubContractorAuditRequiredListsRowId\' in table \'GASubcontra" +
                                "ctorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.SubContractorAuditRequiredListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StatusListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASubcontractorView.StatusListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusListsRowId\' in table \'GASubcontractorView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.StatusListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TypeOfIncidentListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASubcontractorView.TypeOfIncidentListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeOfIncidentListsRowId\' in table \'GASubcontractorView\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.TypeOfIncidentListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApprovedSince {
                get {
                    try {
                        return ((int)(this[this.tableGASubcontractorView.ApprovedSinceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovedSince\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.ApprovedSinceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProductServiceListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASubcontractorView.ProductServiceListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductServiceListsRowId\' in table \'GASubcontractorView\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.ProductServiceListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferenceIdPrefix {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.ReferenceIdPrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferenceIdPrefix\' in table \'GASubcontractorView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.ReferenceIdPrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EyeWitness {
                get {
                    try {
                        return ((int)(this[this.tableGASubcontractorView.EyeWitnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EyeWitness\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.EyeWitnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASubcontractorView.MasterRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MasterRowId\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.MasterRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGASubcontractorView.DateCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateCreated\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.DateCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGASubcontractorView.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGASubcontractorView.DateChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateChanged\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.DateChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGASubcontractorView.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGASubcontractorView.DateDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateDeleted\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.DateDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGASubcontractorView.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ISO9001Accredited {
                get {
                    try {
                        return ((bool)(this[this.tableGASubcontractorView.ISO9001AccreditedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISO9001Accredited\' in table \'GASubcontractorView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.ISO9001AccreditedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ISO14001Accredited {
                get {
                    try {
                        return ((bool)(this[this.tableGASubcontractorView.ISO14001AccreditedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISO14001Accredited\' in table \'GASubcontractorView\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.ISO14001AccreditedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool OSHA18001Accredited {
                get {
                    try {
                        return ((bool)(this[this.tableGASubcontractorView.OSHA18001AccreditedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSHA18001Accredited\' in table \'GASubcontractorView\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.OSHA18001AccreditedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGASubcontractorView.DateTimeFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree1\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.DateTimeFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGASubcontractorView.DateTimeFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree2\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.DateTimeFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGASubcontractorView.DateTimeFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree3\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.DateTimeFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string url {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.urlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'url\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.urlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mimetype {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.MimetypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mimetype\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.MimetypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewSchedule {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.ReviewScheduleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewSchedule\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.ReviewScheduleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGASubcontractorView.IntFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntFree1\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.IntFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGASubcontractorView.IntFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntFree2\' in table \'GASubcontractorView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.IntFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ViewTypeListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGASubcontractorView.ViewTypeListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ViewTypeListsRowId\' in table \'GASubcontractorView\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.ViewTypeListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContributionFactorToTheIncident {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.ContributionFactorToTheIncidentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContributionFactorToTheIncident\' in table \'GASubcontractorV" +
                                "iew\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.ContributionFactorToTheIncidentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrentlyProvides {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.CurrentlyProvidesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentlyProvides\' in table \'GASubcontractorView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.CurrentlyProvidesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ControlMeasureHealthAndSafety {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.ControlMeasureHealthAndSafetyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ControlMeasureHealthAndSafety\' in table \'GASubcontractorVie" +
                                "w\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.ControlMeasureHealthAndSafetyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ControlMeasureEnvironmental {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.ControlMeasureEnvironmentalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ControlMeasureEnvironmental\' in table \'GASubcontractorView\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.ControlMeasureEnvironmentalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ControlMeasureQuality {
                get {
                    try {
                        return ((string)(this[this.tableGASubcontractorView.ControlMeasureQualityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ControlMeasureQuality\' in table \'GASubcontractorView\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGASubcontractorView.ControlMeasureQualityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubcontractorViewReferenceIdNull() {
                return this.IsNull(this.tableGASubcontractorView.SubcontractorViewReferenceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubcontractorViewReferenceIdNull() {
                this[this.tableGASubcontractorView.SubcontractorViewReferenceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitleNull() {
                return this.IsNull(this.tableGASubcontractorView.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitleNull() {
                this[this.tableGASubcontractorView.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncidentReporterNull() {
                return this.IsNull(this.tableGASubcontractorView.IncidentReporterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncidentReporterNull() {
                this[this.tableGASubcontractorView.IncidentReporterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNull() {
                return this.IsNull(this.tableGASubcontractorView.ItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNull() {
                this[this.tableGASubcontractorView.ItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateLastAuditNull() {
                return this.IsNull(this.tableGASubcontractorView.DateLastAuditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateLastAuditNull() {
                this[this.tableGASubcontractorView.DateLastAuditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMainPointofContactNull() {
                return this.IsNull(this.tableGASubcontractorView.MainPointofContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMainPointofContactNull() {
                this[this.tableGASubcontractorView.MainPointofContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExternalAuditFrequenceNull() {
                return this.IsNull(this.tableGASubcontractorView.ExternalAuditFrequenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExternalAuditFrequenceNull() {
                this[this.tableGASubcontractorView.ExternalAuditFrequenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHasMaritimeReportNull() {
                return this.IsNull(this.tableGASubcontractorView.HasMaritimeReportColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHasMaritimeReportNull() {
                this[this.tableGASubcontractorView.HasMaritimeReportColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNextAuditNull() {
                return this.IsNull(this.tableGASubcontractorView.DateNextAuditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNextAuditNull() {
                this[this.tableGASubcontractorView.DateNextAuditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubcontractorAddressNull() {
                return this.IsNull(this.tableGASubcontractorView.SubcontractorAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubcontractorAddressNull() {
                this[this.tableGASubcontractorView.SubcontractorAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRXTContractholderPersonnelRowIdNull() {
                return this.IsNull(this.tableGASubcontractorView.RXTContractholderPersonnelRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRXTContractholderPersonnelRowIdNull() {
                this[this.tableGASubcontractorView.RXTContractholderPersonnelRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubcontractorEmailAddressNull() {
                return this.IsNull(this.tableGASubcontractorView.SubcontractorEmailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubcontractorEmailAddressNull() {
                this[this.tableGASubcontractorView.SubcontractorEmailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyRowIdNull() {
                return this.IsNull(this.tableGASubcontractorView.CompanyRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyRowIdNull() {
                this[this.tableGASubcontractorView.CompanyRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryLevelListsRowIdNull() {
                return this.IsNull(this.tableGASubcontractorView.CategoryLevelListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryLevelListsRowIdNull() {
                this[this.tableGASubcontractorView.CategoryLevelListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubContractorAuditRequiredListsRowIdNull() {
                return this.IsNull(this.tableGASubcontractorView.SubContractorAuditRequiredListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubContractorAuditRequiredListsRowIdNull() {
                this[this.tableGASubcontractorView.SubContractorAuditRequiredListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusListsRowIdNull() {
                return this.IsNull(this.tableGASubcontractorView.StatusListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusListsRowIdNull() {
                this[this.tableGASubcontractorView.StatusListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeOfIncidentListsRowIdNull() {
                return this.IsNull(this.tableGASubcontractorView.TypeOfIncidentListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeOfIncidentListsRowIdNull() {
                this[this.tableGASubcontractorView.TypeOfIncidentListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovedSinceNull() {
                return this.IsNull(this.tableGASubcontractorView.ApprovedSinceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovedSinceNull() {
                this[this.tableGASubcontractorView.ApprovedSinceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductServiceListsRowIdNull() {
                return this.IsNull(this.tableGASubcontractorView.ProductServiceListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductServiceListsRowIdNull() {
                this[this.tableGASubcontractorView.ProductServiceListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceIdPrefixNull() {
                return this.IsNull(this.tableGASubcontractorView.ReferenceIdPrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceIdPrefixNull() {
                this[this.tableGASubcontractorView.ReferenceIdPrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEyeWitnessNull() {
                return this.IsNull(this.tableGASubcontractorView.EyeWitnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEyeWitnessNull() {
                this[this.tableGASubcontractorView.EyeWitnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGASubcontractorView.MasterRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterRowIdNull() {
                this[this.tableGASubcontractorView.MasterRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGASubcontractorView.DateCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateCreatedNull() {
                this[this.tableGASubcontractorView.DateCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGASubcontractorView.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableGASubcontractorView.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGASubcontractorView.DateChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangedNull() {
                this[this.tableGASubcontractorView.DateChangedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGASubcontractorView.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableGASubcontractorView.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGASubcontractorView.DateDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateDeletedNull() {
                this[this.tableGASubcontractorView.DateDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGASubcontractorView.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableGASubcontractorView.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISO9001AccreditedNull() {
                return this.IsNull(this.tableGASubcontractorView.ISO9001AccreditedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISO9001AccreditedNull() {
                this[this.tableGASubcontractorView.ISO9001AccreditedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISO14001AccreditedNull() {
                return this.IsNull(this.tableGASubcontractorView.ISO14001AccreditedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISO14001AccreditedNull() {
                this[this.tableGASubcontractorView.ISO14001AccreditedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSHA18001AccreditedNull() {
                return this.IsNull(this.tableGASubcontractorView.OSHA18001AccreditedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSHA18001AccreditedNull() {
                this[this.tableGASubcontractorView.OSHA18001AccreditedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGASubcontractorView.DateTimeFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree1Null() {
                this[this.tableGASubcontractorView.DateTimeFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGASubcontractorView.DateTimeFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree2Null() {
                this[this.tableGASubcontractorView.DateTimeFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGASubcontractorView.DateTimeFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree3Null() {
                this[this.tableGASubcontractorView.DateTimeFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsurlNull() {
                return this.IsNull(this.tableGASubcontractorView.urlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturlNull() {
                this[this.tableGASubcontractorView.urlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMimetypeNull() {
                return this.IsNull(this.tableGASubcontractorView.MimetypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMimetypeNull() {
                this[this.tableGASubcontractorView.MimetypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewScheduleNull() {
                return this.IsNull(this.tableGASubcontractorView.ReviewScheduleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewScheduleNull() {
                this[this.tableGASubcontractorView.ReviewScheduleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGASubcontractorView.IntFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree1Null() {
                this[this.tableGASubcontractorView.IntFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGASubcontractorView.IntFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree2Null() {
                this[this.tableGASubcontractorView.IntFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsViewTypeListsRowIdNull() {
                return this.IsNull(this.tableGASubcontractorView.ViewTypeListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetViewTypeListsRowIdNull() {
                this[this.tableGASubcontractorView.ViewTypeListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContributionFactorToTheIncidentNull() {
                return this.IsNull(this.tableGASubcontractorView.ContributionFactorToTheIncidentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContributionFactorToTheIncidentNull() {
                this[this.tableGASubcontractorView.ContributionFactorToTheIncidentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentlyProvidesNull() {
                return this.IsNull(this.tableGASubcontractorView.CurrentlyProvidesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentlyProvidesNull() {
                this[this.tableGASubcontractorView.CurrentlyProvidesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsControlMeasureHealthAndSafetyNull() {
                return this.IsNull(this.tableGASubcontractorView.ControlMeasureHealthAndSafetyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetControlMeasureHealthAndSafetyNull() {
                this[this.tableGASubcontractorView.ControlMeasureHealthAndSafetyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsControlMeasureEnvironmentalNull() {
                return this.IsNull(this.tableGASubcontractorView.ControlMeasureEnvironmentalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetControlMeasureEnvironmentalNull() {
                this[this.tableGASubcontractorView.ControlMeasureEnvironmentalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsControlMeasureQualityNull() {
                return this.IsNull(this.tableGASubcontractorView.ControlMeasureQualityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetControlMeasureQualityNull() {
                this[this.tableGASubcontractorView.ControlMeasureQualityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GASubcontractorViewRowChangeEvent : global::System.EventArgs {
            
            private GASubcontractorViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASubcontractorViewRowChangeEvent(GASubcontractorViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GASubcontractorViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591