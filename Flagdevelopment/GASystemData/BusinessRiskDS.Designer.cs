//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BusinessRiskDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BusinessRiskDS : global::System.Data.DataSet {
        
        private GABusinessRiskDataTable tableGABusinessRisk;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BusinessRiskDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected BusinessRiskDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GABusinessRisk"] != null)) {
                    base.Tables.Add(new GABusinessRiskDataTable(ds.Tables["GABusinessRisk"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GABusinessRiskDataTable GABusinessRisk {
            get {
                return this.tableGABusinessRisk;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            BusinessRiskDS cln = ((BusinessRiskDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GABusinessRisk"] != null)) {
                    base.Tables.Add(new GABusinessRiskDataTable(ds.Tables["GABusinessRisk"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGABusinessRisk = ((GABusinessRiskDataTable)(base.Tables["GABusinessRisk"]));
            if ((initTable == true)) {
                if ((this.tableGABusinessRisk != null)) {
                    this.tableGABusinessRisk.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "BusinessRiskDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BusinessRiskDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGABusinessRisk = new GABusinessRiskDataTable();
            base.Tables.Add(this.tableGABusinessRisk);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGABusinessRisk() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BusinessRiskDS ds = new BusinessRiskDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GABusinessRiskRowChangeEventHandler(object sender, GABusinessRiskRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GABusinessRiskDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnBusinessRiskRowId;
            
            private global::System.Data.DataColumn columnReferenceId;
            
            private global::System.Data.DataColumn columnActivityDescription;
            
            private global::System.Data.DataColumn columnPEAR;
            
            private global::System.Data.DataColumn columnPeopleCheckbox;
            
            private global::System.Data.DataColumn columnEnvironmentCheckbox;
            
            private global::System.Data.DataColumn columnAssetsCheckbox;
            
            private global::System.Data.DataColumn columnReputationCheckbox;
            
            private global::System.Data.DataColumn columnFinancialCheckbox;
            
            private global::System.Data.DataColumn columnUndesiredEvent;
            
            private global::System.Data.DataColumn columnCauses;
            
            private global::System.Data.DataColumn columnConsequence;
            
            private global::System.Data.DataColumn columnCurrentSafeguards;
            
            private global::System.Data.DataColumn columnPriorMititigationLikelihoodListsRowId;
            
            private global::System.Data.DataColumn columnPriorMititigationSeverityListsRowId;
            
            private global::System.Data.DataColumn columnPriorMititigationRiskListsRowId;
            
            private global::System.Data.DataColumn columnMitigatingActionProposed;
            
            private global::System.Data.DataColumn columnAfterMititigationLikelihoodListsRowId;
            
            private global::System.Data.DataColumn columnAfterMititigationSeverityListsRowId;
            
            private global::System.Data.DataColumn columnAfterMititigationRiskListsRowId;
            
            private global::System.Data.DataColumn columnMitigatingActionIncluded;
            
            private global::System.Data.DataColumn columnBusinessRiskDocumentReference;
            
            private global::System.Data.DataColumn columnMimetype;
            
            private global::System.Data.DataColumn columnurl;
            
            private global::System.Data.DataColumn columnBusinessRiskDocumentURL;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnResponsibleRoleListsRowId;
            
            private global::System.Data.DataColumn columnResponsiblePersonnelRowId;
            
            private global::System.Data.DataColumn columnDueDate;
            
            private global::System.Data.DataColumn columnBursinessRiskStatus;
            
            private global::System.Data.DataColumn columnCloseOutDate;
            
            private global::System.Data.DataColumn columnIsIncludingInTop10Hazards;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnDateCreated;
            
            private global::System.Data.DataColumn columnMasterRowId;
            
            private global::System.Data.DataColumn columnDateChanged;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnDateDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnSwitchFree1;
            
            private global::System.Data.DataColumn columnSwitchFree2;
            
            private global::System.Data.DataColumn columnSwitchFree3;
            
            private global::System.Data.DataColumn columnDateTimeFree1;
            
            private global::System.Data.DataColumn columnDateTimeFree2;
            
            private global::System.Data.DataColumn columnDateTimeFree3;
            
            private global::System.Data.DataColumn columnTextFree1;
            
            private global::System.Data.DataColumn columnTextFree2;
            
            private global::System.Data.DataColumn columnTextFree3;
            
            private global::System.Data.DataColumn columnIntFree1;
            
            private global::System.Data.DataColumn columnIntFree2;
            
            private global::System.Data.DataColumn columnIntFree3;
            
            private global::System.Data.DataColumn columnnTextFree1;
            
            private global::System.Data.DataColumn columnnTextFree2;
            
            private global::System.Data.DataColumn columnnTextFree3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GABusinessRiskDataTable() {
                this.TableName = "GABusinessRisk";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GABusinessRiskDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GABusinessRiskDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessRiskRowIdColumn {
                get {
                    return this.columnBusinessRiskRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceIdColumn {
                get {
                    return this.columnReferenceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActivityDescriptionColumn {
                get {
                    return this.columnActivityDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PEARColumn {
                get {
                    return this.columnPEAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeopleCheckboxColumn {
                get {
                    return this.columnPeopleCheckbox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnvironmentCheckboxColumn {
                get {
                    return this.columnEnvironmentCheckbox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetsCheckboxColumn {
                get {
                    return this.columnAssetsCheckbox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReputationCheckboxColumn {
                get {
                    return this.columnReputationCheckbox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinancialCheckboxColumn {
                get {
                    return this.columnFinancialCheckbox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UndesiredEventColumn {
                get {
                    return this.columnUndesiredEvent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CausesColumn {
                get {
                    return this.columnCauses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsequenceColumn {
                get {
                    return this.columnConsequence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrentSafeguardsColumn {
                get {
                    return this.columnCurrentSafeguards;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriorMititigationLikelihoodListsRowIdColumn {
                get {
                    return this.columnPriorMititigationLikelihoodListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriorMititigationSeverityListsRowIdColumn {
                get {
                    return this.columnPriorMititigationSeverityListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriorMititigationRiskListsRowIdColumn {
                get {
                    return this.columnPriorMititigationRiskListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MitigatingActionProposedColumn {
                get {
                    return this.columnMitigatingActionProposed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfterMititigationLikelihoodListsRowIdColumn {
                get {
                    return this.columnAfterMititigationLikelihoodListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfterMititigationSeverityListsRowIdColumn {
                get {
                    return this.columnAfterMititigationSeverityListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfterMititigationRiskListsRowIdColumn {
                get {
                    return this.columnAfterMititigationRiskListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MitigatingActionIncludedColumn {
                get {
                    return this.columnMitigatingActionIncluded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessRiskDocumentReferenceColumn {
                get {
                    return this.columnBusinessRiskDocumentReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MimetypeColumn {
                get {
                    return this.columnMimetype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urlColumn {
                get {
                    return this.columnurl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessRiskDocumentURLColumn {
                get {
                    return this.columnBusinessRiskDocumentURL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResponsibleRoleListsRowIdColumn {
                get {
                    return this.columnResponsibleRoleListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResponsiblePersonnelRowIdColumn {
                get {
                    return this.columnResponsiblePersonnelRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDateColumn {
                get {
                    return this.columnDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BursinessRiskStatusColumn {
                get {
                    return this.columnBursinessRiskStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CloseOutDateColumn {
                get {
                    return this.columnCloseOutDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsIncludingInTop10HazardsColumn {
                get {
                    return this.columnIsIncludingInTop10Hazards;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree1Column {
                get {
                    return this.columnnTextFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree2Column {
                get {
                    return this.columnnTextFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree3Column {
                get {
                    return this.columnnTextFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GABusinessRiskRow this[int index] {
                get {
                    return ((GABusinessRiskRow)(this.Rows[index]));
                }
            }
            
            public event GABusinessRiskRowChangeEventHandler GABusinessRiskRowChanging;
            
            public event GABusinessRiskRowChangeEventHandler GABusinessRiskRowChanged;
            
            public event GABusinessRiskRowChangeEventHandler GABusinessRiskRowDeleting;
            
            public event GABusinessRiskRowChangeEventHandler GABusinessRiskRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGABusinessRiskRow(GABusinessRiskRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GABusinessRiskRow AddGABusinessRiskRow(
                        string ReferenceId, 
                        string ActivityDescription, 
                        string PEAR, 
                        bool PeopleCheckbox, 
                        bool EnvironmentCheckbox, 
                        bool AssetsCheckbox, 
                        bool ReputationCheckbox, 
                        bool FinancialCheckbox, 
                        string UndesiredEvent, 
                        string Causes, 
                        string Consequence, 
                        string CurrentSafeguards, 
                        int PriorMititigationLikelihoodListsRowId, 
                        int PriorMititigationSeverityListsRowId, 
                        int PriorMititigationRiskListsRowId, 
                        string MitigatingActionProposed, 
                        int AfterMititigationLikelihoodListsRowId, 
                        int AfterMititigationSeverityListsRowId, 
                        int AfterMititigationRiskListsRowId, 
                        string MitigatingActionIncluded, 
                        string BusinessRiskDocumentReference, 
                        string Mimetype, 
                        string url, 
                        string BusinessRiskDocumentURL, 
                        string Comment, 
                        int ResponsibleRoleListsRowId, 
                        int ResponsiblePersonnelRowId, 
                        System.DateTime DueDate, 
                        int BursinessRiskStatus, 
                        System.DateTime CloseOutDate, 
                        bool IsIncludingInTop10Hazards, 
                        int CreatedBy, 
                        System.DateTime DateCreated, 
                        int MasterRowId, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3, 
                        string nTextFree1, 
                        string nTextFree2, 
                        string nTextFree3) {
                GABusinessRiskRow rowGABusinessRiskRow = ((GABusinessRiskRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ReferenceId,
                        ActivityDescription,
                        PEAR,
                        PeopleCheckbox,
                        EnvironmentCheckbox,
                        AssetsCheckbox,
                        ReputationCheckbox,
                        FinancialCheckbox,
                        UndesiredEvent,
                        Causes,
                        Consequence,
                        CurrentSafeguards,
                        PriorMititigationLikelihoodListsRowId,
                        PriorMititigationSeverityListsRowId,
                        PriorMititigationRiskListsRowId,
                        MitigatingActionProposed,
                        AfterMititigationLikelihoodListsRowId,
                        AfterMititigationSeverityListsRowId,
                        AfterMititigationRiskListsRowId,
                        MitigatingActionIncluded,
                        BusinessRiskDocumentReference,
                        Mimetype,
                        url,
                        BusinessRiskDocumentURL,
                        Comment,
                        ResponsibleRoleListsRowId,
                        ResponsiblePersonnelRowId,
                        DueDate,
                        BursinessRiskStatus,
                        CloseOutDate,
                        IsIncludingInTop10Hazards,
                        CreatedBy,
                        DateCreated,
                        MasterRowId,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3,
                        nTextFree1,
                        nTextFree2,
                        nTextFree3};
                rowGABusinessRiskRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGABusinessRiskRow);
                return rowGABusinessRiskRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GABusinessRiskRow FindByBusinessRiskRowId(int BusinessRiskRowId) {
                return ((GABusinessRiskRow)(this.Rows.Find(new object[] {
                            BusinessRiskRowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GABusinessRiskDataTable cln = ((GABusinessRiskDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GABusinessRiskDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBusinessRiskRowId = base.Columns["BusinessRiskRowId"];
                this.columnReferenceId = base.Columns["ReferenceId"];
                this.columnActivityDescription = base.Columns["ActivityDescription"];
                this.columnPEAR = base.Columns["PEAR"];
                this.columnPeopleCheckbox = base.Columns["PeopleCheckbox"];
                this.columnEnvironmentCheckbox = base.Columns["EnvironmentCheckbox"];
                this.columnAssetsCheckbox = base.Columns["AssetsCheckbox"];
                this.columnReputationCheckbox = base.Columns["ReputationCheckbox"];
                this.columnFinancialCheckbox = base.Columns["FinancialCheckbox"];
                this.columnUndesiredEvent = base.Columns["UndesiredEvent"];
                this.columnCauses = base.Columns["Causes"];
                this.columnConsequence = base.Columns["Consequence"];
                this.columnCurrentSafeguards = base.Columns["CurrentSafeguards"];
                this.columnPriorMititigationLikelihoodListsRowId = base.Columns["PriorMititigationLikelihoodListsRowId"];
                this.columnPriorMititigationSeverityListsRowId = base.Columns["PriorMititigationSeverityListsRowId"];
                this.columnPriorMititigationRiskListsRowId = base.Columns["PriorMititigationRiskListsRowId"];
                this.columnMitigatingActionProposed = base.Columns["MitigatingActionProposed"];
                this.columnAfterMititigationLikelihoodListsRowId = base.Columns["AfterMititigationLikelihoodListsRowId"];
                this.columnAfterMititigationSeverityListsRowId = base.Columns["AfterMititigationSeverityListsRowId"];
                this.columnAfterMititigationRiskListsRowId = base.Columns["AfterMititigationRiskListsRowId"];
                this.columnMitigatingActionIncluded = base.Columns["MitigatingActionIncluded"];
                this.columnBusinessRiskDocumentReference = base.Columns["BusinessRiskDocumentReference"];
                this.columnMimetype = base.Columns["Mimetype"];
                this.columnurl = base.Columns["url"];
                this.columnBusinessRiskDocumentURL = base.Columns["BusinessRiskDocumentURL"];
                this.columnComment = base.Columns["Comment"];
                this.columnResponsibleRoleListsRowId = base.Columns["ResponsibleRoleListsRowId"];
                this.columnResponsiblePersonnelRowId = base.Columns["ResponsiblePersonnelRowId"];
                this.columnDueDate = base.Columns["DueDate"];
                this.columnBursinessRiskStatus = base.Columns["BursinessRiskStatus"];
                this.columnCloseOutDate = base.Columns["CloseOutDate"];
                this.columnIsIncludingInTop10Hazards = base.Columns["IsIncludingInTop10Hazards"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnMasterRowId = base.Columns["MasterRowId"];
                this.columnDateChanged = base.Columns["DateChanged"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnDateDeleted = base.Columns["DateDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnSwitchFree1 = base.Columns["SwitchFree1"];
                this.columnSwitchFree2 = base.Columns["SwitchFree2"];
                this.columnSwitchFree3 = base.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = base.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = base.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = base.Columns["DateTimeFree3"];
                this.columnTextFree1 = base.Columns["TextFree1"];
                this.columnTextFree2 = base.Columns["TextFree2"];
                this.columnTextFree3 = base.Columns["TextFree3"];
                this.columnIntFree1 = base.Columns["IntFree1"];
                this.columnIntFree2 = base.Columns["IntFree2"];
                this.columnIntFree3 = base.Columns["IntFree3"];
                this.columnnTextFree1 = base.Columns["nTextFree1"];
                this.columnnTextFree2 = base.Columns["nTextFree2"];
                this.columnnTextFree3 = base.Columns["nTextFree3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBusinessRiskRowId = new global::System.Data.DataColumn("BusinessRiskRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessRiskRowId);
                this.columnReferenceId = new global::System.Data.DataColumn("ReferenceId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceId);
                this.columnActivityDescription = new global::System.Data.DataColumn("ActivityDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivityDescription);
                this.columnPEAR = new global::System.Data.DataColumn("PEAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPEAR);
                this.columnPeopleCheckbox = new global::System.Data.DataColumn("PeopleCheckbox", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeopleCheckbox);
                this.columnEnvironmentCheckbox = new global::System.Data.DataColumn("EnvironmentCheckbox", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnvironmentCheckbox);
                this.columnAssetsCheckbox = new global::System.Data.DataColumn("AssetsCheckbox", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetsCheckbox);
                this.columnReputationCheckbox = new global::System.Data.DataColumn("ReputationCheckbox", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReputationCheckbox);
                this.columnFinancialCheckbox = new global::System.Data.DataColumn("FinancialCheckbox", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinancialCheckbox);
                this.columnUndesiredEvent = new global::System.Data.DataColumn("UndesiredEvent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUndesiredEvent);
                this.columnCauses = new global::System.Data.DataColumn("Causes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCauses);
                this.columnConsequence = new global::System.Data.DataColumn("Consequence", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsequence);
                this.columnCurrentSafeguards = new global::System.Data.DataColumn("CurrentSafeguards", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentSafeguards);
                this.columnPriorMititigationLikelihoodListsRowId = new global::System.Data.DataColumn("PriorMititigationLikelihoodListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriorMititigationLikelihoodListsRowId);
                this.columnPriorMititigationSeverityListsRowId = new global::System.Data.DataColumn("PriorMititigationSeverityListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriorMititigationSeverityListsRowId);
                this.columnPriorMititigationRiskListsRowId = new global::System.Data.DataColumn("PriorMititigationRiskListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriorMititigationRiskListsRowId);
                this.columnMitigatingActionProposed = new global::System.Data.DataColumn("MitigatingActionProposed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMitigatingActionProposed);
                this.columnAfterMititigationLikelihoodListsRowId = new global::System.Data.DataColumn("AfterMititigationLikelihoodListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfterMititigationLikelihoodListsRowId);
                this.columnAfterMititigationSeverityListsRowId = new global::System.Data.DataColumn("AfterMititigationSeverityListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfterMititigationSeverityListsRowId);
                this.columnAfterMititigationRiskListsRowId = new global::System.Data.DataColumn("AfterMititigationRiskListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfterMititigationRiskListsRowId);
                this.columnMitigatingActionIncluded = new global::System.Data.DataColumn("MitigatingActionIncluded", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMitigatingActionIncluded);
                this.columnBusinessRiskDocumentReference = new global::System.Data.DataColumn("BusinessRiskDocumentReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessRiskDocumentReference);
                this.columnMimetype = new global::System.Data.DataColumn("Mimetype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMimetype);
                this.columnurl = new global::System.Data.DataColumn("url", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurl);
                this.columnBusinessRiskDocumentURL = new global::System.Data.DataColumn("BusinessRiskDocumentURL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessRiskDocumentURL);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnResponsibleRoleListsRowId = new global::System.Data.DataColumn("ResponsibleRoleListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponsibleRoleListsRowId);
                this.columnResponsiblePersonnelRowId = new global::System.Data.DataColumn("ResponsiblePersonnelRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponsiblePersonnelRowId);
                this.columnDueDate = new global::System.Data.DataColumn("DueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDate);
                this.columnBursinessRiskStatus = new global::System.Data.DataColumn("BursinessRiskStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBursinessRiskStatus);
                this.columnCloseOutDate = new global::System.Data.DataColumn("CloseOutDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCloseOutDate);
                this.columnIsIncludingInTop10Hazards = new global::System.Data.DataColumn("IsIncludingInTop10Hazards", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsIncludingInTop10Hazards);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnDateCreated = new global::System.Data.DataColumn("DateCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnMasterRowId = new global::System.Data.DataColumn("MasterRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterRowId);
                this.columnDateChanged = new global::System.Data.DataColumn("DateChanged", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new global::System.Data.DataColumn("DateDeleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new global::System.Data.DataColumn("SwitchFree1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new global::System.Data.DataColumn("SwitchFree2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new global::System.Data.DataColumn("SwitchFree3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new global::System.Data.DataColumn("DateTimeFree1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new global::System.Data.DataColumn("DateTimeFree2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new global::System.Data.DataColumn("DateTimeFree3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new global::System.Data.DataColumn("TextFree1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new global::System.Data.DataColumn("TextFree2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new global::System.Data.DataColumn("TextFree3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new global::System.Data.DataColumn("IntFree1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new global::System.Data.DataColumn("IntFree2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new global::System.Data.DataColumn("IntFree3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree3);
                this.columnnTextFree1 = new global::System.Data.DataColumn("nTextFree1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree1);
                this.columnnTextFree2 = new global::System.Data.DataColumn("nTextFree2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree2);
                this.columnnTextFree3 = new global::System.Data.DataColumn("nTextFree3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree3);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBusinessRiskRowId}, true));
                this.columnBusinessRiskRowId.AutoIncrement = true;
                this.columnBusinessRiskRowId.AllowDBNull = false;
                this.columnBusinessRiskRowId.ReadOnly = true;
                this.columnBusinessRiskRowId.Unique = true;
                this.columnReferenceId.MaxLength = 200;
                this.columnActivityDescription.MaxLength = 1073741823;
                this.columnPEAR.MaxLength = 100;
                this.columnUndesiredEvent.MaxLength = 1073741823;
                this.columnCauses.MaxLength = 1073741823;
                this.columnConsequence.MaxLength = 1073741823;
                this.columnCurrentSafeguards.MaxLength = 1073741823;
                this.columnMitigatingActionProposed.MaxLength = 1073741823;
                this.columnMitigatingActionIncluded.MaxLength = 1073741823;
                this.columnBusinessRiskDocumentReference.MaxLength = 1073741823;
                this.columnMimetype.MaxLength = 400;
                this.columnurl.MaxLength = 400;
                this.columnBusinessRiskDocumentURL.MaxLength = 400;
                this.columnComment.MaxLength = 1073741823;
                this.columnTextFree1.MaxLength = 200;
                this.columnTextFree2.MaxLength = 200;
                this.columnTextFree3.MaxLength = 200;
                this.columnnTextFree1.MaxLength = 1073741823;
                this.columnnTextFree2.MaxLength = 1073741823;
                this.columnnTextFree3.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GABusinessRiskRow NewGABusinessRiskRow() {
                return ((GABusinessRiskRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GABusinessRiskRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GABusinessRiskRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GABusinessRiskRowChanged != null)) {
                    this.GABusinessRiskRowChanged(this, new GABusinessRiskRowChangeEvent(((GABusinessRiskRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GABusinessRiskRowChanging != null)) {
                    this.GABusinessRiskRowChanging(this, new GABusinessRiskRowChangeEvent(((GABusinessRiskRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GABusinessRiskRowDeleted != null)) {
                    this.GABusinessRiskRowDeleted(this, new GABusinessRiskRowChangeEvent(((GABusinessRiskRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GABusinessRiskRowDeleting != null)) {
                    this.GABusinessRiskRowDeleting(this, new GABusinessRiskRowChangeEvent(((GABusinessRiskRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGABusinessRiskRow(GABusinessRiskRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BusinessRiskDS ds = new BusinessRiskDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GABusinessRiskDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GABusinessRiskRow : global::System.Data.DataRow {
            
            private GABusinessRiskDataTable tableGABusinessRisk;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GABusinessRiskRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGABusinessRisk = ((GABusinessRiskDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BusinessRiskRowId {
                get {
                    return ((int)(this[this.tableGABusinessRisk.BusinessRiskRowIdColumn]));
                }
                set {
                    this[this.tableGABusinessRisk.BusinessRiskRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.ReferenceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferenceId\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.ReferenceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ActivityDescription {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.ActivityDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActivityDescription\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.ActivityDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PEAR {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.PEARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PEAR\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.PEARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PeopleCheckbox {
                get {
                    try {
                        return ((bool)(this[this.tableGABusinessRisk.PeopleCheckboxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PeopleCheckbox\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.PeopleCheckboxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EnvironmentCheckbox {
                get {
                    try {
                        return ((bool)(this[this.tableGABusinessRisk.EnvironmentCheckboxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnvironmentCheckbox\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.EnvironmentCheckboxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AssetsCheckbox {
                get {
                    try {
                        return ((bool)(this[this.tableGABusinessRisk.AssetsCheckboxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssetsCheckbox\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.AssetsCheckboxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ReputationCheckbox {
                get {
                    try {
                        return ((bool)(this[this.tableGABusinessRisk.ReputationCheckboxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReputationCheckbox\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.ReputationCheckboxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FinancialCheckbox {
                get {
                    try {
                        return ((bool)(this[this.tableGABusinessRisk.FinancialCheckboxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinancialCheckbox\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.FinancialCheckboxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UndesiredEvent {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.UndesiredEventColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UndesiredEvent\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.UndesiredEventColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Causes {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.CausesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Causes\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.CausesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Consequence {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.ConsequenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Consequence\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.ConsequenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrentSafeguards {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.CurrentSafeguardsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentSafeguards\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.CurrentSafeguardsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PriorMititigationLikelihoodListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGABusinessRisk.PriorMititigationLikelihoodListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriorMititigationLikelihoodListsRowId\' in table \'GABusiness" +
                                "Risk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.PriorMititigationLikelihoodListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PriorMititigationSeverityListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGABusinessRisk.PriorMititigationSeverityListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriorMititigationSeverityListsRowId\' in table \'GABusinessRi" +
                                "sk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.PriorMititigationSeverityListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PriorMititigationRiskListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGABusinessRisk.PriorMititigationRiskListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriorMititigationRiskListsRowId\' in table \'GABusinessRisk\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.PriorMititigationRiskListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MitigatingActionProposed {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.MitigatingActionProposedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MitigatingActionProposed\' in table \'GABusinessRisk\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.MitigatingActionProposedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AfterMititigationLikelihoodListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGABusinessRisk.AfterMititigationLikelihoodListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AfterMititigationLikelihoodListsRowId\' in table \'GABusiness" +
                                "Risk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.AfterMititigationLikelihoodListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AfterMititigationSeverityListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGABusinessRisk.AfterMititigationSeverityListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AfterMititigationSeverityListsRowId\' in table \'GABusinessRi" +
                                "sk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.AfterMititigationSeverityListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AfterMititigationRiskListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGABusinessRisk.AfterMititigationRiskListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AfterMititigationRiskListsRowId\' in table \'GABusinessRisk\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.AfterMititigationRiskListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MitigatingActionIncluded {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.MitigatingActionIncludedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MitigatingActionIncluded\' in table \'GABusinessRisk\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.MitigatingActionIncludedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessRiskDocumentReference {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.BusinessRiskDocumentReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessRiskDocumentReference\' in table \'GABusinessRisk\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.BusinessRiskDocumentReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mimetype {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.MimetypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mimetype\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.MimetypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string url {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.urlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'url\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.urlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessRiskDocumentURL {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.BusinessRiskDocumentURLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessRiskDocumentURL\' in table \'GABusinessRisk\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.BusinessRiskDocumentURLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ResponsibleRoleListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGABusinessRisk.ResponsibleRoleListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResponsibleRoleListsRowId\' in table \'GABusinessRisk\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.ResponsibleRoleListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ResponsiblePersonnelRowId {
                get {
                    try {
                        return ((int)(this[this.tableGABusinessRisk.ResponsiblePersonnelRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResponsiblePersonnelRowId\' in table \'GABusinessRisk\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.ResponsiblePersonnelRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGABusinessRisk.DueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDate\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.DueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BursinessRiskStatus {
                get {
                    try {
                        return ((int)(this[this.tableGABusinessRisk.BursinessRiskStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BursinessRiskStatus\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.BursinessRiskStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CloseOutDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGABusinessRisk.CloseOutDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CloseOutDate\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.CloseOutDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncludingInTop10Hazards {
                get {
                    try {
                        return ((bool)(this[this.tableGABusinessRisk.IsIncludingInTop10HazardsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsIncludingInTop10Hazards\' in table \'GABusinessRisk\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.IsIncludingInTop10HazardsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGABusinessRisk.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGABusinessRisk.DateCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateCreated\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.DateCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGABusinessRisk.MasterRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MasterRowId\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.MasterRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGABusinessRisk.DateChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateChanged\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.DateChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGABusinessRisk.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGABusinessRisk.DateDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateDeleted\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.DateDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGABusinessRisk.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGABusinessRisk.SwitchFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree1\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.SwitchFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGABusinessRisk.SwitchFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree2\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.SwitchFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGABusinessRisk.SwitchFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree3\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.SwitchFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGABusinessRisk.DateTimeFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree1\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.DateTimeFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGABusinessRisk.DateTimeFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree2\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.DateTimeFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGABusinessRisk.DateTimeFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree3\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.DateTimeFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.TextFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree1\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.TextFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.TextFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree2\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.TextFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.TextFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree3\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.TextFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGABusinessRisk.IntFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntFree1\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.IntFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGABusinessRisk.IntFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntFree2\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.IntFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGABusinessRisk.IntFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntFree3\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.IntFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.nTextFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree1\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.nTextFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.nTextFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree2\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.nTextFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGABusinessRisk.nTextFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree3\' in table \'GABusinessRisk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGABusinessRisk.nTextFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceIdNull() {
                return this.IsNull(this.tableGABusinessRisk.ReferenceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceIdNull() {
                this[this.tableGABusinessRisk.ReferenceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActivityDescriptionNull() {
                return this.IsNull(this.tableGABusinessRisk.ActivityDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActivityDescriptionNull() {
                this[this.tableGABusinessRisk.ActivityDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPEARNull() {
                return this.IsNull(this.tableGABusinessRisk.PEARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPEARNull() {
                this[this.tableGABusinessRisk.PEARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeopleCheckboxNull() {
                return this.IsNull(this.tableGABusinessRisk.PeopleCheckboxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeopleCheckboxNull() {
                this[this.tableGABusinessRisk.PeopleCheckboxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnvironmentCheckboxNull() {
                return this.IsNull(this.tableGABusinessRisk.EnvironmentCheckboxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnvironmentCheckboxNull() {
                this[this.tableGABusinessRisk.EnvironmentCheckboxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssetsCheckboxNull() {
                return this.IsNull(this.tableGABusinessRisk.AssetsCheckboxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssetsCheckboxNull() {
                this[this.tableGABusinessRisk.AssetsCheckboxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReputationCheckboxNull() {
                return this.IsNull(this.tableGABusinessRisk.ReputationCheckboxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReputationCheckboxNull() {
                this[this.tableGABusinessRisk.ReputationCheckboxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinancialCheckboxNull() {
                return this.IsNull(this.tableGABusinessRisk.FinancialCheckboxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinancialCheckboxNull() {
                this[this.tableGABusinessRisk.FinancialCheckboxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUndesiredEventNull() {
                return this.IsNull(this.tableGABusinessRisk.UndesiredEventColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUndesiredEventNull() {
                this[this.tableGABusinessRisk.UndesiredEventColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCausesNull() {
                return this.IsNull(this.tableGABusinessRisk.CausesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCausesNull() {
                this[this.tableGABusinessRisk.CausesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsequenceNull() {
                return this.IsNull(this.tableGABusinessRisk.ConsequenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsequenceNull() {
                this[this.tableGABusinessRisk.ConsequenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentSafeguardsNull() {
                return this.IsNull(this.tableGABusinessRisk.CurrentSafeguardsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentSafeguardsNull() {
                this[this.tableGABusinessRisk.CurrentSafeguardsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriorMititigationLikelihoodListsRowIdNull() {
                return this.IsNull(this.tableGABusinessRisk.PriorMititigationLikelihoodListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriorMititigationLikelihoodListsRowIdNull() {
                this[this.tableGABusinessRisk.PriorMititigationLikelihoodListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriorMititigationSeverityListsRowIdNull() {
                return this.IsNull(this.tableGABusinessRisk.PriorMititigationSeverityListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriorMititigationSeverityListsRowIdNull() {
                this[this.tableGABusinessRisk.PriorMititigationSeverityListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriorMititigationRiskListsRowIdNull() {
                return this.IsNull(this.tableGABusinessRisk.PriorMititigationRiskListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriorMititigationRiskListsRowIdNull() {
                this[this.tableGABusinessRisk.PriorMititigationRiskListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMitigatingActionProposedNull() {
                return this.IsNull(this.tableGABusinessRisk.MitigatingActionProposedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMitigatingActionProposedNull() {
                this[this.tableGABusinessRisk.MitigatingActionProposedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfterMititigationLikelihoodListsRowIdNull() {
                return this.IsNull(this.tableGABusinessRisk.AfterMititigationLikelihoodListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfterMititigationLikelihoodListsRowIdNull() {
                this[this.tableGABusinessRisk.AfterMititigationLikelihoodListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfterMititigationSeverityListsRowIdNull() {
                return this.IsNull(this.tableGABusinessRisk.AfterMititigationSeverityListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfterMititigationSeverityListsRowIdNull() {
                this[this.tableGABusinessRisk.AfterMititigationSeverityListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfterMititigationRiskListsRowIdNull() {
                return this.IsNull(this.tableGABusinessRisk.AfterMititigationRiskListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfterMititigationRiskListsRowIdNull() {
                this[this.tableGABusinessRisk.AfterMititigationRiskListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMitigatingActionIncludedNull() {
                return this.IsNull(this.tableGABusinessRisk.MitigatingActionIncludedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMitigatingActionIncludedNull() {
                this[this.tableGABusinessRisk.MitigatingActionIncludedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessRiskDocumentReferenceNull() {
                return this.IsNull(this.tableGABusinessRisk.BusinessRiskDocumentReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessRiskDocumentReferenceNull() {
                this[this.tableGABusinessRisk.BusinessRiskDocumentReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMimetypeNull() {
                return this.IsNull(this.tableGABusinessRisk.MimetypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMimetypeNull() {
                this[this.tableGABusinessRisk.MimetypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsurlNull() {
                return this.IsNull(this.tableGABusinessRisk.urlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturlNull() {
                this[this.tableGABusinessRisk.urlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessRiskDocumentURLNull() {
                return this.IsNull(this.tableGABusinessRisk.BusinessRiskDocumentURLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessRiskDocumentURLNull() {
                this[this.tableGABusinessRisk.BusinessRiskDocumentURLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableGABusinessRisk.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableGABusinessRisk.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResponsibleRoleListsRowIdNull() {
                return this.IsNull(this.tableGABusinessRisk.ResponsibleRoleListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResponsibleRoleListsRowIdNull() {
                this[this.tableGABusinessRisk.ResponsibleRoleListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResponsiblePersonnelRowIdNull() {
                return this.IsNull(this.tableGABusinessRisk.ResponsiblePersonnelRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResponsiblePersonnelRowIdNull() {
                this[this.tableGABusinessRisk.ResponsiblePersonnelRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDateNull() {
                return this.IsNull(this.tableGABusinessRisk.DueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDateNull() {
                this[this.tableGABusinessRisk.DueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBursinessRiskStatusNull() {
                return this.IsNull(this.tableGABusinessRisk.BursinessRiskStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBursinessRiskStatusNull() {
                this[this.tableGABusinessRisk.BursinessRiskStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCloseOutDateNull() {
                return this.IsNull(this.tableGABusinessRisk.CloseOutDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCloseOutDateNull() {
                this[this.tableGABusinessRisk.CloseOutDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsIncludingInTop10HazardsNull() {
                return this.IsNull(this.tableGABusinessRisk.IsIncludingInTop10HazardsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsIncludingInTop10HazardsNull() {
                this[this.tableGABusinessRisk.IsIncludingInTop10HazardsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGABusinessRisk.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableGABusinessRisk.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGABusinessRisk.DateCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateCreatedNull() {
                this[this.tableGABusinessRisk.DateCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGABusinessRisk.MasterRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterRowIdNull() {
                this[this.tableGABusinessRisk.MasterRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGABusinessRisk.DateChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangedNull() {
                this[this.tableGABusinessRisk.DateChangedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGABusinessRisk.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableGABusinessRisk.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGABusinessRisk.DateDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateDeletedNull() {
                this[this.tableGABusinessRisk.DateDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGABusinessRisk.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableGABusinessRisk.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGABusinessRisk.SwitchFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree1Null() {
                this[this.tableGABusinessRisk.SwitchFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGABusinessRisk.SwitchFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree2Null() {
                this[this.tableGABusinessRisk.SwitchFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGABusinessRisk.SwitchFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree3Null() {
                this[this.tableGABusinessRisk.SwitchFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGABusinessRisk.DateTimeFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree1Null() {
                this[this.tableGABusinessRisk.DateTimeFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGABusinessRisk.DateTimeFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree2Null() {
                this[this.tableGABusinessRisk.DateTimeFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGABusinessRisk.DateTimeFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree3Null() {
                this[this.tableGABusinessRisk.DateTimeFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGABusinessRisk.TextFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree1Null() {
                this[this.tableGABusinessRisk.TextFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGABusinessRisk.TextFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree2Null() {
                this[this.tableGABusinessRisk.TextFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGABusinessRisk.TextFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree3Null() {
                this[this.tableGABusinessRisk.TextFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGABusinessRisk.IntFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree1Null() {
                this[this.tableGABusinessRisk.IntFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGABusinessRisk.IntFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree2Null() {
                this[this.tableGABusinessRisk.IntFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGABusinessRisk.IntFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree3Null() {
                this[this.tableGABusinessRisk.IntFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree1Null() {
                return this.IsNull(this.tableGABusinessRisk.nTextFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree1Null() {
                this[this.tableGABusinessRisk.nTextFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree2Null() {
                return this.IsNull(this.tableGABusinessRisk.nTextFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree2Null() {
                this[this.tableGABusinessRisk.nTextFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree3Null() {
                return this.IsNull(this.tableGABusinessRisk.nTextFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree3Null() {
                this[this.tableGABusinessRisk.nTextFree3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GABusinessRiskRowChangeEvent : global::System.EventArgs {
            
            private GABusinessRiskRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GABusinessRiskRowChangeEvent(GABusinessRiskRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GABusinessRiskRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591