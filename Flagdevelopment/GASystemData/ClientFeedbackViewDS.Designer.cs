//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.9151
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ClientFeedbackViewDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ClientFeedbackViewDS : global::System.Data.DataSet {
        
        private GAClientFeedbackViewDataTable tableGAClientFeedbackView;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ClientFeedbackViewDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ClientFeedbackViewDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GAClientFeedbackView"] != null)) {
                    base.Tables.Add(new GAClientFeedbackViewDataTable(ds.Tables["GAClientFeedbackView"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAClientFeedbackViewDataTable GAClientFeedbackView {
            get {
                return this.tableGAClientFeedbackView;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ClientFeedbackViewDS cln = ((ClientFeedbackViewDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GAClientFeedbackView"] != null)) {
                    base.Tables.Add(new GAClientFeedbackViewDataTable(ds.Tables["GAClientFeedbackView"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGAClientFeedbackView = ((GAClientFeedbackViewDataTable)(base.Tables["GAClientFeedbackView"]));
            if ((initTable == true)) {
                if ((this.tableGAClientFeedbackView != null)) {
                    this.tableGAClientFeedbackView.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ClientFeedbackViewDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ClientFeedbackViewDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGAClientFeedbackView = new GAClientFeedbackViewDataTable();
            base.Tables.Add(this.tableGAClientFeedbackView);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGAClientFeedbackView() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ClientFeedbackViewDS ds = new ClientFeedbackViewDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GAClientFeedbackViewRowChangeEventHandler(object sender, GAClientFeedbackViewRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GAClientFeedbackViewDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnClientFeedbackViewRowId;
            
            private global::System.Data.DataColumn columnClientFeedbackViewReferenceId;
            
            private global::System.Data.DataColumn columnResponseDate;
            
            private global::System.Data.DataColumn columnProjectRowId;
            
            private global::System.Data.DataColumn columnReportedDateTime;
            
            private global::System.Data.DataColumn columnWhatWasSupposedToHappen;
            
            private global::System.Data.DataColumn columnViewTypeListsRowId;
            
            private global::System.Data.DataColumn columnClientContactNameAndPosition;
            
            private global::System.Data.DataColumn columnurl;
            
            private global::System.Data.DataColumn columnMimetype;
            
            private global::System.Data.DataColumn columnProjectPhaseListsRowId;
            
            private global::System.Data.DataColumn columnCompanyRowId;
            
            private global::System.Data.DataColumn columnBestScoreRowId;
            
            private global::System.Data.DataColumn columnWeightedScoreRowId;
            
            private global::System.Data.DataColumn columnContactEmailAndPhone;
            
            private global::System.Data.DataColumn columnLowestScoreRowId;
            
            private global::System.Data.DataColumn columnWhatActuallyHappened;
            
            private global::System.Data.DataColumn columnWhatWentWellAndWhy;
            
            private global::System.Data.DataColumn columnIncidentReporter;
            
            private global::System.Data.DataColumn columnWhatCouldBeImprovedAndWhy;
            
            private global::System.Data.DataColumn columnFeedbackRecordedByRowId;
            
            private global::System.Data.DataColumn columnCorrectiveActionPersonRowId;
            
            private global::System.Data.DataColumn columnMasterRowId;
            
            private global::System.Data.DataColumn columnDateCreated;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnDateChanged;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnDateDeleted;
            
            private global::System.Data.DataColumn columnCustomerFeedbackFormListsRowId;
            
            private global::System.Data.DataColumn columnComplaintContactAllowed;
            
            private global::System.Data.DataColumn columnSwitchFree2;
            
            private global::System.Data.DataColumn columnSwitchFree3;
            
            private global::System.Data.DataColumn columnIntFree1;
            
            private global::System.Data.DataColumn columnIntFree2;
            
            private global::System.Data.DataColumn columnComplaintTakenDate;
            
            private global::System.Data.DataColumn columnDateTimeFree2;
            
            private global::System.Data.DataColumn columnDateTimeFree3;
            
            private global::System.Data.DataColumn columnRXTFeedbackGroup;
            
            private global::System.Data.DataColumn columnLessonsLearnt;
            
            private global::System.Data.DataColumn columnSuspectedCause;
            
            private global::System.Data.DataColumn columnComplaintDetails;
            
            private global::System.Data.DataColumn columnHasMaritimeReport;
            
            private global::System.Data.DataColumn columnReferenceIdPrefix;
            
            private global::System.Data.DataColumn columnWorkAreaListsRowId;
            
            private global::System.Data.DataColumn columnTaskStatus;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnProjectName;
            
            private global::System.Data.DataColumn columnCrew;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnProjectStartDate;
            
            private global::System.Data.DataColumn columnProjectEndDate;
            
            private global::System.Data.DataColumn columnFeedbackEvaluationTable;
            
            private global::System.Data.DataColumn columnWhereBGPneedImprovedMost;
            
            private global::System.Data.DataColumn columnReporterContactInformation;
            
            private global::System.Data.DataColumn columnContactName;
            
            private global::System.Data.DataColumn columnContactCompany;
            
            private global::System.Data.DataColumn columnContactTitle;
            
            private global::System.Data.DataColumn columnContactAddress;
            
            private global::System.Data.DataColumn columnContactEmail;
            
            private global::System.Data.DataColumn columnContactTel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAClientFeedbackViewDataTable() {
                this.TableName = "GAClientFeedbackView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAClientFeedbackViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GAClientFeedbackViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientFeedbackViewRowIdColumn {
                get {
                    return this.columnClientFeedbackViewRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientFeedbackViewReferenceIdColumn {
                get {
                    return this.columnClientFeedbackViewReferenceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResponseDateColumn {
                get {
                    return this.columnResponseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectRowIdColumn {
                get {
                    return this.columnProjectRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportedDateTimeColumn {
                get {
                    return this.columnReportedDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WhatWasSupposedToHappenColumn {
                get {
                    return this.columnWhatWasSupposedToHappen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ViewTypeListsRowIdColumn {
                get {
                    return this.columnViewTypeListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientContactNameAndPositionColumn {
                get {
                    return this.columnClientContactNameAndPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urlColumn {
                get {
                    return this.columnurl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MimetypeColumn {
                get {
                    return this.columnMimetype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectPhaseListsRowIdColumn {
                get {
                    return this.columnProjectPhaseListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyRowIdColumn {
                get {
                    return this.columnCompanyRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BestScoreRowIdColumn {
                get {
                    return this.columnBestScoreRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightedScoreRowIdColumn {
                get {
                    return this.columnWeightedScoreRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactEmailAndPhoneColumn {
                get {
                    return this.columnContactEmailAndPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LowestScoreRowIdColumn {
                get {
                    return this.columnLowestScoreRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WhatActuallyHappenedColumn {
                get {
                    return this.columnWhatActuallyHappened;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WhatWentWellAndWhyColumn {
                get {
                    return this.columnWhatWentWellAndWhy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncidentReporterColumn {
                get {
                    return this.columnIncidentReporter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WhatCouldBeImprovedAndWhyColumn {
                get {
                    return this.columnWhatCouldBeImprovedAndWhy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeedbackRecordedByRowIdColumn {
                get {
                    return this.columnFeedbackRecordedByRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CorrectiveActionPersonRowIdColumn {
                get {
                    return this.columnCorrectiveActionPersonRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerFeedbackFormListsRowIdColumn {
                get {
                    return this.columnCustomerFeedbackFormListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComplaintContactAllowedColumn {
                get {
                    return this.columnComplaintContactAllowed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComplaintTakenDateColumn {
                get {
                    return this.columnComplaintTakenDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RXTFeedbackGroupColumn {
                get {
                    return this.columnRXTFeedbackGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LessonsLearntColumn {
                get {
                    return this.columnLessonsLearnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuspectedCauseColumn {
                get {
                    return this.columnSuspectedCause;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComplaintDetailsColumn {
                get {
                    return this.columnComplaintDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HasMaritimeReportColumn {
                get {
                    return this.columnHasMaritimeReport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceIdPrefixColumn {
                get {
                    return this.columnReferenceIdPrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkAreaListsRowIdColumn {
                get {
                    return this.columnWorkAreaListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaskStatusColumn {
                get {
                    return this.columnTaskStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectNameColumn {
                get {
                    return this.columnProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CrewColumn {
                get {
                    return this.columnCrew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectStartDateColumn {
                get {
                    return this.columnProjectStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectEndDateColumn {
                get {
                    return this.columnProjectEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeedbackEvaluationTableColumn {
                get {
                    return this.columnFeedbackEvaluationTable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WhereBGPneedImprovedMostColumn {
                get {
                    return this.columnWhereBGPneedImprovedMost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReporterContactInformationColumn {
                get {
                    return this.columnReporterContactInformation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactNameColumn {
                get {
                    return this.columnContactName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactCompanyColumn {
                get {
                    return this.columnContactCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactTitleColumn {
                get {
                    return this.columnContactTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactAddressColumn {
                get {
                    return this.columnContactAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactEmailColumn {
                get {
                    return this.columnContactEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactTelColumn {
                get {
                    return this.columnContactTel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAClientFeedbackViewRow this[int index] {
                get {
                    return ((GAClientFeedbackViewRow)(this.Rows[index]));
                }
            }
            
            public event GAClientFeedbackViewRowChangeEventHandler GAClientFeedbackViewRowChanging;
            
            public event GAClientFeedbackViewRowChangeEventHandler GAClientFeedbackViewRowChanged;
            
            public event GAClientFeedbackViewRowChangeEventHandler GAClientFeedbackViewRowDeleting;
            
            public event GAClientFeedbackViewRowChangeEventHandler GAClientFeedbackViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGAClientFeedbackViewRow(GAClientFeedbackViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAClientFeedbackViewRow AddGAClientFeedbackViewRow(
                        string ClientFeedbackViewReferenceId, 
                        System.DateTime ResponseDate, 
                        int ProjectRowId, 
                        System.DateTime ReportedDateTime, 
                        string WhatWasSupposedToHappen, 
                        int ViewTypeListsRowId, 
                        string ClientContactNameAndPosition, 
                        string url, 
                        string Mimetype, 
                        int ProjectPhaseListsRowId, 
                        int CompanyRowId, 
                        int BestScoreRowId, 
                        int WeightedScoreRowId, 
                        string ContactEmailAndPhone, 
                        int LowestScoreRowId, 
                        string WhatActuallyHappened, 
                        string WhatWentWellAndWhy, 
                        string IncidentReporter, 
                        string WhatCouldBeImprovedAndWhy, 
                        int FeedbackRecordedByRowId, 
                        int CorrectiveActionPersonRowId, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int CustomerFeedbackFormListsRowId, 
                        bool ComplaintContactAllowed, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        System.DateTime ComplaintTakenDate, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string RXTFeedbackGroup, 
                        string LessonsLearnt, 
                        string SuspectedCause, 
                        string ComplaintDetails, 
                        bool HasMaritimeReport, 
                        string ReferenceIdPrefix, 
                        int WorkAreaListsRowId, 
                        string TaskStatus, 
                        string Title, 
                        string ProjectName, 
                        string Crew, 
                        string ClientName, 
                        System.DateTime ProjectStartDate, 
                        System.DateTime ProjectEndDate, 
                        string FeedbackEvaluationTable, 
                        string WhereBGPneedImprovedMost, 
                        string ReporterContactInformation, 
                        string ContactName, 
                        string ContactCompany, 
                        string ContactTitle, 
                        string ContactAddress, 
                        string ContactEmail, 
                        string ContactTel) {
                GAClientFeedbackViewRow rowGAClientFeedbackViewRow = ((GAClientFeedbackViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ClientFeedbackViewReferenceId,
                        ResponseDate,
                        ProjectRowId,
                        ReportedDateTime,
                        WhatWasSupposedToHappen,
                        ViewTypeListsRowId,
                        ClientContactNameAndPosition,
                        url,
                        Mimetype,
                        ProjectPhaseListsRowId,
                        CompanyRowId,
                        BestScoreRowId,
                        WeightedScoreRowId,
                        ContactEmailAndPhone,
                        LowestScoreRowId,
                        WhatActuallyHappened,
                        WhatWentWellAndWhy,
                        IncidentReporter,
                        WhatCouldBeImprovedAndWhy,
                        FeedbackRecordedByRowId,
                        CorrectiveActionPersonRowId,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        CustomerFeedbackFormListsRowId,
                        ComplaintContactAllowed,
                        SwitchFree2,
                        SwitchFree3,
                        IntFree1,
                        IntFree2,
                        ComplaintTakenDate,
                        DateTimeFree2,
                        DateTimeFree3,
                        RXTFeedbackGroup,
                        LessonsLearnt,
                        SuspectedCause,
                        ComplaintDetails,
                        HasMaritimeReport,
                        ReferenceIdPrefix,
                        WorkAreaListsRowId,
                        TaskStatus,
                        Title,
                        ProjectName,
                        Crew,
                        ClientName,
                        ProjectStartDate,
                        ProjectEndDate,
                        FeedbackEvaluationTable,
                        WhereBGPneedImprovedMost,
                        ReporterContactInformation,
                        ContactName,
                        ContactCompany,
                        ContactTitle,
                        ContactAddress,
                        ContactEmail,
                        ContactTel};
                rowGAClientFeedbackViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGAClientFeedbackViewRow);
                return rowGAClientFeedbackViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAClientFeedbackViewRow FindByClientFeedbackViewRowId(int ClientFeedbackViewRowId) {
                return ((GAClientFeedbackViewRow)(this.Rows.Find(new object[] {
                            ClientFeedbackViewRowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GAClientFeedbackViewDataTable cln = ((GAClientFeedbackViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GAClientFeedbackViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnClientFeedbackViewRowId = base.Columns["ClientFeedbackViewRowId"];
                this.columnClientFeedbackViewReferenceId = base.Columns["ClientFeedbackViewReferenceId"];
                this.columnResponseDate = base.Columns["ResponseDate"];
                this.columnProjectRowId = base.Columns["ProjectRowId"];
                this.columnReportedDateTime = base.Columns["ReportedDateTime"];
                this.columnWhatWasSupposedToHappen = base.Columns["WhatWasSupposedToHappen"];
                this.columnViewTypeListsRowId = base.Columns["ViewTypeListsRowId"];
                this.columnClientContactNameAndPosition = base.Columns["ClientContactNameAndPosition"];
                this.columnurl = base.Columns["url"];
                this.columnMimetype = base.Columns["Mimetype"];
                this.columnProjectPhaseListsRowId = base.Columns["ProjectPhaseListsRowId"];
                this.columnCompanyRowId = base.Columns["CompanyRowId"];
                this.columnBestScoreRowId = base.Columns["BestScoreRowId"];
                this.columnWeightedScoreRowId = base.Columns["WeightedScoreRowId"];
                this.columnContactEmailAndPhone = base.Columns["ContactEmailAndPhone"];
                this.columnLowestScoreRowId = base.Columns["LowestScoreRowId"];
                this.columnWhatActuallyHappened = base.Columns["WhatActuallyHappened"];
                this.columnWhatWentWellAndWhy = base.Columns["WhatWentWellAndWhy"];
                this.columnIncidentReporter = base.Columns["IncidentReporter"];
                this.columnWhatCouldBeImprovedAndWhy = base.Columns["WhatCouldBeImprovedAndWhy"];
                this.columnFeedbackRecordedByRowId = base.Columns["FeedbackRecordedByRowId"];
                this.columnCorrectiveActionPersonRowId = base.Columns["CorrectiveActionPersonRowId"];
                this.columnMasterRowId = base.Columns["MasterRowId"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnDateChanged = base.Columns["DateChanged"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnDateDeleted = base.Columns["DateDeleted"];
                this.columnCustomerFeedbackFormListsRowId = base.Columns["CustomerFeedbackFormListsRowId"];
                this.columnComplaintContactAllowed = base.Columns["ComplaintContactAllowed"];
                this.columnSwitchFree2 = base.Columns["SwitchFree2"];
                this.columnSwitchFree3 = base.Columns["SwitchFree3"];
                this.columnIntFree1 = base.Columns["IntFree1"];
                this.columnIntFree2 = base.Columns["IntFree2"];
                this.columnComplaintTakenDate = base.Columns["ComplaintTakenDate"];
                this.columnDateTimeFree2 = base.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = base.Columns["DateTimeFree3"];
                this.columnRXTFeedbackGroup = base.Columns["RXTFeedbackGroup"];
                this.columnLessonsLearnt = base.Columns["LessonsLearnt"];
                this.columnSuspectedCause = base.Columns["SuspectedCause"];
                this.columnComplaintDetails = base.Columns["ComplaintDetails"];
                this.columnHasMaritimeReport = base.Columns["HasMaritimeReport"];
                this.columnReferenceIdPrefix = base.Columns["ReferenceIdPrefix"];
                this.columnWorkAreaListsRowId = base.Columns["WorkAreaListsRowId"];
                this.columnTaskStatus = base.Columns["TaskStatus"];
                this.columnTitle = base.Columns["Title"];
                this.columnProjectName = base.Columns["ProjectName"];
                this.columnCrew = base.Columns["Crew"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnProjectStartDate = base.Columns["ProjectStartDate"];
                this.columnProjectEndDate = base.Columns["ProjectEndDate"];
                this.columnFeedbackEvaluationTable = base.Columns["FeedbackEvaluationTable"];
                this.columnWhereBGPneedImprovedMost = base.Columns["WhereBGPneedImprovedMost"];
                this.columnReporterContactInformation = base.Columns["ReporterContactInformation"];
                this.columnContactName = base.Columns["ContactName"];
                this.columnContactCompany = base.Columns["ContactCompany"];
                this.columnContactTitle = base.Columns["ContactTitle"];
                this.columnContactAddress = base.Columns["ContactAddress"];
                this.columnContactEmail = base.Columns["ContactEmail"];
                this.columnContactTel = base.Columns["ContactTel"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnClientFeedbackViewRowId = new global::System.Data.DataColumn("ClientFeedbackViewRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientFeedbackViewRowId);
                this.columnClientFeedbackViewReferenceId = new global::System.Data.DataColumn("ClientFeedbackViewReferenceId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientFeedbackViewReferenceId);
                this.columnResponseDate = new global::System.Data.DataColumn("ResponseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponseDate);
                this.columnProjectRowId = new global::System.Data.DataColumn("ProjectRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectRowId);
                this.columnReportedDateTime = new global::System.Data.DataColumn("ReportedDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportedDateTime);
                this.columnWhatWasSupposedToHappen = new global::System.Data.DataColumn("WhatWasSupposedToHappen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWhatWasSupposedToHappen);
                this.columnViewTypeListsRowId = new global::System.Data.DataColumn("ViewTypeListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViewTypeListsRowId);
                this.columnClientContactNameAndPosition = new global::System.Data.DataColumn("ClientContactNameAndPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientContactNameAndPosition);
                this.columnurl = new global::System.Data.DataColumn("url", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurl);
                this.columnMimetype = new global::System.Data.DataColumn("Mimetype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMimetype);
                this.columnProjectPhaseListsRowId = new global::System.Data.DataColumn("ProjectPhaseListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectPhaseListsRowId);
                this.columnCompanyRowId = new global::System.Data.DataColumn("CompanyRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyRowId);
                this.columnBestScoreRowId = new global::System.Data.DataColumn("BestScoreRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBestScoreRowId);
                this.columnWeightedScoreRowId = new global::System.Data.DataColumn("WeightedScoreRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeightedScoreRowId);
                this.columnContactEmailAndPhone = new global::System.Data.DataColumn("ContactEmailAndPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactEmailAndPhone);
                this.columnLowestScoreRowId = new global::System.Data.DataColumn("LowestScoreRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLowestScoreRowId);
                this.columnWhatActuallyHappened = new global::System.Data.DataColumn("WhatActuallyHappened", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWhatActuallyHappened);
                this.columnWhatWentWellAndWhy = new global::System.Data.DataColumn("WhatWentWellAndWhy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWhatWentWellAndWhy);
                this.columnIncidentReporter = new global::System.Data.DataColumn("IncidentReporter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncidentReporter);
                this.columnWhatCouldBeImprovedAndWhy = new global::System.Data.DataColumn("WhatCouldBeImprovedAndWhy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWhatCouldBeImprovedAndWhy);
                this.columnFeedbackRecordedByRowId = new global::System.Data.DataColumn("FeedbackRecordedByRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeedbackRecordedByRowId);
                this.columnCorrectiveActionPersonRowId = new global::System.Data.DataColumn("CorrectiveActionPersonRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCorrectiveActionPersonRowId);
                this.columnMasterRowId = new global::System.Data.DataColumn("MasterRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new global::System.Data.DataColumn("DateCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new global::System.Data.DataColumn("DateChanged", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new global::System.Data.DataColumn("DateDeleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDeleted);
                this.columnCustomerFeedbackFormListsRowId = new global::System.Data.DataColumn("CustomerFeedbackFormListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerFeedbackFormListsRowId);
                this.columnComplaintContactAllowed = new global::System.Data.DataColumn("ComplaintContactAllowed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplaintContactAllowed);
                this.columnSwitchFree2 = new global::System.Data.DataColumn("SwitchFree2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new global::System.Data.DataColumn("SwitchFree3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree3);
                this.columnIntFree1 = new global::System.Data.DataColumn("IntFree1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new global::System.Data.DataColumn("IntFree2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree2);
                this.columnComplaintTakenDate = new global::System.Data.DataColumn("ComplaintTakenDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplaintTakenDate);
                this.columnDateTimeFree2 = new global::System.Data.DataColumn("DateTimeFree2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new global::System.Data.DataColumn("DateTimeFree3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree3);
                this.columnRXTFeedbackGroup = new global::System.Data.DataColumn("RXTFeedbackGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRXTFeedbackGroup);
                this.columnLessonsLearnt = new global::System.Data.DataColumn("LessonsLearnt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessonsLearnt);
                this.columnSuspectedCause = new global::System.Data.DataColumn("SuspectedCause", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuspectedCause);
                this.columnComplaintDetails = new global::System.Data.DataColumn("ComplaintDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplaintDetails);
                this.columnHasMaritimeReport = new global::System.Data.DataColumn("HasMaritimeReport", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasMaritimeReport);
                this.columnReferenceIdPrefix = new global::System.Data.DataColumn("ReferenceIdPrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceIdPrefix);
                this.columnWorkAreaListsRowId = new global::System.Data.DataColumn("WorkAreaListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkAreaListsRowId);
                this.columnTaskStatus = new global::System.Data.DataColumn("TaskStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaskStatus);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnProjectName = new global::System.Data.DataColumn("ProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectName);
                this.columnCrew = new global::System.Data.DataColumn("Crew", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrew);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnProjectStartDate = new global::System.Data.DataColumn("ProjectStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectStartDate);
                this.columnProjectEndDate = new global::System.Data.DataColumn("ProjectEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectEndDate);
                this.columnFeedbackEvaluationTable = new global::System.Data.DataColumn("FeedbackEvaluationTable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeedbackEvaluationTable);
                this.columnWhereBGPneedImprovedMost = new global::System.Data.DataColumn("WhereBGPneedImprovedMost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWhereBGPneedImprovedMost);
                this.columnReporterContactInformation = new global::System.Data.DataColumn("ReporterContactInformation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReporterContactInformation);
                this.columnContactName = new global::System.Data.DataColumn("ContactName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactName);
                this.columnContactCompany = new global::System.Data.DataColumn("ContactCompany", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactCompany);
                this.columnContactTitle = new global::System.Data.DataColumn("ContactTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactTitle);
                this.columnContactAddress = new global::System.Data.DataColumn("ContactAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactAddress);
                this.columnContactEmail = new global::System.Data.DataColumn("ContactEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactEmail);
                this.columnContactTel = new global::System.Data.DataColumn("ContactTel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactTel);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnClientFeedbackViewRowId}, true));
                this.columnClientFeedbackViewRowId.AutoIncrement = true;
                this.columnClientFeedbackViewRowId.AllowDBNull = false;
                this.columnClientFeedbackViewRowId.ReadOnly = true;
                this.columnClientFeedbackViewRowId.Unique = true;
                this.columnClientFeedbackViewReferenceId.MaxLength = 50;
                this.columnWhatWasSupposedToHappen.MaxLength = 1073741823;
                this.columnClientContactNameAndPosition.MaxLength = 200;
                this.columnurl.MaxLength = 200;
                this.columnMimetype.MaxLength = 200;
                this.columnContactEmailAndPhone.MaxLength = 50;
                this.columnWhatActuallyHappened.MaxLength = 1073741823;
                this.columnWhatWentWellAndWhy.MaxLength = 1073741823;
                this.columnIncidentReporter.MaxLength = 100;
                this.columnWhatCouldBeImprovedAndWhy.MaxLength = 1073741823;
                this.columnRXTFeedbackGroup.MaxLength = 200;
                this.columnLessonsLearnt.MaxLength = 1073741823;
                this.columnSuspectedCause.MaxLength = 1073741823;
                this.columnComplaintDetails.MaxLength = 1073741823;
                this.columnReferenceIdPrefix.MaxLength = 8;
                this.columnTaskStatus.MaxLength = 50;
                this.columnTitle.MaxLength = 200;
                this.columnProjectName.MaxLength = 100;
                this.columnCrew.MaxLength = 50;
                this.columnClientName.MaxLength = 100;
                this.columnFeedbackEvaluationTable.MaxLength = 1;
                this.columnWhereBGPneedImprovedMost.MaxLength = 1073741823;
                this.columnReporterContactInformation.MaxLength = 100;
                this.columnContactName.MaxLength = 200;
                this.columnContactCompany.MaxLength = 200;
                this.columnContactTitle.MaxLength = 200;
                this.columnContactAddress.MaxLength = 200;
                this.columnContactEmail.MaxLength = 200;
                this.columnContactTel.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAClientFeedbackViewRow NewGAClientFeedbackViewRow() {
                return ((GAClientFeedbackViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GAClientFeedbackViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GAClientFeedbackViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAClientFeedbackViewRowChanged != null)) {
                    this.GAClientFeedbackViewRowChanged(this, new GAClientFeedbackViewRowChangeEvent(((GAClientFeedbackViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAClientFeedbackViewRowChanging != null)) {
                    this.GAClientFeedbackViewRowChanging(this, new GAClientFeedbackViewRowChangeEvent(((GAClientFeedbackViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAClientFeedbackViewRowDeleted != null)) {
                    this.GAClientFeedbackViewRowDeleted(this, new GAClientFeedbackViewRowChangeEvent(((GAClientFeedbackViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAClientFeedbackViewRowDeleting != null)) {
                    this.GAClientFeedbackViewRowDeleting(this, new GAClientFeedbackViewRowChangeEvent(((GAClientFeedbackViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGAClientFeedbackViewRow(GAClientFeedbackViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClientFeedbackViewDS ds = new ClientFeedbackViewDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GAClientFeedbackViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GAClientFeedbackViewRow : global::System.Data.DataRow {
            
            private GAClientFeedbackViewDataTable tableGAClientFeedbackView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAClientFeedbackViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAClientFeedbackView = ((GAClientFeedbackViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientFeedbackViewRowId {
                get {
                    return ((int)(this[this.tableGAClientFeedbackView.ClientFeedbackViewRowIdColumn]));
                }
                set {
                    this[this.tableGAClientFeedbackView.ClientFeedbackViewRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientFeedbackViewReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.ClientFeedbackViewReferenceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ClientFeedbackViewReferenceId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ClientFeedbackViewReferenceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ResponseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAClientFeedbackView.ResponseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ResponseDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ResponseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAClientFeedbackView.ProjectRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ProjectRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ProjectRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReportedDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAClientFeedbackView.ReportedDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ReportedDateTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ReportedDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WhatWasSupposedToHappen {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.WhatWasSupposedToHappenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“WhatWasSupposedToHappen”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.WhatWasSupposedToHappenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ViewTypeListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAClientFeedbackView.ViewTypeListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ViewTypeListsRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ViewTypeListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientContactNameAndPosition {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.ClientContactNameAndPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ClientContactNameAndPosition”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ClientContactNameAndPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string url {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.urlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“url”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.urlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mimetype {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.MimetypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“Mimetype”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.MimetypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectPhaseListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAClientFeedbackView.ProjectPhaseListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ProjectPhaseListsRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ProjectPhaseListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompanyRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAClientFeedbackView.CompanyRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“CompanyRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.CompanyRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BestScoreRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAClientFeedbackView.BestScoreRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“BestScoreRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.BestScoreRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WeightedScoreRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAClientFeedbackView.WeightedScoreRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“WeightedScoreRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.WeightedScoreRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactEmailAndPhone {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.ContactEmailAndPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ContactEmailAndPhone”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ContactEmailAndPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LowestScoreRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAClientFeedbackView.LowestScoreRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“LowestScoreRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.LowestScoreRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WhatActuallyHappened {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.WhatActuallyHappenedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“WhatActuallyHappened”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.WhatActuallyHappenedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WhatWentWellAndWhy {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.WhatWentWellAndWhyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“WhatWentWellAndWhy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.WhatWentWellAndWhyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IncidentReporter {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.IncidentReporterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“IncidentReporter”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.IncidentReporterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WhatCouldBeImprovedAndWhy {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.WhatCouldBeImprovedAndWhyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“WhatCouldBeImprovedAndWhy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.WhatCouldBeImprovedAndWhyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FeedbackRecordedByRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAClientFeedbackView.FeedbackRecordedByRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“FeedbackRecordedByRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.FeedbackRecordedByRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CorrectiveActionPersonRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAClientFeedbackView.CorrectiveActionPersonRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“CorrectiveActionPersonRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.CorrectiveActionPersonRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAClientFeedbackView.MasterRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“MasterRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.MasterRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAClientFeedbackView.DateCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“DateCreated”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.DateCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAClientFeedbackView.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“CreatedBy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAClientFeedbackView.DateChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“DateChanged”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.DateChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAClientFeedbackView.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ChangedBy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAClientFeedbackView.DateDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“DateDeleted”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.DateDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerFeedbackFormListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAClientFeedbackView.CustomerFeedbackFormListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“CustomerFeedbackFormListsRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.CustomerFeedbackFormListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ComplaintContactAllowed {
                get {
                    try {
                        return ((bool)(this[this.tableGAClientFeedbackView.ComplaintContactAllowedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ComplaintContactAllowed”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ComplaintContactAllowedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAClientFeedbackView.SwitchFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“SwitchFree2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.SwitchFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAClientFeedbackView.SwitchFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“SwitchFree3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.SwitchFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAClientFeedbackView.IntFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“IntFree1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.IntFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAClientFeedbackView.IntFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“IntFree2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.IntFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ComplaintTakenDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAClientFeedbackView.ComplaintTakenDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ComplaintTakenDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ComplaintTakenDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAClientFeedbackView.DateTimeFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“DateTimeFree2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.DateTimeFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAClientFeedbackView.DateTimeFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“DateTimeFree3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.DateTimeFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RXTFeedbackGroup {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.RXTFeedbackGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“RXTFeedbackGroup”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.RXTFeedbackGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LessonsLearnt {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.LessonsLearntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“LessonsLearnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.LessonsLearntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SuspectedCause {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.SuspectedCauseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“SuspectedCause”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.SuspectedCauseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ComplaintDetails {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.ComplaintDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ComplaintDetails”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ComplaintDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HasMaritimeReport {
                get {
                    try {
                        return ((bool)(this[this.tableGAClientFeedbackView.HasMaritimeReportColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“HasMaritimeReport”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.HasMaritimeReportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferenceIdPrefix {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.ReferenceIdPrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ReferenceIdPrefix”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ReferenceIdPrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkAreaListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAClientFeedbackView.WorkAreaListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“WorkAreaListsRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.WorkAreaListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaskStatus {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.TaskStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“TaskStatus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.TaskStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“Title”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProjectName {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.ProjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ProjectName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Crew {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.CrewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“Crew”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.CrewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.ClientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ClientName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ProjectStartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAClientFeedbackView.ProjectStartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ProjectStartDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ProjectStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ProjectEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAClientFeedbackView.ProjectEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ProjectEndDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ProjectEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FeedbackEvaluationTable {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.FeedbackEvaluationTableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“FeedbackEvaluationTable”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.FeedbackEvaluationTableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WhereBGPneedImprovedMost {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.WhereBGPneedImprovedMostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“WhereBGPneedImprovedMost”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.WhereBGPneedImprovedMostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReporterContactInformation {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.ReporterContactInformationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ReporterContactInformation”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ReporterContactInformationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactName {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.ContactNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ContactName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ContactNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactCompany {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.ContactCompanyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ContactCompany”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ContactCompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactTitle {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.ContactTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ContactTitle”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ContactTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactAddress {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.ContactAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ContactAddress”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ContactAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactEmail {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.ContactEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ContactEmail”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ContactEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactTel {
                get {
                    try {
                        return ((string)(this[this.tableGAClientFeedbackView.ContactTelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAClientFeedbackView”中列“ContactTel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAClientFeedbackView.ContactTelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientFeedbackViewReferenceIdNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ClientFeedbackViewReferenceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientFeedbackViewReferenceIdNull() {
                this[this.tableGAClientFeedbackView.ClientFeedbackViewReferenceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResponseDateNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ResponseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResponseDateNull() {
                this[this.tableGAClientFeedbackView.ResponseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectRowIdNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ProjectRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectRowIdNull() {
                this[this.tableGAClientFeedbackView.ProjectRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportedDateTimeNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ReportedDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportedDateTimeNull() {
                this[this.tableGAClientFeedbackView.ReportedDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWhatWasSupposedToHappenNull() {
                return this.IsNull(this.tableGAClientFeedbackView.WhatWasSupposedToHappenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWhatWasSupposedToHappenNull() {
                this[this.tableGAClientFeedbackView.WhatWasSupposedToHappenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsViewTypeListsRowIdNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ViewTypeListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetViewTypeListsRowIdNull() {
                this[this.tableGAClientFeedbackView.ViewTypeListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientContactNameAndPositionNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ClientContactNameAndPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientContactNameAndPositionNull() {
                this[this.tableGAClientFeedbackView.ClientContactNameAndPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsurlNull() {
                return this.IsNull(this.tableGAClientFeedbackView.urlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturlNull() {
                this[this.tableGAClientFeedbackView.urlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMimetypeNull() {
                return this.IsNull(this.tableGAClientFeedbackView.MimetypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMimetypeNull() {
                this[this.tableGAClientFeedbackView.MimetypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectPhaseListsRowIdNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ProjectPhaseListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectPhaseListsRowIdNull() {
                this[this.tableGAClientFeedbackView.ProjectPhaseListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyRowIdNull() {
                return this.IsNull(this.tableGAClientFeedbackView.CompanyRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyRowIdNull() {
                this[this.tableGAClientFeedbackView.CompanyRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBestScoreRowIdNull() {
                return this.IsNull(this.tableGAClientFeedbackView.BestScoreRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBestScoreRowIdNull() {
                this[this.tableGAClientFeedbackView.BestScoreRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightedScoreRowIdNull() {
                return this.IsNull(this.tableGAClientFeedbackView.WeightedScoreRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightedScoreRowIdNull() {
                this[this.tableGAClientFeedbackView.WeightedScoreRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactEmailAndPhoneNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ContactEmailAndPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactEmailAndPhoneNull() {
                this[this.tableGAClientFeedbackView.ContactEmailAndPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLowestScoreRowIdNull() {
                return this.IsNull(this.tableGAClientFeedbackView.LowestScoreRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLowestScoreRowIdNull() {
                this[this.tableGAClientFeedbackView.LowestScoreRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWhatActuallyHappenedNull() {
                return this.IsNull(this.tableGAClientFeedbackView.WhatActuallyHappenedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWhatActuallyHappenedNull() {
                this[this.tableGAClientFeedbackView.WhatActuallyHappenedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWhatWentWellAndWhyNull() {
                return this.IsNull(this.tableGAClientFeedbackView.WhatWentWellAndWhyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWhatWentWellAndWhyNull() {
                this[this.tableGAClientFeedbackView.WhatWentWellAndWhyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncidentReporterNull() {
                return this.IsNull(this.tableGAClientFeedbackView.IncidentReporterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncidentReporterNull() {
                this[this.tableGAClientFeedbackView.IncidentReporterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWhatCouldBeImprovedAndWhyNull() {
                return this.IsNull(this.tableGAClientFeedbackView.WhatCouldBeImprovedAndWhyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWhatCouldBeImprovedAndWhyNull() {
                this[this.tableGAClientFeedbackView.WhatCouldBeImprovedAndWhyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeedbackRecordedByRowIdNull() {
                return this.IsNull(this.tableGAClientFeedbackView.FeedbackRecordedByRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeedbackRecordedByRowIdNull() {
                this[this.tableGAClientFeedbackView.FeedbackRecordedByRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCorrectiveActionPersonRowIdNull() {
                return this.IsNull(this.tableGAClientFeedbackView.CorrectiveActionPersonRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCorrectiveActionPersonRowIdNull() {
                this[this.tableGAClientFeedbackView.CorrectiveActionPersonRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAClientFeedbackView.MasterRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterRowIdNull() {
                this[this.tableGAClientFeedbackView.MasterRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAClientFeedbackView.DateCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateCreatedNull() {
                this[this.tableGAClientFeedbackView.DateCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAClientFeedbackView.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableGAClientFeedbackView.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAClientFeedbackView.DateChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangedNull() {
                this[this.tableGAClientFeedbackView.DateChangedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableGAClientFeedbackView.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAClientFeedbackView.DateDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateDeletedNull() {
                this[this.tableGAClientFeedbackView.DateDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerFeedbackFormListsRowIdNull() {
                return this.IsNull(this.tableGAClientFeedbackView.CustomerFeedbackFormListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerFeedbackFormListsRowIdNull() {
                this[this.tableGAClientFeedbackView.CustomerFeedbackFormListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComplaintContactAllowedNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ComplaintContactAllowedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComplaintContactAllowedNull() {
                this[this.tableGAClientFeedbackView.ComplaintContactAllowedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAClientFeedbackView.SwitchFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree2Null() {
                this[this.tableGAClientFeedbackView.SwitchFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAClientFeedbackView.SwitchFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree3Null() {
                this[this.tableGAClientFeedbackView.SwitchFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAClientFeedbackView.IntFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree1Null() {
                this[this.tableGAClientFeedbackView.IntFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAClientFeedbackView.IntFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree2Null() {
                this[this.tableGAClientFeedbackView.IntFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComplaintTakenDateNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ComplaintTakenDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComplaintTakenDateNull() {
                this[this.tableGAClientFeedbackView.ComplaintTakenDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAClientFeedbackView.DateTimeFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree2Null() {
                this[this.tableGAClientFeedbackView.DateTimeFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAClientFeedbackView.DateTimeFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree3Null() {
                this[this.tableGAClientFeedbackView.DateTimeFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRXTFeedbackGroupNull() {
                return this.IsNull(this.tableGAClientFeedbackView.RXTFeedbackGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRXTFeedbackGroupNull() {
                this[this.tableGAClientFeedbackView.RXTFeedbackGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLessonsLearntNull() {
                return this.IsNull(this.tableGAClientFeedbackView.LessonsLearntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLessonsLearntNull() {
                this[this.tableGAClientFeedbackView.LessonsLearntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuspectedCauseNull() {
                return this.IsNull(this.tableGAClientFeedbackView.SuspectedCauseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuspectedCauseNull() {
                this[this.tableGAClientFeedbackView.SuspectedCauseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComplaintDetailsNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ComplaintDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComplaintDetailsNull() {
                this[this.tableGAClientFeedbackView.ComplaintDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHasMaritimeReportNull() {
                return this.IsNull(this.tableGAClientFeedbackView.HasMaritimeReportColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHasMaritimeReportNull() {
                this[this.tableGAClientFeedbackView.HasMaritimeReportColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceIdPrefixNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ReferenceIdPrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceIdPrefixNull() {
                this[this.tableGAClientFeedbackView.ReferenceIdPrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkAreaListsRowIdNull() {
                return this.IsNull(this.tableGAClientFeedbackView.WorkAreaListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkAreaListsRowIdNull() {
                this[this.tableGAClientFeedbackView.WorkAreaListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaskStatusNull() {
                return this.IsNull(this.tableGAClientFeedbackView.TaskStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaskStatusNull() {
                this[this.tableGAClientFeedbackView.TaskStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitleNull() {
                return this.IsNull(this.tableGAClientFeedbackView.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitleNull() {
                this[this.tableGAClientFeedbackView.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectNameNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ProjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectNameNull() {
                this[this.tableGAClientFeedbackView.ProjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrewNull() {
                return this.IsNull(this.tableGAClientFeedbackView.CrewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrewNull() {
                this[this.tableGAClientFeedbackView.CrewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNameNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ClientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNameNull() {
                this[this.tableGAClientFeedbackView.ClientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectStartDateNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ProjectStartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectStartDateNull() {
                this[this.tableGAClientFeedbackView.ProjectStartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectEndDateNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ProjectEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectEndDateNull() {
                this[this.tableGAClientFeedbackView.ProjectEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeedbackEvaluationTableNull() {
                return this.IsNull(this.tableGAClientFeedbackView.FeedbackEvaluationTableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeedbackEvaluationTableNull() {
                this[this.tableGAClientFeedbackView.FeedbackEvaluationTableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWhereBGPneedImprovedMostNull() {
                return this.IsNull(this.tableGAClientFeedbackView.WhereBGPneedImprovedMostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWhereBGPneedImprovedMostNull() {
                this[this.tableGAClientFeedbackView.WhereBGPneedImprovedMostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReporterContactInformationNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ReporterContactInformationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReporterContactInformationNull() {
                this[this.tableGAClientFeedbackView.ReporterContactInformationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNameNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ContactNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNameNull() {
                this[this.tableGAClientFeedbackView.ContactNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactCompanyNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ContactCompanyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactCompanyNull() {
                this[this.tableGAClientFeedbackView.ContactCompanyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactTitleNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ContactTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactTitleNull() {
                this[this.tableGAClientFeedbackView.ContactTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactAddressNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ContactAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactAddressNull() {
                this[this.tableGAClientFeedbackView.ContactAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactEmailNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ContactEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactEmailNull() {
                this[this.tableGAClientFeedbackView.ContactEmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactTelNull() {
                return this.IsNull(this.tableGAClientFeedbackView.ContactTelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactTelNull() {
                this[this.tableGAClientFeedbackView.ContactTelColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GAClientFeedbackViewRowChangeEvent : global::System.EventArgs {
            
            private GAClientFeedbackViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAClientFeedbackViewRowChangeEvent(GAClientFeedbackViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAClientFeedbackViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591