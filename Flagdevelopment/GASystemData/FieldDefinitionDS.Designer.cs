//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("FieldDefinitionDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class FieldDefinitionDS : global::System.Data.DataSet {
        
        private GAFieldDefinitionsDataTable tableGAFieldDefinitions;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FieldDefinitionDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected FieldDefinitionDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GAFieldDefinitions"] != null)) {
                    base.Tables.Add(new GAFieldDefinitionsDataTable(ds.Tables["GAFieldDefinitions"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAFieldDefinitionsDataTable GAFieldDefinitions {
            get {
                return this.tableGAFieldDefinitions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            FieldDefinitionDS cln = ((FieldDefinitionDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GAFieldDefinitions"] != null)) {
                    base.Tables.Add(new GAFieldDefinitionsDataTable(ds.Tables["GAFieldDefinitions"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGAFieldDefinitions = ((GAFieldDefinitionsDataTable)(base.Tables["GAFieldDefinitions"]));
            if ((initTable == true)) {
                if ((this.tableGAFieldDefinitions != null)) {
                    this.tableGAFieldDefinitions.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "FieldDefinitionDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FieldDefinitionDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGAFieldDefinitions = new GAFieldDefinitionsDataTable();
            base.Tables.Add(this.tableGAFieldDefinitions);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGAFieldDefinitions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            FieldDefinitionDS ds = new FieldDefinitionDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GAFieldDefinitionsRowChangeEventHandler(object sender, GAFieldDefinitionsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GAFieldDefinitionsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTableId;
            
            private global::System.Data.DataColumn columnFieldId;
            
            private global::System.Data.DataColumn columnDatatype;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnPSecurityClass;
            
            private global::System.Data.DataColumn columnLookupTable;
            
            private global::System.Data.DataColumn columnLookupTableKey;
            
            private global::System.Data.DataColumn columnLookupTableDisplayValue;
            
            private global::System.Data.DataColumn columnExcludesFields;
            
            private global::System.Data.DataColumn columnColumnOrder;
            
            private global::System.Data.DataColumn columnHideInSummary;
            
            private global::System.Data.DataColumn columnHideInDetail;
            
            private global::System.Data.DataColumn columnShowInSmallList;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnIsSelectable;
            
            private global::System.Data.DataColumn columnRequiredField;
            
            private global::System.Data.DataColumn columnCompareOperator;
            
            private global::System.Data.DataColumn columnCompareTo;
            
            private global::System.Data.DataColumn columnCopyFromFieldId;
            
            private global::System.Data.DataColumn columnSortOrder;
            
            private global::System.Data.DataColumn columnAscDesc;
            
            private global::System.Data.DataColumn columnIsReadOnly;
            
            private global::System.Data.DataColumn columnRefId;
            
            private global::System.Data.DataColumn columnrowguid;
            
            private global::System.Data.DataColumn columnLookupFilter;
            
            private global::System.Data.DataColumn columnDependsOnField;
            
            private global::System.Data.DataColumn columnDependantField;
            
            private global::System.Data.DataColumn columnMasterRowId;
            
            private global::System.Data.DataColumn columnDateCreated;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnDateChanged;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnDateDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnSwitchFree1;
            
            private global::System.Data.DataColumn columnSwitchFree2;
            
            private global::System.Data.DataColumn columnSwitchFree3;
            
            private global::System.Data.DataColumn columnDateTimeFree1;
            
            private global::System.Data.DataColumn columnDateTimeFree2;
            
            private global::System.Data.DataColumn columnDateTimeFree3;
            
            private global::System.Data.DataColumn columnTextFree1;
            
            private global::System.Data.DataColumn columnTextFree2;
            
            private global::System.Data.DataColumn columnTextFree3;
            
            private global::System.Data.DataColumn columnIntFree1;
            
            private global::System.Data.DataColumn columnIntFree2;
            
            private global::System.Data.DataColumn columnIntFree3;
            
            private global::System.Data.DataColumn columnFilterOperator;
            
            private global::System.Data.DataColumn columnFilterCondition;
            
            private global::System.Data.DataColumn columnnTextFree1;
            
            private global::System.Data.DataColumn columnnTextFree2;
            
            private global::System.Data.DataColumn columnnTextFree3;
            
            private global::System.Data.DataColumn columnControlHeigth;
            
            private global::System.Data.DataColumn columnHideInNew;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAFieldDefinitionsDataTable() {
                this.TableName = "GAFieldDefinitions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAFieldDefinitionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GAFieldDefinitionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TableIdColumn {
                get {
                    return this.columnTableId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FieldIdColumn {
                get {
                    return this.columnFieldId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DatatypeColumn {
                get {
                    return this.columnDatatype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PSecurityClassColumn {
                get {
                    return this.columnPSecurityClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LookupTableColumn {
                get {
                    return this.columnLookupTable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LookupTableKeyColumn {
                get {
                    return this.columnLookupTableKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LookupTableDisplayValueColumn {
                get {
                    return this.columnLookupTableDisplayValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExcludesFieldsColumn {
                get {
                    return this.columnExcludesFields;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColumnOrderColumn {
                get {
                    return this.columnColumnOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HideInSummaryColumn {
                get {
                    return this.columnHideInSummary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HideInDetailColumn {
                get {
                    return this.columnHideInDetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShowInSmallListColumn {
                get {
                    return this.columnShowInSmallList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsSelectableColumn {
                get {
                    return this.columnIsSelectable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequiredFieldColumn {
                get {
                    return this.columnRequiredField;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompareOperatorColumn {
                get {
                    return this.columnCompareOperator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompareToColumn {
                get {
                    return this.columnCompareTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CopyFromFieldIdColumn {
                get {
                    return this.columnCopyFromFieldId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortOrderColumn {
                get {
                    return this.columnSortOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AscDescColumn {
                get {
                    return this.columnAscDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsReadOnlyColumn {
                get {
                    return this.columnIsReadOnly;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIdColumn {
                get {
                    return this.columnRefId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LookupFilterColumn {
                get {
                    return this.columnLookupFilter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DependsOnFieldColumn {
                get {
                    return this.columnDependsOnField;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DependantFieldColumn {
                get {
                    return this.columnDependantField;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilterOperatorColumn {
                get {
                    return this.columnFilterOperator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilterConditionColumn {
                get {
                    return this.columnFilterCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree1Column {
                get {
                    return this.columnnTextFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree2Column {
                get {
                    return this.columnnTextFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree3Column {
                get {
                    return this.columnnTextFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ControlHeigthColumn {
                get {
                    return this.columnControlHeigth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HideInNewColumn {
                get {
                    return this.columnHideInNew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAFieldDefinitionsRow this[int index] {
                get {
                    return ((GAFieldDefinitionsRow)(this.Rows[index]));
                }
            }
            
            public event GAFieldDefinitionsRowChangeEventHandler GAFieldDefinitionsRowChanging;
            
            public event GAFieldDefinitionsRowChangeEventHandler GAFieldDefinitionsRowChanged;
            
            public event GAFieldDefinitionsRowChangeEventHandler GAFieldDefinitionsRowDeleting;
            
            public event GAFieldDefinitionsRowChangeEventHandler GAFieldDefinitionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGAFieldDefinitionsRow(GAFieldDefinitionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAFieldDefinitionsRow AddGAFieldDefinitionsRow(
                        string TableId, 
                        string FieldId, 
                        string Datatype, 
                        int Length, 
                        string PSecurityClass, 
                        string LookupTable, 
                        string LookupTableKey, 
                        string LookupTableDisplayValue, 
                        string ExcludesFields, 
                        int ColumnOrder, 
                        bool HideInSummary, 
                        bool HideInDetail, 
                        bool ShowInSmallList, 
                        bool IsActive, 
                        bool IsSelectable, 
                        bool RequiredField, 
                        string CompareOperator, 
                        string CompareTo, 
                        string CopyFromFieldId, 
                        int SortOrder, 
                        string AscDesc, 
                        bool IsReadOnly, 
                        string RefId, 
                        System.Guid rowguid, 
                        string LookupFilter, 
                        string DependsOnField, 
                        string DependantField, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3, 
                        string FilterOperator, 
                        string FilterCondition, 
                        string nTextFree1, 
                        string nTextFree2, 
                        string nTextFree3, 
                        int ControlHeigth, 
                        bool HideInNew) {
                GAFieldDefinitionsRow rowGAFieldDefinitionsRow = ((GAFieldDefinitionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TableId,
                        FieldId,
                        Datatype,
                        Length,
                        PSecurityClass,
                        LookupTable,
                        LookupTableKey,
                        LookupTableDisplayValue,
                        ExcludesFields,
                        ColumnOrder,
                        HideInSummary,
                        HideInDetail,
                        ShowInSmallList,
                        IsActive,
                        IsSelectable,
                        RequiredField,
                        CompareOperator,
                        CompareTo,
                        CopyFromFieldId,
                        SortOrder,
                        AscDesc,
                        IsReadOnly,
                        RefId,
                        rowguid,
                        LookupFilter,
                        DependsOnField,
                        DependantField,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3,
                        FilterOperator,
                        FilterCondition,
                        nTextFree1,
                        nTextFree2,
                        nTextFree3,
                        ControlHeigth,
                        HideInNew};
                rowGAFieldDefinitionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGAFieldDefinitionsRow);
                return rowGAFieldDefinitionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAFieldDefinitionsRow FindByTableIdFieldId(string TableId, string FieldId) {
                return ((GAFieldDefinitionsRow)(this.Rows.Find(new object[] {
                            TableId,
                            FieldId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GAFieldDefinitionsDataTable cln = ((GAFieldDefinitionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GAFieldDefinitionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTableId = base.Columns["TableId"];
                this.columnFieldId = base.Columns["FieldId"];
                this.columnDatatype = base.Columns["Datatype"];
                this.columnLength = base.Columns["Length"];
                this.columnPSecurityClass = base.Columns["PSecurityClass"];
                this.columnLookupTable = base.Columns["LookupTable"];
                this.columnLookupTableKey = base.Columns["LookupTableKey"];
                this.columnLookupTableDisplayValue = base.Columns["LookupTableDisplayValue"];
                this.columnExcludesFields = base.Columns["ExcludesFields"];
                this.columnColumnOrder = base.Columns["ColumnOrder"];
                this.columnHideInSummary = base.Columns["HideInSummary"];
                this.columnHideInDetail = base.Columns["HideInDetail"];
                this.columnShowInSmallList = base.Columns["ShowInSmallList"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnIsSelectable = base.Columns["IsSelectable"];
                this.columnRequiredField = base.Columns["RequiredField"];
                this.columnCompareOperator = base.Columns["CompareOperator"];
                this.columnCompareTo = base.Columns["CompareTo"];
                this.columnCopyFromFieldId = base.Columns["CopyFromFieldId"];
                this.columnSortOrder = base.Columns["SortOrder"];
                this.columnAscDesc = base.Columns["AscDesc"];
                this.columnIsReadOnly = base.Columns["IsReadOnly"];
                this.columnRefId = base.Columns["RefId"];
                this.columnrowguid = base.Columns["rowguid"];
                this.columnLookupFilter = base.Columns["LookupFilter"];
                this.columnDependsOnField = base.Columns["DependsOnField"];
                this.columnDependantField = base.Columns["DependantField"];
                this.columnMasterRowId = base.Columns["MasterRowId"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnDateChanged = base.Columns["DateChanged"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnDateDeleted = base.Columns["DateDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnSwitchFree1 = base.Columns["SwitchFree1"];
                this.columnSwitchFree2 = base.Columns["SwitchFree2"];
                this.columnSwitchFree3 = base.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = base.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = base.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = base.Columns["DateTimeFree3"];
                this.columnTextFree1 = base.Columns["TextFree1"];
                this.columnTextFree2 = base.Columns["TextFree2"];
                this.columnTextFree3 = base.Columns["TextFree3"];
                this.columnIntFree1 = base.Columns["IntFree1"];
                this.columnIntFree2 = base.Columns["IntFree2"];
                this.columnIntFree3 = base.Columns["IntFree3"];
                this.columnFilterOperator = base.Columns["FilterOperator"];
                this.columnFilterCondition = base.Columns["FilterCondition"];
                this.columnnTextFree1 = base.Columns["nTextFree1"];
                this.columnnTextFree2 = base.Columns["nTextFree2"];
                this.columnnTextFree3 = base.Columns["nTextFree3"];
                this.columnControlHeigth = base.Columns["ControlHeigth"];
                this.columnHideInNew = base.Columns["HideInNew"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTableId = new global::System.Data.DataColumn("TableId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTableId);
                this.columnFieldId = new global::System.Data.DataColumn("FieldId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFieldId);
                this.columnDatatype = new global::System.Data.DataColumn("Datatype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatatype);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnPSecurityClass = new global::System.Data.DataColumn("PSecurityClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSecurityClass);
                this.columnLookupTable = new global::System.Data.DataColumn("LookupTable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLookupTable);
                this.columnLookupTableKey = new global::System.Data.DataColumn("LookupTableKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLookupTableKey);
                this.columnLookupTableDisplayValue = new global::System.Data.DataColumn("LookupTableDisplayValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLookupTableDisplayValue);
                this.columnExcludesFields = new global::System.Data.DataColumn("ExcludesFields", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcludesFields);
                this.columnColumnOrder = new global::System.Data.DataColumn("ColumnOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnOrder);
                this.columnHideInSummary = new global::System.Data.DataColumn("HideInSummary", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHideInSummary);
                this.columnHideInDetail = new global::System.Data.DataColumn("HideInDetail", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHideInDetail);
                this.columnShowInSmallList = new global::System.Data.DataColumn("ShowInSmallList", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowInSmallList);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnIsSelectable = new global::System.Data.DataColumn("IsSelectable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSelectable);
                this.columnRequiredField = new global::System.Data.DataColumn("RequiredField", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiredField);
                this.columnCompareOperator = new global::System.Data.DataColumn("CompareOperator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompareOperator);
                this.columnCompareTo = new global::System.Data.DataColumn("CompareTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompareTo);
                this.columnCopyFromFieldId = new global::System.Data.DataColumn("CopyFromFieldId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCopyFromFieldId);
                this.columnSortOrder = new global::System.Data.DataColumn("SortOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortOrder);
                this.columnAscDesc = new global::System.Data.DataColumn("AscDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAscDesc);
                this.columnIsReadOnly = new global::System.Data.DataColumn("IsReadOnly", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsReadOnly);
                this.columnRefId = new global::System.Data.DataColumn("RefId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefId);
                this.columnrowguid = new global::System.Data.DataColumn("rowguid", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowguid);
                this.columnLookupFilter = new global::System.Data.DataColumn("LookupFilter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLookupFilter);
                this.columnDependsOnField = new global::System.Data.DataColumn("DependsOnField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDependsOnField);
                this.columnDependantField = new global::System.Data.DataColumn("DependantField", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDependantField);
                this.columnMasterRowId = new global::System.Data.DataColumn("MasterRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new global::System.Data.DataColumn("DateCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new global::System.Data.DataColumn("DateChanged", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new global::System.Data.DataColumn("DateDeleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new global::System.Data.DataColumn("SwitchFree1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new global::System.Data.DataColumn("SwitchFree2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new global::System.Data.DataColumn("SwitchFree3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new global::System.Data.DataColumn("DateTimeFree1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new global::System.Data.DataColumn("DateTimeFree2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new global::System.Data.DataColumn("DateTimeFree3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new global::System.Data.DataColumn("TextFree1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new global::System.Data.DataColumn("TextFree2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new global::System.Data.DataColumn("TextFree3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new global::System.Data.DataColumn("IntFree1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new global::System.Data.DataColumn("IntFree2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new global::System.Data.DataColumn("IntFree3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree3);
                this.columnFilterOperator = new global::System.Data.DataColumn("FilterOperator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilterOperator);
                this.columnFilterCondition = new global::System.Data.DataColumn("FilterCondition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilterCondition);
                this.columnnTextFree1 = new global::System.Data.DataColumn("nTextFree1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree1);
                this.columnnTextFree2 = new global::System.Data.DataColumn("nTextFree2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree2);
                this.columnnTextFree3 = new global::System.Data.DataColumn("nTextFree3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree3);
                this.columnControlHeigth = new global::System.Data.DataColumn("ControlHeigth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnControlHeigth);
                this.columnHideInNew = new global::System.Data.DataColumn("HideInNew", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHideInNew);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTableId,
                                this.columnFieldId}, true));
                this.columnTableId.AllowDBNull = false;
                this.columnTableId.MaxLength = 50;
                this.columnFieldId.AllowDBNull = false;
                this.columnFieldId.MaxLength = 100;
                this.columnDatatype.AllowDBNull = false;
                this.columnDatatype.MaxLength = 100;
                this.columnPSecurityClass.MaxLength = 50;
                this.columnLookupTable.MaxLength = 100;
                this.columnLookupTableKey.MaxLength = 100;
                this.columnLookupTableDisplayValue.MaxLength = 100;
                this.columnExcludesFields.MaxLength = 400;
                this.columnColumnOrder.AllowDBNull = false;
                this.columnHideInSummary.AllowDBNull = false;
                this.columnCompareOperator.MaxLength = 20;
                this.columnCompareTo.MaxLength = 100;
                this.columnCopyFromFieldId.MaxLength = 100;
                this.columnAscDesc.MaxLength = 4;
                this.columnRefId.MaxLength = 200;
                this.columnLookupFilter.MaxLength = 100;
                this.columnDependsOnField.MaxLength = 400;
                this.columnDependantField.MaxLength = 400;
                this.columnTextFree1.MaxLength = 200;
                this.columnTextFree2.MaxLength = 200;
                this.columnTextFree3.MaxLength = 200;
                this.columnFilterOperator.MaxLength = 20;
                this.columnFilterCondition.MaxLength = 400;
                this.columnnTextFree1.MaxLength = 1073741823;
                this.columnnTextFree2.MaxLength = 1073741823;
                this.columnnTextFree3.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAFieldDefinitionsRow NewGAFieldDefinitionsRow() {
                return ((GAFieldDefinitionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GAFieldDefinitionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GAFieldDefinitionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAFieldDefinitionsRowChanged != null)) {
                    this.GAFieldDefinitionsRowChanged(this, new GAFieldDefinitionsRowChangeEvent(((GAFieldDefinitionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAFieldDefinitionsRowChanging != null)) {
                    this.GAFieldDefinitionsRowChanging(this, new GAFieldDefinitionsRowChangeEvent(((GAFieldDefinitionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAFieldDefinitionsRowDeleted != null)) {
                    this.GAFieldDefinitionsRowDeleted(this, new GAFieldDefinitionsRowChangeEvent(((GAFieldDefinitionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAFieldDefinitionsRowDeleting != null)) {
                    this.GAFieldDefinitionsRowDeleting(this, new GAFieldDefinitionsRowChangeEvent(((GAFieldDefinitionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGAFieldDefinitionsRow(GAFieldDefinitionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FieldDefinitionDS ds = new FieldDefinitionDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GAFieldDefinitionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GAFieldDefinitionsRow : global::System.Data.DataRow {
            
            private GAFieldDefinitionsDataTable tableGAFieldDefinitions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAFieldDefinitionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAFieldDefinitions = ((GAFieldDefinitionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TableId {
                get {
                    return ((string)(this[this.tableGAFieldDefinitions.TableIdColumn]));
                }
                set {
                    this[this.tableGAFieldDefinitions.TableIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FieldId {
                get {
                    return ((string)(this[this.tableGAFieldDefinitions.FieldIdColumn]));
                }
                set {
                    this[this.tableGAFieldDefinitions.FieldIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Datatype {
                get {
                    return ((string)(this[this.tableGAFieldDefinitions.DatatypeColumn]));
                }
                set {
                    this[this.tableGAFieldDefinitions.DatatypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Length {
                get {
                    try {
                        return ((int)(this[this.tableGAFieldDefinitions.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Length\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PSecurityClass {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.PSecurityClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PSecurityClass\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.PSecurityClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LookupTable {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.LookupTableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LookupTable\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.LookupTableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LookupTableKey {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.LookupTableKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LookupTableKey\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.LookupTableKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LookupTableDisplayValue {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.LookupTableDisplayValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LookupTableDisplayValue\' in table \'GAFieldDefinitions\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.LookupTableDisplayValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExcludesFields {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.ExcludesFieldsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExcludesFields\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.ExcludesFieldsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ColumnOrder {
                get {
                    return ((int)(this[this.tableGAFieldDefinitions.ColumnOrderColumn]));
                }
                set {
                    this[this.tableGAFieldDefinitions.ColumnOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HideInSummary {
                get {
                    return ((bool)(this[this.tableGAFieldDefinitions.HideInSummaryColumn]));
                }
                set {
                    this[this.tableGAFieldDefinitions.HideInSummaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HideInDetail {
                get {
                    try {
                        return ((bool)(this[this.tableGAFieldDefinitions.HideInDetailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HideInDetail\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.HideInDetailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ShowInSmallList {
                get {
                    try {
                        return ((bool)(this[this.tableGAFieldDefinitions.ShowInSmallListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShowInSmallList\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.ShowInSmallListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tableGAFieldDefinitions.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectable {
                get {
                    try {
                        return ((bool)(this[this.tableGAFieldDefinitions.IsSelectableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsSelectable\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.IsSelectableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RequiredField {
                get {
                    try {
                        return ((bool)(this[this.tableGAFieldDefinitions.RequiredFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequiredField\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.RequiredFieldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompareOperator {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.CompareOperatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompareOperator\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.CompareOperatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompareTo {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.CompareToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompareTo\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.CompareToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CopyFromFieldId {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.CopyFromFieldIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CopyFromFieldId\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.CopyFromFieldIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SortOrder {
                get {
                    try {
                        return ((int)(this[this.tableGAFieldDefinitions.SortOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortOrder\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.SortOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AscDesc {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.AscDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AscDesc\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.AscDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReadOnly {
                get {
                    try {
                        return ((bool)(this[this.tableGAFieldDefinitions.IsReadOnlyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsReadOnly\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.IsReadOnlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RefId {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.RefIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefId\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.RefIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid rowguid {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableGAFieldDefinitions.rowguidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rowguid\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.rowguidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LookupFilter {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.LookupFilterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LookupFilter\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.LookupFilterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DependsOnField {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.DependsOnFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DependsOnField\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.DependsOnFieldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DependantField {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.DependantFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DependantField\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.DependantFieldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAFieldDefinitions.MasterRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MasterRowId\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.MasterRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAFieldDefinitions.DateCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateCreated\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.DateCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAFieldDefinitions.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAFieldDefinitions.DateChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateChanged\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.DateChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAFieldDefinitions.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAFieldDefinitions.DateDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateDeleted\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.DateDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAFieldDefinitions.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAFieldDefinitions.SwitchFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree1\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.SwitchFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAFieldDefinitions.SwitchFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree2\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.SwitchFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAFieldDefinitions.SwitchFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree3\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.SwitchFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAFieldDefinitions.DateTimeFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree1\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.DateTimeFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAFieldDefinitions.DateTimeFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree2\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.DateTimeFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAFieldDefinitions.DateTimeFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree3\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.DateTimeFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.TextFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree1\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.TextFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.TextFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree2\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.TextFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.TextFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree3\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.TextFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAFieldDefinitions.IntFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntFree1\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.IntFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAFieldDefinitions.IntFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntFree2\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.IntFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAFieldDefinitions.IntFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntFree3\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.IntFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FilterOperator {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.FilterOperatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FilterOperator\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.FilterOperatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FilterCondition {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.FilterConditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FilterCondition\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.FilterConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.nTextFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree1\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.nTextFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.nTextFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree2\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.nTextFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAFieldDefinitions.nTextFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree3\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.nTextFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ControlHeigth {
                get {
                    try {
                        return ((int)(this[this.tableGAFieldDefinitions.ControlHeigthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ControlHeigth\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.ControlHeigthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HideInNew {
                get {
                    try {
                        return ((bool)(this[this.tableGAFieldDefinitions.HideInNewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HideInNew\' in table \'GAFieldDefinitions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAFieldDefinitions.HideInNewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthNull() {
                return this.IsNull(this.tableGAFieldDefinitions.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthNull() {
                this[this.tableGAFieldDefinitions.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPSecurityClassNull() {
                return this.IsNull(this.tableGAFieldDefinitions.PSecurityClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPSecurityClassNull() {
                this[this.tableGAFieldDefinitions.PSecurityClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLookupTableNull() {
                return this.IsNull(this.tableGAFieldDefinitions.LookupTableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLookupTableNull() {
                this[this.tableGAFieldDefinitions.LookupTableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLookupTableKeyNull() {
                return this.IsNull(this.tableGAFieldDefinitions.LookupTableKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLookupTableKeyNull() {
                this[this.tableGAFieldDefinitions.LookupTableKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLookupTableDisplayValueNull() {
                return this.IsNull(this.tableGAFieldDefinitions.LookupTableDisplayValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLookupTableDisplayValueNull() {
                this[this.tableGAFieldDefinitions.LookupTableDisplayValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExcludesFieldsNull() {
                return this.IsNull(this.tableGAFieldDefinitions.ExcludesFieldsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExcludesFieldsNull() {
                this[this.tableGAFieldDefinitions.ExcludesFieldsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHideInDetailNull() {
                return this.IsNull(this.tableGAFieldDefinitions.HideInDetailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHideInDetailNull() {
                this[this.tableGAFieldDefinitions.HideInDetailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShowInSmallListNull() {
                return this.IsNull(this.tableGAFieldDefinitions.ShowInSmallListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShowInSmallListNull() {
                this[this.tableGAFieldDefinitions.ShowInSmallListColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableGAFieldDefinitions.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tableGAFieldDefinitions.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsSelectableNull() {
                return this.IsNull(this.tableGAFieldDefinitions.IsSelectableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsSelectableNull() {
                this[this.tableGAFieldDefinitions.IsSelectableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequiredFieldNull() {
                return this.IsNull(this.tableGAFieldDefinitions.RequiredFieldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequiredFieldNull() {
                this[this.tableGAFieldDefinitions.RequiredFieldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompareOperatorNull() {
                return this.IsNull(this.tableGAFieldDefinitions.CompareOperatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompareOperatorNull() {
                this[this.tableGAFieldDefinitions.CompareOperatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompareToNull() {
                return this.IsNull(this.tableGAFieldDefinitions.CompareToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompareToNull() {
                this[this.tableGAFieldDefinitions.CompareToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCopyFromFieldIdNull() {
                return this.IsNull(this.tableGAFieldDefinitions.CopyFromFieldIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCopyFromFieldIdNull() {
                this[this.tableGAFieldDefinitions.CopyFromFieldIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortOrderNull() {
                return this.IsNull(this.tableGAFieldDefinitions.SortOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortOrderNull() {
                this[this.tableGAFieldDefinitions.SortOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAscDescNull() {
                return this.IsNull(this.tableGAFieldDefinitions.AscDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAscDescNull() {
                this[this.tableGAFieldDefinitions.AscDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsReadOnlyNull() {
                return this.IsNull(this.tableGAFieldDefinitions.IsReadOnlyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsReadOnlyNull() {
                this[this.tableGAFieldDefinitions.IsReadOnlyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefIdNull() {
                return this.IsNull(this.tableGAFieldDefinitions.RefIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefIdNull() {
                this[this.tableGAFieldDefinitions.RefIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGAFieldDefinitions.rowguidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrowguidNull() {
                this[this.tableGAFieldDefinitions.rowguidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLookupFilterNull() {
                return this.IsNull(this.tableGAFieldDefinitions.LookupFilterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLookupFilterNull() {
                this[this.tableGAFieldDefinitions.LookupFilterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDependsOnFieldNull() {
                return this.IsNull(this.tableGAFieldDefinitions.DependsOnFieldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDependsOnFieldNull() {
                this[this.tableGAFieldDefinitions.DependsOnFieldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDependantFieldNull() {
                return this.IsNull(this.tableGAFieldDefinitions.DependantFieldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDependantFieldNull() {
                this[this.tableGAFieldDefinitions.DependantFieldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAFieldDefinitions.MasterRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterRowIdNull() {
                this[this.tableGAFieldDefinitions.MasterRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAFieldDefinitions.DateCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateCreatedNull() {
                this[this.tableGAFieldDefinitions.DateCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAFieldDefinitions.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableGAFieldDefinitions.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAFieldDefinitions.DateChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangedNull() {
                this[this.tableGAFieldDefinitions.DateChangedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAFieldDefinitions.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableGAFieldDefinitions.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAFieldDefinitions.DateDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateDeletedNull() {
                this[this.tableGAFieldDefinitions.DateDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAFieldDefinitions.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableGAFieldDefinitions.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAFieldDefinitions.SwitchFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree1Null() {
                this[this.tableGAFieldDefinitions.SwitchFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAFieldDefinitions.SwitchFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree2Null() {
                this[this.tableGAFieldDefinitions.SwitchFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAFieldDefinitions.SwitchFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree3Null() {
                this[this.tableGAFieldDefinitions.SwitchFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAFieldDefinitions.DateTimeFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree1Null() {
                this[this.tableGAFieldDefinitions.DateTimeFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAFieldDefinitions.DateTimeFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree2Null() {
                this[this.tableGAFieldDefinitions.DateTimeFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAFieldDefinitions.DateTimeFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree3Null() {
                this[this.tableGAFieldDefinitions.DateTimeFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAFieldDefinitions.TextFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree1Null() {
                this[this.tableGAFieldDefinitions.TextFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAFieldDefinitions.TextFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree2Null() {
                this[this.tableGAFieldDefinitions.TextFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAFieldDefinitions.TextFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree3Null() {
                this[this.tableGAFieldDefinitions.TextFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAFieldDefinitions.IntFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree1Null() {
                this[this.tableGAFieldDefinitions.IntFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAFieldDefinitions.IntFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree2Null() {
                this[this.tableGAFieldDefinitions.IntFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAFieldDefinitions.IntFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree3Null() {
                this[this.tableGAFieldDefinitions.IntFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFilterOperatorNull() {
                return this.IsNull(this.tableGAFieldDefinitions.FilterOperatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFilterOperatorNull() {
                this[this.tableGAFieldDefinitions.FilterOperatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFilterConditionNull() {
                return this.IsNull(this.tableGAFieldDefinitions.FilterConditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFilterConditionNull() {
                this[this.tableGAFieldDefinitions.FilterConditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree1Null() {
                return this.IsNull(this.tableGAFieldDefinitions.nTextFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree1Null() {
                this[this.tableGAFieldDefinitions.nTextFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree2Null() {
                return this.IsNull(this.tableGAFieldDefinitions.nTextFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree2Null() {
                this[this.tableGAFieldDefinitions.nTextFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree3Null() {
                return this.IsNull(this.tableGAFieldDefinitions.nTextFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree3Null() {
                this[this.tableGAFieldDefinitions.nTextFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsControlHeigthNull() {
                return this.IsNull(this.tableGAFieldDefinitions.ControlHeigthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetControlHeigthNull() {
                this[this.tableGAFieldDefinitions.ControlHeigthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHideInNewNull() {
                return this.IsNull(this.tableGAFieldDefinitions.HideInNewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHideInNewNull() {
                this[this.tableGAFieldDefinitions.HideInNewColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GAFieldDefinitionsRowChangeEvent : global::System.EventArgs {
            
            private GAFieldDefinitionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAFieldDefinitionsRowChangeEvent(GAFieldDefinitionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAFieldDefinitionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591