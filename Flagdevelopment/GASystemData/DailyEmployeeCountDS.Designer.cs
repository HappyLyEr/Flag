//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DailyEmployeeCountDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DailyEmployeeCountDS : global::System.Data.DataSet {
        
        private GADailyEmployeeCountDataTable tableGADailyEmployeeCount;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DailyEmployeeCountDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DailyEmployeeCountDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GADailyEmployeeCount"] != null)) {
                    base.Tables.Add(new GADailyEmployeeCountDataTable(ds.Tables["GADailyEmployeeCount"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GADailyEmployeeCountDataTable GADailyEmployeeCount {
            get {
                return this.tableGADailyEmployeeCount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DailyEmployeeCountDS cln = ((DailyEmployeeCountDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GADailyEmployeeCount"] != null)) {
                    base.Tables.Add(new GADailyEmployeeCountDataTable(ds.Tables["GADailyEmployeeCount"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGADailyEmployeeCount = ((GADailyEmployeeCountDataTable)(base.Tables["GADailyEmployeeCount"]));
            if ((initTable == true)) {
                if ((this.tableGADailyEmployeeCount != null)) {
                    this.tableGADailyEmployeeCount.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DailyEmployeeCountDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DailyEmployeeCountDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGADailyEmployeeCount = new GADailyEmployeeCountDataTable();
            base.Tables.Add(this.tableGADailyEmployeeCount);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGADailyEmployeeCount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DailyEmployeeCountDS ds = new DailyEmployeeCountDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GADailyEmployeeCountRowChangeEventHandler(object sender, GADailyEmployeeCountRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GADailyEmployeeCountDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDailyEmployeeCountRowId;
            
            private global::System.Data.DataColumn columnDailyEmployeeCountReferenceId;
            
            private global::System.Data.DataColumn columnLocationOfWork;
            
            private global::System.Data.DataColumn columnReportDate;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnSeismicPersonnelCount;
            
            private global::System.Data.DataColumn columnMarinePersonnelCount;
            
            private global::System.Data.DataColumn columnThirdPartyPersonnelCount;
            
            private global::System.Data.DataColumn columnOfficePersonnelCount;
            
            private global::System.Data.DataColumn columnClientPersonnelCount;
            
            private global::System.Data.DataColumn columnDailyEmployeeCountComment;
            
            private global::System.Data.DataColumn columnCetaceansCount;
            
            private global::System.Data.DataColumn columnCetaceansCountComment;
            
            private global::System.Data.DataColumn columnCrewBoatActivitiesCount;
            
            private global::System.Data.DataColumn columnCrewBoatActivitiesCountComment;
            
            private global::System.Data.DataColumn columnMaritimeIcidentAndIllnessCount;
            
            private global::System.Data.DataColumn columnMaritimeIcidentAndIllnessCountComment;
            
            private global::System.Data.DataColumn columnOwnIncidentAndIllnessCount;
            
            private global::System.Data.DataColumn columnOwnIncidentAndIllnessCountComment;
            
            private global::System.Data.DataColumn columnHIPCardUnsafeActsCount;
            
            private global::System.Data.DataColumn columnHIPCardUnsafeActsCountComment;
            
            private global::System.Data.DataColumn columnHIPCardNearMissesCount;
            
            private global::System.Data.DataColumn columnHIPCardNearMissesCountComment;
            
            private global::System.Data.DataColumn columnCrewSafetyMeetingsCount;
            
            private global::System.Data.DataColumn columnCrewSafetyMeetingsCountComment;
            
            private global::System.Data.DataColumn columnToolboxMeetingsCount;
            
            private global::System.Data.DataColumn columnToolboxMeetingsCountComment;
            
            private global::System.Data.DataColumn columnSafetyDrillsCount;
            
            private global::System.Data.DataColumn columnSafetyDrillsCountComment;
            
            private global::System.Data.DataColumn columnSOPDepartmentalInspectionsCount;
            
            private global::System.Data.DataColumn columnSOPDepartmentalInspectionsCountComment;
            
            private global::System.Data.DataColumn columnSOPCrossDepartmentalInspectionsCount;
            
            private global::System.Data.DataColumn columnSOPCrossDepartmentalInspectionsCountComment;
            
            private global::System.Data.DataColumn columnSOPPartyChiefInspectionsCount;
            
            private global::System.Data.DataColumn columnSOPPartyChiefInspectionsCountComment;
            
            private global::System.Data.DataColumn columnAOBComment;
            
            private global::System.Data.DataColumn columnManHours;
            
            private global::System.Data.DataColumn columnProjectManHours;
            
            private global::System.Data.DataColumn columnYesNoSafetyEventListsRowId;
            
            private global::System.Data.DataColumn columnrowguid;
            
            private global::System.Data.DataColumn columnMasterRowId;
            
            private global::System.Data.DataColumn columnDateCreated;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnDateChanged;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnDateDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnSwitchFree1;
            
            private global::System.Data.DataColumn columnSwitchFree2;
            
            private global::System.Data.DataColumn columnSwitchFree3;
            
            private global::System.Data.DataColumn columnDateTimeFree1;
            
            private global::System.Data.DataColumn columnDateTimeFree2;
            
            private global::System.Data.DataColumn columnDateTimeFree3;
            
            private global::System.Data.DataColumn columnTextFree1;
            
            private global::System.Data.DataColumn columnTextFree2;
            
            private global::System.Data.DataColumn columnTextFree3;
            
            private global::System.Data.DataColumn columnIntFree1;
            
            private global::System.Data.DataColumn columnIntFree2;
            
            private global::System.Data.DataColumn columnIntFree3;
            
            private global::System.Data.DataColumn columnnTextFree1;
            
            private global::System.Data.DataColumn columnnTextFree2;
            
            private global::System.Data.DataColumn columnnTextFree3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADailyEmployeeCountDataTable() {
                this.TableName = "GADailyEmployeeCount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GADailyEmployeeCountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GADailyEmployeeCountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DailyEmployeeCountRowIdColumn {
                get {
                    return this.columnDailyEmployeeCountRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DailyEmployeeCountReferenceIdColumn {
                get {
                    return this.columnDailyEmployeeCountReferenceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationOfWorkColumn {
                get {
                    return this.columnLocationOfWork;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SeismicPersonnelCountColumn {
                get {
                    return this.columnSeismicPersonnelCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarinePersonnelCountColumn {
                get {
                    return this.columnMarinePersonnelCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThirdPartyPersonnelCountColumn {
                get {
                    return this.columnThirdPartyPersonnelCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfficePersonnelCountColumn {
                get {
                    return this.columnOfficePersonnelCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientPersonnelCountColumn {
                get {
                    return this.columnClientPersonnelCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DailyEmployeeCountCommentColumn {
                get {
                    return this.columnDailyEmployeeCountComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CetaceansCountColumn {
                get {
                    return this.columnCetaceansCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CetaceansCountCommentColumn {
                get {
                    return this.columnCetaceansCountComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CrewBoatActivitiesCountColumn {
                get {
                    return this.columnCrewBoatActivitiesCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CrewBoatActivitiesCountCommentColumn {
                get {
                    return this.columnCrewBoatActivitiesCountComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritimeIcidentAndIllnessCountColumn {
                get {
                    return this.columnMaritimeIcidentAndIllnessCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritimeIcidentAndIllnessCountCommentColumn {
                get {
                    return this.columnMaritimeIcidentAndIllnessCountComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnIncidentAndIllnessCountColumn {
                get {
                    return this.columnOwnIncidentAndIllnessCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnIncidentAndIllnessCountCommentColumn {
                get {
                    return this.columnOwnIncidentAndIllnessCountComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIPCardUnsafeActsCountColumn {
                get {
                    return this.columnHIPCardUnsafeActsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIPCardUnsafeActsCountCommentColumn {
                get {
                    return this.columnHIPCardUnsafeActsCountComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIPCardNearMissesCountColumn {
                get {
                    return this.columnHIPCardNearMissesCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIPCardNearMissesCountCommentColumn {
                get {
                    return this.columnHIPCardNearMissesCountComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CrewSafetyMeetingsCountColumn {
                get {
                    return this.columnCrewSafetyMeetingsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CrewSafetyMeetingsCountCommentColumn {
                get {
                    return this.columnCrewSafetyMeetingsCountComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToolboxMeetingsCountColumn {
                get {
                    return this.columnToolboxMeetingsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToolboxMeetingsCountCommentColumn {
                get {
                    return this.columnToolboxMeetingsCountComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SafetyDrillsCountColumn {
                get {
                    return this.columnSafetyDrillsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SafetyDrillsCountCommentColumn {
                get {
                    return this.columnSafetyDrillsCountComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOPDepartmentalInspectionsCountColumn {
                get {
                    return this.columnSOPDepartmentalInspectionsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOPDepartmentalInspectionsCountCommentColumn {
                get {
                    return this.columnSOPDepartmentalInspectionsCountComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOPCrossDepartmentalInspectionsCountColumn {
                get {
                    return this.columnSOPCrossDepartmentalInspectionsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOPCrossDepartmentalInspectionsCountCommentColumn {
                get {
                    return this.columnSOPCrossDepartmentalInspectionsCountComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOPPartyChiefInspectionsCountColumn {
                get {
                    return this.columnSOPPartyChiefInspectionsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOPPartyChiefInspectionsCountCommentColumn {
                get {
                    return this.columnSOPPartyChiefInspectionsCountComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AOBCommentColumn {
                get {
                    return this.columnAOBComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManHoursColumn {
                get {
                    return this.columnManHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjectManHoursColumn {
                get {
                    return this.columnProjectManHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YesNoSafetyEventListsRowIdColumn {
                get {
                    return this.columnYesNoSafetyEventListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree1Column {
                get {
                    return this.columnnTextFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree2Column {
                get {
                    return this.columnnTextFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree3Column {
                get {
                    return this.columnnTextFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADailyEmployeeCountRow this[int index] {
                get {
                    return ((GADailyEmployeeCountRow)(this.Rows[index]));
                }
            }
            
            public event GADailyEmployeeCountRowChangeEventHandler GADailyEmployeeCountRowChanging;
            
            public event GADailyEmployeeCountRowChangeEventHandler GADailyEmployeeCountRowChanged;
            
            public event GADailyEmployeeCountRowChangeEventHandler GADailyEmployeeCountRowDeleting;
            
            public event GADailyEmployeeCountRowChangeEventHandler GADailyEmployeeCountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGADailyEmployeeCountRow(GADailyEmployeeCountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADailyEmployeeCountRow AddGADailyEmployeeCountRow(
                        string DailyEmployeeCountReferenceId, 
                        string LocationOfWork, 
                        System.DateTime ReportDate, 
                        string Comment, 
                        int SeismicPersonnelCount, 
                        int MarinePersonnelCount, 
                        int ThirdPartyPersonnelCount, 
                        int OfficePersonnelCount, 
                        int ClientPersonnelCount, 
                        string DailyEmployeeCountComment, 
                        int CetaceansCount, 
                        string CetaceansCountComment, 
                        int CrewBoatActivitiesCount, 
                        string CrewBoatActivitiesCountComment, 
                        int MaritimeIcidentAndIllnessCount, 
                        string MaritimeIcidentAndIllnessCountComment, 
                        int OwnIncidentAndIllnessCount, 
                        string OwnIncidentAndIllnessCountComment, 
                        int HIPCardUnsafeActsCount, 
                        string HIPCardUnsafeActsCountComment, 
                        int HIPCardNearMissesCount, 
                        string HIPCardNearMissesCountComment, 
                        int CrewSafetyMeetingsCount, 
                        string CrewSafetyMeetingsCountComment, 
                        int ToolboxMeetingsCount, 
                        string ToolboxMeetingsCountComment, 
                        int SafetyDrillsCount, 
                        string SafetyDrillsCountComment, 
                        int SOPDepartmentalInspectionsCount, 
                        string SOPDepartmentalInspectionsCountComment, 
                        int SOPCrossDepartmentalInspectionsCount, 
                        string SOPCrossDepartmentalInspectionsCountComment, 
                        int SOPPartyChiefInspectionsCount, 
                        string SOPPartyChiefInspectionsCountComment, 
                        string AOBComment, 
                        int ManHours, 
                        int ProjectManHours, 
                        int YesNoSafetyEventListsRowId, 
                        System.Guid rowguid, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3, 
                        string nTextFree1, 
                        string nTextFree2, 
                        string nTextFree3) {
                GADailyEmployeeCountRow rowGADailyEmployeeCountRow = ((GADailyEmployeeCountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DailyEmployeeCountReferenceId,
                        LocationOfWork,
                        ReportDate,
                        Comment,
                        SeismicPersonnelCount,
                        MarinePersonnelCount,
                        ThirdPartyPersonnelCount,
                        OfficePersonnelCount,
                        ClientPersonnelCount,
                        DailyEmployeeCountComment,
                        CetaceansCount,
                        CetaceansCountComment,
                        CrewBoatActivitiesCount,
                        CrewBoatActivitiesCountComment,
                        MaritimeIcidentAndIllnessCount,
                        MaritimeIcidentAndIllnessCountComment,
                        OwnIncidentAndIllnessCount,
                        OwnIncidentAndIllnessCountComment,
                        HIPCardUnsafeActsCount,
                        HIPCardUnsafeActsCountComment,
                        HIPCardNearMissesCount,
                        HIPCardNearMissesCountComment,
                        CrewSafetyMeetingsCount,
                        CrewSafetyMeetingsCountComment,
                        ToolboxMeetingsCount,
                        ToolboxMeetingsCountComment,
                        SafetyDrillsCount,
                        SafetyDrillsCountComment,
                        SOPDepartmentalInspectionsCount,
                        SOPDepartmentalInspectionsCountComment,
                        SOPCrossDepartmentalInspectionsCount,
                        SOPCrossDepartmentalInspectionsCountComment,
                        SOPPartyChiefInspectionsCount,
                        SOPPartyChiefInspectionsCountComment,
                        AOBComment,
                        ManHours,
                        ProjectManHours,
                        YesNoSafetyEventListsRowId,
                        rowguid,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3,
                        nTextFree1,
                        nTextFree2,
                        nTextFree3};
                rowGADailyEmployeeCountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGADailyEmployeeCountRow);
                return rowGADailyEmployeeCountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADailyEmployeeCountRow FindByDailyEmployeeCountRowId(int DailyEmployeeCountRowId) {
                return ((GADailyEmployeeCountRow)(this.Rows.Find(new object[] {
                            DailyEmployeeCountRowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GADailyEmployeeCountDataTable cln = ((GADailyEmployeeCountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GADailyEmployeeCountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDailyEmployeeCountRowId = base.Columns["DailyEmployeeCountRowId"];
                this.columnDailyEmployeeCountReferenceId = base.Columns["DailyEmployeeCountReferenceId"];
                this.columnLocationOfWork = base.Columns["LocationOfWork"];
                this.columnReportDate = base.Columns["ReportDate"];
                this.columnComment = base.Columns["Comment"];
                this.columnSeismicPersonnelCount = base.Columns["SeismicPersonnelCount"];
                this.columnMarinePersonnelCount = base.Columns["MarinePersonnelCount"];
                this.columnThirdPartyPersonnelCount = base.Columns["ThirdPartyPersonnelCount"];
                this.columnOfficePersonnelCount = base.Columns["OfficePersonnelCount"];
                this.columnClientPersonnelCount = base.Columns["ClientPersonnelCount"];
                this.columnDailyEmployeeCountComment = base.Columns["DailyEmployeeCountComment"];
                this.columnCetaceansCount = base.Columns["CetaceansCount"];
                this.columnCetaceansCountComment = base.Columns["CetaceansCountComment"];
                this.columnCrewBoatActivitiesCount = base.Columns["CrewBoatActivitiesCount"];
                this.columnCrewBoatActivitiesCountComment = base.Columns["CrewBoatActivitiesCountComment"];
                this.columnMaritimeIcidentAndIllnessCount = base.Columns["MaritimeIcidentAndIllnessCount"];
                this.columnMaritimeIcidentAndIllnessCountComment = base.Columns["MaritimeIcidentAndIllnessCountComment"];
                this.columnOwnIncidentAndIllnessCount = base.Columns["OwnIncidentAndIllnessCount"];
                this.columnOwnIncidentAndIllnessCountComment = base.Columns["OwnIncidentAndIllnessCountComment"];
                this.columnHIPCardUnsafeActsCount = base.Columns["HIPCardUnsafeActsCount"];
                this.columnHIPCardUnsafeActsCountComment = base.Columns["HIPCardUnsafeActsCountComment"];
                this.columnHIPCardNearMissesCount = base.Columns["HIPCardNearMissesCount"];
                this.columnHIPCardNearMissesCountComment = base.Columns["HIPCardNearMissesCountComment"];
                this.columnCrewSafetyMeetingsCount = base.Columns["CrewSafetyMeetingsCount"];
                this.columnCrewSafetyMeetingsCountComment = base.Columns["CrewSafetyMeetingsCountComment"];
                this.columnToolboxMeetingsCount = base.Columns["ToolboxMeetingsCount"];
                this.columnToolboxMeetingsCountComment = base.Columns["ToolboxMeetingsCountComment"];
                this.columnSafetyDrillsCount = base.Columns["SafetyDrillsCount"];
                this.columnSafetyDrillsCountComment = base.Columns["SafetyDrillsCountComment"];
                this.columnSOPDepartmentalInspectionsCount = base.Columns["SOPDepartmentalInspectionsCount"];
                this.columnSOPDepartmentalInspectionsCountComment = base.Columns["SOPDepartmentalInspectionsCountComment"];
                this.columnSOPCrossDepartmentalInspectionsCount = base.Columns["SOPCrossDepartmentalInspectionsCount"];
                this.columnSOPCrossDepartmentalInspectionsCountComment = base.Columns["SOPCrossDepartmentalInspectionsCountComment"];
                this.columnSOPPartyChiefInspectionsCount = base.Columns["SOPPartyChiefInspectionsCount"];
                this.columnSOPPartyChiefInspectionsCountComment = base.Columns["SOPPartyChiefInspectionsCountComment"];
                this.columnAOBComment = base.Columns["AOBComment"];
                this.columnManHours = base.Columns["ManHours"];
                this.columnProjectManHours = base.Columns["ProjectManHours"];
                this.columnYesNoSafetyEventListsRowId = base.Columns["YesNoSafetyEventListsRowId"];
                this.columnrowguid = base.Columns["rowguid"];
                this.columnMasterRowId = base.Columns["MasterRowId"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnDateChanged = base.Columns["DateChanged"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnDateDeleted = base.Columns["DateDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnSwitchFree1 = base.Columns["SwitchFree1"];
                this.columnSwitchFree2 = base.Columns["SwitchFree2"];
                this.columnSwitchFree3 = base.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = base.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = base.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = base.Columns["DateTimeFree3"];
                this.columnTextFree1 = base.Columns["TextFree1"];
                this.columnTextFree2 = base.Columns["TextFree2"];
                this.columnTextFree3 = base.Columns["TextFree3"];
                this.columnIntFree1 = base.Columns["IntFree1"];
                this.columnIntFree2 = base.Columns["IntFree2"];
                this.columnIntFree3 = base.Columns["IntFree3"];
                this.columnnTextFree1 = base.Columns["nTextFree1"];
                this.columnnTextFree2 = base.Columns["nTextFree2"];
                this.columnnTextFree3 = base.Columns["nTextFree3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDailyEmployeeCountRowId = new global::System.Data.DataColumn("DailyEmployeeCountRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDailyEmployeeCountRowId);
                this.columnDailyEmployeeCountReferenceId = new global::System.Data.DataColumn("DailyEmployeeCountReferenceId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDailyEmployeeCountReferenceId);
                this.columnLocationOfWork = new global::System.Data.DataColumn("LocationOfWork", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationOfWork);
                this.columnReportDate = new global::System.Data.DataColumn("ReportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportDate);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnSeismicPersonnelCount = new global::System.Data.DataColumn("SeismicPersonnelCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeismicPersonnelCount);
                this.columnMarinePersonnelCount = new global::System.Data.DataColumn("MarinePersonnelCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarinePersonnelCount);
                this.columnThirdPartyPersonnelCount = new global::System.Data.DataColumn("ThirdPartyPersonnelCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThirdPartyPersonnelCount);
                this.columnOfficePersonnelCount = new global::System.Data.DataColumn("OfficePersonnelCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficePersonnelCount);
                this.columnClientPersonnelCount = new global::System.Data.DataColumn("ClientPersonnelCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientPersonnelCount);
                this.columnDailyEmployeeCountComment = new global::System.Data.DataColumn("DailyEmployeeCountComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDailyEmployeeCountComment);
                this.columnCetaceansCount = new global::System.Data.DataColumn("CetaceansCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCetaceansCount);
                this.columnCetaceansCountComment = new global::System.Data.DataColumn("CetaceansCountComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCetaceansCountComment);
                this.columnCrewBoatActivitiesCount = new global::System.Data.DataColumn("CrewBoatActivitiesCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrewBoatActivitiesCount);
                this.columnCrewBoatActivitiesCountComment = new global::System.Data.DataColumn("CrewBoatActivitiesCountComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrewBoatActivitiesCountComment);
                this.columnMaritimeIcidentAndIllnessCount = new global::System.Data.DataColumn("MaritimeIcidentAndIllnessCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritimeIcidentAndIllnessCount);
                this.columnMaritimeIcidentAndIllnessCountComment = new global::System.Data.DataColumn("MaritimeIcidentAndIllnessCountComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritimeIcidentAndIllnessCountComment);
                this.columnOwnIncidentAndIllnessCount = new global::System.Data.DataColumn("OwnIncidentAndIllnessCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnIncidentAndIllnessCount);
                this.columnOwnIncidentAndIllnessCountComment = new global::System.Data.DataColumn("OwnIncidentAndIllnessCountComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnIncidentAndIllnessCountComment);
                this.columnHIPCardUnsafeActsCount = new global::System.Data.DataColumn("HIPCardUnsafeActsCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIPCardUnsafeActsCount);
                this.columnHIPCardUnsafeActsCountComment = new global::System.Data.DataColumn("HIPCardUnsafeActsCountComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIPCardUnsafeActsCountComment);
                this.columnHIPCardNearMissesCount = new global::System.Data.DataColumn("HIPCardNearMissesCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIPCardNearMissesCount);
                this.columnHIPCardNearMissesCountComment = new global::System.Data.DataColumn("HIPCardNearMissesCountComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIPCardNearMissesCountComment);
                this.columnCrewSafetyMeetingsCount = new global::System.Data.DataColumn("CrewSafetyMeetingsCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrewSafetyMeetingsCount);
                this.columnCrewSafetyMeetingsCountComment = new global::System.Data.DataColumn("CrewSafetyMeetingsCountComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrewSafetyMeetingsCountComment);
                this.columnToolboxMeetingsCount = new global::System.Data.DataColumn("ToolboxMeetingsCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToolboxMeetingsCount);
                this.columnToolboxMeetingsCountComment = new global::System.Data.DataColumn("ToolboxMeetingsCountComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToolboxMeetingsCountComment);
                this.columnSafetyDrillsCount = new global::System.Data.DataColumn("SafetyDrillsCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyDrillsCount);
                this.columnSafetyDrillsCountComment = new global::System.Data.DataColumn("SafetyDrillsCountComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyDrillsCountComment);
                this.columnSOPDepartmentalInspectionsCount = new global::System.Data.DataColumn("SOPDepartmentalInspectionsCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPDepartmentalInspectionsCount);
                this.columnSOPDepartmentalInspectionsCountComment = new global::System.Data.DataColumn("SOPDepartmentalInspectionsCountComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPDepartmentalInspectionsCountComment);
                this.columnSOPCrossDepartmentalInspectionsCount = new global::System.Data.DataColumn("SOPCrossDepartmentalInspectionsCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPCrossDepartmentalInspectionsCount);
                this.columnSOPCrossDepartmentalInspectionsCountComment = new global::System.Data.DataColumn("SOPCrossDepartmentalInspectionsCountComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPCrossDepartmentalInspectionsCountComment);
                this.columnSOPPartyChiefInspectionsCount = new global::System.Data.DataColumn("SOPPartyChiefInspectionsCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPPartyChiefInspectionsCount);
                this.columnSOPPartyChiefInspectionsCountComment = new global::System.Data.DataColumn("SOPPartyChiefInspectionsCountComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPPartyChiefInspectionsCountComment);
                this.columnAOBComment = new global::System.Data.DataColumn("AOBComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAOBComment);
                this.columnManHours = new global::System.Data.DataColumn("ManHours", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManHours);
                this.columnProjectManHours = new global::System.Data.DataColumn("ProjectManHours", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectManHours);
                this.columnYesNoSafetyEventListsRowId = new global::System.Data.DataColumn("YesNoSafetyEventListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYesNoSafetyEventListsRowId);
                this.columnrowguid = new global::System.Data.DataColumn("rowguid", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowguid);
                this.columnMasterRowId = new global::System.Data.DataColumn("MasterRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new global::System.Data.DataColumn("DateCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new global::System.Data.DataColumn("DateChanged", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new global::System.Data.DataColumn("DateDeleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new global::System.Data.DataColumn("SwitchFree1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new global::System.Data.DataColumn("SwitchFree2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new global::System.Data.DataColumn("SwitchFree3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new global::System.Data.DataColumn("DateTimeFree1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new global::System.Data.DataColumn("DateTimeFree2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new global::System.Data.DataColumn("DateTimeFree3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new global::System.Data.DataColumn("TextFree1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new global::System.Data.DataColumn("TextFree2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new global::System.Data.DataColumn("TextFree3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new global::System.Data.DataColumn("IntFree1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new global::System.Data.DataColumn("IntFree2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new global::System.Data.DataColumn("IntFree3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree3);
                this.columnnTextFree1 = new global::System.Data.DataColumn("nTextFree1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree1);
                this.columnnTextFree2 = new global::System.Data.DataColumn("nTextFree2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree2);
                this.columnnTextFree3 = new global::System.Data.DataColumn("nTextFree3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree3);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDailyEmployeeCountRowId}, true));
                this.columnDailyEmployeeCountRowId.AutoIncrement = true;
                this.columnDailyEmployeeCountRowId.AllowDBNull = false;
                this.columnDailyEmployeeCountRowId.ReadOnly = true;
                this.columnDailyEmployeeCountRowId.Unique = true;
                this.columnDailyEmployeeCountReferenceId.MaxLength = 50;
                this.columnLocationOfWork.MaxLength = 50;
                this.columnComment.MaxLength = 1073741823;
                this.columnDailyEmployeeCountComment.MaxLength = 1073741823;
                this.columnCetaceansCountComment.MaxLength = 1073741823;
                this.columnCrewBoatActivitiesCountComment.MaxLength = 1073741823;
                this.columnMaritimeIcidentAndIllnessCountComment.MaxLength = 1073741823;
                this.columnOwnIncidentAndIllnessCountComment.MaxLength = 1073741823;
                this.columnHIPCardUnsafeActsCountComment.MaxLength = 1073741823;
                this.columnHIPCardNearMissesCountComment.MaxLength = 1073741823;
                this.columnCrewSafetyMeetingsCountComment.MaxLength = 1073741823;
                this.columnToolboxMeetingsCountComment.MaxLength = 1073741823;
                this.columnSafetyDrillsCountComment.MaxLength = 1073741823;
                this.columnSOPDepartmentalInspectionsCountComment.MaxLength = 1073741823;
                this.columnSOPCrossDepartmentalInspectionsCountComment.MaxLength = 1073741823;
                this.columnSOPPartyChiefInspectionsCountComment.MaxLength = 1073741823;
                this.columnAOBComment.MaxLength = 1073741823;
                this.columnTextFree1.MaxLength = 200;
                this.columnTextFree2.MaxLength = 200;
                this.columnTextFree3.MaxLength = 200;
                this.columnnTextFree1.MaxLength = 1073741823;
                this.columnnTextFree2.MaxLength = 1073741823;
                this.columnnTextFree3.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADailyEmployeeCountRow NewGADailyEmployeeCountRow() {
                return ((GADailyEmployeeCountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GADailyEmployeeCountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GADailyEmployeeCountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GADailyEmployeeCountRowChanged != null)) {
                    this.GADailyEmployeeCountRowChanged(this, new GADailyEmployeeCountRowChangeEvent(((GADailyEmployeeCountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GADailyEmployeeCountRowChanging != null)) {
                    this.GADailyEmployeeCountRowChanging(this, new GADailyEmployeeCountRowChangeEvent(((GADailyEmployeeCountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GADailyEmployeeCountRowDeleted != null)) {
                    this.GADailyEmployeeCountRowDeleted(this, new GADailyEmployeeCountRowChangeEvent(((GADailyEmployeeCountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GADailyEmployeeCountRowDeleting != null)) {
                    this.GADailyEmployeeCountRowDeleting(this, new GADailyEmployeeCountRowChangeEvent(((GADailyEmployeeCountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGADailyEmployeeCountRow(GADailyEmployeeCountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DailyEmployeeCountDS ds = new DailyEmployeeCountDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GADailyEmployeeCountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GADailyEmployeeCountRow : global::System.Data.DataRow {
            
            private GADailyEmployeeCountDataTable tableGADailyEmployeeCount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GADailyEmployeeCountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGADailyEmployeeCount = ((GADailyEmployeeCountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DailyEmployeeCountRowId {
                get {
                    return ((int)(this[this.tableGADailyEmployeeCount.DailyEmployeeCountRowIdColumn]));
                }
                set {
                    this[this.tableGADailyEmployeeCount.DailyEmployeeCountRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DailyEmployeeCountReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.DailyEmployeeCountReferenceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DailyEmployeeCountReferenceId\' in table \'GADailyEmployeeCou" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DailyEmployeeCountReferenceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocationOfWork {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.LocationOfWorkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationOfWork\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.LocationOfWorkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGADailyEmployeeCount.ReportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportDate\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.ReportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SeismicPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.SeismicPersonnelCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeismicPersonnelCount\' in table \'GADailyEmployeeCount\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SeismicPersonnelCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MarinePersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.MarinePersonnelCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarinePersonnelCount\' in table \'GADailyEmployeeCount\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.MarinePersonnelCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ThirdPartyPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.ThirdPartyPersonnelCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThirdPartyPersonnelCount\' in table \'GADailyEmployeeCount\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.ThirdPartyPersonnelCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OfficePersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.OfficePersonnelCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfficePersonnelCount\' in table \'GADailyEmployeeCount\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.OfficePersonnelCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.ClientPersonnelCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientPersonnelCount\' in table \'GADailyEmployeeCount\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.ClientPersonnelCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DailyEmployeeCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.DailyEmployeeCountCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DailyEmployeeCountComment\' in table \'GADailyEmployeeCount\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DailyEmployeeCountCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CetaceansCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.CetaceansCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CetaceansCount\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.CetaceansCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CetaceansCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.CetaceansCountCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CetaceansCountComment\' in table \'GADailyEmployeeCount\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.CetaceansCountCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CrewBoatActivitiesCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.CrewBoatActivitiesCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CrewBoatActivitiesCount\' in table \'GADailyEmployeeCount\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.CrewBoatActivitiesCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CrewBoatActivitiesCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.CrewBoatActivitiesCountCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CrewBoatActivitiesCountComment\' in table \'GADailyEmployeeCo" +
                                "unt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.CrewBoatActivitiesCountCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaritimeIcidentAndIllnessCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.MaritimeIcidentAndIllnessCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritimeIcidentAndIllnessCount\' in table \'GADailyEmployeeCo" +
                                "unt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.MaritimeIcidentAndIllnessCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaritimeIcidentAndIllnessCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.MaritimeIcidentAndIllnessCountCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritimeIcidentAndIllnessCountComment\' in table \'GADailyEmp" +
                                "loyeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.MaritimeIcidentAndIllnessCountCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnIncidentAndIllnessCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.OwnIncidentAndIllnessCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnIncidentAndIllnessCount\' in table \'GADailyEmployeeCount\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.OwnIncidentAndIllnessCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnIncidentAndIllnessCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.OwnIncidentAndIllnessCountCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnIncidentAndIllnessCountComment\' in table \'GADailyEmploye" +
                                "eCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.OwnIncidentAndIllnessCountCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HIPCardUnsafeActsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.HIPCardUnsafeActsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIPCardUnsafeActsCount\' in table \'GADailyEmployeeCount\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.HIPCardUnsafeActsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HIPCardUnsafeActsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.HIPCardUnsafeActsCountCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIPCardUnsafeActsCountComment\' in table \'GADailyEmployeeCou" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.HIPCardUnsafeActsCountCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HIPCardNearMissesCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.HIPCardNearMissesCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIPCardNearMissesCount\' in table \'GADailyEmployeeCount\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.HIPCardNearMissesCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HIPCardNearMissesCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.HIPCardNearMissesCountCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIPCardNearMissesCountComment\' in table \'GADailyEmployeeCou" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.HIPCardNearMissesCountCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CrewSafetyMeetingsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.CrewSafetyMeetingsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CrewSafetyMeetingsCount\' in table \'GADailyEmployeeCount\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.CrewSafetyMeetingsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CrewSafetyMeetingsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.CrewSafetyMeetingsCountCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CrewSafetyMeetingsCountComment\' in table \'GADailyEmployeeCo" +
                                "unt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.CrewSafetyMeetingsCountCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ToolboxMeetingsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.ToolboxMeetingsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToolboxMeetingsCount\' in table \'GADailyEmployeeCount\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.ToolboxMeetingsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToolboxMeetingsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.ToolboxMeetingsCountCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToolboxMeetingsCountComment\' in table \'GADailyEmployeeCount" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.ToolboxMeetingsCountCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SafetyDrillsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.SafetyDrillsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SafetyDrillsCount\' in table \'GADailyEmployeeCount\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SafetyDrillsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SafetyDrillsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.SafetyDrillsCountCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SafetyDrillsCountComment\' in table \'GADailyEmployeeCount\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SafetyDrillsCountCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOPDepartmentalInspectionsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.SOPDepartmentalInspectionsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOPDepartmentalInspectionsCount\' in table \'GADailyEmployeeC" +
                                "ount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SOPDepartmentalInspectionsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOPDepartmentalInspectionsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.SOPDepartmentalInspectionsCountCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOPDepartmentalInspectionsCountComment\' in table \'GADailyEm" +
                                "ployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SOPDepartmentalInspectionsCountCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOPCrossDepartmentalInspectionsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.SOPCrossDepartmentalInspectionsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOPCrossDepartmentalInspectionsCount\' in table \'GADailyEmpl" +
                                "oyeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SOPCrossDepartmentalInspectionsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOPCrossDepartmentalInspectionsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.SOPCrossDepartmentalInspectionsCountCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOPCrossDepartmentalInspectionsCountComment\' in table \'GADa" +
                                "ilyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SOPCrossDepartmentalInspectionsCountCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOPPartyChiefInspectionsCount {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.SOPPartyChiefInspectionsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOPPartyChiefInspectionsCount\' in table \'GADailyEmployeeCou" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SOPPartyChiefInspectionsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOPPartyChiefInspectionsCountComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.SOPPartyChiefInspectionsCountCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOPPartyChiefInspectionsCountComment\' in table \'GADailyEmpl" +
                                "oyeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SOPPartyChiefInspectionsCountCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AOBComment {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.AOBCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AOBComment\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.AOBCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ManHours {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.ManHoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManHours\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.ManHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProjectManHours {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.ProjectManHoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectManHours\' in table \'GADailyEmployeeCount\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.ProjectManHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YesNoSafetyEventListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.YesNoSafetyEventListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YesNoSafetyEventListsRowId\' in table \'GADailyEmployeeCount\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.YesNoSafetyEventListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid rowguid {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableGADailyEmployeeCount.rowguidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rowguid\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.rowguidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.MasterRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MasterRowId\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.MasterRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGADailyEmployeeCount.DateCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateCreated\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DateCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGADailyEmployeeCount.DateChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateChanged\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DateChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGADailyEmployeeCount.DateDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateDeleted\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DateDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGADailyEmployeeCount.SwitchFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree1\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SwitchFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGADailyEmployeeCount.SwitchFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree2\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SwitchFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGADailyEmployeeCount.SwitchFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree3\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.SwitchFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGADailyEmployeeCount.DateTimeFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree1\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DateTimeFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGADailyEmployeeCount.DateTimeFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree2\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DateTimeFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGADailyEmployeeCount.DateTimeFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree3\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.DateTimeFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.TextFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree1\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.TextFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.TextFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree2\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.TextFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.TextFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree3\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.TextFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.IntFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntFree1\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.IntFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.IntFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntFree2\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.IntFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGADailyEmployeeCount.IntFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntFree3\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.IntFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.nTextFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree1\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.nTextFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.nTextFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree2\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.nTextFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGADailyEmployeeCount.nTextFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree3\' in table \'GADailyEmployeeCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGADailyEmployeeCount.nTextFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDailyEmployeeCountReferenceIdNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.DailyEmployeeCountReferenceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDailyEmployeeCountReferenceIdNull() {
                this[this.tableGADailyEmployeeCount.DailyEmployeeCountReferenceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationOfWorkNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.LocationOfWorkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationOfWorkNull() {
                this[this.tableGADailyEmployeeCount.LocationOfWorkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportDateNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.ReportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportDateNull() {
                this[this.tableGADailyEmployeeCount.ReportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableGADailyEmployeeCount.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeismicPersonnelCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SeismicPersonnelCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeismicPersonnelCountNull() {
                this[this.tableGADailyEmployeeCount.SeismicPersonnelCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarinePersonnelCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.MarinePersonnelCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarinePersonnelCountNull() {
                this[this.tableGADailyEmployeeCount.MarinePersonnelCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThirdPartyPersonnelCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.ThirdPartyPersonnelCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThirdPartyPersonnelCountNull() {
                this[this.tableGADailyEmployeeCount.ThirdPartyPersonnelCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfficePersonnelCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.OfficePersonnelCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfficePersonnelCountNull() {
                this[this.tableGADailyEmployeeCount.OfficePersonnelCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientPersonnelCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.ClientPersonnelCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientPersonnelCountNull() {
                this[this.tableGADailyEmployeeCount.ClientPersonnelCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDailyEmployeeCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.DailyEmployeeCountCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDailyEmployeeCountCommentNull() {
                this[this.tableGADailyEmployeeCount.DailyEmployeeCountCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCetaceansCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.CetaceansCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCetaceansCountNull() {
                this[this.tableGADailyEmployeeCount.CetaceansCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCetaceansCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.CetaceansCountCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCetaceansCountCommentNull() {
                this[this.tableGADailyEmployeeCount.CetaceansCountCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrewBoatActivitiesCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.CrewBoatActivitiesCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrewBoatActivitiesCountNull() {
                this[this.tableGADailyEmployeeCount.CrewBoatActivitiesCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrewBoatActivitiesCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.CrewBoatActivitiesCountCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrewBoatActivitiesCountCommentNull() {
                this[this.tableGADailyEmployeeCount.CrewBoatActivitiesCountCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritimeIcidentAndIllnessCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.MaritimeIcidentAndIllnessCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritimeIcidentAndIllnessCountNull() {
                this[this.tableGADailyEmployeeCount.MaritimeIcidentAndIllnessCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritimeIcidentAndIllnessCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.MaritimeIcidentAndIllnessCountCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritimeIcidentAndIllnessCountCommentNull() {
                this[this.tableGADailyEmployeeCount.MaritimeIcidentAndIllnessCountCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnIncidentAndIllnessCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.OwnIncidentAndIllnessCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnIncidentAndIllnessCountNull() {
                this[this.tableGADailyEmployeeCount.OwnIncidentAndIllnessCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnIncidentAndIllnessCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.OwnIncidentAndIllnessCountCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnIncidentAndIllnessCountCommentNull() {
                this[this.tableGADailyEmployeeCount.OwnIncidentAndIllnessCountCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIPCardUnsafeActsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.HIPCardUnsafeActsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIPCardUnsafeActsCountNull() {
                this[this.tableGADailyEmployeeCount.HIPCardUnsafeActsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIPCardUnsafeActsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.HIPCardUnsafeActsCountCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIPCardUnsafeActsCountCommentNull() {
                this[this.tableGADailyEmployeeCount.HIPCardUnsafeActsCountCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIPCardNearMissesCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.HIPCardNearMissesCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIPCardNearMissesCountNull() {
                this[this.tableGADailyEmployeeCount.HIPCardNearMissesCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIPCardNearMissesCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.HIPCardNearMissesCountCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIPCardNearMissesCountCommentNull() {
                this[this.tableGADailyEmployeeCount.HIPCardNearMissesCountCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrewSafetyMeetingsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.CrewSafetyMeetingsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrewSafetyMeetingsCountNull() {
                this[this.tableGADailyEmployeeCount.CrewSafetyMeetingsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrewSafetyMeetingsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.CrewSafetyMeetingsCountCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrewSafetyMeetingsCountCommentNull() {
                this[this.tableGADailyEmployeeCount.CrewSafetyMeetingsCountCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToolboxMeetingsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.ToolboxMeetingsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToolboxMeetingsCountNull() {
                this[this.tableGADailyEmployeeCount.ToolboxMeetingsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToolboxMeetingsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.ToolboxMeetingsCountCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToolboxMeetingsCountCommentNull() {
                this[this.tableGADailyEmployeeCount.ToolboxMeetingsCountCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyDrillsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SafetyDrillsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyDrillsCountNull() {
                this[this.tableGADailyEmployeeCount.SafetyDrillsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyDrillsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SafetyDrillsCountCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyDrillsCountCommentNull() {
                this[this.tableGADailyEmployeeCount.SafetyDrillsCountCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPDepartmentalInspectionsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SOPDepartmentalInspectionsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPDepartmentalInspectionsCountNull() {
                this[this.tableGADailyEmployeeCount.SOPDepartmentalInspectionsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPDepartmentalInspectionsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SOPDepartmentalInspectionsCountCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPDepartmentalInspectionsCountCommentNull() {
                this[this.tableGADailyEmployeeCount.SOPDepartmentalInspectionsCountCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPCrossDepartmentalInspectionsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SOPCrossDepartmentalInspectionsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPCrossDepartmentalInspectionsCountNull() {
                this[this.tableGADailyEmployeeCount.SOPCrossDepartmentalInspectionsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPCrossDepartmentalInspectionsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SOPCrossDepartmentalInspectionsCountCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPCrossDepartmentalInspectionsCountCommentNull() {
                this[this.tableGADailyEmployeeCount.SOPCrossDepartmentalInspectionsCountCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPPartyChiefInspectionsCountNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SOPPartyChiefInspectionsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPPartyChiefInspectionsCountNull() {
                this[this.tableGADailyEmployeeCount.SOPPartyChiefInspectionsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPPartyChiefInspectionsCountCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.SOPPartyChiefInspectionsCountCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPPartyChiefInspectionsCountCommentNull() {
                this[this.tableGADailyEmployeeCount.SOPPartyChiefInspectionsCountCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAOBCommentNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.AOBCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAOBCommentNull() {
                this[this.tableGADailyEmployeeCount.AOBCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManHoursNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.ManHoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManHoursNull() {
                this[this.tableGADailyEmployeeCount.ManHoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjectManHoursNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.ProjectManHoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjectManHoursNull() {
                this[this.tableGADailyEmployeeCount.ProjectManHoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYesNoSafetyEventListsRowIdNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.YesNoSafetyEventListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYesNoSafetyEventListsRowIdNull() {
                this[this.tableGADailyEmployeeCount.YesNoSafetyEventListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.rowguidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrowguidNull() {
                this[this.tableGADailyEmployeeCount.rowguidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.MasterRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterRowIdNull() {
                this[this.tableGADailyEmployeeCount.MasterRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.DateCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateCreatedNull() {
                this[this.tableGADailyEmployeeCount.DateCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableGADailyEmployeeCount.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.DateChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangedNull() {
                this[this.tableGADailyEmployeeCount.DateChangedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableGADailyEmployeeCount.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.DateDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateDeletedNull() {
                this[this.tableGADailyEmployeeCount.DateDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGADailyEmployeeCount.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableGADailyEmployeeCount.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.SwitchFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree1Null() {
                this[this.tableGADailyEmployeeCount.SwitchFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.SwitchFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree2Null() {
                this[this.tableGADailyEmployeeCount.SwitchFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.SwitchFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree3Null() {
                this[this.tableGADailyEmployeeCount.SwitchFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.DateTimeFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree1Null() {
                this[this.tableGADailyEmployeeCount.DateTimeFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.DateTimeFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree2Null() {
                this[this.tableGADailyEmployeeCount.DateTimeFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.DateTimeFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree3Null() {
                this[this.tableGADailyEmployeeCount.DateTimeFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.TextFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree1Null() {
                this[this.tableGADailyEmployeeCount.TextFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.TextFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree2Null() {
                this[this.tableGADailyEmployeeCount.TextFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.TextFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree3Null() {
                this[this.tableGADailyEmployeeCount.TextFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.IntFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree1Null() {
                this[this.tableGADailyEmployeeCount.IntFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.IntFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree2Null() {
                this[this.tableGADailyEmployeeCount.IntFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.IntFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree3Null() {
                this[this.tableGADailyEmployeeCount.IntFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree1Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.nTextFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree1Null() {
                this[this.tableGADailyEmployeeCount.nTextFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree2Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.nTextFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree2Null() {
                this[this.tableGADailyEmployeeCount.nTextFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree3Null() {
                return this.IsNull(this.tableGADailyEmployeeCount.nTextFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree3Null() {
                this[this.tableGADailyEmployeeCount.nTextFree3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GADailyEmployeeCountRowChangeEvent : global::System.EventArgs {
            
            private GADailyEmployeeCountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADailyEmployeeCountRowChangeEvent(GADailyEmployeeCountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GADailyEmployeeCountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591