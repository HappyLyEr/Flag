//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8762
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MeetingReportDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MeetingReportDS : global::System.Data.DataSet {
        
        private GAMeetingReportDataTable tableGAMeetingReport;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MeetingReportDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected MeetingReportDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GAMeetingReport"] != null)) {
                    base.Tables.Add(new GAMeetingReportDataTable(ds.Tables["GAMeetingReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAMeetingReportDataTable GAMeetingReport {
            get {
                return this.tableGAMeetingReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            MeetingReportDS cln = ((MeetingReportDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GAMeetingReport"] != null)) {
                    base.Tables.Add(new GAMeetingReportDataTable(ds.Tables["GAMeetingReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGAMeetingReport = ((GAMeetingReportDataTable)(base.Tables["GAMeetingReport"]));
            if ((initTable == true)) {
                if ((this.tableGAMeetingReport != null)) {
                    this.tableGAMeetingReport.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "MeetingReportDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MeetingReportDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGAMeetingReport = new GAMeetingReportDataTable();
            base.Tables.Add(this.tableGAMeetingReport);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGAMeetingReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MeetingReportDS ds = new MeetingReportDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GAMeetingReportRowChangeEventHandler(object sender, GAMeetingReportRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GAMeetingReportDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMeetingReportRowId;
            
            private global::System.Data.DataColumn columnHEADTBTActivityRecord;
            
            private global::System.Data.DataColumn columnMeetingRowId;
            
            private global::System.Data.DataColumn columnMeetingReferenceId;
            
            private global::System.Data.DataColumn columnReferenceIdPrefix;
            
            private global::System.Data.DataColumn columnTypeOfMeetingListsRowId;
            
            private global::System.Data.DataColumn columnVerticalListsRowId;
            
            private global::System.Data.DataColumn columnNameOrTask;
            
            private global::System.Data.DataColumn columnPlace;
            
            private global::System.Data.DataColumn columnLocationOfTBT;
            
            private global::System.Data.DataColumn columnMeetingOwnerPersonnelRowId;
            
            private global::System.Data.DataColumn columnDateOfMeeting;
            
            private global::System.Data.DataColumn columnTimeEnd;
            
            private global::System.Data.DataColumn columnConductorPersonnelRowId;
            
            private global::System.Data.DataColumn columnReferencedProcedure;
            
            private global::System.Data.DataColumn columnReferencedJSA;
            
            private global::System.Data.DataColumn columnWorkAreaInspectionReferenceID;
            
            private global::System.Data.DataColumn columnPTWReferenceID;
            
            private global::System.Data.DataColumn columnLocationOfTask;
            
            private global::System.Data.DataColumn columnDetailedDescriptionOfTask;
            
            private global::System.Data.DataColumn columnHeadPPERequired;
            
            private global::System.Data.DataColumn columnIsHardHat;
            
            private global::System.Data.DataColumn columnIsSafetyGlasses;
            
            private global::System.Data.DataColumn columnIsCoveralls;
            
            private global::System.Data.DataColumn columnIsBoots;
            
            private global::System.Data.DataColumn columnIsGloves;
            
            private global::System.Data.DataColumn columnIsPFD;
            
            private global::System.Data.DataColumn columnIsWAH;
            
            private global::System.Data.DataColumn columnIsHearingProtection;
            
            private global::System.Data.DataColumn columnIsBA;
            
            private global::System.Data.DataColumn columnIsOther;
            
            private global::System.Data.DataColumn columnHeadCommunications;
            
            private global::System.Data.DataColumn columnIsRadio;
            
            private global::System.Data.DataColumn columnChannel;
            
            private global::System.Data.DataColumn columnIsHandSignals;
            
            private global::System.Data.DataColumn columnHandSignalsDescription;
            
            private global::System.Data.DataColumn columnIsVerbal;
            
            private global::System.Data.DataColumn columnVerbalDescription;
            
            private global::System.Data.DataColumn columnHeadWeather;
            
            private global::System.Data.DataColumn columnMOPOScore;
            
            private global::System.Data.DataColumn columnWindSpeedAndDirection;
            
            private global::System.Data.DataColumn columnRainAndSnowListsRowId;
            
            private global::System.Data.DataColumn columnSeaHeight;
            
            private global::System.Data.DataColumn columnTemperature;
            
            private global::System.Data.DataColumn columnDayNightListsRowId;
            
            private global::System.Data.DataColumn columnSwell;
            
            private global::System.Data.DataColumn columnVisibility;
            
            private global::System.Data.DataColumn columnForecast;
            
            private global::System.Data.DataColumn columnTBTChecklist;
            
            private global::System.Data.DataColumn columnConductor;
            
            private global::System.Data.DataColumn columnReporterPersonnelRowId;
            
            private global::System.Data.DataColumn columnInvolvedPersonnelCount;
            
            private global::System.Data.DataColumn columnReporter;
            
            private global::System.Data.DataColumn columnDateAndTimeNextMeeting;
            
            private global::System.Data.DataColumn columnPurpose;
            
            private global::System.Data.DataColumn columnAgenda;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnHEADTBTDeclaration;
            
            private global::System.Data.DataColumn columnTimeStart;
            
            private global::System.Data.DataColumn columnrowguid;
            
            private global::System.Data.DataColumn columnMasterRowId;
            
            private global::System.Data.DataColumn columnDateCreated;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnDateChanged;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnDateDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnSwitchFree1;
            
            private global::System.Data.DataColumn columnSwitchFree2;
            
            private global::System.Data.DataColumn columnSwitchFree3;
            
            private global::System.Data.DataColumn columnDateTimeFree1;
            
            private global::System.Data.DataColumn columnDateTimeFree2;
            
            private global::System.Data.DataColumn columnDateTimeFree3;
            
            private global::System.Data.DataColumn columnTextFree1;
            
            private global::System.Data.DataColumn columnTextFree2;
            
            private global::System.Data.DataColumn columnTextFree3;
            
            private global::System.Data.DataColumn columnIntFree1;
            
            private global::System.Data.DataColumn columnIntFree2;
            
            private global::System.Data.DataColumn columnIntFree3;
            
            private global::System.Data.DataColumn columnnTextFree1;
            
            private global::System.Data.DataColumn columnnTextFree2;
            
            private global::System.Data.DataColumn columnnTextFree3;
            
            private global::System.Data.DataColumn columnRainAndSnow;
            
            private global::System.Data.DataColumn columnDayNight;
            
            private global::System.Data.DataColumn columnChairmanTaskLeaderPersonnelRowId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAMeetingReportDataTable() {
                this.TableName = "GAMeetingReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAMeetingReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GAMeetingReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeetingReportRowIdColumn {
                get {
                    return this.columnMeetingReportRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HEADTBTActivityRecordColumn {
                get {
                    return this.columnHEADTBTActivityRecord;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeetingRowIdColumn {
                get {
                    return this.columnMeetingRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeetingReferenceIdColumn {
                get {
                    return this.columnMeetingReferenceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceIdPrefixColumn {
                get {
                    return this.columnReferenceIdPrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeOfMeetingListsRowIdColumn {
                get {
                    return this.columnTypeOfMeetingListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerticalListsRowIdColumn {
                get {
                    return this.columnVerticalListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameOrTaskColumn {
                get {
                    return this.columnNameOrTask;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlaceColumn {
                get {
                    return this.columnPlace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationOfTBTColumn {
                get {
                    return this.columnLocationOfTBT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeetingOwnerPersonnelRowIdColumn {
                get {
                    return this.columnMeetingOwnerPersonnelRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateOfMeetingColumn {
                get {
                    return this.columnDateOfMeeting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimeEndColumn {
                get {
                    return this.columnTimeEnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConductorPersonnelRowIdColumn {
                get {
                    return this.columnConductorPersonnelRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferencedProcedureColumn {
                get {
                    return this.columnReferencedProcedure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferencedJSAColumn {
                get {
                    return this.columnReferencedJSA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkAreaInspectionReferenceIDColumn {
                get {
                    return this.columnWorkAreaInspectionReferenceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PTWReferenceIDColumn {
                get {
                    return this.columnPTWReferenceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationOfTaskColumn {
                get {
                    return this.columnLocationOfTask;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailedDescriptionOfTaskColumn {
                get {
                    return this.columnDetailedDescriptionOfTask;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeadPPERequiredColumn {
                get {
                    return this.columnHeadPPERequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsHardHatColumn {
                get {
                    return this.columnIsHardHat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsSafetyGlassesColumn {
                get {
                    return this.columnIsSafetyGlasses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCoverallsColumn {
                get {
                    return this.columnIsCoveralls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsBootsColumn {
                get {
                    return this.columnIsBoots;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsGlovesColumn {
                get {
                    return this.columnIsGloves;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPFDColumn {
                get {
                    return this.columnIsPFD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsWAHColumn {
                get {
                    return this.columnIsWAH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsHearingProtectionColumn {
                get {
                    return this.columnIsHearingProtection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsBAColumn {
                get {
                    return this.columnIsBA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOtherColumn {
                get {
                    return this.columnIsOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeadCommunicationsColumn {
                get {
                    return this.columnHeadCommunications;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsRadioColumn {
                get {
                    return this.columnIsRadio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChannelColumn {
                get {
                    return this.columnChannel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsHandSignalsColumn {
                get {
                    return this.columnIsHandSignals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HandSignalsDescriptionColumn {
                get {
                    return this.columnHandSignalsDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsVerbalColumn {
                get {
                    return this.columnIsVerbal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerbalDescriptionColumn {
                get {
                    return this.columnVerbalDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeadWeatherColumn {
                get {
                    return this.columnHeadWeather;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOPOScoreColumn {
                get {
                    return this.columnMOPOScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WindSpeedAndDirectionColumn {
                get {
                    return this.columnWindSpeedAndDirection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RainAndSnowListsRowIdColumn {
                get {
                    return this.columnRainAndSnowListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SeaHeightColumn {
                get {
                    return this.columnSeaHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TemperatureColumn {
                get {
                    return this.columnTemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DayNightListsRowIdColumn {
                get {
                    return this.columnDayNightListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwellColumn {
                get {
                    return this.columnSwell;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VisibilityColumn {
                get {
                    return this.columnVisibility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ForecastColumn {
                get {
                    return this.columnForecast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TBTChecklistColumn {
                get {
                    return this.columnTBTChecklist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConductorColumn {
                get {
                    return this.columnConductor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReporterPersonnelRowIdColumn {
                get {
                    return this.columnReporterPersonnelRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvolvedPersonnelCountColumn {
                get {
                    return this.columnInvolvedPersonnelCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReporterColumn {
                get {
                    return this.columnReporter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateAndTimeNextMeetingColumn {
                get {
                    return this.columnDateAndTimeNextMeeting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurposeColumn {
                get {
                    return this.columnPurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgendaColumn {
                get {
                    return this.columnAgenda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HEADTBTDeclarationColumn {
                get {
                    return this.columnHEADTBTDeclaration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimeStartColumn {
                get {
                    return this.columnTimeStart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rowguidColumn {
                get {
                    return this.columnrowguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree1Column {
                get {
                    return this.columnnTextFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree2Column {
                get {
                    return this.columnnTextFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree3Column {
                get {
                    return this.columnnTextFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RainAndSnowColumn {
                get {
                    return this.columnRainAndSnow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DayNightColumn {
                get {
                    return this.columnDayNight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChairmanTaskLeaderPersonnelRowIdColumn {
                get {
                    return this.columnChairmanTaskLeaderPersonnelRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAMeetingReportRow this[int index] {
                get {
                    return ((GAMeetingReportRow)(this.Rows[index]));
                }
            }
            
            public event GAMeetingReportRowChangeEventHandler GAMeetingReportRowChanging;
            
            public event GAMeetingReportRowChangeEventHandler GAMeetingReportRowChanged;
            
            public event GAMeetingReportRowChangeEventHandler GAMeetingReportRowDeleting;
            
            public event GAMeetingReportRowChangeEventHandler GAMeetingReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGAMeetingReportRow(GAMeetingReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAMeetingReportRow AddGAMeetingReportRow(
                        string HEADTBTActivityRecord, 
                        int MeetingRowId, 
                        string MeetingReferenceId, 
                        string ReferenceIdPrefix, 
                        int TypeOfMeetingListsRowId, 
                        int VerticalListsRowId, 
                        string NameOrTask, 
                        string Place, 
                        string LocationOfTBT, 
                        int MeetingOwnerPersonnelRowId, 
                        System.DateTime DateOfMeeting, 
                        System.DateTime TimeEnd, 
                        int ConductorPersonnelRowId, 
                        string ReferencedProcedure, 
                        string ReferencedJSA, 
                        string WorkAreaInspectionReferenceID, 
                        string PTWReferenceID, 
                        string LocationOfTask, 
                        string DetailedDescriptionOfTask, 
                        string HeadPPERequired, 
                        bool IsHardHat, 
                        bool IsSafetyGlasses, 
                        bool IsCoveralls, 
                        bool IsBoots, 
                        bool IsGloves, 
                        bool IsPFD, 
                        bool IsWAH, 
                        bool IsHearingProtection, 
                        bool IsBA, 
                        bool IsOther, 
                        string HeadCommunications, 
                        bool IsRadio, 
                        string Channel, 
                        bool IsHandSignals, 
                        string HandSignalsDescription, 
                        bool IsVerbal, 
                        string VerbalDescription, 
                        string HeadWeather, 
                        string MOPOScore, 
                        string WindSpeedAndDirection, 
                        int RainAndSnowListsRowId, 
                        string SeaHeight, 
                        string Temperature, 
                        int DayNightListsRowId, 
                        string Swell, 
                        string Visibility, 
                        string Forecast, 
                        string TBTChecklist, 
                        string Conductor, 
                        int ReporterPersonnelRowId, 
                        int InvolvedPersonnelCount, 
                        string Reporter, 
                        System.DateTime DateAndTimeNextMeeting, 
                        string Purpose, 
                        string Agenda, 
                        string Comment, 
                        string HEADTBTDeclaration, 
                        System.DateTime TimeStart, 
                        System.Guid rowguid, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3, 
                        string nTextFree1, 
                        string nTextFree2, 
                        string nTextFree3, 
                        string RainAndSnow, 
                        string DayNight, 
                        int ChairmanTaskLeaderPersonnelRowId) {
                GAMeetingReportRow rowGAMeetingReportRow = ((GAMeetingReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        HEADTBTActivityRecord,
                        MeetingRowId,
                        MeetingReferenceId,
                        ReferenceIdPrefix,
                        TypeOfMeetingListsRowId,
                        VerticalListsRowId,
                        NameOrTask,
                        Place,
                        LocationOfTBT,
                        MeetingOwnerPersonnelRowId,
                        DateOfMeeting,
                        TimeEnd,
                        ConductorPersonnelRowId,
                        ReferencedProcedure,
                        ReferencedJSA,
                        WorkAreaInspectionReferenceID,
                        PTWReferenceID,
                        LocationOfTask,
                        DetailedDescriptionOfTask,
                        HeadPPERequired,
                        IsHardHat,
                        IsSafetyGlasses,
                        IsCoveralls,
                        IsBoots,
                        IsGloves,
                        IsPFD,
                        IsWAH,
                        IsHearingProtection,
                        IsBA,
                        IsOther,
                        HeadCommunications,
                        IsRadio,
                        Channel,
                        IsHandSignals,
                        HandSignalsDescription,
                        IsVerbal,
                        VerbalDescription,
                        HeadWeather,
                        MOPOScore,
                        WindSpeedAndDirection,
                        RainAndSnowListsRowId,
                        SeaHeight,
                        Temperature,
                        DayNightListsRowId,
                        Swell,
                        Visibility,
                        Forecast,
                        TBTChecklist,
                        Conductor,
                        ReporterPersonnelRowId,
                        InvolvedPersonnelCount,
                        Reporter,
                        DateAndTimeNextMeeting,
                        Purpose,
                        Agenda,
                        Comment,
                        HEADTBTDeclaration,
                        TimeStart,
                        rowguid,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3,
                        nTextFree1,
                        nTextFree2,
                        nTextFree3,
                        RainAndSnow,
                        DayNight,
                        ChairmanTaskLeaderPersonnelRowId};
                rowGAMeetingReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGAMeetingReportRow);
                return rowGAMeetingReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAMeetingReportRow FindByMeetingReportRowId(int MeetingReportRowId) {
                return ((GAMeetingReportRow)(this.Rows.Find(new object[] {
                            MeetingReportRowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GAMeetingReportDataTable cln = ((GAMeetingReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GAMeetingReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMeetingReportRowId = base.Columns["MeetingReportRowId"];
                this.columnHEADTBTActivityRecord = base.Columns["HEADTBTActivityRecord"];
                this.columnMeetingRowId = base.Columns["MeetingRowId"];
                this.columnMeetingReferenceId = base.Columns["MeetingReferenceId"];
                this.columnReferenceIdPrefix = base.Columns["ReferenceIdPrefix"];
                this.columnTypeOfMeetingListsRowId = base.Columns["TypeOfMeetingListsRowId"];
                this.columnVerticalListsRowId = base.Columns["VerticalListsRowId"];
                this.columnNameOrTask = base.Columns["NameOrTask"];
                this.columnPlace = base.Columns["Place"];
                this.columnLocationOfTBT = base.Columns["LocationOfTBT"];
                this.columnMeetingOwnerPersonnelRowId = base.Columns["MeetingOwnerPersonnelRowId"];
                this.columnDateOfMeeting = base.Columns["DateOfMeeting"];
                this.columnTimeEnd = base.Columns["TimeEnd"];
                this.columnConductorPersonnelRowId = base.Columns["ConductorPersonnelRowId"];
                this.columnReferencedProcedure = base.Columns["ReferencedProcedure"];
                this.columnReferencedJSA = base.Columns["ReferencedJSA"];
                this.columnWorkAreaInspectionReferenceID = base.Columns["WorkAreaInspectionReferenceID"];
                this.columnPTWReferenceID = base.Columns["PTWReferenceID"];
                this.columnLocationOfTask = base.Columns["LocationOfTask"];
                this.columnDetailedDescriptionOfTask = base.Columns["DetailedDescriptionOfTask"];
                this.columnHeadPPERequired = base.Columns["HeadPPERequired"];
                this.columnIsHardHat = base.Columns["IsHardHat"];
                this.columnIsSafetyGlasses = base.Columns["IsSafetyGlasses"];
                this.columnIsCoveralls = base.Columns["IsCoveralls"];
                this.columnIsBoots = base.Columns["IsBoots"];
                this.columnIsGloves = base.Columns["IsGloves"];
                this.columnIsPFD = base.Columns["IsPFD"];
                this.columnIsWAH = base.Columns["IsWAH"];
                this.columnIsHearingProtection = base.Columns["IsHearingProtection"];
                this.columnIsBA = base.Columns["IsBA"];
                this.columnIsOther = base.Columns["IsOther"];
                this.columnHeadCommunications = base.Columns["HeadCommunications"];
                this.columnIsRadio = base.Columns["IsRadio"];
                this.columnChannel = base.Columns["Channel"];
                this.columnIsHandSignals = base.Columns["IsHandSignals"];
                this.columnHandSignalsDescription = base.Columns["HandSignalsDescription"];
                this.columnIsVerbal = base.Columns["IsVerbal"];
                this.columnVerbalDescription = base.Columns["VerbalDescription"];
                this.columnHeadWeather = base.Columns["HeadWeather"];
                this.columnMOPOScore = base.Columns["MOPOScore"];
                this.columnWindSpeedAndDirection = base.Columns["WindSpeedAndDirection"];
                this.columnRainAndSnowListsRowId = base.Columns["RainAndSnowListsRowId"];
                this.columnSeaHeight = base.Columns["SeaHeight"];
                this.columnTemperature = base.Columns["Temperature"];
                this.columnDayNightListsRowId = base.Columns["DayNightListsRowId"];
                this.columnSwell = base.Columns["Swell"];
                this.columnVisibility = base.Columns["Visibility"];
                this.columnForecast = base.Columns["Forecast"];
                this.columnTBTChecklist = base.Columns["TBTChecklist"];
                this.columnConductor = base.Columns["Conductor"];
                this.columnReporterPersonnelRowId = base.Columns["ReporterPersonnelRowId"];
                this.columnInvolvedPersonnelCount = base.Columns["InvolvedPersonnelCount"];
                this.columnReporter = base.Columns["Reporter"];
                this.columnDateAndTimeNextMeeting = base.Columns["DateAndTimeNextMeeting"];
                this.columnPurpose = base.Columns["Purpose"];
                this.columnAgenda = base.Columns["Agenda"];
                this.columnComment = base.Columns["Comment"];
                this.columnHEADTBTDeclaration = base.Columns["HEADTBTDeclaration"];
                this.columnTimeStart = base.Columns["TimeStart"];
                this.columnrowguid = base.Columns["rowguid"];
                this.columnMasterRowId = base.Columns["MasterRowId"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnDateChanged = base.Columns["DateChanged"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnDateDeleted = base.Columns["DateDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnSwitchFree1 = base.Columns["SwitchFree1"];
                this.columnSwitchFree2 = base.Columns["SwitchFree2"];
                this.columnSwitchFree3 = base.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = base.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = base.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = base.Columns["DateTimeFree3"];
                this.columnTextFree1 = base.Columns["TextFree1"];
                this.columnTextFree2 = base.Columns["TextFree2"];
                this.columnTextFree3 = base.Columns["TextFree3"];
                this.columnIntFree1 = base.Columns["IntFree1"];
                this.columnIntFree2 = base.Columns["IntFree2"];
                this.columnIntFree3 = base.Columns["IntFree3"];
                this.columnnTextFree1 = base.Columns["nTextFree1"];
                this.columnnTextFree2 = base.Columns["nTextFree2"];
                this.columnnTextFree3 = base.Columns["nTextFree3"];
                this.columnRainAndSnow = base.Columns["RainAndSnow"];
                this.columnDayNight = base.Columns["DayNight"];
                this.columnChairmanTaskLeaderPersonnelRowId = base.Columns["ChairmanTaskLeaderPersonnelRowId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMeetingReportRowId = new global::System.Data.DataColumn("MeetingReportRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeetingReportRowId);
                this.columnHEADTBTActivityRecord = new global::System.Data.DataColumn("HEADTBTActivityRecord", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHEADTBTActivityRecord);
                this.columnMeetingRowId = new global::System.Data.DataColumn("MeetingRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeetingRowId);
                this.columnMeetingReferenceId = new global::System.Data.DataColumn("MeetingReferenceId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeetingReferenceId);
                this.columnReferenceIdPrefix = new global::System.Data.DataColumn("ReferenceIdPrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceIdPrefix);
                this.columnTypeOfMeetingListsRowId = new global::System.Data.DataColumn("TypeOfMeetingListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfMeetingListsRowId);
                this.columnVerticalListsRowId = new global::System.Data.DataColumn("VerticalListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerticalListsRowId);
                this.columnNameOrTask = new global::System.Data.DataColumn("NameOrTask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameOrTask);
                this.columnPlace = new global::System.Data.DataColumn("Place", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlace);
                this.columnLocationOfTBT = new global::System.Data.DataColumn("LocationOfTBT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationOfTBT);
                this.columnMeetingOwnerPersonnelRowId = new global::System.Data.DataColumn("MeetingOwnerPersonnelRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeetingOwnerPersonnelRowId);
                this.columnDateOfMeeting = new global::System.Data.DataColumn("DateOfMeeting", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfMeeting);
                this.columnTimeEnd = new global::System.Data.DataColumn("TimeEnd", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeEnd);
                this.columnConductorPersonnelRowId = new global::System.Data.DataColumn("ConductorPersonnelRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConductorPersonnelRowId);
                this.columnReferencedProcedure = new global::System.Data.DataColumn("ReferencedProcedure", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferencedProcedure);
                this.columnReferencedJSA = new global::System.Data.DataColumn("ReferencedJSA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferencedJSA);
                this.columnWorkAreaInspectionReferenceID = new global::System.Data.DataColumn("WorkAreaInspectionReferenceID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkAreaInspectionReferenceID);
                this.columnPTWReferenceID = new global::System.Data.DataColumn("PTWReferenceID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPTWReferenceID);
                this.columnLocationOfTask = new global::System.Data.DataColumn("LocationOfTask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationOfTask);
                this.columnDetailedDescriptionOfTask = new global::System.Data.DataColumn("DetailedDescriptionOfTask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailedDescriptionOfTask);
                this.columnHeadPPERequired = new global::System.Data.DataColumn("HeadPPERequired", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadPPERequired);
                this.columnIsHardHat = new global::System.Data.DataColumn("IsHardHat", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHardHat);
                this.columnIsSafetyGlasses = new global::System.Data.DataColumn("IsSafetyGlasses", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSafetyGlasses);
                this.columnIsCoveralls = new global::System.Data.DataColumn("IsCoveralls", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCoveralls);
                this.columnIsBoots = new global::System.Data.DataColumn("IsBoots", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsBoots);
                this.columnIsGloves = new global::System.Data.DataColumn("IsGloves", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsGloves);
                this.columnIsPFD = new global::System.Data.DataColumn("IsPFD", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPFD);
                this.columnIsWAH = new global::System.Data.DataColumn("IsWAH", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsWAH);
                this.columnIsHearingProtection = new global::System.Data.DataColumn("IsHearingProtection", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHearingProtection);
                this.columnIsBA = new global::System.Data.DataColumn("IsBA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsBA);
                this.columnIsOther = new global::System.Data.DataColumn("IsOther", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOther);
                this.columnHeadCommunications = new global::System.Data.DataColumn("HeadCommunications", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadCommunications);
                this.columnIsRadio = new global::System.Data.DataColumn("IsRadio", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRadio);
                this.columnChannel = new global::System.Data.DataColumn("Channel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChannel);
                this.columnIsHandSignals = new global::System.Data.DataColumn("IsHandSignals", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHandSignals);
                this.columnHandSignalsDescription = new global::System.Data.DataColumn("HandSignalsDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandSignalsDescription);
                this.columnIsVerbal = new global::System.Data.DataColumn("IsVerbal", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsVerbal);
                this.columnVerbalDescription = new global::System.Data.DataColumn("VerbalDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerbalDescription);
                this.columnHeadWeather = new global::System.Data.DataColumn("HeadWeather", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadWeather);
                this.columnMOPOScore = new global::System.Data.DataColumn("MOPOScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOPOScore);
                this.columnWindSpeedAndDirection = new global::System.Data.DataColumn("WindSpeedAndDirection", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWindSpeedAndDirection);
                this.columnRainAndSnowListsRowId = new global::System.Data.DataColumn("RainAndSnowListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRainAndSnowListsRowId);
                this.columnSeaHeight = new global::System.Data.DataColumn("SeaHeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeaHeight);
                this.columnTemperature = new global::System.Data.DataColumn("Temperature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemperature);
                this.columnDayNightListsRowId = new global::System.Data.DataColumn("DayNightListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayNightListsRowId);
                this.columnSwell = new global::System.Data.DataColumn("Swell", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwell);
                this.columnVisibility = new global::System.Data.DataColumn("Visibility", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisibility);
                this.columnForecast = new global::System.Data.DataColumn("Forecast", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForecast);
                this.columnTBTChecklist = new global::System.Data.DataColumn("TBTChecklist", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTBTChecklist);
                this.columnConductor = new global::System.Data.DataColumn("Conductor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConductor);
                this.columnReporterPersonnelRowId = new global::System.Data.DataColumn("ReporterPersonnelRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReporterPersonnelRowId);
                this.columnInvolvedPersonnelCount = new global::System.Data.DataColumn("InvolvedPersonnelCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvolvedPersonnelCount);
                this.columnReporter = new global::System.Data.DataColumn("Reporter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReporter);
                this.columnDateAndTimeNextMeeting = new global::System.Data.DataColumn("DateAndTimeNextMeeting", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateAndTimeNextMeeting);
                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurpose);
                this.columnAgenda = new global::System.Data.DataColumn("Agenda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgenda);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnHEADTBTDeclaration = new global::System.Data.DataColumn("HEADTBTDeclaration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHEADTBTDeclaration);
                this.columnTimeStart = new global::System.Data.DataColumn("TimeStart", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeStart);
                this.columnrowguid = new global::System.Data.DataColumn("rowguid", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowguid);
                this.columnMasterRowId = new global::System.Data.DataColumn("MasterRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new global::System.Data.DataColumn("DateCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new global::System.Data.DataColumn("DateChanged", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new global::System.Data.DataColumn("DateDeleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new global::System.Data.DataColumn("SwitchFree1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new global::System.Data.DataColumn("SwitchFree2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new global::System.Data.DataColumn("SwitchFree3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new global::System.Data.DataColumn("DateTimeFree1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new global::System.Data.DataColumn("DateTimeFree2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new global::System.Data.DataColumn("DateTimeFree3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new global::System.Data.DataColumn("TextFree1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new global::System.Data.DataColumn("TextFree2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new global::System.Data.DataColumn("TextFree3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new global::System.Data.DataColumn("IntFree1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new global::System.Data.DataColumn("IntFree2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new global::System.Data.DataColumn("IntFree3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree3);
                this.columnnTextFree1 = new global::System.Data.DataColumn("nTextFree1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree1);
                this.columnnTextFree2 = new global::System.Data.DataColumn("nTextFree2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree2);
                this.columnnTextFree3 = new global::System.Data.DataColumn("nTextFree3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree3);
                this.columnRainAndSnow = new global::System.Data.DataColumn("RainAndSnow", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRainAndSnow);
                this.columnDayNight = new global::System.Data.DataColumn("DayNight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayNight);
                this.columnChairmanTaskLeaderPersonnelRowId = new global::System.Data.DataColumn("ChairmanTaskLeaderPersonnelRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChairmanTaskLeaderPersonnelRowId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMeetingReportRowId}, true));
                this.columnMeetingReportRowId.AutoIncrement = true;
                this.columnMeetingReportRowId.AllowDBNull = false;
                this.columnMeetingReportRowId.ReadOnly = true;
                this.columnMeetingReportRowId.Unique = true;
                this.columnHEADTBTActivityRecord.MaxLength = 100;
                this.columnMeetingReferenceId.MaxLength = 50;
                this.columnReferenceIdPrefix.MaxLength = 8;
                this.columnNameOrTask.MaxLength = 100;
                this.columnPlace.MaxLength = 100;
                this.columnLocationOfTBT.MaxLength = 100;
                this.columnReferencedProcedure.MaxLength = 200;
                this.columnReferencedJSA.MaxLength = 200;
                this.columnWorkAreaInspectionReferenceID.MaxLength = 200;
                this.columnPTWReferenceID.MaxLength = 200;
                this.columnLocationOfTask.MaxLength = 200;
                this.columnDetailedDescriptionOfTask.MaxLength = 1073741823;
                this.columnHeadPPERequired.MaxLength = 1;
                this.columnHeadCommunications.MaxLength = 1;
                this.columnChannel.MaxLength = 200;
                this.columnHandSignalsDescription.MaxLength = 200;
                this.columnVerbalDescription.MaxLength = 200;
                this.columnHeadWeather.MaxLength = 1;
                this.columnMOPOScore.MaxLength = 50;
                this.columnWindSpeedAndDirection.MaxLength = 50;
                this.columnSeaHeight.MaxLength = 50;
                this.columnTemperature.MaxLength = 50;
                this.columnSwell.MaxLength = 50;
                this.columnVisibility.MaxLength = 50;
                this.columnForecast.MaxLength = 50;
                this.columnTBTChecklist.MaxLength = 50;
                this.columnConductor.MaxLength = 50;
                this.columnReporter.MaxLength = 50;
                this.columnPurpose.MaxLength = 1073741823;
                this.columnAgenda.MaxLength = 1073741823;
                this.columnComment.MaxLength = 1073741823;
                this.columnHEADTBTDeclaration.MaxLength = 1073741823;
                this.columnTextFree1.MaxLength = 200;
                this.columnTextFree2.MaxLength = 200;
                this.columnTextFree3.MaxLength = 200;
                this.columnnTextFree1.MaxLength = 1073741823;
                this.columnnTextFree2.MaxLength = 1073741823;
                this.columnnTextFree3.MaxLength = 1073741823;
                this.columnRainAndSnow.MaxLength = 50;
                this.columnDayNight.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAMeetingReportRow NewGAMeetingReportRow() {
                return ((GAMeetingReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GAMeetingReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GAMeetingReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAMeetingReportRowChanged != null)) {
                    this.GAMeetingReportRowChanged(this, new GAMeetingReportRowChangeEvent(((GAMeetingReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAMeetingReportRowChanging != null)) {
                    this.GAMeetingReportRowChanging(this, new GAMeetingReportRowChangeEvent(((GAMeetingReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAMeetingReportRowDeleted != null)) {
                    this.GAMeetingReportRowDeleted(this, new GAMeetingReportRowChangeEvent(((GAMeetingReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAMeetingReportRowDeleting != null)) {
                    this.GAMeetingReportRowDeleting(this, new GAMeetingReportRowChangeEvent(((GAMeetingReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGAMeetingReportRow(GAMeetingReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MeetingReportDS ds = new MeetingReportDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GAMeetingReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GAMeetingReportRow : global::System.Data.DataRow {
            
            private GAMeetingReportDataTable tableGAMeetingReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAMeetingReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAMeetingReport = ((GAMeetingReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MeetingReportRowId {
                get {
                    return ((int)(this[this.tableGAMeetingReport.MeetingReportRowIdColumn]));
                }
                set {
                    this[this.tableGAMeetingReport.MeetingReportRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HEADTBTActivityRecord {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.HEADTBTActivityRecordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HEADTBTActivityRecord\' in table \'GAMeetingReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.HEADTBTActivityRecordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MeetingRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.MeetingRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeetingRowId\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.MeetingRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeetingReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.MeetingReferenceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeetingReferenceId\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.MeetingReferenceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferenceIdPrefix {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.ReferenceIdPrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferenceIdPrefix\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.ReferenceIdPrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TypeOfMeetingListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.TypeOfMeetingListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeOfMeetingListsRowId\' in table \'GAMeetingReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.TypeOfMeetingListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VerticalListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.VerticalListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VerticalListsRowId\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.VerticalListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NameOrTask {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.NameOrTaskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NameOrTask\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.NameOrTaskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Place {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.PlaceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Place\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.PlaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocationOfTBT {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.LocationOfTBTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationOfTBT\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.LocationOfTBTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MeetingOwnerPersonnelRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.MeetingOwnerPersonnelRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeetingOwnerPersonnelRowId\' in table \'GAMeetingReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.MeetingOwnerPersonnelRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfMeeting {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMeetingReport.DateOfMeetingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfMeeting\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.DateOfMeetingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TimeEnd {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMeetingReport.TimeEndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeEnd\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.TimeEndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConductorPersonnelRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.ConductorPersonnelRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConductorPersonnelRowId\' in table \'GAMeetingReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.ConductorPersonnelRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferencedProcedure {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.ReferencedProcedureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferencedProcedure\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.ReferencedProcedureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferencedJSA {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.ReferencedJSAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferencedJSA\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.ReferencedJSAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkAreaInspectionReferenceID {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.WorkAreaInspectionReferenceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkAreaInspectionReferenceID\' in table \'GAMeetingReport\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.WorkAreaInspectionReferenceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PTWReferenceID {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.PTWReferenceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PTWReferenceID\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.PTWReferenceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocationOfTask {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.LocationOfTaskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationOfTask\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.LocationOfTaskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DetailedDescriptionOfTask {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.DetailedDescriptionOfTaskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DetailedDescriptionOfTask\' in table \'GAMeetingReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.DetailedDescriptionOfTaskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeadPPERequired {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.HeadPPERequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeadPPERequired\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.HeadPPERequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHardHat {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingReport.IsHardHatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsHardHat\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.IsHardHatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyGlasses {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingReport.IsSafetyGlassesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsSafetyGlasses\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.IsSafetyGlassesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoveralls {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingReport.IsCoverallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCoveralls\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.IsCoverallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBoots {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingReport.IsBootsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsBoots\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.IsBootsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGloves {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingReport.IsGlovesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsGloves\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.IsGlovesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPFD {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingReport.IsPFDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPFD\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.IsPFDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWAH {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingReport.IsWAHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsWAH\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.IsWAHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHearingProtection {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingReport.IsHearingProtectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsHearingProtection\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.IsHearingProtectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBA {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingReport.IsBAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsBA\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.IsBAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOther {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingReport.IsOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOther\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.IsOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeadCommunications {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.HeadCommunicationsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeadCommunications\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.HeadCommunicationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRadio {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingReport.IsRadioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRadio\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.IsRadioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Channel {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.ChannelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Channel\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.ChannelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHandSignals {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingReport.IsHandSignalsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsHandSignals\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.IsHandSignalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HandSignalsDescription {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.HandSignalsDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HandSignalsDescription\' in table \'GAMeetingReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.HandSignalsDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerbal {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingReport.IsVerbalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsVerbal\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.IsVerbalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VerbalDescription {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.VerbalDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VerbalDescription\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.VerbalDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeadWeather {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.HeadWeatherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeadWeather\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.HeadWeatherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MOPOScore {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.MOPOScoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOPOScore\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.MOPOScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WindSpeedAndDirection {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.WindSpeedAndDirectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WindSpeedAndDirection\' in table \'GAMeetingReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.WindSpeedAndDirectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RainAndSnowListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.RainAndSnowListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RainAndSnowListsRowId\' in table \'GAMeetingReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.RainAndSnowListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SeaHeight {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.SeaHeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeaHeight\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.SeaHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Temperature {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.TemperatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Temperature\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.TemperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DayNightListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.DayNightListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DayNightListsRowId\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.DayNightListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Swell {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.SwellColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Swell\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.SwellColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Visibility {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.VisibilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Visibility\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.VisibilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Forecast {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.ForecastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Forecast\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.ForecastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TBTChecklist {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.TBTChecklistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TBTChecklist\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.TBTChecklistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Conductor {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.ConductorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Conductor\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.ConductorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReporterPersonnelRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.ReporterPersonnelRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReporterPersonnelRowId\' in table \'GAMeetingReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.ReporterPersonnelRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InvolvedPersonnelCount {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.InvolvedPersonnelCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvolvedPersonnelCount\' in table \'GAMeetingReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.InvolvedPersonnelCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reporter {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.ReporterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reporter\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.ReporterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateAndTimeNextMeeting {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMeetingReport.DateAndTimeNextMeetingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateAndTimeNextMeeting\' in table \'GAMeetingReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.DateAndTimeNextMeetingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Purpose {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.PurposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purpose\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.PurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Agenda {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.AgendaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Agenda\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.AgendaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HEADTBTDeclaration {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.HEADTBTDeclarationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HEADTBTDeclaration\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.HEADTBTDeclarationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TimeStart {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMeetingReport.TimeStartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeStart\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.TimeStartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid rowguid {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableGAMeetingReport.rowguidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rowguid\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.rowguidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.MasterRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MasterRowId\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.MasterRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMeetingReport.DateCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateCreated\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.DateCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMeetingReport.DateChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateChanged\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.DateChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMeetingReport.DateDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateDeleted\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.DateDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingReport.SwitchFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree1\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.SwitchFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingReport.SwitchFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree2\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.SwitchFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAMeetingReport.SwitchFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree3\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.SwitchFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMeetingReport.DateTimeFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree1\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.DateTimeFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMeetingReport.DateTimeFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree2\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.DateTimeFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMeetingReport.DateTimeFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree3\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.DateTimeFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.TextFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree1\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.TextFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.TextFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree2\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.TextFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.TextFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree3\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.TextFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.IntFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntFree1\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.IntFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.IntFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntFree2\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.IntFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.IntFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntFree3\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.IntFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.nTextFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree1\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.nTextFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.nTextFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree2\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.nTextFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.nTextFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree3\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.nTextFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RainAndSnow {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.RainAndSnowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RainAndSnow\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.RainAndSnowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DayNight {
                get {
                    try {
                        return ((string)(this[this.tableGAMeetingReport.DayNightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DayNight\' in table \'GAMeetingReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.DayNightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChairmanTaskLeaderPersonnelRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMeetingReport.ChairmanTaskLeaderPersonnelRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChairmanTaskLeaderPersonnelRowId\' in table \'GAMeetingReport" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMeetingReport.ChairmanTaskLeaderPersonnelRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHEADTBTActivityRecordNull() {
                return this.IsNull(this.tableGAMeetingReport.HEADTBTActivityRecordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHEADTBTActivityRecordNull() {
                this[this.tableGAMeetingReport.HEADTBTActivityRecordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeetingRowIdNull() {
                return this.IsNull(this.tableGAMeetingReport.MeetingRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeetingRowIdNull() {
                this[this.tableGAMeetingReport.MeetingRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeetingReferenceIdNull() {
                return this.IsNull(this.tableGAMeetingReport.MeetingReferenceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeetingReferenceIdNull() {
                this[this.tableGAMeetingReport.MeetingReferenceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceIdPrefixNull() {
                return this.IsNull(this.tableGAMeetingReport.ReferenceIdPrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceIdPrefixNull() {
                this[this.tableGAMeetingReport.ReferenceIdPrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeOfMeetingListsRowIdNull() {
                return this.IsNull(this.tableGAMeetingReport.TypeOfMeetingListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeOfMeetingListsRowIdNull() {
                this[this.tableGAMeetingReport.TypeOfMeetingListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerticalListsRowIdNull() {
                return this.IsNull(this.tableGAMeetingReport.VerticalListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerticalListsRowIdNull() {
                this[this.tableGAMeetingReport.VerticalListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameOrTaskNull() {
                return this.IsNull(this.tableGAMeetingReport.NameOrTaskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameOrTaskNull() {
                this[this.tableGAMeetingReport.NameOrTaskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlaceNull() {
                return this.IsNull(this.tableGAMeetingReport.PlaceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlaceNull() {
                this[this.tableGAMeetingReport.PlaceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationOfTBTNull() {
                return this.IsNull(this.tableGAMeetingReport.LocationOfTBTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationOfTBTNull() {
                this[this.tableGAMeetingReport.LocationOfTBTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeetingOwnerPersonnelRowIdNull() {
                return this.IsNull(this.tableGAMeetingReport.MeetingOwnerPersonnelRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeetingOwnerPersonnelRowIdNull() {
                this[this.tableGAMeetingReport.MeetingOwnerPersonnelRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfMeetingNull() {
                return this.IsNull(this.tableGAMeetingReport.DateOfMeetingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfMeetingNull() {
                this[this.tableGAMeetingReport.DateOfMeetingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeEndNull() {
                return this.IsNull(this.tableGAMeetingReport.TimeEndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeEndNull() {
                this[this.tableGAMeetingReport.TimeEndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConductorPersonnelRowIdNull() {
                return this.IsNull(this.tableGAMeetingReport.ConductorPersonnelRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConductorPersonnelRowIdNull() {
                this[this.tableGAMeetingReport.ConductorPersonnelRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferencedProcedureNull() {
                return this.IsNull(this.tableGAMeetingReport.ReferencedProcedureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferencedProcedureNull() {
                this[this.tableGAMeetingReport.ReferencedProcedureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferencedJSANull() {
                return this.IsNull(this.tableGAMeetingReport.ReferencedJSAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferencedJSANull() {
                this[this.tableGAMeetingReport.ReferencedJSAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkAreaInspectionReferenceIDNull() {
                return this.IsNull(this.tableGAMeetingReport.WorkAreaInspectionReferenceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkAreaInspectionReferenceIDNull() {
                this[this.tableGAMeetingReport.WorkAreaInspectionReferenceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPTWReferenceIDNull() {
                return this.IsNull(this.tableGAMeetingReport.PTWReferenceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPTWReferenceIDNull() {
                this[this.tableGAMeetingReport.PTWReferenceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationOfTaskNull() {
                return this.IsNull(this.tableGAMeetingReport.LocationOfTaskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationOfTaskNull() {
                this[this.tableGAMeetingReport.LocationOfTaskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetailedDescriptionOfTaskNull() {
                return this.IsNull(this.tableGAMeetingReport.DetailedDescriptionOfTaskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetailedDescriptionOfTaskNull() {
                this[this.tableGAMeetingReport.DetailedDescriptionOfTaskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeadPPERequiredNull() {
                return this.IsNull(this.tableGAMeetingReport.HeadPPERequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeadPPERequiredNull() {
                this[this.tableGAMeetingReport.HeadPPERequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsHardHatNull() {
                return this.IsNull(this.tableGAMeetingReport.IsHardHatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsHardHatNull() {
                this[this.tableGAMeetingReport.IsHardHatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsSafetyGlassesNull() {
                return this.IsNull(this.tableGAMeetingReport.IsSafetyGlassesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsSafetyGlassesNull() {
                this[this.tableGAMeetingReport.IsSafetyGlassesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCoverallsNull() {
                return this.IsNull(this.tableGAMeetingReport.IsCoverallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCoverallsNull() {
                this[this.tableGAMeetingReport.IsCoverallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsBootsNull() {
                return this.IsNull(this.tableGAMeetingReport.IsBootsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsBootsNull() {
                this[this.tableGAMeetingReport.IsBootsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsGlovesNull() {
                return this.IsNull(this.tableGAMeetingReport.IsGlovesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsGlovesNull() {
                this[this.tableGAMeetingReport.IsGlovesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPFDNull() {
                return this.IsNull(this.tableGAMeetingReport.IsPFDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPFDNull() {
                this[this.tableGAMeetingReport.IsPFDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsWAHNull() {
                return this.IsNull(this.tableGAMeetingReport.IsWAHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsWAHNull() {
                this[this.tableGAMeetingReport.IsWAHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsHearingProtectionNull() {
                return this.IsNull(this.tableGAMeetingReport.IsHearingProtectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsHearingProtectionNull() {
                this[this.tableGAMeetingReport.IsHearingProtectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsBANull() {
                return this.IsNull(this.tableGAMeetingReport.IsBAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsBANull() {
                this[this.tableGAMeetingReport.IsBAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOtherNull() {
                return this.IsNull(this.tableGAMeetingReport.IsOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOtherNull() {
                this[this.tableGAMeetingReport.IsOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeadCommunicationsNull() {
                return this.IsNull(this.tableGAMeetingReport.HeadCommunicationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeadCommunicationsNull() {
                this[this.tableGAMeetingReport.HeadCommunicationsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsRadioNull() {
                return this.IsNull(this.tableGAMeetingReport.IsRadioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsRadioNull() {
                this[this.tableGAMeetingReport.IsRadioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChannelNull() {
                return this.IsNull(this.tableGAMeetingReport.ChannelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChannelNull() {
                this[this.tableGAMeetingReport.ChannelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsHandSignalsNull() {
                return this.IsNull(this.tableGAMeetingReport.IsHandSignalsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsHandSignalsNull() {
                this[this.tableGAMeetingReport.IsHandSignalsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHandSignalsDescriptionNull() {
                return this.IsNull(this.tableGAMeetingReport.HandSignalsDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHandSignalsDescriptionNull() {
                this[this.tableGAMeetingReport.HandSignalsDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsVerbalNull() {
                return this.IsNull(this.tableGAMeetingReport.IsVerbalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsVerbalNull() {
                this[this.tableGAMeetingReport.IsVerbalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerbalDescriptionNull() {
                return this.IsNull(this.tableGAMeetingReport.VerbalDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerbalDescriptionNull() {
                this[this.tableGAMeetingReport.VerbalDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeadWeatherNull() {
                return this.IsNull(this.tableGAMeetingReport.HeadWeatherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeadWeatherNull() {
                this[this.tableGAMeetingReport.HeadWeatherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOPOScoreNull() {
                return this.IsNull(this.tableGAMeetingReport.MOPOScoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOPOScoreNull() {
                this[this.tableGAMeetingReport.MOPOScoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWindSpeedAndDirectionNull() {
                return this.IsNull(this.tableGAMeetingReport.WindSpeedAndDirectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWindSpeedAndDirectionNull() {
                this[this.tableGAMeetingReport.WindSpeedAndDirectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRainAndSnowListsRowIdNull() {
                return this.IsNull(this.tableGAMeetingReport.RainAndSnowListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRainAndSnowListsRowIdNull() {
                this[this.tableGAMeetingReport.RainAndSnowListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeaHeightNull() {
                return this.IsNull(this.tableGAMeetingReport.SeaHeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeaHeightNull() {
                this[this.tableGAMeetingReport.SeaHeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemperatureNull() {
                return this.IsNull(this.tableGAMeetingReport.TemperatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemperatureNull() {
                this[this.tableGAMeetingReport.TemperatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDayNightListsRowIdNull() {
                return this.IsNull(this.tableGAMeetingReport.DayNightListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDayNightListsRowIdNull() {
                this[this.tableGAMeetingReport.DayNightListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwellNull() {
                return this.IsNull(this.tableGAMeetingReport.SwellColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwellNull() {
                this[this.tableGAMeetingReport.SwellColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVisibilityNull() {
                return this.IsNull(this.tableGAMeetingReport.VisibilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVisibilityNull() {
                this[this.tableGAMeetingReport.VisibilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForecastNull() {
                return this.IsNull(this.tableGAMeetingReport.ForecastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForecastNull() {
                this[this.tableGAMeetingReport.ForecastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTBTChecklistNull() {
                return this.IsNull(this.tableGAMeetingReport.TBTChecklistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTBTChecklistNull() {
                this[this.tableGAMeetingReport.TBTChecklistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConductorNull() {
                return this.IsNull(this.tableGAMeetingReport.ConductorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConductorNull() {
                this[this.tableGAMeetingReport.ConductorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReporterPersonnelRowIdNull() {
                return this.IsNull(this.tableGAMeetingReport.ReporterPersonnelRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReporterPersonnelRowIdNull() {
                this[this.tableGAMeetingReport.ReporterPersonnelRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvolvedPersonnelCountNull() {
                return this.IsNull(this.tableGAMeetingReport.InvolvedPersonnelCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvolvedPersonnelCountNull() {
                this[this.tableGAMeetingReport.InvolvedPersonnelCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReporterNull() {
                return this.IsNull(this.tableGAMeetingReport.ReporterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReporterNull() {
                this[this.tableGAMeetingReport.ReporterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateAndTimeNextMeetingNull() {
                return this.IsNull(this.tableGAMeetingReport.DateAndTimeNextMeetingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateAndTimeNextMeetingNull() {
                this[this.tableGAMeetingReport.DateAndTimeNextMeetingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurposeNull() {
                return this.IsNull(this.tableGAMeetingReport.PurposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurposeNull() {
                this[this.tableGAMeetingReport.PurposeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgendaNull() {
                return this.IsNull(this.tableGAMeetingReport.AgendaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgendaNull() {
                this[this.tableGAMeetingReport.AgendaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableGAMeetingReport.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableGAMeetingReport.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHEADTBTDeclarationNull() {
                return this.IsNull(this.tableGAMeetingReport.HEADTBTDeclarationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHEADTBTDeclarationNull() {
                this[this.tableGAMeetingReport.HEADTBTDeclarationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeStartNull() {
                return this.IsNull(this.tableGAMeetingReport.TimeStartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeStartNull() {
                this[this.tableGAMeetingReport.TimeStartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrowguidNull() {
                return this.IsNull(this.tableGAMeetingReport.rowguidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrowguidNull() {
                this[this.tableGAMeetingReport.rowguidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAMeetingReport.MasterRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterRowIdNull() {
                this[this.tableGAMeetingReport.MasterRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAMeetingReport.DateCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateCreatedNull() {
                this[this.tableGAMeetingReport.DateCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAMeetingReport.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableGAMeetingReport.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAMeetingReport.DateChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangedNull() {
                this[this.tableGAMeetingReport.DateChangedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAMeetingReport.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableGAMeetingReport.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAMeetingReport.DateDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateDeletedNull() {
                this[this.tableGAMeetingReport.DateDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAMeetingReport.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableGAMeetingReport.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAMeetingReport.SwitchFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree1Null() {
                this[this.tableGAMeetingReport.SwitchFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAMeetingReport.SwitchFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree2Null() {
                this[this.tableGAMeetingReport.SwitchFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAMeetingReport.SwitchFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree3Null() {
                this[this.tableGAMeetingReport.SwitchFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAMeetingReport.DateTimeFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree1Null() {
                this[this.tableGAMeetingReport.DateTimeFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAMeetingReport.DateTimeFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree2Null() {
                this[this.tableGAMeetingReport.DateTimeFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAMeetingReport.DateTimeFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree3Null() {
                this[this.tableGAMeetingReport.DateTimeFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAMeetingReport.TextFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree1Null() {
                this[this.tableGAMeetingReport.TextFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAMeetingReport.TextFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree2Null() {
                this[this.tableGAMeetingReport.TextFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAMeetingReport.TextFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree3Null() {
                this[this.tableGAMeetingReport.TextFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAMeetingReport.IntFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree1Null() {
                this[this.tableGAMeetingReport.IntFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAMeetingReport.IntFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree2Null() {
                this[this.tableGAMeetingReport.IntFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAMeetingReport.IntFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree3Null() {
                this[this.tableGAMeetingReport.IntFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree1Null() {
                return this.IsNull(this.tableGAMeetingReport.nTextFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree1Null() {
                this[this.tableGAMeetingReport.nTextFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree2Null() {
                return this.IsNull(this.tableGAMeetingReport.nTextFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree2Null() {
                this[this.tableGAMeetingReport.nTextFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree3Null() {
                return this.IsNull(this.tableGAMeetingReport.nTextFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree3Null() {
                this[this.tableGAMeetingReport.nTextFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRainAndSnowNull() {
                return this.IsNull(this.tableGAMeetingReport.RainAndSnowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRainAndSnowNull() {
                this[this.tableGAMeetingReport.RainAndSnowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDayNightNull() {
                return this.IsNull(this.tableGAMeetingReport.DayNightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDayNightNull() {
                this[this.tableGAMeetingReport.DayNightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChairmanTaskLeaderPersonnelRowIdNull() {
                return this.IsNull(this.tableGAMeetingReport.ChairmanTaskLeaderPersonnelRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChairmanTaskLeaderPersonnelRowIdNull() {
                this[this.tableGAMeetingReport.ChairmanTaskLeaderPersonnelRowIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GAMeetingReportRowChangeEvent : global::System.EventArgs {
            
            private GAMeetingReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAMeetingReportRowChangeEvent(GAMeetingReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAMeetingReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591