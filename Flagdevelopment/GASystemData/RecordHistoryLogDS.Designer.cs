//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RecordHistoryLogDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RecordHistoryLogDS : global::System.Data.DataSet {
        
        private GARecordHistoryLogDataTable tableGARecordHistoryLog;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RecordHistoryLogDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RecordHistoryLogDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GARecordHistoryLog"] != null)) {
                    base.Tables.Add(new GARecordHistoryLogDataTable(ds.Tables["GARecordHistoryLog"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GARecordHistoryLogDataTable GARecordHistoryLog {
            get {
                return this.tableGARecordHistoryLog;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RecordHistoryLogDS cln = ((RecordHistoryLogDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GARecordHistoryLog"] != null)) {
                    base.Tables.Add(new GARecordHistoryLogDataTable(ds.Tables["GARecordHistoryLog"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGARecordHistoryLog = ((GARecordHistoryLogDataTable)(base.Tables["GARecordHistoryLog"]));
            if ((initTable == true)) {
                if ((this.tableGARecordHistoryLog != null)) {
                    this.tableGARecordHistoryLog.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RecordHistoryLogDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RecordHistoryLogDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGARecordHistoryLog = new GARecordHistoryLogDataTable();
            base.Tables.Add(this.tableGARecordHistoryLog);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGARecordHistoryLog() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RecordHistoryLogDS ds = new RecordHistoryLogDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GARecordHistoryLogRowChangeEventHandler(object sender, GARecordHistoryLogRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GARecordHistoryLogDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRecordHistoryLogRowId;
            
            private global::System.Data.DataColumn columnRecordHistoryLogReferenceId;
            
            private global::System.Data.DataColumn columnclassMember;
            
            private global::System.Data.DataColumn columnFieldId;
            
            private global::System.Data.DataColumn columnreportOnClass;
            
            private global::System.Data.DataColumn columnDateTimeFieldIdChanged;
            
            private global::System.Data.DataColumn columnShortDescription;
            
            private global::System.Data.DataColumn columnclassOwner;
            
            private global::System.Data.DataColumn columnisNewRecord;
            
            private global::System.Data.DataColumn columnReportDate;
            
            private global::System.Data.DataColumn columnImmediateActions;
            
            private global::System.Data.DataColumn columnclassOwnerRowId;
            
            private global::System.Data.DataColumn columnTaskStatus;
            
            private global::System.Data.DataColumn columnclassMemberRowId;
            
            private global::System.Data.DataColumn columnChangedByPersonnelRowId;
            
            private global::System.Data.DataColumn columnreportToRoleListsRowId;
            
            private global::System.Data.DataColumn columnreportToPersonnelRowId;
            
            private global::System.Data.DataColumn columnreportOnClassRowId;
            
            private global::System.Data.DataColumn columnWorkAreaListsRowId;
            
            private global::System.Data.DataColumn columnNumberOfDaysLost;
            
            private global::System.Data.DataColumn columnReferenceIdPrefix;
            
            private global::System.Data.DataColumn columnEyeWitness;
            
            private global::System.Data.DataColumn columnMasterRowId;
            
            private global::System.Data.DataColumn columnDateCreated;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnDateChanged;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnDateDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnSwitchFree1;
            
            private global::System.Data.DataColumn columnSwitchFree2;
            
            private global::System.Data.DataColumn columnSwitchFree3;
            
            private global::System.Data.DataColumn columnDateTimeFree1;
            
            private global::System.Data.DataColumn columnDateTimeFree2;
            
            private global::System.Data.DataColumn columnDateTimeFree3;
            
            private global::System.Data.DataColumn columnTextFree1;
            
            private global::System.Data.DataColumn columnTextFree2;
            
            private global::System.Data.DataColumn columnTextFree3;
            
            private global::System.Data.DataColumn columnIntFree1;
            
            private global::System.Data.DataColumn columnIntFree2;
            
            private global::System.Data.DataColumn columnViewTypeListsRowId;
            
            private global::System.Data.DataColumn columnContributionFactorToTheIncident;
            
            private global::System.Data.DataColumn columnSequenceOfTheIncident;
            
            private global::System.Data.DataColumn columnOldAttributeValue;
            
            private global::System.Data.DataColumn columnNewAttributeValue;
            
            private global::System.Data.DataColumn columnnTextFree3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GARecordHistoryLogDataTable() {
                this.TableName = "GARecordHistoryLog";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GARecordHistoryLogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GARecordHistoryLogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordHistoryLogRowIdColumn {
                get {
                    return this.columnRecordHistoryLogRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordHistoryLogReferenceIdColumn {
                get {
                    return this.columnRecordHistoryLogReferenceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn classMemberColumn {
                get {
                    return this.columnclassMember;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FieldIdColumn {
                get {
                    return this.columnFieldId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reportOnClassColumn {
                get {
                    return this.columnreportOnClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFieldIdChangedColumn {
                get {
                    return this.columnDateTimeFieldIdChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShortDescriptionColumn {
                get {
                    return this.columnShortDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn classOwnerColumn {
                get {
                    return this.columnclassOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isNewRecordColumn {
                get {
                    return this.columnisNewRecord;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImmediateActionsColumn {
                get {
                    return this.columnImmediateActions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn classOwnerRowIdColumn {
                get {
                    return this.columnclassOwnerRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaskStatusColumn {
                get {
                    return this.columnTaskStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn classMemberRowIdColumn {
                get {
                    return this.columnclassMemberRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByPersonnelRowIdColumn {
                get {
                    return this.columnChangedByPersonnelRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reportToRoleListsRowIdColumn {
                get {
                    return this.columnreportToRoleListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reportToPersonnelRowIdColumn {
                get {
                    return this.columnreportToPersonnelRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reportOnClassRowIdColumn {
                get {
                    return this.columnreportOnClassRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkAreaListsRowIdColumn {
                get {
                    return this.columnWorkAreaListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberOfDaysLostColumn {
                get {
                    return this.columnNumberOfDaysLost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceIdPrefixColumn {
                get {
                    return this.columnReferenceIdPrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EyeWitnessColumn {
                get {
                    return this.columnEyeWitness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ViewTypeListsRowIdColumn {
                get {
                    return this.columnViewTypeListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContributionFactorToTheIncidentColumn {
                get {
                    return this.columnContributionFactorToTheIncident;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SequenceOfTheIncidentColumn {
                get {
                    return this.columnSequenceOfTheIncident;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldAttributeValueColumn {
                get {
                    return this.columnOldAttributeValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewAttributeValueColumn {
                get {
                    return this.columnNewAttributeValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree3Column {
                get {
                    return this.columnnTextFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GARecordHistoryLogRow this[int index] {
                get {
                    return ((GARecordHistoryLogRow)(this.Rows[index]));
                }
            }
            
            public event GARecordHistoryLogRowChangeEventHandler GARecordHistoryLogRowChanging;
            
            public event GARecordHistoryLogRowChangeEventHandler GARecordHistoryLogRowChanged;
            
            public event GARecordHistoryLogRowChangeEventHandler GARecordHistoryLogRowDeleting;
            
            public event GARecordHistoryLogRowChangeEventHandler GARecordHistoryLogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGARecordHistoryLogRow(GARecordHistoryLogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GARecordHistoryLogRow AddGARecordHistoryLogRow(
                        string RecordHistoryLogReferenceId, 
                        string classMember, 
                        string FieldId, 
                        string reportOnClass, 
                        System.DateTime DateTimeFieldIdChanged, 
                        string ShortDescription, 
                        string classOwner, 
                        bool isNewRecord, 
                        System.DateTime ReportDate, 
                        string ImmediateActions, 
                        int classOwnerRowId, 
                        string TaskStatus, 
                        int classMemberRowId, 
                        int ChangedByPersonnelRowId, 
                        int reportToRoleListsRowId, 
                        int reportToPersonnelRowId, 
                        int reportOnClassRowId, 
                        int WorkAreaListsRowId, 
                        int NumberOfDaysLost, 
                        string ReferenceIdPrefix, 
                        int EyeWitness, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int ViewTypeListsRowId, 
                        string ContributionFactorToTheIncident, 
                        string SequenceOfTheIncident, 
                        string OldAttributeValue, 
                        string NewAttributeValue, 
                        string nTextFree3) {
                GARecordHistoryLogRow rowGARecordHistoryLogRow = ((GARecordHistoryLogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RecordHistoryLogReferenceId,
                        classMember,
                        FieldId,
                        reportOnClass,
                        DateTimeFieldIdChanged,
                        ShortDescription,
                        classOwner,
                        isNewRecord,
                        ReportDate,
                        ImmediateActions,
                        classOwnerRowId,
                        TaskStatus,
                        classMemberRowId,
                        ChangedByPersonnelRowId,
                        reportToRoleListsRowId,
                        reportToPersonnelRowId,
                        reportOnClassRowId,
                        WorkAreaListsRowId,
                        NumberOfDaysLost,
                        ReferenceIdPrefix,
                        EyeWitness,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        ViewTypeListsRowId,
                        ContributionFactorToTheIncident,
                        SequenceOfTheIncident,
                        OldAttributeValue,
                        NewAttributeValue,
                        nTextFree3};
                rowGARecordHistoryLogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGARecordHistoryLogRow);
                return rowGARecordHistoryLogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GARecordHistoryLogRow FindByRecordHistoryLogRowId(int RecordHistoryLogRowId) {
                return ((GARecordHistoryLogRow)(this.Rows.Find(new object[] {
                            RecordHistoryLogRowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GARecordHistoryLogDataTable cln = ((GARecordHistoryLogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GARecordHistoryLogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRecordHistoryLogRowId = base.Columns["RecordHistoryLogRowId"];
                this.columnRecordHistoryLogReferenceId = base.Columns["RecordHistoryLogReferenceId"];
                this.columnclassMember = base.Columns["classMember"];
                this.columnFieldId = base.Columns["FieldId"];
                this.columnreportOnClass = base.Columns["reportOnClass"];
                this.columnDateTimeFieldIdChanged = base.Columns["DateTimeFieldIdChanged"];
                this.columnShortDescription = base.Columns["ShortDescription"];
                this.columnclassOwner = base.Columns["classOwner"];
                this.columnisNewRecord = base.Columns["isNewRecord"];
                this.columnReportDate = base.Columns["ReportDate"];
                this.columnImmediateActions = base.Columns["ImmediateActions"];
                this.columnclassOwnerRowId = base.Columns["classOwnerRowId"];
                this.columnTaskStatus = base.Columns["TaskStatus"];
                this.columnclassMemberRowId = base.Columns["classMemberRowId"];
                this.columnChangedByPersonnelRowId = base.Columns["ChangedByPersonnelRowId"];
                this.columnreportToRoleListsRowId = base.Columns["reportToRoleListsRowId"];
                this.columnreportToPersonnelRowId = base.Columns["reportToPersonnelRowId"];
                this.columnreportOnClassRowId = base.Columns["reportOnClassRowId"];
                this.columnWorkAreaListsRowId = base.Columns["WorkAreaListsRowId"];
                this.columnNumberOfDaysLost = base.Columns["NumberOfDaysLost"];
                this.columnReferenceIdPrefix = base.Columns["ReferenceIdPrefix"];
                this.columnEyeWitness = base.Columns["EyeWitness"];
                this.columnMasterRowId = base.Columns["MasterRowId"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnDateChanged = base.Columns["DateChanged"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnDateDeleted = base.Columns["DateDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnSwitchFree1 = base.Columns["SwitchFree1"];
                this.columnSwitchFree2 = base.Columns["SwitchFree2"];
                this.columnSwitchFree3 = base.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = base.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = base.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = base.Columns["DateTimeFree3"];
                this.columnTextFree1 = base.Columns["TextFree1"];
                this.columnTextFree2 = base.Columns["TextFree2"];
                this.columnTextFree3 = base.Columns["TextFree3"];
                this.columnIntFree1 = base.Columns["IntFree1"];
                this.columnIntFree2 = base.Columns["IntFree2"];
                this.columnViewTypeListsRowId = base.Columns["ViewTypeListsRowId"];
                this.columnContributionFactorToTheIncident = base.Columns["ContributionFactorToTheIncident"];
                this.columnSequenceOfTheIncident = base.Columns["SequenceOfTheIncident"];
                this.columnOldAttributeValue = base.Columns["OldAttributeValue"];
                this.columnNewAttributeValue = base.Columns["NewAttributeValue"];
                this.columnnTextFree3 = base.Columns["nTextFree3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRecordHistoryLogRowId = new global::System.Data.DataColumn("RecordHistoryLogRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordHistoryLogRowId);
                this.columnRecordHistoryLogReferenceId = new global::System.Data.DataColumn("RecordHistoryLogReferenceId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordHistoryLogReferenceId);
                this.columnclassMember = new global::System.Data.DataColumn("classMember", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclassMember);
                this.columnFieldId = new global::System.Data.DataColumn("FieldId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFieldId);
                this.columnreportOnClass = new global::System.Data.DataColumn("reportOnClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreportOnClass);
                this.columnDateTimeFieldIdChanged = new global::System.Data.DataColumn("DateTimeFieldIdChanged", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFieldIdChanged);
                this.columnShortDescription = new global::System.Data.DataColumn("ShortDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortDescription);
                this.columnclassOwner = new global::System.Data.DataColumn("classOwner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclassOwner);
                this.columnisNewRecord = new global::System.Data.DataColumn("isNewRecord", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisNewRecord);
                this.columnReportDate = new global::System.Data.DataColumn("ReportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportDate);
                this.columnImmediateActions = new global::System.Data.DataColumn("ImmediateActions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImmediateActions);
                this.columnclassOwnerRowId = new global::System.Data.DataColumn("classOwnerRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclassOwnerRowId);
                this.columnTaskStatus = new global::System.Data.DataColumn("TaskStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaskStatus);
                this.columnclassMemberRowId = new global::System.Data.DataColumn("classMemberRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclassMemberRowId);
                this.columnChangedByPersonnelRowId = new global::System.Data.DataColumn("ChangedByPersonnelRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedByPersonnelRowId);
                this.columnreportToRoleListsRowId = new global::System.Data.DataColumn("reportToRoleListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreportToRoleListsRowId);
                this.columnreportToPersonnelRowId = new global::System.Data.DataColumn("reportToPersonnelRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreportToPersonnelRowId);
                this.columnreportOnClassRowId = new global::System.Data.DataColumn("reportOnClassRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreportOnClassRowId);
                this.columnWorkAreaListsRowId = new global::System.Data.DataColumn("WorkAreaListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkAreaListsRowId);
                this.columnNumberOfDaysLost = new global::System.Data.DataColumn("NumberOfDaysLost", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfDaysLost);
                this.columnReferenceIdPrefix = new global::System.Data.DataColumn("ReferenceIdPrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceIdPrefix);
                this.columnEyeWitness = new global::System.Data.DataColumn("EyeWitness", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEyeWitness);
                this.columnMasterRowId = new global::System.Data.DataColumn("MasterRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new global::System.Data.DataColumn("DateCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new global::System.Data.DataColumn("DateChanged", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new global::System.Data.DataColumn("DateDeleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new global::System.Data.DataColumn("SwitchFree1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new global::System.Data.DataColumn("SwitchFree2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new global::System.Data.DataColumn("SwitchFree3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new global::System.Data.DataColumn("DateTimeFree1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new global::System.Data.DataColumn("DateTimeFree2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new global::System.Data.DataColumn("DateTimeFree3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new global::System.Data.DataColumn("TextFree1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new global::System.Data.DataColumn("TextFree2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new global::System.Data.DataColumn("TextFree3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new global::System.Data.DataColumn("IntFree1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new global::System.Data.DataColumn("IntFree2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree2);
                this.columnViewTypeListsRowId = new global::System.Data.DataColumn("ViewTypeListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViewTypeListsRowId);
                this.columnContributionFactorToTheIncident = new global::System.Data.DataColumn("ContributionFactorToTheIncident", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContributionFactorToTheIncident);
                this.columnSequenceOfTheIncident = new global::System.Data.DataColumn("SequenceOfTheIncident", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSequenceOfTheIncident);
                this.columnOldAttributeValue = new global::System.Data.DataColumn("OldAttributeValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldAttributeValue);
                this.columnNewAttributeValue = new global::System.Data.DataColumn("NewAttributeValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewAttributeValue);
                this.columnnTextFree3 = new global::System.Data.DataColumn("nTextFree3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree3);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecordHistoryLogRowId}, true));
                this.columnRecordHistoryLogRowId.AutoIncrement = true;
                this.columnRecordHistoryLogRowId.AllowDBNull = false;
                this.columnRecordHistoryLogRowId.ReadOnly = true;
                this.columnRecordHistoryLogRowId.Unique = true;
                this.columnRecordHistoryLogReferenceId.MaxLength = 50;
                this.columnclassMember.MaxLength = 200;
                this.columnFieldId.MaxLength = 100;
                this.columnreportOnClass.MaxLength = 200;
                this.columnShortDescription.MaxLength = 1073741823;
                this.columnclassOwner.MaxLength = 50;
                this.columnImmediateActions.MaxLength = 1073741823;
                this.columnTaskStatus.MaxLength = 50;
                this.columnReferenceIdPrefix.MaxLength = 8;
                this.columnTextFree1.MaxLength = 200;
                this.columnTextFree2.MaxLength = 200;
                this.columnTextFree3.MaxLength = 200;
                this.columnContributionFactorToTheIncident.MaxLength = 1073741823;
                this.columnSequenceOfTheIncident.MaxLength = 1073741823;
                this.columnOldAttributeValue.MaxLength = 1073741823;
                this.columnNewAttributeValue.MaxLength = 1073741823;
                this.columnnTextFree3.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GARecordHistoryLogRow NewGARecordHistoryLogRow() {
                return ((GARecordHistoryLogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GARecordHistoryLogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GARecordHistoryLogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GARecordHistoryLogRowChanged != null)) {
                    this.GARecordHistoryLogRowChanged(this, new GARecordHistoryLogRowChangeEvent(((GARecordHistoryLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GARecordHistoryLogRowChanging != null)) {
                    this.GARecordHistoryLogRowChanging(this, new GARecordHistoryLogRowChangeEvent(((GARecordHistoryLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GARecordHistoryLogRowDeleted != null)) {
                    this.GARecordHistoryLogRowDeleted(this, new GARecordHistoryLogRowChangeEvent(((GARecordHistoryLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GARecordHistoryLogRowDeleting != null)) {
                    this.GARecordHistoryLogRowDeleting(this, new GARecordHistoryLogRowChangeEvent(((GARecordHistoryLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGARecordHistoryLogRow(GARecordHistoryLogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecordHistoryLogDS ds = new RecordHistoryLogDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GARecordHistoryLogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GARecordHistoryLogRow : global::System.Data.DataRow {
            
            private GARecordHistoryLogDataTable tableGARecordHistoryLog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GARecordHistoryLogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGARecordHistoryLog = ((GARecordHistoryLogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RecordHistoryLogRowId {
                get {
                    return ((int)(this[this.tableGARecordHistoryLog.RecordHistoryLogRowIdColumn]));
                }
                set {
                    this[this.tableGARecordHistoryLog.RecordHistoryLogRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordHistoryLogReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.RecordHistoryLogReferenceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordHistoryLogReferenceId\' in table \'GARecordHistoryLog\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.RecordHistoryLogReferenceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string classMember {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.classMemberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'classMember\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.classMemberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FieldId {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.FieldIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FieldId\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.FieldIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string reportOnClass {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.reportOnClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reportOnClass\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.reportOnClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFieldIdChanged {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGARecordHistoryLog.DateTimeFieldIdChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFieldIdChanged\' in table \'GARecordHistoryLog\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.DateTimeFieldIdChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShortDescription {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.ShortDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShortDescription\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.ShortDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string classOwner {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.classOwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'classOwner\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.classOwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isNewRecord {
                get {
                    try {
                        return ((bool)(this[this.tableGARecordHistoryLog.isNewRecordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isNewRecord\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.isNewRecordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGARecordHistoryLog.ReportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportDate\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.ReportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ImmediateActions {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.ImmediateActionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImmediateActions\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.ImmediateActionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int classOwnerRowId {
                get {
                    try {
                        return ((int)(this[this.tableGARecordHistoryLog.classOwnerRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'classOwnerRowId\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.classOwnerRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaskStatus {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.TaskStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaskStatus\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.TaskStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int classMemberRowId {
                get {
                    try {
                        return ((int)(this[this.tableGARecordHistoryLog.classMemberRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'classMemberRowId\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.classMemberRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedByPersonnelRowId {
                get {
                    try {
                        return ((int)(this[this.tableGARecordHistoryLog.ChangedByPersonnelRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedByPersonnelRowId\' in table \'GARecordHistoryLog\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.ChangedByPersonnelRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int reportToRoleListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGARecordHistoryLog.reportToRoleListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reportToRoleListsRowId\' in table \'GARecordHistoryLog\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.reportToRoleListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int reportToPersonnelRowId {
                get {
                    try {
                        return ((int)(this[this.tableGARecordHistoryLog.reportToPersonnelRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reportToPersonnelRowId\' in table \'GARecordHistoryLog\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.reportToPersonnelRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int reportOnClassRowId {
                get {
                    try {
                        return ((int)(this[this.tableGARecordHistoryLog.reportOnClassRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reportOnClassRowId\' in table \'GARecordHistoryLog\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.reportOnClassRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorkAreaListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGARecordHistoryLog.WorkAreaListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkAreaListsRowId\' in table \'GARecordHistoryLog\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.WorkAreaListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumberOfDaysLost {
                get {
                    try {
                        return ((int)(this[this.tableGARecordHistoryLog.NumberOfDaysLostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfDaysLost\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.NumberOfDaysLostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferenceIdPrefix {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.ReferenceIdPrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferenceIdPrefix\' in table \'GARecordHistoryLog\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.ReferenceIdPrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EyeWitness {
                get {
                    try {
                        return ((int)(this[this.tableGARecordHistoryLog.EyeWitnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EyeWitness\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.EyeWitnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGARecordHistoryLog.MasterRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MasterRowId\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.MasterRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGARecordHistoryLog.DateCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateCreated\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.DateCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGARecordHistoryLog.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGARecordHistoryLog.DateChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateChanged\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.DateChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGARecordHistoryLog.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGARecordHistoryLog.DateDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateDeleted\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.DateDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGARecordHistoryLog.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGARecordHistoryLog.SwitchFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree1\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.SwitchFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGARecordHistoryLog.SwitchFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree2\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.SwitchFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGARecordHistoryLog.SwitchFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree3\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.SwitchFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGARecordHistoryLog.DateTimeFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree1\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.DateTimeFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGARecordHistoryLog.DateTimeFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree2\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.DateTimeFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGARecordHistoryLog.DateTimeFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree3\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.DateTimeFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.TextFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree1\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.TextFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.TextFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree2\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.TextFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.TextFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree3\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.TextFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGARecordHistoryLog.IntFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntFree1\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.IntFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGARecordHistoryLog.IntFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntFree2\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.IntFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ViewTypeListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGARecordHistoryLog.ViewTypeListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ViewTypeListsRowId\' in table \'GARecordHistoryLog\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.ViewTypeListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContributionFactorToTheIncident {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.ContributionFactorToTheIncidentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContributionFactorToTheIncident\' in table \'GARecordHistoryL" +
                                "og\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.ContributionFactorToTheIncidentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SequenceOfTheIncident {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.SequenceOfTheIncidentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SequenceOfTheIncident\' in table \'GARecordHistoryLog\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.SequenceOfTheIncidentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OldAttributeValue {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.OldAttributeValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OldAttributeValue\' in table \'GARecordHistoryLog\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.OldAttributeValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NewAttributeValue {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.NewAttributeValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewAttributeValue\' in table \'GARecordHistoryLog\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.NewAttributeValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGARecordHistoryLog.nTextFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree3\' in table \'GARecordHistoryLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGARecordHistoryLog.nTextFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordHistoryLogReferenceIdNull() {
                return this.IsNull(this.tableGARecordHistoryLog.RecordHistoryLogReferenceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordHistoryLogReferenceIdNull() {
                this[this.tableGARecordHistoryLog.RecordHistoryLogReferenceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsclassMemberNull() {
                return this.IsNull(this.tableGARecordHistoryLog.classMemberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetclassMemberNull() {
                this[this.tableGARecordHistoryLog.classMemberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFieldIdNull() {
                return this.IsNull(this.tableGARecordHistoryLog.FieldIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFieldIdNull() {
                this[this.tableGARecordHistoryLog.FieldIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreportOnClassNull() {
                return this.IsNull(this.tableGARecordHistoryLog.reportOnClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreportOnClassNull() {
                this[this.tableGARecordHistoryLog.reportOnClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFieldIdChangedNull() {
                return this.IsNull(this.tableGARecordHistoryLog.DateTimeFieldIdChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFieldIdChangedNull() {
                this[this.tableGARecordHistoryLog.DateTimeFieldIdChangedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShortDescriptionNull() {
                return this.IsNull(this.tableGARecordHistoryLog.ShortDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShortDescriptionNull() {
                this[this.tableGARecordHistoryLog.ShortDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsclassOwnerNull() {
                return this.IsNull(this.tableGARecordHistoryLog.classOwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetclassOwnerNull() {
                this[this.tableGARecordHistoryLog.classOwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisNewRecordNull() {
                return this.IsNull(this.tableGARecordHistoryLog.isNewRecordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisNewRecordNull() {
                this[this.tableGARecordHistoryLog.isNewRecordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportDateNull() {
                return this.IsNull(this.tableGARecordHistoryLog.ReportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportDateNull() {
                this[this.tableGARecordHistoryLog.ReportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImmediateActionsNull() {
                return this.IsNull(this.tableGARecordHistoryLog.ImmediateActionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImmediateActionsNull() {
                this[this.tableGARecordHistoryLog.ImmediateActionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsclassOwnerRowIdNull() {
                return this.IsNull(this.tableGARecordHistoryLog.classOwnerRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetclassOwnerRowIdNull() {
                this[this.tableGARecordHistoryLog.classOwnerRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaskStatusNull() {
                return this.IsNull(this.tableGARecordHistoryLog.TaskStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaskStatusNull() {
                this[this.tableGARecordHistoryLog.TaskStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsclassMemberRowIdNull() {
                return this.IsNull(this.tableGARecordHistoryLog.classMemberRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetclassMemberRowIdNull() {
                this[this.tableGARecordHistoryLog.classMemberRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByPersonnelRowIdNull() {
                return this.IsNull(this.tableGARecordHistoryLog.ChangedByPersonnelRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByPersonnelRowIdNull() {
                this[this.tableGARecordHistoryLog.ChangedByPersonnelRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreportToRoleListsRowIdNull() {
                return this.IsNull(this.tableGARecordHistoryLog.reportToRoleListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreportToRoleListsRowIdNull() {
                this[this.tableGARecordHistoryLog.reportToRoleListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreportToPersonnelRowIdNull() {
                return this.IsNull(this.tableGARecordHistoryLog.reportToPersonnelRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreportToPersonnelRowIdNull() {
                this[this.tableGARecordHistoryLog.reportToPersonnelRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreportOnClassRowIdNull() {
                return this.IsNull(this.tableGARecordHistoryLog.reportOnClassRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreportOnClassRowIdNull() {
                this[this.tableGARecordHistoryLog.reportOnClassRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkAreaListsRowIdNull() {
                return this.IsNull(this.tableGARecordHistoryLog.WorkAreaListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkAreaListsRowIdNull() {
                this[this.tableGARecordHistoryLog.WorkAreaListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberOfDaysLostNull() {
                return this.IsNull(this.tableGARecordHistoryLog.NumberOfDaysLostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberOfDaysLostNull() {
                this[this.tableGARecordHistoryLog.NumberOfDaysLostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceIdPrefixNull() {
                return this.IsNull(this.tableGARecordHistoryLog.ReferenceIdPrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceIdPrefixNull() {
                this[this.tableGARecordHistoryLog.ReferenceIdPrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEyeWitnessNull() {
                return this.IsNull(this.tableGARecordHistoryLog.EyeWitnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEyeWitnessNull() {
                this[this.tableGARecordHistoryLog.EyeWitnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGARecordHistoryLog.MasterRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterRowIdNull() {
                this[this.tableGARecordHistoryLog.MasterRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGARecordHistoryLog.DateCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateCreatedNull() {
                this[this.tableGARecordHistoryLog.DateCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGARecordHistoryLog.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableGARecordHistoryLog.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGARecordHistoryLog.DateChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangedNull() {
                this[this.tableGARecordHistoryLog.DateChangedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGARecordHistoryLog.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableGARecordHistoryLog.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGARecordHistoryLog.DateDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateDeletedNull() {
                this[this.tableGARecordHistoryLog.DateDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGARecordHistoryLog.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableGARecordHistoryLog.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGARecordHistoryLog.SwitchFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree1Null() {
                this[this.tableGARecordHistoryLog.SwitchFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGARecordHistoryLog.SwitchFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree2Null() {
                this[this.tableGARecordHistoryLog.SwitchFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGARecordHistoryLog.SwitchFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree3Null() {
                this[this.tableGARecordHistoryLog.SwitchFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGARecordHistoryLog.DateTimeFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree1Null() {
                this[this.tableGARecordHistoryLog.DateTimeFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGARecordHistoryLog.DateTimeFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree2Null() {
                this[this.tableGARecordHistoryLog.DateTimeFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGARecordHistoryLog.DateTimeFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree3Null() {
                this[this.tableGARecordHistoryLog.DateTimeFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGARecordHistoryLog.TextFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree1Null() {
                this[this.tableGARecordHistoryLog.TextFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGARecordHistoryLog.TextFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree2Null() {
                this[this.tableGARecordHistoryLog.TextFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGARecordHistoryLog.TextFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree3Null() {
                this[this.tableGARecordHistoryLog.TextFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGARecordHistoryLog.IntFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree1Null() {
                this[this.tableGARecordHistoryLog.IntFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGARecordHistoryLog.IntFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree2Null() {
                this[this.tableGARecordHistoryLog.IntFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsViewTypeListsRowIdNull() {
                return this.IsNull(this.tableGARecordHistoryLog.ViewTypeListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetViewTypeListsRowIdNull() {
                this[this.tableGARecordHistoryLog.ViewTypeListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContributionFactorToTheIncidentNull() {
                return this.IsNull(this.tableGARecordHistoryLog.ContributionFactorToTheIncidentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContributionFactorToTheIncidentNull() {
                this[this.tableGARecordHistoryLog.ContributionFactorToTheIncidentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSequenceOfTheIncidentNull() {
                return this.IsNull(this.tableGARecordHistoryLog.SequenceOfTheIncidentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSequenceOfTheIncidentNull() {
                this[this.tableGARecordHistoryLog.SequenceOfTheIncidentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldAttributeValueNull() {
                return this.IsNull(this.tableGARecordHistoryLog.OldAttributeValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldAttributeValueNull() {
                this[this.tableGARecordHistoryLog.OldAttributeValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewAttributeValueNull() {
                return this.IsNull(this.tableGARecordHistoryLog.NewAttributeValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewAttributeValueNull() {
                this[this.tableGARecordHistoryLog.NewAttributeValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree3Null() {
                return this.IsNull(this.tableGARecordHistoryLog.nTextFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree3Null() {
                this[this.tableGARecordHistoryLog.nTextFree3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GARecordHistoryLogRowChangeEvent : global::System.EventArgs {
            
            private GARecordHistoryLogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GARecordHistoryLogRowChangeEvent(GARecordHistoryLogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GARecordHistoryLogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591