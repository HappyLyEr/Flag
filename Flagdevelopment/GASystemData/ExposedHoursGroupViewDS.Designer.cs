//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ExposedHoursGroupViewDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ExposedHoursGroupViewDS : global::System.Data.DataSet {
        
        private GAExposedHoursGroupViewDataTable tableGAExposedHoursGroupView;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ExposedHoursGroupViewDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ExposedHoursGroupViewDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GAExposedHoursGroupView"] != null)) {
                    base.Tables.Add(new GAExposedHoursGroupViewDataTable(ds.Tables["GAExposedHoursGroupView"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAExposedHoursGroupViewDataTable GAExposedHoursGroupView {
            get {
                return this.tableGAExposedHoursGroupView;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ExposedHoursGroupViewDS cln = ((ExposedHoursGroupViewDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GAExposedHoursGroupView"] != null)) {
                    base.Tables.Add(new GAExposedHoursGroupViewDataTable(ds.Tables["GAExposedHoursGroupView"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGAExposedHoursGroupView = ((GAExposedHoursGroupViewDataTable)(base.Tables["GAExposedHoursGroupView"]));
            if ((initTable == true)) {
                if ((this.tableGAExposedHoursGroupView != null)) {
                    this.tableGAExposedHoursGroupView.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ExposedHoursGroupViewDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ExposedHoursGroupViewDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGAExposedHoursGroupView = new GAExposedHoursGroupViewDataTable();
            base.Tables.Add(this.tableGAExposedHoursGroupView);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGAExposedHoursGroupView() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ExposedHoursGroupViewDS ds = new ExposedHoursGroupViewDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GAExposedHoursGroupViewRowChangeEventHandler(object sender, GAExposedHoursGroupViewRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GAExposedHoursGroupViewDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnExposedHoursGroupViewRowId;
            
            private global::System.Data.DataColumn columnDateTimeFrom;
            
            private global::System.Data.DataColumn columnDateTimeTo;
            
            private global::System.Data.DataColumn columnDepartmentCategoryListsRowId;
            
            private global::System.Data.DataColumn columnWatchListsRowId;
            
            private global::System.Data.DataColumn columnViewTypeListsRowId;
            
            private global::System.Data.DataColumn columnNumberOfPersons;
            
            private global::System.Data.DataColumn columnExposedHoursPerWorkDay;
            
            private global::System.Data.DataColumn columnExposedDaysPerWeek;
            
            private global::System.Data.DataColumn columnOwnerReference;
            
            private global::System.Data.DataColumn columnPlaceOfEmbarkment;
            
            private global::System.Data.DataColumn columnIdentificationIDNumber;
            
            private global::System.Data.DataColumn columnRoomId;
            
            private global::System.Data.DataColumn columnBunksInRoom;
            
            private global::System.Data.DataColumn columnBunk;
            
            private global::System.Data.DataColumn columnRaft;
            
            private global::System.Data.DataColumn columnActionAbandonShip;
            
            private global::System.Data.DataColumn columnSwitchFree1;
            
            private global::System.Data.DataColumn columnSwitchFree2;
            
            private global::System.Data.DataColumn columnSwitchFree3;
            
            private global::System.Data.DataColumn columnDateTimeFree1;
            
            private global::System.Data.DataColumn columnDateTimeFree2;
            
            private global::System.Data.DataColumn columnDateTimeFree3;
            
            private global::System.Data.DataColumn columnTextFree2;
            
            private global::System.Data.DataColumn columnTextFree3;
            
            private global::System.Data.DataColumn columnnTextFree1;
            
            private global::System.Data.DataColumn columnnTextFree2;
            
            private global::System.Data.DataColumn columnnTextFree3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAExposedHoursGroupViewDataTable() {
                this.TableName = "GAExposedHoursGroupView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAExposedHoursGroupViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GAExposedHoursGroupViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExposedHoursGroupViewRowIdColumn {
                get {
                    return this.columnExposedHoursGroupViewRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFromColumn {
                get {
                    return this.columnDateTimeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeToColumn {
                get {
                    return this.columnDateTimeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartmentCategoryListsRowIdColumn {
                get {
                    return this.columnDepartmentCategoryListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WatchListsRowIdColumn {
                get {
                    return this.columnWatchListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ViewTypeListsRowIdColumn {
                get {
                    return this.columnViewTypeListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberOfPersonsColumn {
                get {
                    return this.columnNumberOfPersons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExposedHoursPerWorkDayColumn {
                get {
                    return this.columnExposedHoursPerWorkDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExposedDaysPerWeekColumn {
                get {
                    return this.columnExposedDaysPerWeek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerReferenceColumn {
                get {
                    return this.columnOwnerReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlaceOfEmbarkmentColumn {
                get {
                    return this.columnPlaceOfEmbarkment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdentificationIDNumberColumn {
                get {
                    return this.columnIdentificationIDNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoomIdColumn {
                get {
                    return this.columnRoomId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BunksInRoomColumn {
                get {
                    return this.columnBunksInRoom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BunkColumn {
                get {
                    return this.columnBunk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RaftColumn {
                get {
                    return this.columnRaft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActionAbandonShipColumn {
                get {
                    return this.columnActionAbandonShip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree1Column {
                get {
                    return this.columnnTextFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree2Column {
                get {
                    return this.columnnTextFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree3Column {
                get {
                    return this.columnnTextFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAExposedHoursGroupViewRow this[int index] {
                get {
                    return ((GAExposedHoursGroupViewRow)(this.Rows[index]));
                }
            }
            
            public event GAExposedHoursGroupViewRowChangeEventHandler GAExposedHoursGroupViewRowChanging;
            
            public event GAExposedHoursGroupViewRowChangeEventHandler GAExposedHoursGroupViewRowChanged;
            
            public event GAExposedHoursGroupViewRowChangeEventHandler GAExposedHoursGroupViewRowDeleting;
            
            public event GAExposedHoursGroupViewRowChangeEventHandler GAExposedHoursGroupViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGAExposedHoursGroupViewRow(GAExposedHoursGroupViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAExposedHoursGroupViewRow AddGAExposedHoursGroupViewRow(
                        System.DateTime DateTimeFrom, 
                        System.DateTime DateTimeTo, 
                        int DepartmentCategoryListsRowId, 
                        int WatchListsRowId, 
                        int ViewTypeListsRowId, 
                        int NumberOfPersons, 
                        int ExposedHoursPerWorkDay, 
                        int ExposedDaysPerWeek, 
                        string OwnerReference, 
                        string PlaceOfEmbarkment, 
                        string IdentificationIDNumber, 
                        string RoomId, 
                        int BunksInRoom, 
                        string Bunk, 
                        string Raft, 
                        string ActionAbandonShip, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree2, 
                        string TextFree3, 
                        string nTextFree1, 
                        string nTextFree2, 
                        string nTextFree3) {
                GAExposedHoursGroupViewRow rowGAExposedHoursGroupViewRow = ((GAExposedHoursGroupViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DateTimeFrom,
                        DateTimeTo,
                        DepartmentCategoryListsRowId,
                        WatchListsRowId,
                        ViewTypeListsRowId,
                        NumberOfPersons,
                        ExposedHoursPerWorkDay,
                        ExposedDaysPerWeek,
                        OwnerReference,
                        PlaceOfEmbarkment,
                        IdentificationIDNumber,
                        RoomId,
                        BunksInRoom,
                        Bunk,
                        Raft,
                        ActionAbandonShip,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree2,
                        TextFree3,
                        nTextFree1,
                        nTextFree2,
                        nTextFree3};
                rowGAExposedHoursGroupViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGAExposedHoursGroupViewRow);
                return rowGAExposedHoursGroupViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAExposedHoursGroupViewRow FindByExposedHoursGroupViewRowId(int ExposedHoursGroupViewRowId) {
                return ((GAExposedHoursGroupViewRow)(this.Rows.Find(new object[] {
                            ExposedHoursGroupViewRowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GAExposedHoursGroupViewDataTable cln = ((GAExposedHoursGroupViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GAExposedHoursGroupViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnExposedHoursGroupViewRowId = base.Columns["ExposedHoursGroupViewRowId"];
                this.columnDateTimeFrom = base.Columns["DateTimeFrom"];
                this.columnDateTimeTo = base.Columns["DateTimeTo"];
                this.columnDepartmentCategoryListsRowId = base.Columns["DepartmentCategoryListsRowId"];
                this.columnWatchListsRowId = base.Columns["WatchListsRowId"];
                this.columnViewTypeListsRowId = base.Columns["ViewTypeListsRowId"];
                this.columnNumberOfPersons = base.Columns["NumberOfPersons"];
                this.columnExposedHoursPerWorkDay = base.Columns["ExposedHoursPerWorkDay"];
                this.columnExposedDaysPerWeek = base.Columns["ExposedDaysPerWeek"];
                this.columnOwnerReference = base.Columns["OwnerReference"];
                this.columnPlaceOfEmbarkment = base.Columns["PlaceOfEmbarkment"];
                this.columnIdentificationIDNumber = base.Columns["IdentificationIDNumber"];
                this.columnRoomId = base.Columns["RoomId"];
                this.columnBunksInRoom = base.Columns["BunksInRoom"];
                this.columnBunk = base.Columns["Bunk"];
                this.columnRaft = base.Columns["Raft"];
                this.columnActionAbandonShip = base.Columns["ActionAbandonShip"];
                this.columnSwitchFree1 = base.Columns["SwitchFree1"];
                this.columnSwitchFree2 = base.Columns["SwitchFree2"];
                this.columnSwitchFree3 = base.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = base.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = base.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = base.Columns["DateTimeFree3"];
                this.columnTextFree2 = base.Columns["TextFree2"];
                this.columnTextFree3 = base.Columns["TextFree3"];
                this.columnnTextFree1 = base.Columns["nTextFree1"];
                this.columnnTextFree2 = base.Columns["nTextFree2"];
                this.columnnTextFree3 = base.Columns["nTextFree3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnExposedHoursGroupViewRowId = new global::System.Data.DataColumn("ExposedHoursGroupViewRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExposedHoursGroupViewRowId);
                this.columnDateTimeFrom = new global::System.Data.DataColumn("DateTimeFrom", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFrom);
                this.columnDateTimeTo = new global::System.Data.DataColumn("DateTimeTo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeTo);
                this.columnDepartmentCategoryListsRowId = new global::System.Data.DataColumn("DepartmentCategoryListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartmentCategoryListsRowId);
                this.columnWatchListsRowId = new global::System.Data.DataColumn("WatchListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWatchListsRowId);
                this.columnViewTypeListsRowId = new global::System.Data.DataColumn("ViewTypeListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViewTypeListsRowId);
                this.columnNumberOfPersons = new global::System.Data.DataColumn("NumberOfPersons", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfPersons);
                this.columnExposedHoursPerWorkDay = new global::System.Data.DataColumn("ExposedHoursPerWorkDay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExposedHoursPerWorkDay);
                this.columnExposedDaysPerWeek = new global::System.Data.DataColumn("ExposedDaysPerWeek", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExposedDaysPerWeek);
                this.columnOwnerReference = new global::System.Data.DataColumn("OwnerReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerReference);
                this.columnPlaceOfEmbarkment = new global::System.Data.DataColumn("PlaceOfEmbarkment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaceOfEmbarkment);
                this.columnIdentificationIDNumber = new global::System.Data.DataColumn("IdentificationIDNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdentificationIDNumber);
                this.columnRoomId = new global::System.Data.DataColumn("RoomId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoomId);
                this.columnBunksInRoom = new global::System.Data.DataColumn("BunksInRoom", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBunksInRoom);
                this.columnBunk = new global::System.Data.DataColumn("Bunk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBunk);
                this.columnRaft = new global::System.Data.DataColumn("Raft", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRaft);
                this.columnActionAbandonShip = new global::System.Data.DataColumn("ActionAbandonShip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActionAbandonShip);
                this.columnSwitchFree1 = new global::System.Data.DataColumn("SwitchFree1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new global::System.Data.DataColumn("SwitchFree2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new global::System.Data.DataColumn("SwitchFree3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new global::System.Data.DataColumn("DateTimeFree1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new global::System.Data.DataColumn("DateTimeFree2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new global::System.Data.DataColumn("DateTimeFree3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree2 = new global::System.Data.DataColumn("TextFree2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new global::System.Data.DataColumn("TextFree3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree3);
                this.columnnTextFree1 = new global::System.Data.DataColumn("nTextFree1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree1);
                this.columnnTextFree2 = new global::System.Data.DataColumn("nTextFree2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree2);
                this.columnnTextFree3 = new global::System.Data.DataColumn("nTextFree3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree3);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnExposedHoursGroupViewRowId}, true));
                this.columnExposedHoursGroupViewRowId.AutoIncrement = true;
                this.columnExposedHoursGroupViewRowId.AllowDBNull = false;
                this.columnExposedHoursGroupViewRowId.ReadOnly = true;
                this.columnExposedHoursGroupViewRowId.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAExposedHoursGroupViewRow NewGAExposedHoursGroupViewRow() {
                return ((GAExposedHoursGroupViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GAExposedHoursGroupViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GAExposedHoursGroupViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAExposedHoursGroupViewRowChanged != null)) {
                    this.GAExposedHoursGroupViewRowChanged(this, new GAExposedHoursGroupViewRowChangeEvent(((GAExposedHoursGroupViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAExposedHoursGroupViewRowChanging != null)) {
                    this.GAExposedHoursGroupViewRowChanging(this, new GAExposedHoursGroupViewRowChangeEvent(((GAExposedHoursGroupViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAExposedHoursGroupViewRowDeleted != null)) {
                    this.GAExposedHoursGroupViewRowDeleted(this, new GAExposedHoursGroupViewRowChangeEvent(((GAExposedHoursGroupViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAExposedHoursGroupViewRowDeleting != null)) {
                    this.GAExposedHoursGroupViewRowDeleting(this, new GAExposedHoursGroupViewRowChangeEvent(((GAExposedHoursGroupViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGAExposedHoursGroupViewRow(GAExposedHoursGroupViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExposedHoursGroupViewDS ds = new ExposedHoursGroupViewDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GAExposedHoursGroupViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GAExposedHoursGroupViewRow : global::System.Data.DataRow {
            
            private GAExposedHoursGroupViewDataTable tableGAExposedHoursGroupView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAExposedHoursGroupViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAExposedHoursGroupView = ((GAExposedHoursGroupViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExposedHoursGroupViewRowId {
                get {
                    return ((int)(this[this.tableGAExposedHoursGroupView.ExposedHoursGroupViewRowIdColumn]));
                }
                set {
                    this[this.tableGAExposedHoursGroupView.ExposedHoursGroupViewRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFrom {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAExposedHoursGroupView.DateTimeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFrom\' in table \'GAExposedHoursGroupView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.DateTimeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeTo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAExposedHoursGroupView.DateTimeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeTo\' in table \'GAExposedHoursGroupView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.DateTimeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DepartmentCategoryListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAExposedHoursGroupView.DepartmentCategoryListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepartmentCategoryListsRowId\' in table \'GAExposedHoursGroup" +
                                "View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.DepartmentCategoryListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WatchListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAExposedHoursGroupView.WatchListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WatchListsRowId\' in table \'GAExposedHoursGroupView\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.WatchListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ViewTypeListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAExposedHoursGroupView.ViewTypeListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ViewTypeListsRowId\' in table \'GAExposedHoursGroupView\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.ViewTypeListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumberOfPersons {
                get {
                    try {
                        return ((int)(this[this.tableGAExposedHoursGroupView.NumberOfPersonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfPersons\' in table \'GAExposedHoursGroupView\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.NumberOfPersonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExposedHoursPerWorkDay {
                get {
                    try {
                        return ((int)(this[this.tableGAExposedHoursGroupView.ExposedHoursPerWorkDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExposedHoursPerWorkDay\' in table \'GAExposedHoursGroupView\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.ExposedHoursPerWorkDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExposedDaysPerWeek {
                get {
                    try {
                        return ((int)(this[this.tableGAExposedHoursGroupView.ExposedDaysPerWeekColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExposedDaysPerWeek\' in table \'GAExposedHoursGroupView\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.ExposedDaysPerWeekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerReference {
                get {
                    try {
                        return ((string)(this[this.tableGAExposedHoursGroupView.OwnerReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerReference\' in table \'GAExposedHoursGroupView\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.OwnerReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PlaceOfEmbarkment {
                get {
                    try {
                        return ((string)(this[this.tableGAExposedHoursGroupView.PlaceOfEmbarkmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlaceOfEmbarkment\' in table \'GAExposedHoursGroupView\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.PlaceOfEmbarkmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IdentificationIDNumber {
                get {
                    try {
                        return ((string)(this[this.tableGAExposedHoursGroupView.IdentificationIDNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdentificationIDNumber\' in table \'GAExposedHoursGroupView\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.IdentificationIDNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoomId {
                get {
                    try {
                        return ((string)(this[this.tableGAExposedHoursGroupView.RoomIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoomId\' in table \'GAExposedHoursGroupView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.RoomIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BunksInRoom {
                get {
                    try {
                        return ((int)(this[this.tableGAExposedHoursGroupView.BunksInRoomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BunksInRoom\' in table \'GAExposedHoursGroupView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.BunksInRoomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bunk {
                get {
                    try {
                        return ((string)(this[this.tableGAExposedHoursGroupView.BunkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bunk\' in table \'GAExposedHoursGroupView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.BunkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Raft {
                get {
                    try {
                        return ((string)(this[this.tableGAExposedHoursGroupView.RaftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Raft\' in table \'GAExposedHoursGroupView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.RaftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ActionAbandonShip {
                get {
                    try {
                        return ((string)(this[this.tableGAExposedHoursGroupView.ActionAbandonShipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActionAbandonShip\' in table \'GAExposedHoursGroupView\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.ActionAbandonShipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAExposedHoursGroupView.SwitchFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree1\' in table \'GAExposedHoursGroupView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.SwitchFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAExposedHoursGroupView.SwitchFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree2\' in table \'GAExposedHoursGroupView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.SwitchFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAExposedHoursGroupView.SwitchFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchFree3\' in table \'GAExposedHoursGroupView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.SwitchFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAExposedHoursGroupView.DateTimeFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree1\' in table \'GAExposedHoursGroupView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.DateTimeFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAExposedHoursGroupView.DateTimeFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree2\' in table \'GAExposedHoursGroupView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.DateTimeFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAExposedHoursGroupView.DateTimeFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree3\' in table \'GAExposedHoursGroupView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.DateTimeFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAExposedHoursGroupView.TextFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree2\' in table \'GAExposedHoursGroupView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.TextFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAExposedHoursGroupView.TextFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree3\' in table \'GAExposedHoursGroupView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.TextFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAExposedHoursGroupView.nTextFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree1\' in table \'GAExposedHoursGroupView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.nTextFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAExposedHoursGroupView.nTextFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree2\' in table \'GAExposedHoursGroupView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.nTextFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAExposedHoursGroupView.nTextFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree3\' in table \'GAExposedHoursGroupView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAExposedHoursGroupView.nTextFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFromNull() {
                return this.IsNull(this.tableGAExposedHoursGroupView.DateTimeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFromNull() {
                this[this.tableGAExposedHoursGroupView.DateTimeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeToNull() {
                return this.IsNull(this.tableGAExposedHoursGroupView.DateTimeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeToNull() {
                this[this.tableGAExposedHoursGroupView.DateTimeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartmentCategoryListsRowIdNull() {
                return this.IsNull(this.tableGAExposedHoursGroupView.DepartmentCategoryListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartmentCategoryListsRowIdNull() {
                this[this.tableGAExposedHoursGroupView.DepartmentCategoryListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWatchListsRowIdNull() {
                return this.IsNull(this.tableGAExposedHoursGroupView.WatchListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWatchListsRowIdNull() {
                this[this.tableGAExposedHoursGroupView.WatchListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsViewTypeListsRowIdNull() {
                return this.IsNull(this.tableGAExposedHoursGroupView.ViewTypeListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetViewTypeListsRowIdNull() {
                this[this.tableGAExposedHoursGroupView.ViewTypeListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberOfPersonsNull() {
                return this.IsNull(this.tableGAExposedHoursGroupView.NumberOfPersonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberOfPersonsNull() {
                this[this.tableGAExposedHoursGroupView.NumberOfPersonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExposedHoursPerWorkDayNull() {
                return this.IsNull(this.tableGAExposedHoursGroupView.ExposedHoursPerWorkDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExposedHoursPerWorkDayNull() {
                this[this.tableGAExposedHoursGroupView.ExposedHoursPerWorkDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExposedDaysPerWeekNull() {
                return this.IsNull(this.tableGAExposedHoursGroupView.ExposedDaysPerWeekColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExposedDaysPerWeekNull() {
                this[this.tableGAExposedHoursGroupView.ExposedDaysPerWeekColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerReferenceNull() {
                return this.IsNull(this.tableGAExposedHoursGroupView.OwnerReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerReferenceNull() {
                this[this.tableGAExposedHoursGroupView.OwnerReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlaceOfEmbarkmentNull() {
                return this.IsNull(this.tableGAExposedHoursGroupView.PlaceOfEmbarkmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlaceOfEmbarkmentNull() {
                this[this.tableGAExposedHoursGroupView.PlaceOfEmbarkmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdentificationIDNumberNull() {
                return this.IsNull(this.tableGAExposedHoursGroupView.IdentificationIDNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdentificationIDNumberNull() {
                this[this.tableGAExposedHoursGroupView.IdentificationIDNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoomIdNull() {
                return this.IsNull(this.tableGAExposedHoursGroupView.RoomIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoomIdNull() {
                this[this.tableGAExposedHoursGroupView.RoomIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBunksInRoomNull() {
                return this.IsNull(this.tableGAExposedHoursGroupView.BunksInRoomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBunksInRoomNull() {
                this[this.tableGAExposedHoursGroupView.BunksInRoomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBunkNull() {
                return this.IsNull(this.tableGAExposedHoursGroupView.BunkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBunkNull() {
                this[this.tableGAExposedHoursGroupView.BunkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRaftNull() {
                return this.IsNull(this.tableGAExposedHoursGroupView.RaftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRaftNull() {
                this[this.tableGAExposedHoursGroupView.RaftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActionAbandonShipNull() {
                return this.IsNull(this.tableGAExposedHoursGroupView.ActionAbandonShipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActionAbandonShipNull() {
                this[this.tableGAExposedHoursGroupView.ActionAbandonShipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAExposedHoursGroupView.SwitchFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree1Null() {
                this[this.tableGAExposedHoursGroupView.SwitchFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAExposedHoursGroupView.SwitchFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree2Null() {
                this[this.tableGAExposedHoursGroupView.SwitchFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAExposedHoursGroupView.SwitchFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree3Null() {
                this[this.tableGAExposedHoursGroupView.SwitchFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAExposedHoursGroupView.DateTimeFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree1Null() {
                this[this.tableGAExposedHoursGroupView.DateTimeFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAExposedHoursGroupView.DateTimeFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree2Null() {
                this[this.tableGAExposedHoursGroupView.DateTimeFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAExposedHoursGroupView.DateTimeFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree3Null() {
                this[this.tableGAExposedHoursGroupView.DateTimeFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAExposedHoursGroupView.TextFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree2Null() {
                this[this.tableGAExposedHoursGroupView.TextFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAExposedHoursGroupView.TextFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree3Null() {
                this[this.tableGAExposedHoursGroupView.TextFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree1Null() {
                return this.IsNull(this.tableGAExposedHoursGroupView.nTextFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree1Null() {
                this[this.tableGAExposedHoursGroupView.nTextFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree2Null() {
                return this.IsNull(this.tableGAExposedHoursGroupView.nTextFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree2Null() {
                this[this.tableGAExposedHoursGroupView.nTextFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree3Null() {
                return this.IsNull(this.tableGAExposedHoursGroupView.nTextFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree3Null() {
                this[this.tableGAExposedHoursGroupView.nTextFree3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GAExposedHoursGroupViewRowChangeEvent : global::System.EventArgs {
            
            private GAExposedHoursGroupViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAExposedHoursGroupViewRowChangeEvent(GAExposedHoursGroupViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAExposedHoursGroupViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591