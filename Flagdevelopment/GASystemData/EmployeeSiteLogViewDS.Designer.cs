//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("EmployeeSiteLogViewDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EmployeeSiteLogViewDS : global::System.Data.DataSet {
        
        private GAEmployeeSiteLogViewDataTable tableGAEmployeeSiteLogView;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmployeeSiteLogViewDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected EmployeeSiteLogViewDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GAEmployeeSiteLogView"] != null)) {
                    base.Tables.Add(new GAEmployeeSiteLogViewDataTable(ds.Tables["GAEmployeeSiteLogView"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAEmployeeSiteLogViewDataTable GAEmployeeSiteLogView {
            get {
                return this.tableGAEmployeeSiteLogView;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            EmployeeSiteLogViewDS cln = ((EmployeeSiteLogViewDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GAEmployeeSiteLogView"] != null)) {
                    base.Tables.Add(new GAEmployeeSiteLogViewDataTable(ds.Tables["GAEmployeeSiteLogView"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGAEmployeeSiteLogView = ((GAEmployeeSiteLogViewDataTable)(base.Tables["GAEmployeeSiteLogView"]));
            if ((initTable == true)) {
                if ((this.tableGAEmployeeSiteLogView != null)) {
                    this.tableGAEmployeeSiteLogView.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "EmployeeSiteLogViewDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EmployeeSiteLogViewDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGAEmployeeSiteLogView = new GAEmployeeSiteLogViewDataTable();
            base.Tables.Add(this.tableGAEmployeeSiteLogView);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGAEmployeeSiteLogView() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            EmployeeSiteLogViewDS ds = new EmployeeSiteLogViewDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GAEmployeeSiteLogViewRowChangeEventHandler(object sender, GAEmployeeSiteLogViewRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GAEmployeeSiteLogViewDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEmployeeSiteLogViewRowId;
            
            private global::System.Data.DataColumn columnContractNumber;
            
            private global::System.Data.DataColumn columnPersonnelRowId;
            
            private global::System.Data.DataColumn columnFromDate;
            
            private global::System.Data.DataColumn columnToDate;
            
            private global::System.Data.DataColumn columnDepartmentListsRowId;
            
            private global::System.Data.DataColumn columnCompanyRowId;
            
            private global::System.Data.DataColumn columnRotationListsRowId;
            
            private global::System.Data.DataColumn columnRoleListsRowId;
            
            private global::System.Data.DataColumn columnOwnerClass;
            
            private global::System.Data.DataColumn columnOwnerClassRowId;
            
            private global::System.Data.DataColumn columnPath;
            
            private global::System.Data.DataColumn columnDNNUserId;
            
            private global::System.Data.DataColumn columnIsCompanyUser;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnDateTime;
            
            private global::System.Data.DataColumn columnUrl;
            
            private global::System.Data.DataColumn columnUserAgent;
            
            private global::System.Data.DataColumn columnUserHostAddress;
            
            private global::System.Data.DataColumn columnUserHostName;
            
            private global::System.Data.DataColumn columnTabId;
            
            private global::System.Data.DataColumn columnAffiliateId;
            
            private global::System.Data.DataColumn columnGivenName;
            
            private global::System.Data.DataColumn columnFamilyName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnDateOfBirth;
            
            private global::System.Data.DataColumn columnNationalOrSecurityNumber;
            
            private global::System.Data.DataColumn columnMaritalStatusListsRowId;
            
            private global::System.Data.DataColumn columnNationalityListsRowId;
            
            private global::System.Data.DataColumn columnSexListsRowId;
            
            private global::System.Data.DataColumn columnDepartment;
            
            private global::System.Data.DataColumn columnCompany;
            
            private global::System.Data.DataColumn columnRotation;
            
            private global::System.Data.DataColumn columnRole;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnNationality;
            
            private global::System.Data.DataColumn columnSex;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAEmployeeSiteLogViewDataTable() {
                this.TableName = "GAEmployeeSiteLogView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAEmployeeSiteLogViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GAEmployeeSiteLogViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeSiteLogViewRowIdColumn {
                get {
                    return this.columnEmployeeSiteLogViewRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContractNumberColumn {
                get {
                    return this.columnContractNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonnelRowIdColumn {
                get {
                    return this.columnPersonnelRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromDateColumn {
                get {
                    return this.columnFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToDateColumn {
                get {
                    return this.columnToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartmentListsRowIdColumn {
                get {
                    return this.columnDepartmentListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyRowIdColumn {
                get {
                    return this.columnCompanyRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RotationListsRowIdColumn {
                get {
                    return this.columnRotationListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoleListsRowIdColumn {
                get {
                    return this.columnRoleListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerClassColumn {
                get {
                    return this.columnOwnerClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerClassRowIdColumn {
                get {
                    return this.columnOwnerClassRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PathColumn {
                get {
                    return this.columnPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DNNUserIdColumn {
                get {
                    return this.columnDNNUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCompanyUserColumn {
                get {
                    return this.columnIsCompanyUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeColumn {
                get {
                    return this.columnDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UrlColumn {
                get {
                    return this.columnUrl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserAgentColumn {
                get {
                    return this.columnUserAgent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserHostAddressColumn {
                get {
                    return this.columnUserHostAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserHostNameColumn {
                get {
                    return this.columnUserHostName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TabIdColumn {
                get {
                    return this.columnTabId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AffiliateIdColumn {
                get {
                    return this.columnAffiliateId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GivenNameColumn {
                get {
                    return this.columnGivenName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyNameColumn {
                get {
                    return this.columnFamilyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateOfBirthColumn {
                get {
                    return this.columnDateOfBirth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NationalOrSecurityNumberColumn {
                get {
                    return this.columnNationalOrSecurityNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritalStatusListsRowIdColumn {
                get {
                    return this.columnMaritalStatusListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NationalityListsRowIdColumn {
                get {
                    return this.columnNationalityListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SexListsRowIdColumn {
                get {
                    return this.columnSexListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartmentColumn {
                get {
                    return this.columnDepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyColumn {
                get {
                    return this.columnCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RotationColumn {
                get {
                    return this.columnRotation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoleColumn {
                get {
                    return this.columnRole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NationalityColumn {
                get {
                    return this.columnNationality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAEmployeeSiteLogViewRow this[int index] {
                get {
                    return ((GAEmployeeSiteLogViewRow)(this.Rows[index]));
                }
            }
            
            public event GAEmployeeSiteLogViewRowChangeEventHandler GAEmployeeSiteLogViewRowChanging;
            
            public event GAEmployeeSiteLogViewRowChangeEventHandler GAEmployeeSiteLogViewRowChanged;
            
            public event GAEmployeeSiteLogViewRowChangeEventHandler GAEmployeeSiteLogViewRowDeleting;
            
            public event GAEmployeeSiteLogViewRowChangeEventHandler GAEmployeeSiteLogViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGAEmployeeSiteLogViewRow(GAEmployeeSiteLogViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAEmployeeSiteLogViewRow AddGAEmployeeSiteLogViewRow(
                        string ContractNumber, 
                        int PersonnelRowId, 
                        System.DateTime FromDate, 
                        System.DateTime ToDate, 
                        int DepartmentListsRowId, 
                        int CompanyRowId, 
                        int RotationListsRowId, 
                        int RoleListsRowId, 
                        string OwnerClass, 
                        int OwnerClassRowId, 
                        string Path, 
                        string DNNUserId, 
                        bool IsCompanyUser, 
                        System.DateTime DateTime, 
                        string Url, 
                        string UserAgent, 
                        string UserHostAddress, 
                        string UserHostName, 
                        int TabId, 
                        int AffiliateId, 
                        string GivenName, 
                        string FamilyName, 
                        string Address, 
                        System.DateTime DateOfBirth, 
                        string NationalOrSecurityNumber, 
                        int MaritalStatusListsRowId, 
                        int NationalityListsRowId, 
                        int SexListsRowId, 
                        string Department, 
                        string Company, 
                        string Rotation, 
                        string Role, 
                        string MaritalStatus, 
                        string Nationality, 
                        string Sex) {
                GAEmployeeSiteLogViewRow rowGAEmployeeSiteLogViewRow = ((GAEmployeeSiteLogViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ContractNumber,
                        PersonnelRowId,
                        FromDate,
                        ToDate,
                        DepartmentListsRowId,
                        CompanyRowId,
                        RotationListsRowId,
                        RoleListsRowId,
                        OwnerClass,
                        OwnerClassRowId,
                        Path,
                        DNNUserId,
                        IsCompanyUser,
                        null,
                        DateTime,
                        Url,
                        UserAgent,
                        UserHostAddress,
                        UserHostName,
                        TabId,
                        AffiliateId,
                        GivenName,
                        FamilyName,
                        Address,
                        DateOfBirth,
                        NationalOrSecurityNumber,
                        MaritalStatusListsRowId,
                        NationalityListsRowId,
                        SexListsRowId,
                        Department,
                        Company,
                        Rotation,
                        Role,
                        MaritalStatus,
                        Nationality,
                        Sex};
                rowGAEmployeeSiteLogViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGAEmployeeSiteLogViewRow);
                return rowGAEmployeeSiteLogViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GAEmployeeSiteLogViewDataTable cln = ((GAEmployeeSiteLogViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GAEmployeeSiteLogViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployeeSiteLogViewRowId = base.Columns["EmployeeSiteLogViewRowId"];
                this.columnContractNumber = base.Columns["ContractNumber"];
                this.columnPersonnelRowId = base.Columns["PersonnelRowId"];
                this.columnFromDate = base.Columns["FromDate"];
                this.columnToDate = base.Columns["ToDate"];
                this.columnDepartmentListsRowId = base.Columns["DepartmentListsRowId"];
                this.columnCompanyRowId = base.Columns["CompanyRowId"];
                this.columnRotationListsRowId = base.Columns["RotationListsRowId"];
                this.columnRoleListsRowId = base.Columns["RoleListsRowId"];
                this.columnOwnerClass = base.Columns["OwnerClass"];
                this.columnOwnerClassRowId = base.Columns["OwnerClassRowId"];
                this.columnPath = base.Columns["Path"];
                this.columnDNNUserId = base.Columns["DNNUserId"];
                this.columnIsCompanyUser = base.Columns["IsCompanyUser"];
                this.columnUserID = base.Columns["UserID"];
                this.columnDateTime = base.Columns["DateTime"];
                this.columnUrl = base.Columns["Url"];
                this.columnUserAgent = base.Columns["UserAgent"];
                this.columnUserHostAddress = base.Columns["UserHostAddress"];
                this.columnUserHostName = base.Columns["UserHostName"];
                this.columnTabId = base.Columns["TabId"];
                this.columnAffiliateId = base.Columns["AffiliateId"];
                this.columnGivenName = base.Columns["GivenName"];
                this.columnFamilyName = base.Columns["FamilyName"];
                this.columnAddress = base.Columns["Address"];
                this.columnDateOfBirth = base.Columns["DateOfBirth"];
                this.columnNationalOrSecurityNumber = base.Columns["NationalOrSecurityNumber"];
                this.columnMaritalStatusListsRowId = base.Columns["MaritalStatusListsRowId"];
                this.columnNationalityListsRowId = base.Columns["NationalityListsRowId"];
                this.columnSexListsRowId = base.Columns["SexListsRowId"];
                this.columnDepartment = base.Columns["Department"];
                this.columnCompany = base.Columns["Company"];
                this.columnRotation = base.Columns["Rotation"];
                this.columnRole = base.Columns["Role"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnNationality = base.Columns["Nationality"];
                this.columnSex = base.Columns["Sex"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployeeSiteLogViewRowId = new global::System.Data.DataColumn("EmployeeSiteLogViewRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeSiteLogViewRowId);
                this.columnContractNumber = new global::System.Data.DataColumn("ContractNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractNumber);
                this.columnPersonnelRowId = new global::System.Data.DataColumn("PersonnelRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonnelRowId);
                this.columnFromDate = new global::System.Data.DataColumn("FromDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDate);
                this.columnToDate = new global::System.Data.DataColumn("ToDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToDate);
                this.columnDepartmentListsRowId = new global::System.Data.DataColumn("DepartmentListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartmentListsRowId);
                this.columnCompanyRowId = new global::System.Data.DataColumn("CompanyRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyRowId);
                this.columnRotationListsRowId = new global::System.Data.DataColumn("RotationListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRotationListsRowId);
                this.columnRoleListsRowId = new global::System.Data.DataColumn("RoleListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoleListsRowId);
                this.columnOwnerClass = new global::System.Data.DataColumn("OwnerClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerClass);
                this.columnOwnerClassRowId = new global::System.Data.DataColumn("OwnerClassRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerClassRowId);
                this.columnPath = new global::System.Data.DataColumn("Path", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPath);
                this.columnDNNUserId = new global::System.Data.DataColumn("DNNUserId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDNNUserId);
                this.columnIsCompanyUser = new global::System.Data.DataColumn("IsCompanyUser", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCompanyUser);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnDateTime = new global::System.Data.DataColumn("DateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime);
                this.columnUrl = new global::System.Data.DataColumn("Url", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUrl);
                this.columnUserAgent = new global::System.Data.DataColumn("UserAgent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserAgent);
                this.columnUserHostAddress = new global::System.Data.DataColumn("UserHostAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserHostAddress);
                this.columnUserHostName = new global::System.Data.DataColumn("UserHostName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserHostName);
                this.columnTabId = new global::System.Data.DataColumn("TabId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabId);
                this.columnAffiliateId = new global::System.Data.DataColumn("AffiliateId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAffiliateId);
                this.columnGivenName = new global::System.Data.DataColumn("GivenName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGivenName);
                this.columnFamilyName = new global::System.Data.DataColumn("FamilyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnDateOfBirth = new global::System.Data.DataColumn("DateOfBirth", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfBirth);
                this.columnNationalOrSecurityNumber = new global::System.Data.DataColumn("NationalOrSecurityNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationalOrSecurityNumber);
                this.columnMaritalStatusListsRowId = new global::System.Data.DataColumn("MaritalStatusListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatusListsRowId);
                this.columnNationalityListsRowId = new global::System.Data.DataColumn("NationalityListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationalityListsRowId);
                this.columnSexListsRowId = new global::System.Data.DataColumn("SexListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSexListsRowId);
                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment);
                this.columnCompany = new global::System.Data.DataColumn("Company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnRotation = new global::System.Data.DataColumn("Rotation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRotation);
                this.columnRole = new global::System.Data.DataColumn("Role", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRole);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnNationality = new global::System.Data.DataColumn("Nationality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationality);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnEmployeeSiteLogViewRowId.AutoIncrement = true;
                this.columnEmployeeSiteLogViewRowId.AllowDBNull = false;
                this.columnEmployeeSiteLogViewRowId.ReadOnly = true;
                this.columnContractNumber.MaxLength = 50;
                this.columnOwnerClass.MaxLength = 50;
                this.columnPath.MaxLength = 4000;
                this.columnDNNUserId.MaxLength = 500;
                this.columnUserID.AutoIncrement = true;
                this.columnUserID.AllowDBNull = false;
                this.columnUserID.ReadOnly = true;
                this.columnDateTime.AllowDBNull = false;
                this.columnUrl.MaxLength = 255;
                this.columnUserAgent.MaxLength = 255;
                this.columnUserHostAddress.MaxLength = 255;
                this.columnUserHostName.MaxLength = 255;
                this.columnGivenName.MaxLength = 50;
                this.columnFamilyName.MaxLength = 50;
                this.columnAddress.MaxLength = 1073741823;
                this.columnNationalOrSecurityNumber.MaxLength = 50;
                this.columnDepartment.MaxLength = 400;
                this.columnCompany.MaxLength = 100;
                this.columnRotation.MaxLength = 400;
                this.columnRole.MaxLength = 400;
                this.columnMaritalStatus.MaxLength = 400;
                this.columnNationality.MaxLength = 400;
                this.columnSex.MaxLength = 400;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAEmployeeSiteLogViewRow NewGAEmployeeSiteLogViewRow() {
                return ((GAEmployeeSiteLogViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GAEmployeeSiteLogViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GAEmployeeSiteLogViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAEmployeeSiteLogViewRowChanged != null)) {
                    this.GAEmployeeSiteLogViewRowChanged(this, new GAEmployeeSiteLogViewRowChangeEvent(((GAEmployeeSiteLogViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAEmployeeSiteLogViewRowChanging != null)) {
                    this.GAEmployeeSiteLogViewRowChanging(this, new GAEmployeeSiteLogViewRowChangeEvent(((GAEmployeeSiteLogViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAEmployeeSiteLogViewRowDeleted != null)) {
                    this.GAEmployeeSiteLogViewRowDeleted(this, new GAEmployeeSiteLogViewRowChangeEvent(((GAEmployeeSiteLogViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAEmployeeSiteLogViewRowDeleting != null)) {
                    this.GAEmployeeSiteLogViewRowDeleting(this, new GAEmployeeSiteLogViewRowChangeEvent(((GAEmployeeSiteLogViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGAEmployeeSiteLogViewRow(GAEmployeeSiteLogViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EmployeeSiteLogViewDS ds = new EmployeeSiteLogViewDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GAEmployeeSiteLogViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GAEmployeeSiteLogViewRow : global::System.Data.DataRow {
            
            private GAEmployeeSiteLogViewDataTable tableGAEmployeeSiteLogView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAEmployeeSiteLogViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAEmployeeSiteLogView = ((GAEmployeeSiteLogViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeSiteLogViewRowId {
                get {
                    return ((int)(this[this.tableGAEmployeeSiteLogView.EmployeeSiteLogViewRowIdColumn]));
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.EmployeeSiteLogViewRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContractNumber {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.ContractNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractNumber\' in table \'GAEmployeeSiteLogView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.ContractNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PersonnelRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.PersonnelRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PersonnelRowId\' in table \'GAEmployeeSiteLogView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.PersonnelRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FromDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAEmployeeSiteLogView.FromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromDate\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.FromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ToDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAEmployeeSiteLogView.ToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToDate\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.ToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DepartmentListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.DepartmentListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepartmentListsRowId\' in table \'GAEmployeeSiteLogView\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.DepartmentListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompanyRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.CompanyRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyRowId\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.CompanyRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RotationListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.RotationListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RotationListsRowId\' in table \'GAEmployeeSiteLogView\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.RotationListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RoleListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.RoleListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoleListsRowId\' in table \'GAEmployeeSiteLogView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.RoleListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerClass {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.OwnerClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerClass\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.OwnerClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OwnerClassRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.OwnerClassRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerClassRowId\' in table \'GAEmployeeSiteLogView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.OwnerClassRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Path {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.PathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Path\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.PathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DNNUserId {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.DNNUserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DNNUserId\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.DNNUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyUser {
                get {
                    try {
                        return ((bool)(this[this.tableGAEmployeeSiteLogView.IsCompanyUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCompanyUser\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.IsCompanyUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    return ((int)(this[this.tableGAEmployeeSiteLogView.UserIDColumn]));
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableGAEmployeeSiteLogView.DateTimeColumn]));
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.DateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Url {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.UrlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Url\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.UrlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserAgent {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.UserAgentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserAgent\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.UserAgentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserHostAddress {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.UserHostAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserHostAddress\' in table \'GAEmployeeSiteLogView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.UserHostAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserHostName {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.UserHostNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserHostName\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.UserHostNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TabId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.TabIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TabId\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.TabIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AffiliateId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.AffiliateIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AffiliateId\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.AffiliateIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GivenName {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.GivenNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GivenName\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.GivenNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FamilyName {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.FamilyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FamilyName\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.FamilyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfBirth {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAEmployeeSiteLogView.DateOfBirthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfBirth\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.DateOfBirthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NationalOrSecurityNumber {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.NationalOrSecurityNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NationalOrSecurityNumber\' in table \'GAEmployeeSiteLogView\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.NationalOrSecurityNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaritalStatusListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.MaritalStatusListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritalStatusListsRowId\' in table \'GAEmployeeSiteLogView\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.MaritalStatusListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NationalityListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.NationalityListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NationalityListsRowId\' in table \'GAEmployeeSiteLogView\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.NationalityListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SexListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAEmployeeSiteLogView.SexListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SexListsRowId\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.SexListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.DepartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Department\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.DepartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.CompanyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.CompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rotation {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.RotationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rotation\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.RotationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Role {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.RoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Role\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.RoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaritalStatus {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.MaritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritalStatus\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nationality {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.NationalityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nationality\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.NationalityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sex {
                get {
                    try {
                        return ((string)(this[this.tableGAEmployeeSiteLogView.SexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sex\' in table \'GAEmployeeSiteLogView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAEmployeeSiteLogView.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContractNumberNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.ContractNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContractNumberNull() {
                this[this.tableGAEmployeeSiteLogView.ContractNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonnelRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.PersonnelRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonnelRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.PersonnelRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromDateNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.FromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromDateNull() {
                this[this.tableGAEmployeeSiteLogView.FromDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToDateNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.ToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToDateNull() {
                this[this.tableGAEmployeeSiteLogView.ToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartmentListsRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.DepartmentListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartmentListsRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.DepartmentListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.CompanyRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.CompanyRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRotationListsRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.RotationListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRotationListsRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.RotationListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoleListsRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.RoleListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoleListsRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.RoleListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerClassNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.OwnerClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerClassNull() {
                this[this.tableGAEmployeeSiteLogView.OwnerClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerClassRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.OwnerClassRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerClassRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.OwnerClassRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPathNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.PathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPathNull() {
                this[this.tableGAEmployeeSiteLogView.PathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDNNUserIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.DNNUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDNNUserIdNull() {
                this[this.tableGAEmployeeSiteLogView.DNNUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCompanyUserNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.IsCompanyUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCompanyUserNull() {
                this[this.tableGAEmployeeSiteLogView.IsCompanyUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUrlNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.UrlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUrlNull() {
                this[this.tableGAEmployeeSiteLogView.UrlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserAgentNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.UserAgentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserAgentNull() {
                this[this.tableGAEmployeeSiteLogView.UserAgentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserHostAddressNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.UserHostAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserHostAddressNull() {
                this[this.tableGAEmployeeSiteLogView.UserHostAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserHostNameNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.UserHostNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserHostNameNull() {
                this[this.tableGAEmployeeSiteLogView.UserHostNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTabIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.TabIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTabIdNull() {
                this[this.tableGAEmployeeSiteLogView.TabIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAffiliateIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.AffiliateIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAffiliateIdNull() {
                this[this.tableGAEmployeeSiteLogView.AffiliateIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGivenNameNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.GivenNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGivenNameNull() {
                this[this.tableGAEmployeeSiteLogView.GivenNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFamilyNameNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.FamilyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFamilyNameNull() {
                this[this.tableGAEmployeeSiteLogView.FamilyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableGAEmployeeSiteLogView.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfBirthNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.DateOfBirthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfBirthNull() {
                this[this.tableGAEmployeeSiteLogView.DateOfBirthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNationalOrSecurityNumberNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.NationalOrSecurityNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNationalOrSecurityNumberNull() {
                this[this.tableGAEmployeeSiteLogView.NationalOrSecurityNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritalStatusListsRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.MaritalStatusListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritalStatusListsRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.MaritalStatusListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNationalityListsRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.NationalityListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNationalityListsRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.NationalityListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSexListsRowIdNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.SexListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSexListsRowIdNull() {
                this[this.tableGAEmployeeSiteLogView.SexListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartmentNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.DepartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartmentNull() {
                this[this.tableGAEmployeeSiteLogView.DepartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.CompanyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNull() {
                this[this.tableGAEmployeeSiteLogView.CompanyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRotationNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.RotationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRotationNull() {
                this[this.tableGAEmployeeSiteLogView.RotationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoleNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.RoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoleNull() {
                this[this.tableGAEmployeeSiteLogView.RoleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritalStatusNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.MaritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritalStatusNull() {
                this[this.tableGAEmployeeSiteLogView.MaritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNationalityNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.NationalityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNationalityNull() {
                this[this.tableGAEmployeeSiteLogView.NationalityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSexNull() {
                return this.IsNull(this.tableGAEmployeeSiteLogView.SexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSexNull() {
                this[this.tableGAEmployeeSiteLogView.SexColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GAEmployeeSiteLogViewRowChangeEvent : global::System.EventArgs {
            
            private GAEmployeeSiteLogViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAEmployeeSiteLogViewRowChangeEvent(GAEmployeeSiteLogViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAEmployeeSiteLogViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591