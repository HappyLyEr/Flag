//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MedicalTreatmentLogDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MedicalTreatmentLogDS : global::System.Data.DataSet {
        
        private GAMedicalTreatmentLogDataTable tableGAMedicalTreatmentLog;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MedicalTreatmentLogDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected MedicalTreatmentLogDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GAMedicalTreatmentLog"] != null)) {
                    base.Tables.Add(new GAMedicalTreatmentLogDataTable(ds.Tables["GAMedicalTreatmentLog"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAMedicalTreatmentLogDataTable GAMedicalTreatmentLog {
            get {
                return this.tableGAMedicalTreatmentLog;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            MedicalTreatmentLogDS cln = ((MedicalTreatmentLogDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GAMedicalTreatmentLog"] != null)) {
                    base.Tables.Add(new GAMedicalTreatmentLogDataTable(ds.Tables["GAMedicalTreatmentLog"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGAMedicalTreatmentLog = ((GAMedicalTreatmentLogDataTable)(base.Tables["GAMedicalTreatmentLog"]));
            if ((initTable == true)) {
                if ((this.tableGAMedicalTreatmentLog != null)) {
                    this.tableGAMedicalTreatmentLog.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "MedicalTreatmentLogDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MedicalTreatmentLogDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGAMedicalTreatmentLog = new GAMedicalTreatmentLogDataTable();
            base.Tables.Add(this.tableGAMedicalTreatmentLog);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGAMedicalTreatmentLog() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MedicalTreatmentLogDS ds = new MedicalTreatmentLogDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GAMedicalTreatmentLogRowChangeEventHandler(object sender, GAMedicalTreatmentLogRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GAMedicalTreatmentLogDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMedicalTreatmentLogRowId;
            
            private global::System.Data.DataColumn columnMedicalTreatmentLogReferenceId;
            
            private global::System.Data.DataColumn columnRMIContacted;
            
            private global::System.Data.DataColumn columnTestedPersonnelRowId;
            
            private global::System.Data.DataColumn columnTestPersonRowId;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnSymptoms;
            
            private global::System.Data.DataColumn columnTestingKitListsRowId;
            
            private global::System.Data.DataColumn columnIsFirstAidCase;
            
            private global::System.Data.DataColumn columnDateOfBirth;
            
            private global::System.Data.DataColumn columnTreatment;
            
            private global::System.Data.DataColumn columnReporter;
            
            private global::System.Data.DataColumn columnTaskStatus;
            
            private global::System.Data.DataColumn columnIsRestrictedWorkDuties;
            
            private global::System.Data.DataColumn columnAgeListsRowId;
            
            private global::System.Data.DataColumn columnOccupationListsRowId;
            
            private global::System.Data.DataColumn columnCategoryListsRowId;
            
            private global::System.Data.DataColumn columnAttendingDoctorRowId;
            
            private global::System.Data.DataColumn columnAttendingHSEQMedicRowId;
            
            private global::System.Data.DataColumn columnNumberOfDaysLost;
            
            private global::System.Data.DataColumn columnReferenceIdPrefix;
            
            private global::System.Data.DataColumn columnEyeWitness;
            
            private global::System.Data.DataColumn columnMasterRowId;
            
            private global::System.Data.DataColumn columnDateCreated;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnDateChanged;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnDateDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnIsMedicalTreatmentCase;
            
            private global::System.Data.DataColumn columnIsRestrictedWorkdayCase;
            
            private global::System.Data.DataColumn columnIsWorkRelated;
            
            private global::System.Data.DataColumn columnDateTimeFree1;
            
            private global::System.Data.DataColumn columnDateTimeFree2;
            
            private global::System.Data.DataColumn columnDateTimeFree3;
            
            private global::System.Data.DataColumn columnurl;
            
            private global::System.Data.DataColumn columnMimetype;
            
            private global::System.Data.DataColumn columnTextFree3;
            
            private global::System.Data.DataColumn columnIsDrugAndAlcoholTestingConducted;
            
            private global::System.Data.DataColumn columnIsUnfitForWork;
            
            private global::System.Data.DataColumn columnViewTypeListsRowId;
            
            private global::System.Data.DataColumn columnContributionFactorToTheIncident;
            
            private global::System.Data.DataColumn columnSequenceOfTheIncident;
            
            private global::System.Data.DataColumn columnnTextFree1;
            
            private global::System.Data.DataColumn columnnTextFree2;
            
            private global::System.Data.DataColumn columnnTextFree3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAMedicalTreatmentLogDataTable() {
                this.TableName = "GAMedicalTreatmentLog";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAMedicalTreatmentLogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GAMedicalTreatmentLogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MedicalTreatmentLogRowIdColumn {
                get {
                    return this.columnMedicalTreatmentLogRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MedicalTreatmentLogReferenceIdColumn {
                get {
                    return this.columnMedicalTreatmentLogReferenceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMIContactedColumn {
                get {
                    return this.columnRMIContacted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TestedPersonnelRowIdColumn {
                get {
                    return this.columnTestedPersonnelRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TestPersonRowIdColumn {
                get {
                    return this.columnTestPersonRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SymptomsColumn {
                get {
                    return this.columnSymptoms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TestingKitListsRowIdColumn {
                get {
                    return this.columnTestingKitListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsFirstAidCaseColumn {
                get {
                    return this.columnIsFirstAidCase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateOfBirthColumn {
                get {
                    return this.columnDateOfBirth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TreatmentColumn {
                get {
                    return this.columnTreatment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReporterColumn {
                get {
                    return this.columnReporter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaskStatusColumn {
                get {
                    return this.columnTaskStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsRestrictedWorkDutiesColumn {
                get {
                    return this.columnIsRestrictedWorkDuties;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeListsRowIdColumn {
                get {
                    return this.columnAgeListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OccupationListsRowIdColumn {
                get {
                    return this.columnOccupationListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryListsRowIdColumn {
                get {
                    return this.columnCategoryListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttendingDoctorRowIdColumn {
                get {
                    return this.columnAttendingDoctorRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttendingHSEQMedicRowIdColumn {
                get {
                    return this.columnAttendingHSEQMedicRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberOfDaysLostColumn {
                get {
                    return this.columnNumberOfDaysLost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceIdPrefixColumn {
                get {
                    return this.columnReferenceIdPrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EyeWitnessColumn {
                get {
                    return this.columnEyeWitness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsMedicalTreatmentCaseColumn {
                get {
                    return this.columnIsMedicalTreatmentCase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsRestrictedWorkdayCaseColumn {
                get {
                    return this.columnIsRestrictedWorkdayCase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsWorkRelatedColumn {
                get {
                    return this.columnIsWorkRelated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urlColumn {
                get {
                    return this.columnurl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MimetypeColumn {
                get {
                    return this.columnMimetype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDrugAndAlcoholTestingConductedColumn {
                get {
                    return this.columnIsDrugAndAlcoholTestingConducted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsUnfitForWorkColumn {
                get {
                    return this.columnIsUnfitForWork;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ViewTypeListsRowIdColumn {
                get {
                    return this.columnViewTypeListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContributionFactorToTheIncidentColumn {
                get {
                    return this.columnContributionFactorToTheIncident;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SequenceOfTheIncidentColumn {
                get {
                    return this.columnSequenceOfTheIncident;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree1Column {
                get {
                    return this.columnnTextFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree2Column {
                get {
                    return this.columnnTextFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree3Column {
                get {
                    return this.columnnTextFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAMedicalTreatmentLogRow this[int index] {
                get {
                    return ((GAMedicalTreatmentLogRow)(this.Rows[index]));
                }
            }
            
            public event GAMedicalTreatmentLogRowChangeEventHandler GAMedicalTreatmentLogRowChanging;
            
            public event GAMedicalTreatmentLogRowChangeEventHandler GAMedicalTreatmentLogRowChanged;
            
            public event GAMedicalTreatmentLogRowChangeEventHandler GAMedicalTreatmentLogRowDeleting;
            
            public event GAMedicalTreatmentLogRowChangeEventHandler GAMedicalTreatmentLogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGAMedicalTreatmentLogRow(GAMedicalTreatmentLogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAMedicalTreatmentLogRow AddGAMedicalTreatmentLogRow(
                        string MedicalTreatmentLogReferenceId, 
                        string RMIContacted, 
                        string TestedPersonnelRowId, 
                        string TestPersonRowId, 
                        System.DateTime Date, 
                        string Symptoms, 
                        string TestingKitListsRowId, 
                        bool IsFirstAidCase, 
                        System.DateTime DateOfBirth, 
                        string Treatment, 
                        int Reporter, 
                        string TaskStatus, 
                        int IsRestrictedWorkDuties, 
                        int AgeListsRowId, 
                        int OccupationListsRowId, 
                        int CategoryListsRowId, 
                        int AttendingDoctorRowId, 
                        int AttendingHSEQMedicRowId, 
                        int NumberOfDaysLost, 
                        string ReferenceIdPrefix, 
                        int EyeWitness, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool IsMedicalTreatmentCase, 
                        bool IsRestrictedWorkdayCase, 
                        bool IsWorkRelated, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string url, 
                        string Mimetype, 
                        string TextFree3, 
                        int IsDrugAndAlcoholTestingConducted, 
                        int IsUnfitForWork, 
                        int ViewTypeListsRowId, 
                        string ContributionFactorToTheIncident, 
                        string SequenceOfTheIncident, 
                        string nTextFree1, 
                        string nTextFree2, 
                        string nTextFree3) {
                GAMedicalTreatmentLogRow rowGAMedicalTreatmentLogRow = ((GAMedicalTreatmentLogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MedicalTreatmentLogReferenceId,
                        RMIContacted,
                        TestedPersonnelRowId,
                        TestPersonRowId,
                        Date,
                        Symptoms,
                        TestingKitListsRowId,
                        IsFirstAidCase,
                        DateOfBirth,
                        Treatment,
                        Reporter,
                        TaskStatus,
                        IsRestrictedWorkDuties,
                        AgeListsRowId,
                        OccupationListsRowId,
                        CategoryListsRowId,
                        AttendingDoctorRowId,
                        AttendingHSEQMedicRowId,
                        NumberOfDaysLost,
                        ReferenceIdPrefix,
                        EyeWitness,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        IsMedicalTreatmentCase,
                        IsRestrictedWorkdayCase,
                        IsWorkRelated,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        url,
                        Mimetype,
                        TextFree3,
                        IsDrugAndAlcoholTestingConducted,
                        IsUnfitForWork,
                        ViewTypeListsRowId,
                        ContributionFactorToTheIncident,
                        SequenceOfTheIncident,
                        nTextFree1,
                        nTextFree2,
                        nTextFree3};
                rowGAMedicalTreatmentLogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGAMedicalTreatmentLogRow);
                return rowGAMedicalTreatmentLogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAMedicalTreatmentLogRow FindByMedicalTreatmentLogRowId(int MedicalTreatmentLogRowId) {
                return ((GAMedicalTreatmentLogRow)(this.Rows.Find(new object[] {
                            MedicalTreatmentLogRowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GAMedicalTreatmentLogDataTable cln = ((GAMedicalTreatmentLogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GAMedicalTreatmentLogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMedicalTreatmentLogRowId = base.Columns["MedicalTreatmentLogRowId"];
                this.columnMedicalTreatmentLogReferenceId = base.Columns["MedicalTreatmentLogReferenceId"];
                this.columnRMIContacted = base.Columns["RMIContacted"];
                this.columnTestedPersonnelRowId = base.Columns["TestedPersonnelRowId"];
                this.columnTestPersonRowId = base.Columns["TestPersonRowId"];
                this.columnDate = base.Columns["Date"];
                this.columnSymptoms = base.Columns["Symptoms"];
                this.columnTestingKitListsRowId = base.Columns["TestingKitListsRowId"];
                this.columnIsFirstAidCase = base.Columns["IsFirstAidCase"];
                this.columnDateOfBirth = base.Columns["DateOfBirth"];
                this.columnTreatment = base.Columns["Treatment"];
                this.columnReporter = base.Columns["Reporter"];
                this.columnTaskStatus = base.Columns["TaskStatus"];
                this.columnIsRestrictedWorkDuties = base.Columns["IsRestrictedWorkDuties"];
                this.columnAgeListsRowId = base.Columns["AgeListsRowId"];
                this.columnOccupationListsRowId = base.Columns["OccupationListsRowId"];
                this.columnCategoryListsRowId = base.Columns["CategoryListsRowId"];
                this.columnAttendingDoctorRowId = base.Columns["AttendingDoctorRowId"];
                this.columnAttendingHSEQMedicRowId = base.Columns["AttendingHSEQMedicRowId"];
                this.columnNumberOfDaysLost = base.Columns["NumberOfDaysLost"];
                this.columnReferenceIdPrefix = base.Columns["ReferenceIdPrefix"];
                this.columnEyeWitness = base.Columns["EyeWitness"];
                this.columnMasterRowId = base.Columns["MasterRowId"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnDateChanged = base.Columns["DateChanged"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnDateDeleted = base.Columns["DateDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnIsMedicalTreatmentCase = base.Columns["IsMedicalTreatmentCase"];
                this.columnIsRestrictedWorkdayCase = base.Columns["IsRestrictedWorkdayCase"];
                this.columnIsWorkRelated = base.Columns["IsWorkRelated"];
                this.columnDateTimeFree1 = base.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = base.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = base.Columns["DateTimeFree3"];
                this.columnurl = base.Columns["url"];
                this.columnMimetype = base.Columns["Mimetype"];
                this.columnTextFree3 = base.Columns["TextFree3"];
                this.columnIsDrugAndAlcoholTestingConducted = base.Columns["IsDrugAndAlcoholTestingConducted"];
                this.columnIsUnfitForWork = base.Columns["IsUnfitForWork"];
                this.columnViewTypeListsRowId = base.Columns["ViewTypeListsRowId"];
                this.columnContributionFactorToTheIncident = base.Columns["ContributionFactorToTheIncident"];
                this.columnSequenceOfTheIncident = base.Columns["SequenceOfTheIncident"];
                this.columnnTextFree1 = base.Columns["nTextFree1"];
                this.columnnTextFree2 = base.Columns["nTextFree2"];
                this.columnnTextFree3 = base.Columns["nTextFree3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMedicalTreatmentLogRowId = new global::System.Data.DataColumn("MedicalTreatmentLogRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalTreatmentLogRowId);
                this.columnMedicalTreatmentLogReferenceId = new global::System.Data.DataColumn("MedicalTreatmentLogReferenceId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalTreatmentLogReferenceId);
                this.columnRMIContacted = new global::System.Data.DataColumn("RMIContacted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMIContacted);
                this.columnTestedPersonnelRowId = new global::System.Data.DataColumn("TestedPersonnelRowId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestedPersonnelRowId);
                this.columnTestPersonRowId = new global::System.Data.DataColumn("TestPersonRowId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestPersonRowId);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnSymptoms = new global::System.Data.DataColumn("Symptoms", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSymptoms);
                this.columnTestingKitListsRowId = new global::System.Data.DataColumn("TestingKitListsRowId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestingKitListsRowId);
                this.columnIsFirstAidCase = new global::System.Data.DataColumn("IsFirstAidCase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsFirstAidCase);
                this.columnDateOfBirth = new global::System.Data.DataColumn("DateOfBirth", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfBirth);
                this.columnTreatment = new global::System.Data.DataColumn("Treatment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTreatment);
                this.columnReporter = new global::System.Data.DataColumn("Reporter", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReporter);
                this.columnTaskStatus = new global::System.Data.DataColumn("TaskStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaskStatus);
                this.columnIsRestrictedWorkDuties = new global::System.Data.DataColumn("IsRestrictedWorkDuties", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRestrictedWorkDuties);
                this.columnAgeListsRowId = new global::System.Data.DataColumn("AgeListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeListsRowId);
                this.columnOccupationListsRowId = new global::System.Data.DataColumn("OccupationListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOccupationListsRowId);
                this.columnCategoryListsRowId = new global::System.Data.DataColumn("CategoryListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryListsRowId);
                this.columnAttendingDoctorRowId = new global::System.Data.DataColumn("AttendingDoctorRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendingDoctorRowId);
                this.columnAttendingHSEQMedicRowId = new global::System.Data.DataColumn("AttendingHSEQMedicRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendingHSEQMedicRowId);
                this.columnNumberOfDaysLost = new global::System.Data.DataColumn("NumberOfDaysLost", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfDaysLost);
                this.columnReferenceIdPrefix = new global::System.Data.DataColumn("ReferenceIdPrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceIdPrefix);
                this.columnEyeWitness = new global::System.Data.DataColumn("EyeWitness", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEyeWitness);
                this.columnMasterRowId = new global::System.Data.DataColumn("MasterRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new global::System.Data.DataColumn("DateCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new global::System.Data.DataColumn("DateChanged", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new global::System.Data.DataColumn("DateDeleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnIsMedicalTreatmentCase = new global::System.Data.DataColumn("IsMedicalTreatmentCase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsMedicalTreatmentCase);
                this.columnIsRestrictedWorkdayCase = new global::System.Data.DataColumn("IsRestrictedWorkdayCase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRestrictedWorkdayCase);
                this.columnIsWorkRelated = new global::System.Data.DataColumn("IsWorkRelated", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsWorkRelated);
                this.columnDateTimeFree1 = new global::System.Data.DataColumn("DateTimeFree1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new global::System.Data.DataColumn("DateTimeFree2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new global::System.Data.DataColumn("DateTimeFree3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree3);
                this.columnurl = new global::System.Data.DataColumn("url", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurl);
                this.columnMimetype = new global::System.Data.DataColumn("Mimetype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMimetype);
                this.columnTextFree3 = new global::System.Data.DataColumn("TextFree3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree3);
                this.columnIsDrugAndAlcoholTestingConducted = new global::System.Data.DataColumn("IsDrugAndAlcoholTestingConducted", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDrugAndAlcoholTestingConducted);
                this.columnIsUnfitForWork = new global::System.Data.DataColumn("IsUnfitForWork", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsUnfitForWork);
                this.columnViewTypeListsRowId = new global::System.Data.DataColumn("ViewTypeListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViewTypeListsRowId);
                this.columnContributionFactorToTheIncident = new global::System.Data.DataColumn("ContributionFactorToTheIncident", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContributionFactorToTheIncident);
                this.columnSequenceOfTheIncident = new global::System.Data.DataColumn("SequenceOfTheIncident", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSequenceOfTheIncident);
                this.columnnTextFree1 = new global::System.Data.DataColumn("nTextFree1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree1);
                this.columnnTextFree2 = new global::System.Data.DataColumn("nTextFree2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree2);
                this.columnnTextFree3 = new global::System.Data.DataColumn("nTextFree3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree3);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMedicalTreatmentLogRowId}, true));
                this.columnMedicalTreatmentLogRowId.AutoIncrement = true;
                this.columnMedicalTreatmentLogRowId.AllowDBNull = false;
                this.columnMedicalTreatmentLogRowId.ReadOnly = true;
                this.columnMedicalTreatmentLogRowId.Unique = true;
                this.columnMedicalTreatmentLogReferenceId.MaxLength = 50;
                this.columnRMIContacted.MaxLength = 200;
                this.columnTestedPersonnelRowId.MaxLength = 100;
                this.columnTestPersonRowId.MaxLength = 200;
                this.columnSymptoms.MaxLength = 1073741823;
                this.columnTestingKitListsRowId.MaxLength = 50;
                this.columnTreatment.MaxLength = 1073741823;
                this.columnTaskStatus.MaxLength = 50;
                this.columnReferenceIdPrefix.MaxLength = 8;
                this.columnurl.MaxLength = 200;
                this.columnMimetype.MaxLength = 200;
                this.columnTextFree3.MaxLength = 200;
                this.columnContributionFactorToTheIncident.MaxLength = 1073741823;
                this.columnSequenceOfTheIncident.MaxLength = 1073741823;
                this.columnnTextFree1.MaxLength = 1073741823;
                this.columnnTextFree2.MaxLength = 1073741823;
                this.columnnTextFree3.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAMedicalTreatmentLogRow NewGAMedicalTreatmentLogRow() {
                return ((GAMedicalTreatmentLogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GAMedicalTreatmentLogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GAMedicalTreatmentLogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAMedicalTreatmentLogRowChanged != null)) {
                    this.GAMedicalTreatmentLogRowChanged(this, new GAMedicalTreatmentLogRowChangeEvent(((GAMedicalTreatmentLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAMedicalTreatmentLogRowChanging != null)) {
                    this.GAMedicalTreatmentLogRowChanging(this, new GAMedicalTreatmentLogRowChangeEvent(((GAMedicalTreatmentLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAMedicalTreatmentLogRowDeleted != null)) {
                    this.GAMedicalTreatmentLogRowDeleted(this, new GAMedicalTreatmentLogRowChangeEvent(((GAMedicalTreatmentLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAMedicalTreatmentLogRowDeleting != null)) {
                    this.GAMedicalTreatmentLogRowDeleting(this, new GAMedicalTreatmentLogRowChangeEvent(((GAMedicalTreatmentLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGAMedicalTreatmentLogRow(GAMedicalTreatmentLogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MedicalTreatmentLogDS ds = new MedicalTreatmentLogDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GAMedicalTreatmentLogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GAMedicalTreatmentLogRow : global::System.Data.DataRow {
            
            private GAMedicalTreatmentLogDataTable tableGAMedicalTreatmentLog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAMedicalTreatmentLogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAMedicalTreatmentLog = ((GAMedicalTreatmentLogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MedicalTreatmentLogRowId {
                get {
                    return ((int)(this[this.tableGAMedicalTreatmentLog.MedicalTreatmentLogRowIdColumn]));
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.MedicalTreatmentLogRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MedicalTreatmentLogReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.MedicalTreatmentLogReferenceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedicalTreatmentLogReferenceId\' in table \'GAMedicalTreatmen" +
                                "tLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.MedicalTreatmentLogReferenceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RMIContacted {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.RMIContactedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RMIContacted\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.RMIContactedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TestedPersonnelRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.TestedPersonnelRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestedPersonnelRowId\' in table \'GAMedicalTreatmentLog\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.TestedPersonnelRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TestPersonRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.TestPersonRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestPersonRowId\' in table \'GAMedicalTreatmentLog\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.TestPersonRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMedicalTreatmentLog.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Symptoms {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.SymptomsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Symptoms\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.SymptomsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TestingKitListsRowId {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.TestingKitListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestingKitListsRowId\' in table \'GAMedicalTreatmentLog\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.TestingKitListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstAidCase {
                get {
                    try {
                        return ((bool)(this[this.tableGAMedicalTreatmentLog.IsFirstAidCaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsFirstAidCase\' in table \'GAMedicalTreatmentLog\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.IsFirstAidCaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfBirth {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMedicalTreatmentLog.DateOfBirthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfBirth\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.DateOfBirthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Treatment {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.TreatmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Treatment\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.TreatmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reporter {
                get {
                    try {
                        return ((int)(this[this.tableGAMedicalTreatmentLog.ReporterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reporter\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.ReporterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaskStatus {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.TaskStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaskStatus\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.TaskStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IsRestrictedWorkDuties {
                get {
                    try {
                        return ((int)(this[this.tableGAMedicalTreatmentLog.IsRestrictedWorkDutiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRestrictedWorkDuties\' in table \'GAMedicalTreatmentLog\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.IsRestrictedWorkDutiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AgeListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMedicalTreatmentLog.AgeListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeListsRowId\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.AgeListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OccupationListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMedicalTreatmentLog.OccupationListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OccupationListsRowId\' in table \'GAMedicalTreatmentLog\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.OccupationListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CategoryListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMedicalTreatmentLog.CategoryListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryListsRowId\' in table \'GAMedicalTreatmentLog\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.CategoryListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AttendingDoctorRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMedicalTreatmentLog.AttendingDoctorRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendingDoctorRowId\' in table \'GAMedicalTreatmentLog\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.AttendingDoctorRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AttendingHSEQMedicRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMedicalTreatmentLog.AttendingHSEQMedicRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendingHSEQMedicRowId\' in table \'GAMedicalTreatmentLog\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.AttendingHSEQMedicRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumberOfDaysLost {
                get {
                    try {
                        return ((int)(this[this.tableGAMedicalTreatmentLog.NumberOfDaysLostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfDaysLost\' in table \'GAMedicalTreatmentLog\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.NumberOfDaysLostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferenceIdPrefix {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.ReferenceIdPrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferenceIdPrefix\' in table \'GAMedicalTreatmentLog\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.ReferenceIdPrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EyeWitness {
                get {
                    try {
                        return ((int)(this[this.tableGAMedicalTreatmentLog.EyeWitnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EyeWitness\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.EyeWitnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMedicalTreatmentLog.MasterRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MasterRowId\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.MasterRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMedicalTreatmentLog.DateCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateCreated\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.DateCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMedicalTreatmentLog.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMedicalTreatmentLog.DateChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateChanged\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.DateChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMedicalTreatmentLog.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedBy\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMedicalTreatmentLog.DateDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateDeleted\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.DateDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAMedicalTreatmentLog.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMedicalTreatmentCase {
                get {
                    try {
                        return ((bool)(this[this.tableGAMedicalTreatmentLog.IsMedicalTreatmentCaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsMedicalTreatmentCase\' in table \'GAMedicalTreatmentLog\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.IsMedicalTreatmentCaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestrictedWorkdayCase {
                get {
                    try {
                        return ((bool)(this[this.tableGAMedicalTreatmentLog.IsRestrictedWorkdayCaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRestrictedWorkdayCase\' in table \'GAMedicalTreatmentLog\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.IsRestrictedWorkdayCaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkRelated {
                get {
                    try {
                        return ((bool)(this[this.tableGAMedicalTreatmentLog.IsWorkRelatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsWorkRelated\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.IsWorkRelatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMedicalTreatmentLog.DateTimeFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree1\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.DateTimeFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMedicalTreatmentLog.DateTimeFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree2\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.DateTimeFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAMedicalTreatmentLog.DateTimeFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeFree3\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.DateTimeFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string url {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.urlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'url\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.urlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mimetype {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.MimetypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mimetype\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.MimetypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.TextFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextFree3\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.TextFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IsDrugAndAlcoholTestingConducted {
                get {
                    try {
                        return ((int)(this[this.tableGAMedicalTreatmentLog.IsDrugAndAlcoholTestingConductedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDrugAndAlcoholTestingConducted\' in table \'GAMedicalTreatm" +
                                "entLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.IsDrugAndAlcoholTestingConductedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IsUnfitForWork {
                get {
                    try {
                        return ((int)(this[this.tableGAMedicalTreatmentLog.IsUnfitForWorkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsUnfitForWork\' in table \'GAMedicalTreatmentLog\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.IsUnfitForWorkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ViewTypeListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAMedicalTreatmentLog.ViewTypeListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ViewTypeListsRowId\' in table \'GAMedicalTreatmentLog\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.ViewTypeListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContributionFactorToTheIncident {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.ContributionFactorToTheIncidentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContributionFactorToTheIncident\' in table \'GAMedicalTreatme" +
                                "ntLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.ContributionFactorToTheIncidentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SequenceOfTheIncident {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.SequenceOfTheIncidentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SequenceOfTheIncident\' in table \'GAMedicalTreatmentLog\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.SequenceOfTheIncidentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.nTextFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree1\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.nTextFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.nTextFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree2\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.nTextFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAMedicalTreatmentLog.nTextFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nTextFree3\' in table \'GAMedicalTreatmentLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGAMedicalTreatmentLog.nTextFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMedicalTreatmentLogReferenceIdNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.MedicalTreatmentLogReferenceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMedicalTreatmentLogReferenceIdNull() {
                this[this.tableGAMedicalTreatmentLog.MedicalTreatmentLogReferenceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRMIContactedNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.RMIContactedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRMIContactedNull() {
                this[this.tableGAMedicalTreatmentLog.RMIContactedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTestedPersonnelRowIdNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.TestedPersonnelRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTestedPersonnelRowIdNull() {
                this[this.tableGAMedicalTreatmentLog.TestedPersonnelRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTestPersonRowIdNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.TestPersonRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTestPersonRowIdNull() {
                this[this.tableGAMedicalTreatmentLog.TestPersonRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableGAMedicalTreatmentLog.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSymptomsNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.SymptomsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSymptomsNull() {
                this[this.tableGAMedicalTreatmentLog.SymptomsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTestingKitListsRowIdNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.TestingKitListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTestingKitListsRowIdNull() {
                this[this.tableGAMedicalTreatmentLog.TestingKitListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsFirstAidCaseNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.IsFirstAidCaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsFirstAidCaseNull() {
                this[this.tableGAMedicalTreatmentLog.IsFirstAidCaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfBirthNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.DateOfBirthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfBirthNull() {
                this[this.tableGAMedicalTreatmentLog.DateOfBirthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTreatmentNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.TreatmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTreatmentNull() {
                this[this.tableGAMedicalTreatmentLog.TreatmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReporterNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.ReporterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReporterNull() {
                this[this.tableGAMedicalTreatmentLog.ReporterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaskStatusNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.TaskStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaskStatusNull() {
                this[this.tableGAMedicalTreatmentLog.TaskStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsRestrictedWorkDutiesNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.IsRestrictedWorkDutiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsRestrictedWorkDutiesNull() {
                this[this.tableGAMedicalTreatmentLog.IsRestrictedWorkDutiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeListsRowIdNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.AgeListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeListsRowIdNull() {
                this[this.tableGAMedicalTreatmentLog.AgeListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOccupationListsRowIdNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.OccupationListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOccupationListsRowIdNull() {
                this[this.tableGAMedicalTreatmentLog.OccupationListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryListsRowIdNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.CategoryListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryListsRowIdNull() {
                this[this.tableGAMedicalTreatmentLog.CategoryListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttendingDoctorRowIdNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.AttendingDoctorRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttendingDoctorRowIdNull() {
                this[this.tableGAMedicalTreatmentLog.AttendingDoctorRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttendingHSEQMedicRowIdNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.AttendingHSEQMedicRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttendingHSEQMedicRowIdNull() {
                this[this.tableGAMedicalTreatmentLog.AttendingHSEQMedicRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberOfDaysLostNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.NumberOfDaysLostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberOfDaysLostNull() {
                this[this.tableGAMedicalTreatmentLog.NumberOfDaysLostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceIdPrefixNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.ReferenceIdPrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceIdPrefixNull() {
                this[this.tableGAMedicalTreatmentLog.ReferenceIdPrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEyeWitnessNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.EyeWitnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEyeWitnessNull() {
                this[this.tableGAMedicalTreatmentLog.EyeWitnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.MasterRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterRowIdNull() {
                this[this.tableGAMedicalTreatmentLog.MasterRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.DateCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateCreatedNull() {
                this[this.tableGAMedicalTreatmentLog.DateCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableGAMedicalTreatmentLog.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.DateChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangedNull() {
                this[this.tableGAMedicalTreatmentLog.DateChangedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableGAMedicalTreatmentLog.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.DateDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateDeletedNull() {
                this[this.tableGAMedicalTreatmentLog.DateDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableGAMedicalTreatmentLog.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsMedicalTreatmentCaseNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.IsMedicalTreatmentCaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsMedicalTreatmentCaseNull() {
                this[this.tableGAMedicalTreatmentLog.IsMedicalTreatmentCaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsRestrictedWorkdayCaseNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.IsRestrictedWorkdayCaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsRestrictedWorkdayCaseNull() {
                this[this.tableGAMedicalTreatmentLog.IsRestrictedWorkdayCaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsWorkRelatedNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.IsWorkRelatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsWorkRelatedNull() {
                this[this.tableGAMedicalTreatmentLog.IsWorkRelatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.DateTimeFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree1Null() {
                this[this.tableGAMedicalTreatmentLog.DateTimeFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.DateTimeFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree2Null() {
                this[this.tableGAMedicalTreatmentLog.DateTimeFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.DateTimeFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree3Null() {
                this[this.tableGAMedicalTreatmentLog.DateTimeFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsurlNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.urlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturlNull() {
                this[this.tableGAMedicalTreatmentLog.urlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMimetypeNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.MimetypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMimetypeNull() {
                this[this.tableGAMedicalTreatmentLog.MimetypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.TextFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree3Null() {
                this[this.tableGAMedicalTreatmentLog.TextFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDrugAndAlcoholTestingConductedNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.IsDrugAndAlcoholTestingConductedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDrugAndAlcoholTestingConductedNull() {
                this[this.tableGAMedicalTreatmentLog.IsDrugAndAlcoholTestingConductedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsUnfitForWorkNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.IsUnfitForWorkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsUnfitForWorkNull() {
                this[this.tableGAMedicalTreatmentLog.IsUnfitForWorkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsViewTypeListsRowIdNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.ViewTypeListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetViewTypeListsRowIdNull() {
                this[this.tableGAMedicalTreatmentLog.ViewTypeListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContributionFactorToTheIncidentNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.ContributionFactorToTheIncidentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContributionFactorToTheIncidentNull() {
                this[this.tableGAMedicalTreatmentLog.ContributionFactorToTheIncidentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSequenceOfTheIncidentNull() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.SequenceOfTheIncidentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSequenceOfTheIncidentNull() {
                this[this.tableGAMedicalTreatmentLog.SequenceOfTheIncidentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree1Null() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.nTextFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree1Null() {
                this[this.tableGAMedicalTreatmentLog.nTextFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree2Null() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.nTextFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree2Null() {
                this[this.tableGAMedicalTreatmentLog.nTextFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree3Null() {
                return this.IsNull(this.tableGAMedicalTreatmentLog.nTextFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree3Null() {
                this[this.tableGAMedicalTreatmentLog.nTextFree3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GAMedicalTreatmentLogRowChangeEvent : global::System.EventArgs {
            
            private GAMedicalTreatmentLogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAMedicalTreatmentLogRowChangeEvent(GAMedicalTreatmentLogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAMedicalTreatmentLogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591