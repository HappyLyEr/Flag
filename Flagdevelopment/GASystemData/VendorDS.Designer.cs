//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.9151
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GASystem.DataModel {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("VendorDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class VendorDS : global::System.Data.DataSet {
        
        private GAVendorDataTable tableGAVendor;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public VendorDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected VendorDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GAVendor"] != null)) {
                    base.Tables.Add(new GAVendorDataTable(ds.Tables["GAVendor"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GAVendorDataTable GAVendor {
            get {
                return this.tableGAVendor;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            VendorDS cln = ((VendorDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GAVendor"] != null)) {
                    base.Tables.Add(new GAVendorDataTable(ds.Tables["GAVendor"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGAVendor = ((GAVendorDataTable)(base.Tables["GAVendor"]));
            if ((initTable == true)) {
                if ((this.tableGAVendor != null)) {
                    this.tableGAVendor.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "VendorDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/VendorDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGAVendor = new GAVendorDataTable();
            base.Tables.Add(this.tableGAVendor);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGAVendor() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            VendorDS ds = new VendorDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GAVendorRowChangeEventHandler(object sender, GAVendorRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GAVendorDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnVendorRowId;
            
            private global::System.Data.DataColumn columnVendorReferenceId;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnRiskLevelListsRowId;
            
            private global::System.Data.DataColumn columnVendorContact;
            
            private global::System.Data.DataColumn columnContactEmail;
            
            private global::System.Data.DataColumn columnVendorTypeListsRowId;
            
            private global::System.Data.DataColumn columnVendorAddress;
            
            private global::System.Data.DataColumn columnBGPOContactListsRowId;
            
            private global::System.Data.DataColumn columnPositionListsRowId;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnMasterRowId;
            
            private global::System.Data.DataColumn columnDateCreated;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnDateChanged;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnDateDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnSwitchFree1;
            
            private global::System.Data.DataColumn columnSwitchFree2;
            
            private global::System.Data.DataColumn columnSwitchFree3;
            
            private global::System.Data.DataColumn columnDateTimeFree1;
            
            private global::System.Data.DataColumn columnDateTimeFree2;
            
            private global::System.Data.DataColumn columnDateTimeFree3;
            
            private global::System.Data.DataColumn columnTextFree1;
            
            private global::System.Data.DataColumn columnTextFree2;
            
            private global::System.Data.DataColumn columnTextFree3;
            
            private global::System.Data.DataColumn columnIntFree1;
            
            private global::System.Data.DataColumn columnIntFree2;
            
            private global::System.Data.DataColumn columnIntFree3;
            
            private global::System.Data.DataColumn columnnTextFree1;
            
            private global::System.Data.DataColumn columnnTextFree2;
            
            private global::System.Data.DataColumn columnnTextFree3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAVendorDataTable() {
                this.TableName = "GAVendor";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAVendorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GAVendorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorRowIdColumn {
                get {
                    return this.columnVendorRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorReferenceIdColumn {
                get {
                    return this.columnVendorReferenceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RiskLevelListsRowIdColumn {
                get {
                    return this.columnRiskLevelListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorContactColumn {
                get {
                    return this.columnVendorContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactEmailColumn {
                get {
                    return this.columnContactEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorTypeListsRowIdColumn {
                get {
                    return this.columnVendorTypeListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorAddressColumn {
                get {
                    return this.columnVendorAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BGPOContactListsRowIdColumn {
                get {
                    return this.columnBGPOContactListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PositionListsRowIdColumn {
                get {
                    return this.columnPositionListsRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MasterRowIdColumn {
                get {
                    return this.columnMasterRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateChangedColumn {
                get {
                    return this.columnDateChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateDeletedColumn {
                get {
                    return this.columnDateDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree1Column {
                get {
                    return this.columnSwitchFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree2Column {
                get {
                    return this.columnSwitchFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SwitchFree3Column {
                get {
                    return this.columnSwitchFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree1Column {
                get {
                    return this.columnDateTimeFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree2Column {
                get {
                    return this.columnDateTimeFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTimeFree3Column {
                get {
                    return this.columnDateTimeFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree1Column {
                get {
                    return this.columnTextFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree2Column {
                get {
                    return this.columnTextFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TextFree3Column {
                get {
                    return this.columnTextFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree1Column {
                get {
                    return this.columnIntFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree2Column {
                get {
                    return this.columnIntFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntFree3Column {
                get {
                    return this.columnIntFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree1Column {
                get {
                    return this.columnnTextFree1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree2Column {
                get {
                    return this.columnnTextFree2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nTextFree3Column {
                get {
                    return this.columnnTextFree3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAVendorRow this[int index] {
                get {
                    return ((GAVendorRow)(this.Rows[index]));
                }
            }
            
            public event GAVendorRowChangeEventHandler GAVendorRowChanging;
            
            public event GAVendorRowChangeEventHandler GAVendorRowChanged;
            
            public event GAVendorRowChangeEventHandler GAVendorRowDeleting;
            
            public event GAVendorRowChangeEventHandler GAVendorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGAVendorRow(GAVendorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAVendorRow AddGAVendorRow(
                        string VendorReferenceId, 
                        string VendorName, 
                        int RiskLevelListsRowId, 
                        string VendorContact, 
                        string ContactEmail, 
                        int VendorTypeListsRowId, 
                        string VendorAddress, 
                        int BGPOContactListsRowId, 
                        int PositionListsRowId, 
                        string Description, 
                        int MasterRowId, 
                        System.DateTime DateCreated, 
                        int CreatedBy, 
                        System.DateTime DateChanged, 
                        int ChangedBy, 
                        System.DateTime DateDeleted, 
                        int DeletedBy, 
                        bool SwitchFree1, 
                        bool SwitchFree2, 
                        bool SwitchFree3, 
                        System.DateTime DateTimeFree1, 
                        System.DateTime DateTimeFree2, 
                        System.DateTime DateTimeFree3, 
                        string TextFree1, 
                        string TextFree2, 
                        string TextFree3, 
                        int IntFree1, 
                        int IntFree2, 
                        int IntFree3, 
                        string nTextFree1, 
                        string nTextFree2, 
                        string nTextFree3) {
                GAVendorRow rowGAVendorRow = ((GAVendorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        VendorReferenceId,
                        VendorName,
                        RiskLevelListsRowId,
                        VendorContact,
                        ContactEmail,
                        VendorTypeListsRowId,
                        VendorAddress,
                        BGPOContactListsRowId,
                        PositionListsRowId,
                        Description,
                        MasterRowId,
                        DateCreated,
                        CreatedBy,
                        DateChanged,
                        ChangedBy,
                        DateDeleted,
                        DeletedBy,
                        SwitchFree1,
                        SwitchFree2,
                        SwitchFree3,
                        DateTimeFree1,
                        DateTimeFree2,
                        DateTimeFree3,
                        TextFree1,
                        TextFree2,
                        TextFree3,
                        IntFree1,
                        IntFree2,
                        IntFree3,
                        nTextFree1,
                        nTextFree2,
                        nTextFree3};
                rowGAVendorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGAVendorRow);
                return rowGAVendorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAVendorRow FindByVendorRowId(int VendorRowId) {
                return ((GAVendorRow)(this.Rows.Find(new object[] {
                            VendorRowId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GAVendorDataTable cln = ((GAVendorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GAVendorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVendorRowId = base.Columns["VendorRowId"];
                this.columnVendorReferenceId = base.Columns["VendorReferenceId"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnRiskLevelListsRowId = base.Columns["RiskLevelListsRowId"];
                this.columnVendorContact = base.Columns["VendorContact"];
                this.columnContactEmail = base.Columns["ContactEmail"];
                this.columnVendorTypeListsRowId = base.Columns["VendorTypeListsRowId"];
                this.columnVendorAddress = base.Columns["VendorAddress"];
                this.columnBGPOContactListsRowId = base.Columns["BGPOContactListsRowId"];
                this.columnPositionListsRowId = base.Columns["PositionListsRowId"];
                this.columnDescription = base.Columns["Description"];
                this.columnMasterRowId = base.Columns["MasterRowId"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnDateChanged = base.Columns["DateChanged"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnDateDeleted = base.Columns["DateDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnSwitchFree1 = base.Columns["SwitchFree1"];
                this.columnSwitchFree2 = base.Columns["SwitchFree2"];
                this.columnSwitchFree3 = base.Columns["SwitchFree3"];
                this.columnDateTimeFree1 = base.Columns["DateTimeFree1"];
                this.columnDateTimeFree2 = base.Columns["DateTimeFree2"];
                this.columnDateTimeFree3 = base.Columns["DateTimeFree3"];
                this.columnTextFree1 = base.Columns["TextFree1"];
                this.columnTextFree2 = base.Columns["TextFree2"];
                this.columnTextFree3 = base.Columns["TextFree3"];
                this.columnIntFree1 = base.Columns["IntFree1"];
                this.columnIntFree2 = base.Columns["IntFree2"];
                this.columnIntFree3 = base.Columns["IntFree3"];
                this.columnnTextFree1 = base.Columns["nTextFree1"];
                this.columnnTextFree2 = base.Columns["nTextFree2"];
                this.columnnTextFree3 = base.Columns["nTextFree3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVendorRowId = new global::System.Data.DataColumn("VendorRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorRowId);
                this.columnVendorReferenceId = new global::System.Data.DataColumn("VendorReferenceId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorReferenceId);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnRiskLevelListsRowId = new global::System.Data.DataColumn("RiskLevelListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRiskLevelListsRowId);
                this.columnVendorContact = new global::System.Data.DataColumn("VendorContact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorContact);
                this.columnContactEmail = new global::System.Data.DataColumn("ContactEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactEmail);
                this.columnVendorTypeListsRowId = new global::System.Data.DataColumn("VendorTypeListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorTypeListsRowId);
                this.columnVendorAddress = new global::System.Data.DataColumn("VendorAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorAddress);
                this.columnBGPOContactListsRowId = new global::System.Data.DataColumn("BGPOContactListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBGPOContactListsRowId);
                this.columnPositionListsRowId = new global::System.Data.DataColumn("PositionListsRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPositionListsRowId);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnMasterRowId = new global::System.Data.DataColumn("MasterRowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterRowId);
                this.columnDateCreated = new global::System.Data.DataColumn("DateCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnDateChanged = new global::System.Data.DataColumn("DateChanged", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateChanged);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnDateDeleted = new global::System.Data.DataColumn("DateDeleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnSwitchFree1 = new global::System.Data.DataColumn("SwitchFree1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree1);
                this.columnSwitchFree2 = new global::System.Data.DataColumn("SwitchFree2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree2);
                this.columnSwitchFree3 = new global::System.Data.DataColumn("SwitchFree3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchFree3);
                this.columnDateTimeFree1 = new global::System.Data.DataColumn("DateTimeFree1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree1);
                this.columnDateTimeFree2 = new global::System.Data.DataColumn("DateTimeFree2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree2);
                this.columnDateTimeFree3 = new global::System.Data.DataColumn("DateTimeFree3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeFree3);
                this.columnTextFree1 = new global::System.Data.DataColumn("TextFree1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree1);
                this.columnTextFree2 = new global::System.Data.DataColumn("TextFree2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree2);
                this.columnTextFree3 = new global::System.Data.DataColumn("TextFree3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextFree3);
                this.columnIntFree1 = new global::System.Data.DataColumn("IntFree1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree1);
                this.columnIntFree2 = new global::System.Data.DataColumn("IntFree2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree2);
                this.columnIntFree3 = new global::System.Data.DataColumn("IntFree3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntFree3);
                this.columnnTextFree1 = new global::System.Data.DataColumn("nTextFree1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree1);
                this.columnnTextFree2 = new global::System.Data.DataColumn("nTextFree2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree2);
                this.columnnTextFree3 = new global::System.Data.DataColumn("nTextFree3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTextFree3);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVendorRowId}, true));
                this.columnVendorRowId.AutoIncrement = true;
                this.columnVendorRowId.AllowDBNull = false;
                this.columnVendorRowId.ReadOnly = true;
                this.columnVendorRowId.Unique = true;
                this.columnVendorReferenceId.MaxLength = 50;
                this.columnVendorName.MaxLength = 200;
                this.columnVendorContact.MaxLength = 200;
                this.columnContactEmail.MaxLength = 200;
                this.columnVendorAddress.MaxLength = 200;
                this.columnDescription.MaxLength = 1073741823;
                this.columnTextFree1.MaxLength = 200;
                this.columnTextFree2.MaxLength = 200;
                this.columnTextFree3.MaxLength = 200;
                this.columnnTextFree1.MaxLength = 1073741823;
                this.columnnTextFree2.MaxLength = 1073741823;
                this.columnnTextFree3.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAVendorRow NewGAVendorRow() {
                return ((GAVendorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GAVendorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GAVendorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GAVendorRowChanged != null)) {
                    this.GAVendorRowChanged(this, new GAVendorRowChangeEvent(((GAVendorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GAVendorRowChanging != null)) {
                    this.GAVendorRowChanging(this, new GAVendorRowChangeEvent(((GAVendorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GAVendorRowDeleted != null)) {
                    this.GAVendorRowDeleted(this, new GAVendorRowChangeEvent(((GAVendorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GAVendorRowDeleting != null)) {
                    this.GAVendorRowDeleting(this, new GAVendorRowChangeEvent(((GAVendorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGAVendorRow(GAVendorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VendorDS ds = new VendorDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GAVendorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GAVendorRow : global::System.Data.DataRow {
            
            private GAVendorDataTable tableGAVendor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GAVendorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGAVendor = ((GAVendorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VendorRowId {
                get {
                    return ((int)(this[this.tableGAVendor.VendorRowIdColumn]));
                }
                set {
                    this[this.tableGAVendor.VendorRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableGAVendor.VendorReferenceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“VendorReferenceId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.VendorReferenceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tableGAVendor.VendorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“VendorName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RiskLevelListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAVendor.RiskLevelListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“RiskLevelListsRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.RiskLevelListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorContact {
                get {
                    try {
                        return ((string)(this[this.tableGAVendor.VendorContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“VendorContact”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.VendorContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactEmail {
                get {
                    try {
                        return ((string)(this[this.tableGAVendor.ContactEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“ContactEmail”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.ContactEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VendorTypeListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAVendor.VendorTypeListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“VendorTypeListsRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.VendorTypeListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorAddress {
                get {
                    try {
                        return ((string)(this[this.tableGAVendor.VendorAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“VendorAddress”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.VendorAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BGPOContactListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAVendor.BGPOContactListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“BGPOContactListsRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.BGPOContactListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PositionListsRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAVendor.PositionListsRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“PositionListsRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.PositionListsRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGAVendor.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“Description”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MasterRowId {
                get {
                    try {
                        return ((int)(this[this.tableGAVendor.MasterRowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“MasterRowId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.MasterRowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAVendor.DateCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“DateCreated”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.DateCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreatedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAVendor.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“CreatedBy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateChanged {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAVendor.DateChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“DateChanged”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.DateChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAVendor.ChangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“ChangedBy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateDeleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAVendor.DateDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“DateDeleted”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.DateDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeletedBy {
                get {
                    try {
                        return ((int)(this[this.tableGAVendor.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“DeletedBy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree1 {
                get {
                    try {
                        return ((bool)(this[this.tableGAVendor.SwitchFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“SwitchFree1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.SwitchFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree2 {
                get {
                    try {
                        return ((bool)(this[this.tableGAVendor.SwitchFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“SwitchFree2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.SwitchFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SwitchFree3 {
                get {
                    try {
                        return ((bool)(this[this.tableGAVendor.SwitchFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“SwitchFree3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.SwitchFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAVendor.DateTimeFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“DateTimeFree1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.DateTimeFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAVendor.DateTimeFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“DateTimeFree2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.DateTimeFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTimeFree3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGAVendor.DateTimeFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“DateTimeFree3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.DateTimeFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAVendor.TextFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“TextFree1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.TextFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAVendor.TextFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“TextFree2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.TextFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAVendor.TextFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“TextFree3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.TextFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree1 {
                get {
                    try {
                        return ((int)(this[this.tableGAVendor.IntFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“IntFree1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.IntFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree2 {
                get {
                    try {
                        return ((int)(this[this.tableGAVendor.IntFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“IntFree2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.IntFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IntFree3 {
                get {
                    try {
                        return ((int)(this[this.tableGAVendor.IntFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“IntFree3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.IntFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree1 {
                get {
                    try {
                        return ((string)(this[this.tableGAVendor.nTextFree1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“nTextFree1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.nTextFree1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree2 {
                get {
                    try {
                        return ((string)(this[this.tableGAVendor.nTextFree2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“nTextFree2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.nTextFree2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTextFree3 {
                get {
                    try {
                        return ((string)(this[this.tableGAVendor.nTextFree3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“GAVendor”中列“nTextFree3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGAVendor.nTextFree3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorReferenceIdNull() {
                return this.IsNull(this.tableGAVendor.VendorReferenceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorReferenceIdNull() {
                this[this.tableGAVendor.VendorReferenceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tableGAVendor.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNameNull() {
                this[this.tableGAVendor.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRiskLevelListsRowIdNull() {
                return this.IsNull(this.tableGAVendor.RiskLevelListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRiskLevelListsRowIdNull() {
                this[this.tableGAVendor.RiskLevelListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorContactNull() {
                return this.IsNull(this.tableGAVendor.VendorContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorContactNull() {
                this[this.tableGAVendor.VendorContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactEmailNull() {
                return this.IsNull(this.tableGAVendor.ContactEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactEmailNull() {
                this[this.tableGAVendor.ContactEmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorTypeListsRowIdNull() {
                return this.IsNull(this.tableGAVendor.VendorTypeListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorTypeListsRowIdNull() {
                this[this.tableGAVendor.VendorTypeListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorAddressNull() {
                return this.IsNull(this.tableGAVendor.VendorAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorAddressNull() {
                this[this.tableGAVendor.VendorAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBGPOContactListsRowIdNull() {
                return this.IsNull(this.tableGAVendor.BGPOContactListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBGPOContactListsRowIdNull() {
                this[this.tableGAVendor.BGPOContactListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPositionListsRowIdNull() {
                return this.IsNull(this.tableGAVendor.PositionListsRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPositionListsRowIdNull() {
                this[this.tableGAVendor.PositionListsRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGAVendor.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableGAVendor.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterRowIdNull() {
                return this.IsNull(this.tableGAVendor.MasterRowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterRowIdNull() {
                this[this.tableGAVendor.MasterRowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableGAVendor.DateCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateCreatedNull() {
                this[this.tableGAVendor.DateCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGAVendor.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableGAVendor.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateChangedNull() {
                return this.IsNull(this.tableGAVendor.DateChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateChangedNull() {
                this[this.tableGAVendor.DateChangedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedByNull() {
                return this.IsNull(this.tableGAVendor.ChangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedByNull() {
                this[this.tableGAVendor.ChangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateDeletedNull() {
                return this.IsNull(this.tableGAVendor.DateDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateDeletedNull() {
                this[this.tableGAVendor.DateDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableGAVendor.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableGAVendor.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree1Null() {
                return this.IsNull(this.tableGAVendor.SwitchFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree1Null() {
                this[this.tableGAVendor.SwitchFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree2Null() {
                return this.IsNull(this.tableGAVendor.SwitchFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree2Null() {
                this[this.tableGAVendor.SwitchFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwitchFree3Null() {
                return this.IsNull(this.tableGAVendor.SwitchFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwitchFree3Null() {
                this[this.tableGAVendor.SwitchFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree1Null() {
                return this.IsNull(this.tableGAVendor.DateTimeFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree1Null() {
                this[this.tableGAVendor.DateTimeFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree2Null() {
                return this.IsNull(this.tableGAVendor.DateTimeFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree2Null() {
                this[this.tableGAVendor.DateTimeFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTimeFree3Null() {
                return this.IsNull(this.tableGAVendor.DateTimeFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTimeFree3Null() {
                this[this.tableGAVendor.DateTimeFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree1Null() {
                return this.IsNull(this.tableGAVendor.TextFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree1Null() {
                this[this.tableGAVendor.TextFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree2Null() {
                return this.IsNull(this.tableGAVendor.TextFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree2Null() {
                this[this.tableGAVendor.TextFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTextFree3Null() {
                return this.IsNull(this.tableGAVendor.TextFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTextFree3Null() {
                this[this.tableGAVendor.TextFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree1Null() {
                return this.IsNull(this.tableGAVendor.IntFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree1Null() {
                this[this.tableGAVendor.IntFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree2Null() {
                return this.IsNull(this.tableGAVendor.IntFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree2Null() {
                this[this.tableGAVendor.IntFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntFree3Null() {
                return this.IsNull(this.tableGAVendor.IntFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntFree3Null() {
                this[this.tableGAVendor.IntFree3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree1Null() {
                return this.IsNull(this.tableGAVendor.nTextFree1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree1Null() {
                this[this.tableGAVendor.nTextFree1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree2Null() {
                return this.IsNull(this.tableGAVendor.nTextFree2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree2Null() {
                this[this.tableGAVendor.nTextFree2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTextFree3Null() {
                return this.IsNull(this.tableGAVendor.nTextFree3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTextFree3Null() {
                this[this.tableGAVendor.nTextFree3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GAVendorRowChangeEvent : global::System.EventArgs {
            
            private GAVendorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAVendorRowChangeEvent(GAVendorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GAVendorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591